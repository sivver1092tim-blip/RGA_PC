#pragma once

#define _ENGINE_PROJECT

void OnGameIntro();
DWORD64 InsertJmpCodes(DWORD64 dwTargetAdr, DWORD64 dwAdrToJmp, OUT BYTE* pOrigCodes);

DWORD	SettingThread(LPVOID lpParam);

void	OnTimer(HWND hWnd, UINT uMsg, UINT_PTR idEvent, DWORD dwTime);
void	TcpTable(HWND hWnd, UINT uMsg, UINT_PTR idEvent, DWORD dwTime);
void	RecvAddrTimer(HWND hWnd, UINT uMsg, UINT_PTR idEvent, DWORD dwTime);

void	ChangeSchedule();
void	LoadScheduleInfo();
void	InitGlobal(DWORD64 qwAddr);
LRESULT CALLBACK MyKeyProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

bool	IsBadReadPtr(void* p);

void	GetAutoKeyState(DWORD* dwAddress);
void	AutoLogic();
int		GetCurScene();

void	SetInterval(DWORD dwInterval);
void	SetStatus(int nStatus, int nWaitTime = 0);
void	SetDelay(int nWaitTime);
BOOL	SetTopWindow(HWND hWnd);
void	ShowStatus(int nLogType, unsigned int nStringCode, WCHAR* szLog = NULL, int nLogValue1 = -1, int nLogValue2 = -1);
void	PressKeyAlternate(WCHAR wKey, BOOL bPressOnly = FALSE);
void	OnGameLogin();
void	ConvertString(DWORD64 qwString, WCHAR* pszDst);
DWORD64 GetActorMyPlayer();
BOOL	UpdateCharInfo(BOOL bLog = FALSE);
int		GetEquipIndexBySlot(int nSlot);
BOOL	IsItemCoolTime(int nIndex);
void	UpdateQuickSlotInfo(BOOL bLog = FALSE);
int		GetInvenIndex(DWORD64 qwItemUID);
int		GetSkillIndex(DWORD dwID);
int		GetSkillIndex(WCHAR* pszName);
int		GetInvenIndexByID(DWORD dwID);
void	UpdateQuestInfo(BOOL bLog = FALSE);
BOOL	OnInvenDissolve();
BOOL	IsVisibleWindow(DWORD64 qwCUIWindow);
void	UpdatePetInfo(DWORD64 qwCUIPetWindow);
int		UTF8toUCS2(WCHAR* src, unsigned short* ucs2);
int		UCS2toUTF8(unsigned short* ucs2, int count, WCHAR* dst);
void	MenuButtonClick(WCHAR* pszButton);
int		GetBuySkillIndex();
void	OnGameBuySkill();
DWORD64 GetNpcShopItem(DWORD dwNpcShopItemIndex, DWORD dwNpcShopIndex);
int		GetItemDetailIndex(ItemInfo* pItemInfo, int nFirstType);
int		GetMarketMapIndex(WCHAR* szName, int nEnchant);
int		GetInvenCountByID(DWORD dwID);
void	UpdateInvenInfo(BOOL bLog = FALSE);
ItemInfo GetItemInfo(DWORD64 qwItemAddr);
void	UpdateWarehouseInfo(BOOL bLog = FALSE);
void	UpdateSkillCycleInfo(BOOL bLog = FALSE);
UI_UID	GetVisibleWindowUID();
void	CloseAllActivePopup();
void	OpenWindowByUI_UID(UI_UID dwUIID);
DWORD64 GetWindowByUI_UID(UI_UID dwUID);
BOOL	SelectToggle(DWORD64 qwUIToggleList, int nIndex);
int		ConvertOptionType(int nSettingOptionType);
void	OnGameStat();
void	UpdateNPCShopBuyItem(DWORD64 qwCUINpcShopBuyInfo);
int		GetNpcItemIndexByID(DWORD dwID);
void	BuyNPCShopBuyItem(DWORD64 qwCUINpcShopWindow, int nIndex, int nCount);
void	GoToNpc(eNpcBtnType nType);
int		IsNeedCollectItem(int nIndex, bool bEnchant);
int		GetCollectItemIndex(int* pInvenIndex = 0);
void	OnGameAttendance();

BOOL	IsRegisterableCollectionItem(DWORD64 qwProceedingList, int nCollectionID, int nSlotIdx);
void	UpdateItemCollectionInfo(BOOL bLog = FALSE);
BOOL	IsNeedEquipItem(int nIndex, int nEquipSlot);
void	EquipItem(int nIndex);
BOOL	IsHighEquip(ItemInfo* p1, ItemInfo* p2);
BOOL	OnAutoEquipProc(BOOL bEquip = TRUE);
BOOL	IsNeedEnchantItem(int nIndex, int* pScrollOut, int* pEnchantOut);
int		GetNeedEnchantIndex(int* pScrollOut = NULL, int* pEnchantOut = NULL);
int		GetCurHPPotionCount();
BOOL	IsNeedUseItem(int nIndex);
BOOL	IsNeedDissolveItem(int nIndex);
BOOL	IsNeedDeleteItem(int nIndex);
void	DeleteItem(int nIndex);
int		GetQuickSlotItemIndexByID(DWORD dwID);
int		GetEmptyQuickSlotIndex();
void	AddItemToQuickSlot(int nIndex, DWORD dwItemID, DWORD64 qwItemUID);
void	OnGameInvenProc();
void	OnGameCostume();
void	GetObjectInfo(DWORD64 qwDictionary, int nObjectKind);
void	UpdateObjectInfo(BOOL bLog = FALSE);
void	UpdateCostumeInfo(DWORD64 qwCUICostumeWindow);
BOOL	IsSelectToggle(DWORD64 qwUIToggleList, int nIndex);
BOOL	IsExistCombineCostume();
int		GetBestCostumeIndex();
void	ClickButton(DWORD64 qwUIButton);
BOOL	IsRedDot(int nRedDotType);
BOOL	OnTutorial();
BOOL	IsVisibleUI(UI_UID nUID);
BOOL	OnRewardSmallPopup();
void	OnGameMail();
BOOL	OnRevivalAskPopup();
void	OnGameCharDead();
int IsInField(int nFieldIdx);
int GetDungeonTime(DWORD dwMapID);
BOOL CanEnterField(int nFieldIdx);
void OnGameTeleportMap();
void OnGameCashShop();
void UpdateCashItemInfo(DWORD64 qwStoreUI);
int GetBuyCashItemCount(int nIndex);
int GetBuyCashItemIndex();
void OnGameMake();
int GetNeedMakeIndex(int* pCount = 0);
int GetEnableMakeCount(int nIndex, int nMinGold);
int GetInvenCountByGroupID(DWORD dwGroupID, int nBelongType = 0);
void OnGameRecover();
void OnGameMarket();
void AuctionRegisterItem(DWORD64 qwUID, int nCount, long nSalePrice);
int GetAuctionItemIndex(int* pSettingIndex = 0);
BOOL IsNeedTradeItem(int nIndex, int* pSettingIndex);
void AuctionCancelItem(DWORD64 qwAuctionDBID);
int GetAuctionRetryIndex();
int GetTotalSellPrice(int nLevel);
void UpdateMySaleItemInfo(DWORD64 qwSaleList, BOOL bLog = FALSE);
void AddMarketMap(WCHAR* szName, int nEnchant, float fPrice);
int GetAuctionSaleItemIndex(DWORD dwItemID);
void UpdateAuctionSaleItemInfo(DWORD64 qwSaleList);
BOOL OnDeathPopup();
DWORD GetGameServerTime();
void OnGameDoAuto();
void OnGameLobby();
void OnGameReturnVillage();
BOOL IsNeedSellItem(int nIndex);
BOOL IsRestoreButtonEnable();
void OnGameEnterDungeon();
BOOL OnCinematic();
BOOL OnMonsterCollectionSynthesis();
BOOL CloseAllWidget(DWORD64 qwWidgetType = 0);
void OnGameEnchantItem();
void CUIInvenScroll(DWORD64 qwInvenScroll, int nIndex);
BOOL IsSelectedItemSlot(DWORD64 qwInvenScroll, DWORD64 qwItemUID);
BOOL IsSelectedItemSlot(DWORD64 qwCUIItemSlot);
void OnGamePet();
void OnGameReQuest();
void OnGameCostume();
DWORD GetDoingQuestID();
void StartQuest(DWORD dwQuestID);
void CompleteQuest(DWORD dwQuestID);
void OnGameDoQuest(int nQuestIdx);
void SetQuickSlotAutoState(int nIndex, BOOL bState);
BOOL OnAutoQuickSlotItem();
BOOL OnMessageProc();
void UpdateSkillInfo(BOOL bLog = FALSE);
BOOL GetSkillAutoState(DWORD dwSkillID);
void SetSkillAutoState(DWORD dwSkillID, BOOL bState);
void OnGameSkill();
BOOL IsGameLoading();
void AddItemCollection(int nCollectionID, int nSlotIdx, DWORD64 qwItemUID);
void OnGameItemCollection();
BOOL IsNetworkConnecting();
BOOL OnQuestDialogue();
BOOL OnQuestComplete();
BOOL OnCalculatorPopup();
BOOL OnSelectBoxPopup();
BOOL UpdateGameInfo();
void OnGameDissolveItem();
void OnGameExchangeItem();
void OnGameStoreEquips();
int GetUnEquipItemIndex();
void UnEquipItem(int nIndex);
BOOL IsStorableItemUID(DWORD64 qwItemUID);
void OnGameGetEquips();
void OnGameAchieve();
void OnGameGuildAttendance();
void OnGameWorldBoss();
void ClickAttack();
BOOL ManualAttack(DWORD64 qwAddr);
void OnGameWorldBoss();
BOOL OnGachaResult();
BOOL OnRewardCommonPopup();
BOOL OnItemDissolveRewardPopup();
BOOL IsActiveWidget(DWORD64 qwCUI);
BOOL OnDungeonRewardPopup();
void OnGameCharOut();
void OnGameBuyPotion();
void OnGameMission();
DWORD64	GetUIManager();
int GetEnableWorldBossIdx(int* pRemainTime = NULL);