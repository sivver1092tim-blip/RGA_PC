#pragma once

#include "../SDK.h"

// Name: , Version: 1.0.0

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Parameters
//---------------------------------------------------------------------------

// Function Engine.Actor.WasRecentlyRendered
struct AEngine_Actor_WasRecentlyRendered_Params
{
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.UserConstructionScript
struct AEngine_Actor_UserConstructionScript_Params
{
};

// Function Engine.Actor.TearOff
struct AEngine_Actor_TearOff_Params
{
};

// Function Engine.Actor.SnapRootComponentTo
struct AEngine_Actor_SnapRootComponentTo_Params
{
	class AEngine_Actor*                               InParentActor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetTickGroup
struct AEngine_Actor_SetTickGroup_Params
{
	TEnumAsByte<FEngine_Engine_ETickingGroup>          NewTickGroup;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetTickableWhenPaused
struct AEngine_Actor_SetTickableWhenPaused_Params
{
	bool                                               bTickableWhenPaused;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetReplicates
struct AEngine_Actor_SetReplicates_Params
{
	bool                                               bInReplicates;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetReplicateMovement
struct AEngine_Actor_SetReplicateMovement_Params
{
	bool                                               bInReplicateMovement;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetOwner
struct AEngine_Actor_SetOwner_Params
{
	class AEngine_Actor*                               NewOwner;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetNetDormancy
struct AEngine_Actor_SetNetDormancy_Params
{
	TEnumAsByte<FEngine_Engine_ENetDormancy>           NewDormancy;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetLifeSpan
struct AEngine_Actor_SetLifeSpan_Params
{
	float                                              InLifespan;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetActorTickInterval
struct AEngine_Actor_SetActorTickInterval_Params
{
	float                                              TickInterval;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetActorTickEnabled
struct AEngine_Actor_SetActorTickEnabled_Params
{
	bool                                               bEnabled;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetActorScale3D
struct AEngine_Actor_SetActorScale3D_Params
{
	struct FVector                                     NewScale3D;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetActorRelativeScale3D
struct AEngine_Actor_SetActorRelativeScale3D_Params
{
	struct FVector                                     NewRelativeScale;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetActorHiddenInGame
struct AEngine_Actor_SetActorHiddenInGame_Params
{
	bool                                               bNewHidden;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.SetActorEnableCollision
struct AEngine_Actor_SetActorEnableCollision_Params
{
	bool                                               bNewActorEnableCollision;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.RemoveTickPrerequisiteComponent
struct AEngine_Actor_RemoveTickPrerequisiteComponent_Params
{
	class UEngine_ActorComponent*                      PrerequisiteComponent;                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.Actor.RemoveTickPrerequisiteActor
struct AEngine_Actor_RemoveTickPrerequisiteActor_Params
{
	class AEngine_Actor*                               PrerequisiteActor;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceiveTick
struct AEngine_Actor_ReceiveTick_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceiveRadialDamage
struct AEngine_Actor_ReceiveRadialDamage_Params
{
	float                                              DamageReceived;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_DamageType*                          DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Origin;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           HitInfo;                                                  // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	class AEngine_Controller*                          InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceivePointDamage
struct AEngine_Actor_ReceivePointDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_DamageType*                          DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitNormal;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  HitComponent;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ShotFromDirection;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Controller*                          InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           HitInfo;                                                  // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.Actor.ReceiveHit
struct AEngine_Actor_ReceiveHit_Params
{
	class UEngine_PrimitiveComponent*                  MyComp;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AEngine_Actor*                               Other;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bSelfMoved;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitNormal;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NormalImpulse;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.Actor.ReceiveEndPlay
struct AEngine_Actor_ReceiveEndPlay_Params
{
	TEnumAsByte<FEngine_Engine_EEndPlayReason>         EndPlayReason;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceiveDestroyed
struct AEngine_Actor_ReceiveDestroyed_Params
{
};

// Function Engine.Actor.ReceiveBeginPlay
struct AEngine_Actor_ReceiveBeginPlay_Params
{
};

// Function Engine.Actor.ReceiveAnyDamage
struct AEngine_Actor_ReceiveAnyDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_DamageType*                          DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Controller*                          InstigatedBy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceiveActorOnReleased
struct AEngine_Actor_ReceiveActorOnReleased_Params
{
	struct FInputCore_Key                              ButtonReleased;                                           // (Parm)
};

// Function Engine.Actor.ReceiveActorOnInputTouchLeave
struct AEngine_Actor_ReceiveActorOnInputTouchLeave_Params
{
	TEnumAsByte<FInputCore_InputCore_ETouchIndex>      FingerIndex;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceiveActorOnInputTouchEnter
struct AEngine_Actor_ReceiveActorOnInputTouchEnter_Params
{
	TEnumAsByte<FInputCore_InputCore_ETouchIndex>      FingerIndex;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceiveActorOnInputTouchEnd
struct AEngine_Actor_ReceiveActorOnInputTouchEnd_Params
{
	TEnumAsByte<FInputCore_InputCore_ETouchIndex>      FingerIndex;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceiveActorOnInputTouchBegin
struct AEngine_Actor_ReceiveActorOnInputTouchBegin_Params
{
	TEnumAsByte<FInputCore_InputCore_ETouchIndex>      FingerIndex;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceiveActorOnClicked
struct AEngine_Actor_ReceiveActorOnClicked_Params
{
	struct FInputCore_Key                              ButtonPressed;                                            // (Parm)
};

// Function Engine.Actor.ReceiveActorEndOverlap
struct AEngine_Actor_ReceiveActorEndOverlap_Params
{
	class AEngine_Actor*                               OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceiveActorEndCursorOver
struct AEngine_Actor_ReceiveActorEndCursorOver_Params
{
};

// Function Engine.Actor.ReceiveActorBeginOverlap
struct AEngine_Actor_ReceiveActorBeginOverlap_Params
{
	class AEngine_Actor*                               OtherActor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ReceiveActorBeginCursorOver
struct AEngine_Actor_ReceiveActorBeginCursorOver_Params
{
};

// Function Engine.Actor.PrestreamTextures
struct AEngine_Actor_PrestreamTextures_Params
{
	float                                              Seconds;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableStreaming;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                CinematicTextureGroups;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.OnRep_ReplicateMovement
struct AEngine_Actor_OnRep_ReplicateMovement_Params
{
};

// Function Engine.Actor.OnRep_ReplicatedMovement
struct AEngine_Actor_OnRep_ReplicatedMovement_Params
{
};

// Function Engine.Actor.OnRep_Owner
struct AEngine_Actor_OnRep_Owner_Params
{
};

// Function Engine.Actor.OnRep_Instigator
struct AEngine_Actor_OnRep_Instigator_Params
{
};

// Function Engine.Actor.OnRep_AttachmentReplication
struct AEngine_Actor_OnRep_AttachmentReplication_Params
{
};

// Function Engine.Actor.MakeNoise
struct AEngine_Actor_MakeNoise_Params
{
	float                                              Loudness;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Pawn*                                NoiseInstigator;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NoiseLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxRange;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Tag;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.MakeMIDForMaterial
struct AEngine_Actor_MakeMIDForMaterial_Params
{
	class UEngine_MaterialInterface*                   Parent;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInstanceDynamic*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.K2_TeleportTo
struct AEngine_Actor_K2_TeleportTo_Params
{
	struct FVector                                     DestLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    DestRotation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.K2_SetActorTransform
struct AEngine_Actor_K2_SetActorTransform_Params
{
	struct FTransform                                  NewTransform;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.K2_SetActorRotation
struct AEngine_Actor_K2_SetActorRotation_Params
{
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTeleportPhysics;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.K2_SetActorRelativeTransform
struct AEngine_Actor_K2_SetActorRelativeTransform_Params
{
	struct FTransform                                  NewRelativeTransform;                                     // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_SetActorRelativeRotation
struct AEngine_Actor_K2_SetActorRelativeRotation_Params
{
	struct FRotator                                    NewRelativeRotation;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_SetActorRelativeLocation
struct AEngine_Actor_K2_SetActorRelativeLocation_Params
{
	struct FVector                                     NewRelativeLocation;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_SetActorLocationAndRotation
struct AEngine_Actor_K2_SetActorLocationAndRotation_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.K2_SetActorLocation
struct AEngine_Actor_K2_SetActorLocation_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.K2_OnReset
struct AEngine_Actor_K2_OnReset_Params
{
};

// Function Engine.Actor.K2_OnEndViewTarget
struct AEngine_Actor_K2_OnEndViewTarget_Params
{
	class AEngine_PlayerController*                    PC;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_OnBecomeViewTarget
struct AEngine_Actor_K2_OnBecomeViewTarget_Params
{
	class AEngine_PlayerController*                    PC;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_GetRootComponent
struct AEngine_Actor_K2_GetRootComponent_Params
{
	class UEngine_SceneComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.Actor.K2_GetComponentsByClass
struct AEngine_Actor_K2_GetComponentsByClass_Params
{
	class UClass*                                      ComponentClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UEngine_ActorComponent*>              ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.Actor.K2_GetActorRotation
struct AEngine_Actor_K2_GetActorRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.K2_GetActorLocation
struct AEngine_Actor_K2_GetActorLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.K2_DetachFromActor
struct AEngine_Actor_K2_DetachFromActor_Params
{
	FEngine_Engine_EDetachmentRule                     LocationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EDetachmentRule                     RotationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EDetachmentRule                     ScaleRule;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_DestroyComponent
struct AEngine_Actor_K2_DestroyComponent_Params
{
	class UEngine_ActorComponent*                      Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.Actor.K2_DestroyActor
struct AEngine_Actor_K2_DestroyActor_Params
{
};

// Function Engine.Actor.K2_AttachToComponent
struct AEngine_Actor_K2_AttachToComponent_Params
{
	class UEngine_SceneComponent*                      Parent;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       SocketName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     LocationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     RotationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     ScaleRule;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bWeldSimulatedBodies;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_AttachToActor
struct AEngine_Actor_K2_AttachToActor_Params
{
	class AEngine_Actor*                               ParentActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     LocationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     RotationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     ScaleRule;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bWeldSimulatedBodies;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_AttachRootComponentToActor
struct AEngine_Actor_K2_AttachRootComponentToActor_Params
{
	class AEngine_Actor*                               InParentActor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EAttachLocation>        AttachLocationType;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bWeldSimulatedBodies;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_AttachRootComponentTo
struct AEngine_Actor_K2_AttachRootComponentTo_Params
{
	class UEngine_SceneComponent*                      InParent;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EAttachLocation>        AttachLocationType;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bWeldSimulatedBodies;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_AddActorWorldTransform
struct AEngine_Actor_K2_AddActorWorldTransform_Params
{
	struct FTransform                                  DeltaTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_AddActorWorldRotation
struct AEngine_Actor_K2_AddActorWorldRotation_Params
{
	struct FRotator                                    DeltaRotation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_AddActorWorldOffset
struct AEngine_Actor_K2_AddActorWorldOffset_Params
{
	struct FVector                                     DeltaLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_AddActorLocalTransform
struct AEngine_Actor_K2_AddActorLocalTransform_Params
{
	struct FTransform                                  NewTransform;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_AddActorLocalRotation
struct AEngine_Actor_K2_AddActorLocalRotation_Params
{
	struct FRotator                                    DeltaRotation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.K2_AddActorLocalOffset
struct AEngine_Actor_K2_AddActorLocalOffset_Params
{
	struct FVector                                     DeltaLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.IsOverlappingActor
struct AEngine_Actor_IsOverlappingActor_Params
{
	class AEngine_Actor*                               Other;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.IsChildActor
struct AEngine_Actor_IsChildActor_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.IsActorTickEnabled
struct AEngine_Actor_IsActorTickEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.IsActorBeingDestroyed
struct AEngine_Actor_IsActorBeingDestroyed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.HasAuthority
struct AEngine_Actor_HasAuthority_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetVerticalDistanceTo
struct AEngine_Actor_GetVerticalDistanceTo_Params
{
	class AEngine_Actor*                               OtherActor;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetVelocity
struct AEngine_Actor_GetVelocity_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetTransform
struct AEngine_Actor_GetTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.Actor.GetTickableWhenPaused
struct AEngine_Actor_GetTickableWhenPaused_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetSquaredDistanceTo
struct AEngine_Actor_GetSquaredDistanceTo_Params
{
	class AEngine_Actor*                               OtherActor;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetRemoteRole
struct AEngine_Actor_GetRemoteRole_Params
{
	TEnumAsByte<FEngine_Engine_ENetRole>               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetParentComponent
struct AEngine_Actor_GetParentComponent_Params
{
	class UEngine_ChildActorComponent*                 ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.Actor.GetParentActor
struct AEngine_Actor_GetParentActor_Params
{
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetOwner
struct AEngine_Actor_GetOwner_Params
{
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetOverlappingComponents
struct AEngine_Actor_GetOverlappingComponents_Params
{
	TArray<class UEngine_PrimitiveComponent*>          OverlappingComponents;                                    // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.Actor.GetOverlappingActors
struct AEngine_Actor_GetOverlappingActors_Params
{
	TArray<class AEngine_Actor*>                       OverlappingActors;                                        // (Parm, OutParm, ZeroConstructor)
	class UClass*                                      ClassFilter;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.GetLocalRole
struct AEngine_Actor_GetLocalRole_Params
{
	TEnumAsByte<FEngine_Engine_ENetRole>               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetLifeSpan
struct AEngine_Actor_GetLifeSpan_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetInstigatorController
struct AEngine_Actor_GetInstigatorController_Params
{
	class AEngine_Controller*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetInstigator
struct AEngine_Actor_GetInstigator_Params
{
	class AEngine_Pawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetInputVectorAxisValue
struct AEngine_Actor_GetInputVectorAxisValue_Params
{
	struct FInputCore_Key                              InputAxisKey;                                             // (ConstParm, Parm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetInputAxisValue
struct AEngine_Actor_GetInputAxisValue_Params
{
	struct FName                                       InputAxisName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetInputAxisKeyValue
struct AEngine_Actor_GetInputAxisKeyValue_Params
{
	struct FInputCore_Key                              InputAxisKey;                                             // (ConstParm, Parm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetHorizontalDotProductTo
struct AEngine_Actor_GetHorizontalDotProductTo_Params
{
	class AEngine_Actor*                               OtherActor;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetHorizontalDistanceTo
struct AEngine_Actor_GetHorizontalDistanceTo_Params
{
	class AEngine_Actor*                               OtherActor;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetGameTimeSinceCreation
struct AEngine_Actor_GetGameTimeSinceCreation_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetDotProductTo
struct AEngine_Actor_GetDotProductTo_Params
{
	class AEngine_Actor*                               OtherActor;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetDistanceTo
struct AEngine_Actor_GetDistanceTo_Params
{
	class AEngine_Actor*                               OtherActor;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetComponentsByTag
struct AEngine_Actor_GetComponentsByTag_Params
{
	class UClass*                                      ComponentClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Tag;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UEngine_ActorComponent*>              ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.Actor.GetComponentsByInterface
struct AEngine_Actor_GetComponentsByInterface_Params
{
	class UClass*                                      Interface;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UEngine_ActorComponent*>              ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.Actor.GetComponentByClass
struct AEngine_Actor_GetComponentByClass_Params
{
	class UClass*                                      ComponentClass;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ActorComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.Actor.GetAttachParentSocketName
struct AEngine_Actor_GetAttachParentSocketName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetAttachParentActor
struct AEngine_Actor_GetAttachParentActor_Params
{
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetAttachedActors
struct AEngine_Actor_GetAttachedActors_Params
{
	TArray<class AEngine_Actor*>                       OutActors;                                                // (Parm, OutParm, ZeroConstructor)
	bool                                               bResetArray;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.GetAllChildActors
struct AEngine_Actor_GetAllChildActors_Params
{
	TArray<class AEngine_Actor*>                       ChildActors;                                              // (Parm, OutParm, ZeroConstructor)
	bool                                               bIncludeDescendants;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.GetActorUpVector
struct AEngine_Actor_GetActorUpVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetActorTimeDilation
struct AEngine_Actor_GetActorTimeDilation_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetActorTickInterval
struct AEngine_Actor_GetActorTickInterval_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetActorScale3D
struct AEngine_Actor_GetActorScale3D_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetActorRightVector
struct AEngine_Actor_GetActorRightVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetActorRelativeScale3D
struct AEngine_Actor_GetActorRelativeScale3D_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetActorForwardVector
struct AEngine_Actor_GetActorForwardVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetActorEyesViewPoint
struct AEngine_Actor_GetActorEyesViewPoint_Params
{
	struct FVector                                     OutLocation;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    OutRotation;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.GetActorEnableCollision
struct AEngine_Actor_GetActorEnableCollision_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Actor.GetActorBounds
struct AEngine_Actor_GetActorBounds_Params
{
	bool                                               bOnlyCollidingComponents;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Origin;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoxExtent;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.ForceNetUpdate
struct AEngine_Actor_ForceNetUpdate_Params
{
};

// Function Engine.Actor.FlushNetDormancy
struct AEngine_Actor_FlushNetDormancy_Params
{
};

// Function Engine.Actor.EnableInput
struct AEngine_Actor_EnableInput_Params
{
	class AEngine_PlayerController*                    PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.DisableInput
struct AEngine_Actor_DisableInput_Params
{
	class AEngine_PlayerController*                    PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.DetachRootComponentFromParent
struct AEngine_Actor_DetachRootComponentFromParent_Params
{
	bool                                               bMaintainWorldPosition;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.AddTickPrerequisiteComponent
struct AEngine_Actor_AddTickPrerequisiteComponent_Params
{
	class UEngine_ActorComponent*                      PrerequisiteComponent;                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.Actor.AddTickPrerequisiteActor
struct AEngine_Actor_AddTickPrerequisiteActor_Params
{
	class AEngine_Actor*                               PrerequisiteActor;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Actor.AddComponent
struct AEngine_Actor_AddComponent_Params
{
	struct FName                                       TemplateName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bManualAttachment;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  RelativeTransform;                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	class UObject*                                     ComponentTemplateContext;                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ActorComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.Actor.ActorHasTag
struct AEngine_Actor_ActorHasTag_Params
{
	struct FName                                       Tag;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ActorComponent.ToggleActive
struct UEngine_ActorComponent_ToggleActive_Params
{
};

// Function Engine.ActorComponent.SetTickGroup
struct UEngine_ActorComponent_SetTickGroup_Params
{
	TEnumAsByte<FEngine_Engine_ETickingGroup>          NewTickGroup;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.SetTickableWhenPaused
struct UEngine_ActorComponent_SetTickableWhenPaused_Params
{
	bool                                               bTickableWhenPaused;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.SetIsReplicated
struct UEngine_ActorComponent_SetIsReplicated_Params
{
	bool                                               ShouldReplicate;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.SetComponentTickInterval
struct UEngine_ActorComponent_SetComponentTickInterval_Params
{
	float                                              TickInterval;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.SetComponentTickEnabled
struct UEngine_ActorComponent_SetComponentTickEnabled_Params
{
	bool                                               bEnabled;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.SetAutoActivate
struct UEngine_ActorComponent_SetAutoActivate_Params
{
	bool                                               bNewAutoActivate;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.SetActive
struct UEngine_ActorComponent_SetActive_Params
{
	bool                                               bNewActive;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bReset;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.RemoveTickPrerequisiteComponent
struct UEngine_ActorComponent_RemoveTickPrerequisiteComponent_Params
{
	class UEngine_ActorComponent*                      PrerequisiteComponent;                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.ActorComponent.RemoveTickPrerequisiteActor
struct UEngine_ActorComponent_RemoveTickPrerequisiteActor_Params
{
	class AEngine_Actor*                               PrerequisiteActor;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.ReceiveTick
struct UEngine_ActorComponent_ReceiveTick_Params
{
	float                                              DeltaSeconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.ReceiveEndPlay
struct UEngine_ActorComponent_ReceiveEndPlay_Params
{
	TEnumAsByte<FEngine_Engine_EEndPlayReason>         EndPlayReason;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.ReceiveBeginPlay
struct UEngine_ActorComponent_ReceiveBeginPlay_Params
{
};

// Function Engine.ActorComponent.OnRep_IsActive
struct UEngine_ActorComponent_OnRep_IsActive_Params
{
};

// Function Engine.ActorComponent.K2_DestroyComponent
struct UEngine_ActorComponent_K2_DestroyComponent_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.IsComponentTickEnabled
struct UEngine_ActorComponent_IsComponentTickEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ActorComponent.IsBeingDestroyed
struct UEngine_ActorComponent_IsBeingDestroyed_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ActorComponent.IsActive
struct UEngine_ActorComponent_IsActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ActorComponent.GetOwner
struct UEngine_ActorComponent_GetOwner_Params
{
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ActorComponent.GetComponentTickInterval
struct UEngine_ActorComponent_GetComponentTickInterval_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ActorComponent.Deactivate
struct UEngine_ActorComponent_Deactivate_Params
{
};

// Function Engine.ActorComponent.ComponentHasTag
struct UEngine_ActorComponent_ComponentHasTag_Params
{
	struct FName                                       Tag;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ActorComponent.AddTickPrerequisiteComponent
struct UEngine_ActorComponent_AddTickPrerequisiteComponent_Params
{
	class UEngine_ActorComponent*                      PrerequisiteComponent;                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.ActorComponent.AddTickPrerequisiteActor
struct UEngine_ActorComponent_AddTickPrerequisiteActor_Params
{
	class AEngine_Actor*                               PrerequisiteActor;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ActorComponent.Activate
struct UEngine_ActorComponent_Activate_Params
{
	bool                                               bReset;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.ToggleVisibility
struct UEngine_SceneComponent_ToggleVisibility_Params
{
	bool                                               bPropagateToChildren;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.SnapTo
struct UEngine_SceneComponent_SnapTo_Params
{
	class UEngine_SceneComponent*                      InParent;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.SetWorldScale3D
struct UEngine_SceneComponent_SetWorldScale3D_Params
{
	struct FVector                                     NewScale;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.SetVisibility
struct UEngine_SceneComponent_SetVisibility_Params
{
	bool                                               bNewVisibility;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPropagateToChildren;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.SetShouldUpdatePhysicsVolume
struct UEngine_SceneComponent_SetShouldUpdatePhysicsVolume_Params
{
	bool                                               bInShouldUpdatePhysicsVolume;                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.SetRelativeScale3D
struct UEngine_SceneComponent_SetRelativeScale3D_Params
{
	struct FVector                                     NewScale3D;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.SetMobility
struct UEngine_SceneComponent_SetMobility_Params
{
	TEnumAsByte<FEngine_Engine_EComponentMobility>     NewMobility;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.SetHiddenInGame
struct UEngine_SceneComponent_SetHiddenInGame_Params
{
	bool                                               NewHidden;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPropagateToChildren;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.SetAbsolute
struct UEngine_SceneComponent_SetAbsolute_Params
{
	bool                                               bNewAbsoluteLocation;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bNewAbsoluteRotation;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bNewAbsoluteScale;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.ResetRelativeTransform
struct UEngine_SceneComponent_ResetRelativeTransform_Params
{
};

// Function Engine.SceneComponent.OnRep_Visibility
struct UEngine_SceneComponent_OnRep_Visibility_Params
{
	bool                                               OldValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.OnRep_Transform
struct UEngine_SceneComponent_OnRep_Transform_Params
{
};

// Function Engine.SceneComponent.OnRep_AttachSocketName
struct UEngine_SceneComponent_OnRep_AttachSocketName_Params
{
};

// Function Engine.SceneComponent.OnRep_AttachParent
struct UEngine_SceneComponent_OnRep_AttachParent_Params
{
};

// Function Engine.SceneComponent.OnRep_AttachChildren
struct UEngine_SceneComponent_OnRep_AttachChildren_Params
{
};

// Function Engine.SceneComponent.K2_SetWorldTransform
struct UEngine_SceneComponent_K2_SetWorldTransform_Params
{
	struct FTransform                                  NewTransform;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_SetWorldRotation
struct UEngine_SceneComponent_K2_SetWorldRotation_Params
{
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_SetWorldLocationAndRotation
struct UEngine_SceneComponent_K2_SetWorldLocationAndRotation_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_SetWorldLocation
struct UEngine_SceneComponent_K2_SetWorldLocation_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_SetRelativeTransform
struct UEngine_SceneComponent_K2_SetRelativeTransform_Params
{
	struct FTransform                                  NewTransform;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_SetRelativeRotation
struct UEngine_SceneComponent_K2_SetRelativeRotation_Params
{
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_SetRelativeLocationAndRotation
struct UEngine_SceneComponent_K2_SetRelativeLocationAndRotation_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_SetRelativeLocation
struct UEngine_SceneComponent_K2_SetRelativeLocation_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_GetComponentToWorld
struct UEngine_SceneComponent_K2_GetComponentToWorld_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_GetComponentScale
struct UEngine_SceneComponent_K2_GetComponentScale_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_GetComponentRotation
struct UEngine_SceneComponent_K2_GetComponentRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_GetComponentLocation
struct UEngine_SceneComponent_K2_GetComponentLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_DetachFromComponent
struct UEngine_SceneComponent_K2_DetachFromComponent_Params
{
	FEngine_Engine_EDetachmentRule                     LocationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EDetachmentRule                     RotationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EDetachmentRule                     ScaleRule;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bCallModify;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_AttachToComponent
struct UEngine_SceneComponent_K2_AttachToComponent_Params
{
	class UEngine_SceneComponent*                      Parent;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       SocketName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     LocationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     RotationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     ScaleRule;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bWeldSimulatedBodies;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_AttachTo
struct UEngine_SceneComponent_K2_AttachTo_Params
{
	class UEngine_SceneComponent*                      InParent;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EAttachLocation>        AttachType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bWeldSimulatedBodies;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_AddWorldTransform
struct UEngine_SceneComponent_K2_AddWorldTransform_Params
{
	struct FTransform                                  DeltaTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_AddWorldRotation
struct UEngine_SceneComponent_K2_AddWorldRotation_Params
{
	struct FRotator                                    DeltaRotation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_AddWorldOffset
struct UEngine_SceneComponent_K2_AddWorldOffset_Params
{
	struct FVector                                     DeltaLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_AddRelativeRotation
struct UEngine_SceneComponent_K2_AddRelativeRotation_Params
{
	struct FRotator                                    DeltaRotation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_AddRelativeLocation
struct UEngine_SceneComponent_K2_AddRelativeLocation_Params
{
	struct FVector                                     DeltaLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_AddLocalTransform
struct UEngine_SceneComponent_K2_AddLocalTransform_Params
{
	struct FTransform                                  DeltaTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_AddLocalRotation
struct UEngine_SceneComponent_K2_AddLocalRotation_Params
{
	struct FRotator                                    DeltaRotation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.K2_AddLocalOffset
struct UEngine_SceneComponent_K2_AddLocalOffset_Params
{
	struct FVector                                     DeltaLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepHitResult;                                           // (Parm, OutParm, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneComponent.IsVisible
struct UEngine_SceneComponent_IsVisible_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.IsSimulatingPhysics
struct UEngine_SceneComponent_IsSimulatingPhysics_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.IsAnySimulatingPhysics
struct UEngine_SceneComponent_IsAnySimulatingPhysics_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetUpVector
struct UEngine_SceneComponent_GetUpVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetSocketTransform
struct UEngine_SceneComponent_GetSocketTransform_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ERelativeTransformSpace> TransformSpace;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetSocketRotation
struct UEngine_SceneComponent_GetSocketRotation_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetSocketQuaternion
struct UEngine_SceneComponent_GetSocketQuaternion_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetSocketLocation
struct UEngine_SceneComponent_GetSocketLocation_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetShouldUpdatePhysicsVolume
struct UEngine_SceneComponent_GetShouldUpdatePhysicsVolume_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetRightVector
struct UEngine_SceneComponent_GetRightVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetRelativeTransform
struct UEngine_SceneComponent_GetRelativeTransform_Params
{
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetPhysicsVolume
struct UEngine_SceneComponent_GetPhysicsVolume_Params
{
	class AEngine_PhysicsVolume*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetParentComponents
struct UEngine_SceneComponent_GetParentComponents_Params
{
	TArray<class UEngine_SceneComponent*>              Parents;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.SceneComponent.GetNumChildrenComponents
struct UEngine_SceneComponent_GetNumChildrenComponents_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetForwardVector
struct UEngine_SceneComponent_GetForwardVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetComponentVelocity
struct UEngine_SceneComponent_GetComponentVelocity_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetChildrenComponents
struct UEngine_SceneComponent_GetChildrenComponents_Params
{
	bool                                               bIncludeAllDescendants;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UEngine_SceneComponent*>              Children;                                                 // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.SceneComponent.GetChildComponent
struct UEngine_SceneComponent_GetChildComponent_Params
{
	int                                                ChildIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SceneComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.SceneComponent.GetAttachSocketName
struct UEngine_SceneComponent_GetAttachSocketName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.GetAttachParent
struct UEngine_SceneComponent_GetAttachParent_Params
{
	class UEngine_SceneComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.SceneComponent.GetAllSocketNames
struct UEngine_SceneComponent_GetAllSocketNames_Params
{
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.SceneComponent.DoesSocketExist
struct UEngine_SceneComponent_DoesSocketExist_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SceneComponent.DetachFromParent
struct UEngine_SceneComponent_DetachFromParent_Params
{
	bool                                               bMaintainWorldPosition;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bCallModify;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.WakeRigidBody
struct UEngine_PrimitiveComponent_WakeRigidBody_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.WakeAllRigidBodies
struct UEngine_PrimitiveComponent_WakeAllRigidBodies_Params
{
};

// Function Engine.PrimitiveComponent.SetWalkableSlopeOverride
struct UEngine_PrimitiveComponent_SetWalkableSlopeOverride_Params
{
	struct FEngine_WalkableSlopeOverride               NewOverride;                                              // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetUseCCD
struct UEngine_PrimitiveComponent_SetUseCCD_Params
{
	bool                                               InUseCCD;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetTranslucentSortPriority
struct UEngine_PrimitiveComponent_SetTranslucentSortPriority_Params
{
	int                                                NewTranslucentSortPriority;                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetSingleSampleShadowFromStationaryLights
struct UEngine_PrimitiveComponent_SetSingleSampleShadowFromStationaryLights_Params
{
	bool                                               bNewSingleSampleShadowFromStationaryLights;               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetSimulatePhysics
struct UEngine_PrimitiveComponent_SetSimulatePhysics_Params
{
	bool                                               bSimulate;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetRenderInMainPass
struct UEngine_PrimitiveComponent_SetRenderInMainPass_Params
{
	bool                                               bValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetRenderCustomDepth
struct UEngine_PrimitiveComponent_SetRenderCustomDepth_Params
{
	bool                                               bValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetReceivesDecals
struct UEngine_PrimitiveComponent_SetReceivesDecals_Params
{
	bool                                               bNewReceivesDecals;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetPhysMaterialOverride
struct UEngine_PrimitiveComponent_SetPhysMaterialOverride_Params
{
	class UEngine_PhysicalMaterial*                    NewPhysMaterial;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocityInRadians
struct UEngine_PrimitiveComponent_SetPhysicsMaxAngularVelocityInRadians_Params
{
	float                                              NewMaxAngVel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToCurrent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocityInDegrees
struct UEngine_PrimitiveComponent_SetPhysicsMaxAngularVelocityInDegrees_Params
{
	float                                              NewMaxAngVel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToCurrent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocity
struct UEngine_PrimitiveComponent_SetPhysicsMaxAngularVelocity_Params
{
	float                                              NewMaxAngVel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToCurrent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetPhysicsLinearVelocity
struct UEngine_PrimitiveComponent_SetPhysicsLinearVelocity_Params
{
	struct FVector                                     NewVel;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToCurrent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetPhysicsAngularVelocityInRadians
struct UEngine_PrimitiveComponent_SetPhysicsAngularVelocityInRadians_Params
{
	struct FVector                                     NewAngVel;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToCurrent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetPhysicsAngularVelocityInDegrees
struct UEngine_PrimitiveComponent_SetPhysicsAngularVelocityInDegrees_Params
{
	struct FVector                                     NewAngVel;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToCurrent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetPhysicsAngularVelocity
struct UEngine_PrimitiveComponent_SetPhysicsAngularVelocity_Params
{
	struct FVector                                     NewAngVel;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToCurrent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetOwnerNoSee
struct UEngine_PrimitiveComponent_SetOwnerNoSee_Params
{
	bool                                               bNewOwnerNoSee;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetOnlyOwnerSee
struct UEngine_PrimitiveComponent_SetOnlyOwnerSee_Params
{
	bool                                               bNewOnlyOwnerSee;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetNotifyRigidBodyCollision
struct UEngine_PrimitiveComponent_SetNotifyRigidBodyCollision_Params
{
	bool                                               bNewNotifyRigidBodyCollision;                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetMaterialByName
struct UEngine_PrimitiveComponent_SetMaterialByName_Params
{
	struct FName                                       MaterialSlotName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   Material;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetMaterial
struct UEngine_PrimitiveComponent_SetMaterial_Params
{
	int                                                ElementIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   Material;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetMassScale
struct UEngine_PrimitiveComponent_SetMassScale_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InMassScale;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetMassOverrideInKg
struct UEngine_PrimitiveComponent_SetMassOverrideInKg_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MassInKg;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideMass;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetLinearDamping
struct UEngine_PrimitiveComponent_SetLinearDamping_Params
{
	float                                              InDamping;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetLightAttachmentsAsGroup
struct UEngine_PrimitiveComponent_SetLightAttachmentsAsGroup_Params
{
	bool                                               bInLightAttachmentsAsGroup;                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetGenerateOverlapEvents
struct UEngine_PrimitiveComponent_SetGenerateOverlapEvents_Params
{
	bool                                               bInGenerateOverlapEvents;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetExcludeFromLightAttachmentGroup
struct UEngine_PrimitiveComponent_SetExcludeFromLightAttachmentGroup_Params
{
	bool                                               bInExcludeFromLightAttachmentGroup;                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetEnableGravity
struct UEngine_PrimitiveComponent_SetEnableGravity_Params
{
	bool                                               bGravityEnabled;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector4
struct UEngine_PrimitiveComponent_SetCustomPrimitiveDataVector4_Params
{
	int                                                DataIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector3
struct UEngine_PrimitiveComponent_SetCustomPrimitiveDataVector3_Params
{
	int                                                DataIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector2
struct UEngine_PrimitiveComponent_SetCustomPrimitiveDataVector2_Params
{
	int                                                DataIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataFloat
struct UEngine_PrimitiveComponent_SetCustomPrimitiveDataFloat_Params
{
	int                                                DataIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCustomDepthStencilWriteMask
struct UEngine_PrimitiveComponent_SetCustomDepthStencilWriteMask_Params
{
	FEngine_Engine_ERendererStencilMask                WriteMaskBit;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCustomDepthStencilValue
struct UEngine_PrimitiveComponent_SetCustomDepthStencilValue_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCullDistance
struct UEngine_PrimitiveComponent_SetCullDistance_Params
{
	float                                              NewCullDistance;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetConstraintMode
struct UEngine_PrimitiveComponent_SetConstraintMode_Params
{
	TEnumAsByte<FEngine_Engine_EDOFMode>               ConstraintMode;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCollisionResponseToChannel
struct UEngine_PrimitiveComponent_SetCollisionResponseToChannel_Params
{
	TEnumAsByte<FEngine_Engine_ECollisionChannel>      Channel;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ECollisionResponse>     NewResponse;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCollisionResponseToAllChannels
struct UEngine_PrimitiveComponent_SetCollisionResponseToAllChannels_Params
{
	TEnumAsByte<FEngine_Engine_ECollisionResponse>     NewResponse;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCollisionProfileName
struct UEngine_PrimitiveComponent_SetCollisionProfileName_Params
{
	struct FName                                       InCollisionProfileName;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCollisionObjectType
struct UEngine_PrimitiveComponent_SetCollisionObjectType_Params
{
	TEnumAsByte<FEngine_Engine_ECollisionChannel>      Channel;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCollisionEnabled
struct UEngine_PrimitiveComponent_SetCollisionEnabled_Params
{
	TEnumAsByte<FEngine_Engine_ECollisionEnabled>      NewType;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCenterOfMass
struct UEngine_PrimitiveComponent_SetCenterOfMass_Params
{
	struct FVector                                     CenterOfMassOffset;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCastShadow
struct UEngine_PrimitiveComponent_SetCastShadow_Params
{
	bool                                               NewCastShadow;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetCastInsetShadow
struct UEngine_PrimitiveComponent_SetCastInsetShadow_Params
{
	bool                                               bInCastInsetShadow;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetBoundsScale
struct UEngine_PrimitiveComponent_SetBoundsScale_Params
{
	float                                              NewBoundsScale;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetAngularDamping
struct UEngine_PrimitiveComponent_SetAngularDamping_Params
{
	float                                              InDamping;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetAllUseCCD
struct UEngine_PrimitiveComponent_SetAllUseCCD_Params
{
	bool                                               InUseCCD;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetAllPhysicsLinearVelocity
struct UEngine_PrimitiveComponent_SetAllPhysicsLinearVelocity_Params
{
	struct FVector                                     NewVel;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToCurrent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetAllPhysicsAngularVelocityInRadians
struct UEngine_PrimitiveComponent_SetAllPhysicsAngularVelocityInRadians_Params
{
	struct FVector                                     NewAngVel;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bAddToCurrent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetAllPhysicsAngularVelocityInDegrees
struct UEngine_PrimitiveComponent_SetAllPhysicsAngularVelocityInDegrees_Params
{
	struct FVector                                     NewAngVel;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bAddToCurrent;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.SetAllMassScale
struct UEngine_PrimitiveComponent_SetAllMassScale_Params
{
	float                                              InMassScale;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.ScaleByMomentOfInertia
struct UEngine_PrimitiveComponent_ScaleByMomentOfInertia_Params
{
	struct FVector                                     InputVector;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.PutRigidBodyToSleep
struct UEngine_PrimitiveComponent_PutRigidBodyToSleep_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.K2_SphereTraceComponent
struct UEngine_PrimitiveComponent_K2_SphereTraceComponent_Params
{
	struct FVector                                     TraceStart;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceEnd;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SphereRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShowTrace;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPersistentShowTrace;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitNormal;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.K2_SphereOverlapComponent
struct UEngine_PrimitiveComponent_K2_SphereOverlapComponent_Params
{
	struct FVector                                     InSphereCentre;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InSphereRadius;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShowTrace;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPersistentShowTrace;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitNormal;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.K2_LineTraceComponent
struct UEngine_PrimitiveComponent_K2_LineTraceComponent_Params
{
	struct FVector                                     TraceStart;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceEnd;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShowTrace;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPersistentShowTrace;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitNormal;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.K2_IsQueryCollisionEnabled
struct UEngine_PrimitiveComponent_K2_IsQueryCollisionEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.K2_IsPhysicsCollisionEnabled
struct UEngine_PrimitiveComponent_K2_IsPhysicsCollisionEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.K2_IsCollisionEnabled
struct UEngine_PrimitiveComponent_K2_IsCollisionEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.K2_BoxOverlapComponent
struct UEngine_PrimitiveComponent_K2_BoxOverlapComponent_Params
{
	struct FVector                                     InBoxCentre;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBox                                        InBox;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShowTrace;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPersistentShowTrace;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitNormal;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.IsOverlappingComponent
struct UEngine_PrimitiveComponent_IsOverlappingComponent_Params
{
	class UEngine_PrimitiveComponent*                  OtherComp;                                                // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.IsOverlappingActor
struct UEngine_PrimitiveComponent_IsOverlappingActor_Params
{
	class AEngine_Actor*                               Other;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.IsGravityEnabled
struct UEngine_PrimitiveComponent_IsGravityEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.IsAnyRigidBodyAwake
struct UEngine_PrimitiveComponent_IsAnyRigidBodyAwake_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.IgnoreComponentWhenMoving
struct UEngine_PrimitiveComponent_IgnoreComponentWhenMoving_Params
{
	class UEngine_PrimitiveComponent*                  Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bShouldIgnore;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.IgnoreActorWhenMoving
struct UEngine_PrimitiveComponent_IgnoreActorWhenMoving_Params
{
	class AEngine_Actor*                               Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldIgnore;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetWalkableSlopeOverride
struct UEngine_PrimitiveComponent_GetWalkableSlopeOverride_Params
{
	struct FEngine_WalkableSlopeOverride               ReturnValue;                                              // (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetPhysicsLinearVelocityAtPoint
struct UEngine_PrimitiveComponent_GetPhysicsLinearVelocityAtPoint_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetPhysicsLinearVelocity
struct UEngine_PrimitiveComponent_GetPhysicsLinearVelocity_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetPhysicsAngularVelocityInRadians
struct UEngine_PrimitiveComponent_GetPhysicsAngularVelocityInRadians_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetPhysicsAngularVelocityInDegrees
struct UEngine_PrimitiveComponent_GetPhysicsAngularVelocityInDegrees_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetPhysicsAngularVelocity
struct UEngine_PrimitiveComponent_GetPhysicsAngularVelocity_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetOverlappingComponents
struct UEngine_PrimitiveComponent_GetOverlappingComponents_Params
{
	TArray<class UEngine_PrimitiveComponent*>          OutOverlappingComponents;                                 // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.PrimitiveComponent.GetOverlappingActors
struct UEngine_PrimitiveComponent_GetOverlappingActors_Params
{
	TArray<class AEngine_Actor*>                       OverlappingActors;                                        // (Parm, OutParm, ZeroConstructor)
	class UClass*                                      ClassFilter;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetNumMaterials
struct UEngine_PrimitiveComponent_GetNumMaterials_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetMaterialFromCollisionFaceIndex
struct UEngine_PrimitiveComponent_GetMaterialFromCollisionFaceIndex_Params
{
	int                                                FaceIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SectionIndex;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetMaterial
struct UEngine_PrimitiveComponent_GetMaterial_Params
{
	int                                                ElementIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetMassScale
struct UEngine_PrimitiveComponent_GetMassScale_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetMass
struct UEngine_PrimitiveComponent_GetMass_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetLinearDamping
struct UEngine_PrimitiveComponent_GetLinearDamping_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetInertiaTensor
struct UEngine_PrimitiveComponent_GetInertiaTensor_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetGenerateOverlapEvents
struct UEngine_PrimitiveComponent_GetGenerateOverlapEvents_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetCollisionResponseToChannel
struct UEngine_PrimitiveComponent_GetCollisionResponseToChannel_Params
{
	TEnumAsByte<FEngine_Engine_ECollisionChannel>      Channel;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ECollisionResponse>     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetCollisionProfileName
struct UEngine_PrimitiveComponent_GetCollisionProfileName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetCollisionObjectType
struct UEngine_PrimitiveComponent_GetCollisionObjectType_Params
{
	TEnumAsByte<FEngine_Engine_ECollisionChannel>      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetCollisionEnabled
struct UEngine_PrimitiveComponent_GetCollisionEnabled_Params
{
	TEnumAsByte<FEngine_Engine_ECollisionEnabled>      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetClosestPointOnCollision
struct UEngine_PrimitiveComponent_GetClosestPointOnCollision_Params
{
	struct FVector                                     Point;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     OutPointOnBody;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetCenterOfMass
struct UEngine_PrimitiveComponent_GetCenterOfMass_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.GetAngularDamping
struct UEngine_PrimitiveComponent_GetAngularDamping_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.CreateDynamicMaterialInstance
struct UEngine_PrimitiveComponent_CreateDynamicMaterialInstance_Params
{
	int                                                ElementIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   SourceMaterial;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       OptionalName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInstanceDynamic*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamicFromMaterial
struct UEngine_PrimitiveComponent_CreateAndSetMaterialInstanceDynamicFromMaterial_Params
{
	int                                                ElementIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   Parent;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInstanceDynamic*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamic
struct UEngine_PrimitiveComponent_CreateAndSetMaterialInstanceDynamic_Params
{
	int                                                ElementIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInstanceDynamic*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreComponents
struct UEngine_PrimitiveComponent_CopyArrayOfMoveIgnoreComponents_Params
{
	TArray<class UEngine_PrimitiveComponent*>          ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreActors
struct UEngine_PrimitiveComponent_CopyArrayOfMoveIgnoreActors_Params
{
	TArray<class AEngine_Actor*>                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.PrimitiveComponent.ClearMoveIgnoreComponents
struct UEngine_PrimitiveComponent_ClearMoveIgnoreComponents_Params
{
};

// Function Engine.PrimitiveComponent.ClearMoveIgnoreActors
struct UEngine_PrimitiveComponent_ClearMoveIgnoreActors_Params
{
};

// Function Engine.PrimitiveComponent.CanCharacterStepUp
struct UEngine_PrimitiveComponent_CanCharacterStepUp_Params
{
	class AEngine_Pawn*                                Pawn;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddTorqueInRadians
struct UEngine_PrimitiveComponent_AddTorqueInRadians_Params
{
	struct FVector                                     Torque;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAccelChange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddTorqueInDegrees
struct UEngine_PrimitiveComponent_AddTorqueInDegrees_Params
{
	struct FVector                                     Torque;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAccelChange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddTorque
struct UEngine_PrimitiveComponent_AddTorque_Params
{
	struct FVector                                     Torque;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAccelChange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddRadialImpulse
struct UEngine_PrimitiveComponent_AddRadialImpulse_Params
{
	struct FVector                                     Origin;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Strength;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ERadialImpulseFalloff>  Falloff;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bVelChange;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddRadialForce
struct UEngine_PrimitiveComponent_AddRadialForce_Params
{
	struct FVector                                     Origin;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Strength;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ERadialImpulseFalloff>  Falloff;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAccelChange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddImpulseAtLocation
struct UEngine_PrimitiveComponent_AddImpulseAtLocation_Params
{
	struct FVector                                     Impulse;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddImpulse
struct UEngine_PrimitiveComponent_AddImpulse_Params
{
	struct FVector                                     Impulse;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bVelChange;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddForceAtLocationLocal
struct UEngine_PrimitiveComponent_AddForceAtLocationLocal_Params
{
	struct FVector                                     force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddForceAtLocation
struct UEngine_PrimitiveComponent_AddForceAtLocation_Params
{
	struct FVector                                     force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddForce
struct UEngine_PrimitiveComponent_AddForce_Params
{
	struct FVector                                     force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAccelChange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddAngularImpulseInRadians
struct UEngine_PrimitiveComponent_AddAngularImpulseInRadians_Params
{
	struct FVector                                     Impulse;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bVelChange;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddAngularImpulseInDegrees
struct UEngine_PrimitiveComponent_AddAngularImpulseInDegrees_Params
{
	struct FVector                                     Impulse;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bVelChange;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PrimitiveComponent.AddAngularImpulse
struct UEngine_PrimitiveComponent_AddAngularImpulse_Params
{
	struct FVector                                     Impulse;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bVelChange;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MeshComponent.SetVectorParameterValueOnMaterials
struct UEngine_MeshComponent_SetVectorParameterValueOnMaterials_Params
{
	struct FName                                       ParameterName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ParameterValue;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MeshComponent.SetScalarParameterValueOnMaterials
struct UEngine_MeshComponent_SetScalarParameterValueOnMaterials_Params
{
	struct FName                                       ParameterName;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ParameterValue;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MeshComponent.PrestreamTextures
struct UEngine_MeshComponent_PrestreamTextures_Params
{
	float                                              Seconds;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPrioritizeCharacterTextures;                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                CinematicTextureGroups;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MeshComponent.IsMaterialSlotNameValid
struct UEngine_MeshComponent_IsMaterialSlotNameValid_Params
{
	struct FName                                       MaterialSlotName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MeshComponent.GetMaterialSlotNames
struct UEngine_MeshComponent_GetMaterialSlotNames_Params
{
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.MeshComponent.GetMaterials
struct UEngine_MeshComponent_GetMaterials_Params
{
	TArray<class UEngine_MaterialInterface*>           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.MeshComponent.GetMaterialIndex
struct UEngine_MeshComponent_GetMaterialIndex_Params
{
	struct FName                                       MaterialSlotName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.UnloadSkinWeightProfile
struct UEngine_SkinnedMeshComponent_UnloadSkinWeightProfile_Params
{
	struct FName                                       InProfileName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.UnHideBoneByName
struct UEngine_SkinnedMeshComponent_UnHideBoneByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.TransformToBoneSpace
struct UEngine_SkinnedMeshComponent_TransformToBoneSpace_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InPosition;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    InRotation;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutPosition;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    OutRotation;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.TransformFromBoneSpace
struct UEngine_SkinnedMeshComponent_TransformFromBoneSpace_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InPosition;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    InRotation;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutPosition;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    OutRotation;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.ShowMaterialSection
struct UEngine_SkinnedMeshComponent_ShowMaterialSection_Params
{
	int                                                MaterialID;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SectionIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShow;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                LODIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.ShowAllMaterialSections
struct UEngine_SkinnedMeshComponent_ShowAllMaterialSections_Params
{
	int                                                LODIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.SetVertexColorOverride_LinearColor
struct UEngine_SkinnedMeshComponent_SetVertexColorOverride_LinearColor_Params
{
	int                                                LODIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FLinearColor>                        VertexColors;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.SkinnedMeshComponent.SetSkinWeightProfile
struct UEngine_SkinnedMeshComponent_SetSkinWeightProfile_Params
{
	struct FName                                       InProfileName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.SetSkinWeightOverride
struct UEngine_SkinnedMeshComponent_SetSkinWeightOverride_Params
{
	int                                                LODIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_SkelMeshSkinWeightInfo>      SkinWeights;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.SkinnedMeshComponent.SetSkeletalMesh
struct UEngine_SkinnedMeshComponent_SetSkeletalMesh_Params
{
	class UEngine_SkeletalMesh*                        NewMesh;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bReinitPose;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.SetRenderStatic
struct UEngine_SkinnedMeshComponent_SetRenderStatic_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.SetPhysicsAsset
struct UEngine_SkinnedMeshComponent_SetPhysicsAsset_Params
{
	class UEngine_PhysicsAsset*                        NewPhysicsAsset;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForceReInit;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.SetMinLOD
struct UEngine_SkinnedMeshComponent_SetMinLOD_Params
{
	int                                                InNewMinLOD;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.SetMasterPoseComponent
struct UEngine_SkinnedMeshComponent_SetMasterPoseComponent_Params
{
	class UEngine_SkinnedMeshComponent*                NewMasterBoneComponent;                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bForceUpdate;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.SetForcedLOD
struct UEngine_SkinnedMeshComponent_SetForcedLOD_Params
{
	int                                                InNewForcedLOD;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.SetCastCapsuleIndirectShadow
struct UEngine_SkinnedMeshComponent_SetCastCapsuleIndirectShadow_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.SetCastCapsuleDirectShadow
struct UEngine_SkinnedMeshComponent_SetCastCapsuleDirectShadow_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.SetCapsuleIndirectShadowMinVisibility
struct UEngine_SkinnedMeshComponent_SetCapsuleIndirectShadowMinVisibility_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.IsUsingSkinWeightProfile
struct UEngine_SkinnedMeshComponent_IsUsingSkinWeightProfile_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.IsMaterialSectionShown
struct UEngine_SkinnedMeshComponent_IsMaterialSectionShown_Params
{
	int                                                MaterialID;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                LODIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.IsBoneHiddenByName
struct UEngine_SkinnedMeshComponent_IsBoneHiddenByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.HideBoneByName
struct UEngine_SkinnedMeshComponent_HideBoneByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EPhysBodyOp>            PhysBodyOption;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetTwistAndSwingAngleOfDeltaRotationFromRefPose
struct UEngine_SkinnedMeshComponent_GetTwistAndSwingAngleOfDeltaRotationFromRefPose_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OutTwistAngle;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutSwingAngle;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetSocketBoneName
struct UEngine_SkinnedMeshComponent_GetSocketBoneName_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetRefPosePosition
struct UEngine_SkinnedMeshComponent_GetRefPosePosition_Params
{
	int                                                BoneIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetParentBone
struct UEngine_SkinnedMeshComponent_GetParentBone_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetNumLODs
struct UEngine_SkinnedMeshComponent_GetNumLODs_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetNumBones
struct UEngine_SkinnedMeshComponent_GetNumBones_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetForcedLOD
struct UEngine_SkinnedMeshComponent_GetForcedLOD_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetDeltaTransformFromRefPose
struct UEngine_SkinnedMeshComponent_GetDeltaTransformFromRefPose_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetCurrentSkinWeightProfileName
struct UEngine_SkinnedMeshComponent_GetCurrentSkinWeightProfileName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetBoneName
struct UEngine_SkinnedMeshComponent_GetBoneName_Params
{
	int                                                BoneIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.GetBoneIndex
struct UEngine_SkinnedMeshComponent_GetBoneIndex_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.FindClosestBone_K2
struct UEngine_SkinnedMeshComponent_FindClosestBone_K2_Params
{
	struct FVector                                     TestLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoneLocation;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              IgnoreScale;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRequirePhysicsAsset;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.ClearVertexColorOverride
struct UEngine_SkinnedMeshComponent_ClearVertexColorOverride_Params
{
	int                                                LODIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.ClearSkinWeightProfile
struct UEngine_SkinnedMeshComponent_ClearSkinWeightProfile_Params
{
};

// Function Engine.SkinnedMeshComponent.ClearSkinWeightOverride
struct UEngine_SkinnedMeshComponent_ClearSkinWeightOverride_Params
{
	int                                                LODIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkinnedMeshComponent.BoneIsChildOf
struct UEngine_SkinnedMeshComponent_BoneIsChildOf_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParentBoneName;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.UnlinkAnimClassLayers
struct UEngine_SkeletalMeshComponent_UnlinkAnimClassLayers_Params
{
	class UClass*                                      InClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.UnbindClothFromMasterPoseComponent
struct UEngine_SkeletalMeshComponent_UnbindClothFromMasterPoseComponent_Params
{
	bool                                               bRestoreSimulationSpace;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.ToggleDisablePostProcessBlueprint
struct UEngine_SkeletalMeshComponent_ToggleDisablePostProcessBlueprint_Params
{
};

// Function Engine.SkeletalMeshComponent.TermBodiesBelow
struct UEngine_SkeletalMeshComponent_TermBodiesBelow_Params
{
	struct FName                                       ParentBoneName;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SuspendClothingSimulation
struct UEngine_SkeletalMeshComponent_SuspendClothingSimulation_Params
{
};

// Function Engine.SkeletalMeshComponent.Stop
struct UEngine_SkeletalMeshComponent_Stop_Params
{
};

// Function Engine.SkeletalMeshComponent.SnapshotPose
struct UEngine_SkeletalMeshComponent_SnapshotPose_Params
{
	struct FEngine_PoseSnapshot                        Snapshot;                                                 // (Parm, OutParm, ReferenceParm)
};

// Function Engine.SkeletalMeshComponent.SetUpdateAnimationInEditor
struct UEngine_SkeletalMeshComponent_SetUpdateAnimationInEditor_Params
{
	bool                                               NewUpdateState;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetTeleportRotationThreshold
struct UEngine_SkeletalMeshComponent_SetTeleportRotationThreshold_Params
{
	float                                              Threshold;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetTeleportDistanceThreshold
struct UEngine_SkeletalMeshComponent_SetTeleportDistanceThreshold_Params
{
	float                                              Threshold;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetPosition
struct UEngine_SkeletalMeshComponent_SetPosition_Params
{
	float                                              InPos;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFireNotifies;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetPlayRate
struct UEngine_SkeletalMeshComponent_SetPlayRate_Params
{
	float                                              Rate;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetPhysicsBlendWeight
struct UEngine_SkeletalMeshComponent_SetPhysicsBlendWeight_Params
{
	float                                              PhysicsBlendWeight;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetNotifyRigidBodyCollisionBelow
struct UEngine_SkeletalMeshComponent_SetNotifyRigidBodyCollisionBelow_Params
{
	bool                                               bNewNotifyRigidBodyCollision;                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeSelf;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetMorphTarget
struct UEngine_SkeletalMeshComponent_SetMorphTarget_Params
{
	struct FName                                       MorphTargetName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRemoveZeroWeight;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetEnablePhysicsBlending
struct UEngine_SkeletalMeshComponent_SetEnablePhysicsBlending_Params
{
	bool                                               bNewBlendPhysics;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetEnableGravityOnAllBodiesBelow
struct UEngine_SkeletalMeshComponent_SetEnableGravityOnAllBodiesBelow_Params
{
	bool                                               bEnableGravity;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeSelf;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetEnableBodyGravity
struct UEngine_SkeletalMeshComponent_SetEnableBodyGravity_Params
{
	bool                                               bEnableGravity;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetDisablePostProcessBlueprint
struct UEngine_SkeletalMeshComponent_SetDisablePostProcessBlueprint_Params
{
	bool                                               bInDisablePostProcess;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetDisableAnimCurves
struct UEngine_SkeletalMeshComponent_SetDisableAnimCurves_Params
{
	bool                                               bInDisableAnimCurves;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetConstraintProfileForAll
struct UEngine_SkeletalMeshComponent_SetConstraintProfileForAll_Params
{
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDefaultIfNotFound;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetConstraintProfile
struct UEngine_SkeletalMeshComponent_SetConstraintProfile_Params
{
	struct FName                                       JointName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDefaultIfNotFound;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetClothMaxDistanceScale
struct UEngine_SkeletalMeshComponent_SetClothMaxDistanceScale_Params
{
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetBodyNotifyRigidBodyCollision
struct UEngine_SkeletalMeshComponent_SetBodyNotifyRigidBodyCollision_Params
{
	bool                                               bNewNotifyRigidBodyCollision;                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAnimClass
struct UEngine_SkeletalMeshComponent_SetAnimClass_Params
{
	class UClass*                                      NewClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAnimationMode
struct UEngine_SkeletalMeshComponent_SetAnimationMode_Params
{
	TEnumAsByte<FEngine_Engine_EAnimationMode>         InAnimationMode;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAnimation
struct UEngine_SkeletalMeshComponent_SetAnimation_Params
{
	class UEngine_AnimationAsset*                      NewAnimToPlay;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAngularLimits
struct UEngine_SkeletalMeshComponent_SetAngularLimits_Params
{
	struct FName                                       InBoneName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Swing1LimitAngle;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TwistLimitAngle;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Swing2LimitAngle;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAllowedAnimCurvesEvaluation
struct UEngine_SkeletalMeshComponent_SetAllowedAnimCurvesEvaluation_Params
{
	TArray<struct FName>                               List;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bAllow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAllowAnimCurveEvaluation
struct UEngine_SkeletalMeshComponent_SetAllowAnimCurveEvaluation_Params
{
	bool                                               bInAllow;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularVelocityDrive
struct UEngine_SkeletalMeshComponent_SetAllMotorsAngularVelocityDrive_Params
{
	bool                                               bEnableSwingDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableTwistDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipCustomPhysicsType;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularPositionDrive
struct UEngine_SkeletalMeshComponent_SetAllMotorsAngularPositionDrive_Params
{
	bool                                               bEnableSwingDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableTwistDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipCustomPhysicsType;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularDriveParams
struct UEngine_SkeletalMeshComponent_SetAllMotorsAngularDriveParams_Params
{
	float                                              InSpring;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InDamping;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InForceLimit;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipCustomPhysicsType;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAllBodiesSimulatePhysics
struct UEngine_SkeletalMeshComponent_SetAllBodiesSimulatePhysics_Params
{
	bool                                               bNewSimulate;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAllBodiesPhysicsBlendWeight
struct UEngine_SkeletalMeshComponent_SetAllBodiesPhysicsBlendWeight_Params
{
	float                                              PhysicsBlendWeight;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipCustomPhysicsType;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAllBodiesBelowSimulatePhysics
struct UEngine_SkeletalMeshComponent_SetAllBodiesBelowSimulatePhysics_Params
{
	struct FName                                       InBoneName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bNewSimulate;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeSelf;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.SetAllBodiesBelowPhysicsBlendWeight
struct UEngine_SkeletalMeshComponent_SetAllBodiesBelowPhysicsBlendWeight_Params
{
	struct FName                                       InBoneName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              PhysicsBlendWeight;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipCustomPhysicsType;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeSelf;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.ResumeClothingSimulation
struct UEngine_SkeletalMeshComponent_ResumeClothingSimulation_Params
{
};

// Function Engine.SkeletalMeshComponent.ResetClothTeleportMode
struct UEngine_SkeletalMeshComponent_ResetClothTeleportMode_Params
{
};

// Function Engine.SkeletalMeshComponent.ResetAnimInstanceDynamics
struct UEngine_SkeletalMeshComponent_ResetAnimInstanceDynamics_Params
{
	FEngine_Engine_ETeleportType                       InTeleportType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.ResetAllowedAnimCurveEvaluation
struct UEngine_SkeletalMeshComponent_ResetAllowedAnimCurveEvaluation_Params
{
};

// Function Engine.SkeletalMeshComponent.ResetAllBodiesSimulatePhysics
struct UEngine_SkeletalMeshComponent_ResetAllBodiesSimulatePhysics_Params
{
};

// Function Engine.SkeletalMeshComponent.PlayAnimation
struct UEngine_SkeletalMeshComponent_PlayAnimation_Params
{
	class UEngine_AnimationAsset*                      NewAnimToPlay;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLooping;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.Play
struct UEngine_SkeletalMeshComponent_Play_Params
{
	bool                                               bLooping;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.OverrideAnimationData
struct UEngine_SkeletalMeshComponent_OverrideAnimationData_Params
{
	class UEngine_AnimationAsset*                      InAnimToPlay;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLooping;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsPlaying;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Position;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PlayRate;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.LinkAnimGraphByTag
struct UEngine_SkeletalMeshComponent_LinkAnimGraphByTag_Params
{
	struct FName                                       InTag;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.LinkAnimClassLayers
struct UEngine_SkeletalMeshComponent_LinkAnimClassLayers_Params
{
	class UClass*                                      InClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.K2_GetClosestPointOnPhysicsAsset
struct UEngine_SkeletalMeshComponent_K2_GetClosestPointOnPhysicsAsset_Params
{
	struct FVector                                     WorldPosition;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ClosestWorldPosition;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Normal;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.IsPlaying
struct UEngine_SkeletalMeshComponent_IsPlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.IsClothingSimulationSuspended
struct UEngine_SkeletalMeshComponent_IsClothingSimulationSuspended_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.IsBodyGravityEnabled
struct UEngine_SkeletalMeshComponent_IsBodyGravityEnabled_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.HasValidAnimationInstance
struct UEngine_SkeletalMeshComponent_HasValidAnimationInstance_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetTeleportRotationThreshold
struct UEngine_SkeletalMeshComponent_GetTeleportRotationThreshold_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetTeleportDistanceThreshold
struct UEngine_SkeletalMeshComponent_GetTeleportDistanceThreshold_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetSkeletalCenterOfMass
struct UEngine_SkeletalMeshComponent_GetSkeletalCenterOfMass_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetPostProcessInstance
struct UEngine_SkeletalMeshComponent_GetPostProcessInstance_Params
{
	class UEngine_AnimInstance*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetPosition
struct UEngine_SkeletalMeshComponent_GetPosition_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetPlayRate
struct UEngine_SkeletalMeshComponent_GetPlayRate_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetMorphTarget
struct UEngine_SkeletalMeshComponent_GetMorphTarget_Params
{
	struct FName                                       MorphTargetName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetLinkedAnimLayerInstanceByGroup
struct UEngine_SkeletalMeshComponent_GetLinkedAnimLayerInstanceByGroup_Params
{
	struct FName                                       InGroup;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimInstance*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetLinkedAnimLayerInstanceByClass
struct UEngine_SkeletalMeshComponent_GetLinkedAnimLayerInstanceByClass_Params
{
	class UClass*                                      InClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimInstance*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetLinkedAnimGraphInstancesByTag
struct UEngine_SkeletalMeshComponent_GetLinkedAnimGraphInstancesByTag_Params
{
	struct FName                                       InTag;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UEngine_AnimInstance*>                OutLinkedInstances;                                       // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.SkeletalMeshComponent.GetLinkedAnimGraphInstanceByTag
struct UEngine_SkeletalMeshComponent_GetLinkedAnimGraphInstanceByTag_Params
{
	struct FName                                       InTag;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimInstance*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetDisablePostProcessBlueprint
struct UEngine_SkeletalMeshComponent_GetDisablePostProcessBlueprint_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetDisableAnimCurves
struct UEngine_SkeletalMeshComponent_GetDisableAnimCurves_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetCurrentJointAngles
struct UEngine_SkeletalMeshComponent_GetCurrentJointAngles_Params
{
	struct FName                                       InBoneName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Swing1Angle;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              TwistAngle;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Swing2Angle;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetClothMaxDistanceScale
struct UEngine_SkeletalMeshComponent_GetClothMaxDistanceScale_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetClothingSimulationInteractor
struct UEngine_SkeletalMeshComponent_GetClothingSimulationInteractor_Params
{
	class UClothingSystemRuntimeInterface_ClothingSimulationInteractor* ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetBoneMass
struct UEngine_SkeletalMeshComponent_GetBoneMass_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bScaleMass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetAnimInstance
struct UEngine_SkeletalMeshComponent_GetAnimInstance_Params
{
	class UEngine_AnimInstance*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetAnimClass
struct UEngine_SkeletalMeshComponent_GetAnimClass_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetAnimationMode
struct UEngine_SkeletalMeshComponent_GetAnimationMode_Params
{
	TEnumAsByte<FEngine_Engine_EAnimationMode>         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.GetAllowedAnimCurveEvaluate
struct UEngine_SkeletalMeshComponent_GetAllowedAnimCurveEvaluate_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.ForceClothNextUpdateTeleportAndReset
struct UEngine_SkeletalMeshComponent_ForceClothNextUpdateTeleportAndReset_Params
{
};

// Function Engine.SkeletalMeshComponent.ForceClothNextUpdateTeleport
struct UEngine_SkeletalMeshComponent_ForceClothNextUpdateTeleport_Params
{
};

// Function Engine.SkeletalMeshComponent.FindConstraintBoneName
struct UEngine_SkeletalMeshComponent_FindConstraintBoneName_Params
{
	int                                                ConstraintIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.ClearMorphTargets
struct UEngine_SkeletalMeshComponent_ClearMorphTargets_Params
{
};

// Function Engine.SkeletalMeshComponent.BreakConstraint
struct UEngine_SkeletalMeshComponent_BreakConstraint_Params
{
	struct FVector                                     Impulse;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       InBoneName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.BindClothToMasterPoseComponent
struct UEngine_SkeletalMeshComponent_BindClothToMasterPoseComponent_Params
{
};

// Function Engine.SkeletalMeshComponent.AllowAnimCurveEvaluation
struct UEngine_SkeletalMeshComponent_AllowAnimCurveEvaluation_Params
{
	struct FName                                       NameOfCurve;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAllow;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.AddImpulseToAllBodiesBelow
struct UEngine_SkeletalMeshComponent_AddImpulseToAllBodiesBelow_Params
{
	struct FVector                                     Impulse;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bVelChange;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeSelf;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.AddForceToAllBodiesBelow
struct UEngine_SkeletalMeshComponent_AddForceToAllBodiesBelow_Params
{
	struct FVector                                     force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAccelChange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeSelf;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshComponent.AccumulateAllBodiesBelowPhysicsBlendWeight
struct UEngine_SkeletalMeshComponent_AccumulateAllBodiesBelowPhysicsBlendWeight_Params
{
	struct FName                                       InBoneName;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              AddPhysicsBlendWeight;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipCustomPhysicsType;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.UnlockAIResources
struct UEngine_AnimInstance_UnlockAIResources_Params
{
	bool                                               bUnlockMovement;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               UnlockAILogic;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.UnlinkAnimClassLayers
struct UEngine_AnimInstance_UnlinkAnimClassLayers_Params
{
	class UClass*                                      InClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.TryGetPawnOwner
struct UEngine_AnimInstance_TryGetPawnOwner_Params
{
	class AEngine_Pawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.StopSlotAnimation
struct UEngine_AnimInstance_StopSlotAnimation_Params
{
	float                                              InBlendOutTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SlotNodeName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.SnapshotPose
struct UEngine_AnimInstance_SnapshotPose_Params
{
	struct FEngine_PoseSnapshot                        Snapshot;                                                 // (Parm, OutParm, ReferenceParm)
};

// Function Engine.AnimInstance.SetRootMotionMode
struct UEngine_AnimInstance_SetRootMotionMode_Params
{
	TEnumAsByte<FEngine_Engine_ERootMotionMode>        Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.SetMorphTarget
struct UEngine_AnimInstance_SetMorphTarget_Params
{
	struct FName                                       MorphTargetName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.SavePoseSnapshot
struct UEngine_AnimInstance_SavePoseSnapshot_Params
{
	struct FName                                       SnapshotName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.ResetDynamics
struct UEngine_AnimInstance_ResetDynamics_Params
{
	FEngine_Engine_ETeleportType                       InTeleportType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.PlaySlotAnimationAsDynamicMontage
struct UEngine_AnimInstance_PlaySlotAnimationAsDynamicMontage_Params
{
	class UEngine_AnimSequenceBase*                    Asset;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SlotNodeName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendInTime;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InPlayRate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                LoopCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTriggerTime;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InTimeToStartMontageAt;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimMontage*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.PlaySlotAnimation
struct UEngine_AnimInstance_PlaySlotAnimation_Params
{
	class UEngine_AnimSequenceBase*                    Asset;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SlotNodeName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendInTime;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InPlayRate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                LoopCount;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_Stop
struct UEngine_AnimInstance_Montage_Stop_Params
{
	float                                              InBlendOutTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_SetPosition
struct UEngine_AnimInstance_Montage_SetPosition_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              NewPosition;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_SetPlayRate
struct UEngine_AnimInstance_Montage_SetPlayRate_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              NewPlayRate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_SetNextSection
struct UEngine_AnimInstance_Montage_SetNextSection_Params
{
	struct FName                                       SectionNameToChange;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       NextSection;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_Resume
struct UEngine_AnimInstance_Montage_Resume_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_Play
struct UEngine_AnimInstance_Montage_Play_Params
{
	class UEngine_AnimMontage*                         MontageToPlay;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InPlayRate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EMontagePlayReturnType              ReturnValueType;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InTimeToStartMontageAt;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bStopAllMontages;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_Pause
struct UEngine_AnimInstance_Montage_Pause_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_JumpToSectionsEnd
struct UEngine_AnimInstance_Montage_JumpToSectionsEnd_Params
{
	struct FName                                       SectionName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_JumpToSection
struct UEngine_AnimInstance_Montage_JumpToSection_Params
{
	struct FName                                       SectionName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_IsPlaying
struct UEngine_AnimInstance_Montage_IsPlaying_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_IsActive
struct UEngine_AnimInstance_Montage_IsActive_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_GetPosition
struct UEngine_AnimInstance_Montage_GetPosition_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_GetPlayRate
struct UEngine_AnimInstance_Montage_GetPlayRate_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_GetIsStopped
struct UEngine_AnimInstance_Montage_GetIsStopped_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_GetCurrentSection
struct UEngine_AnimInstance_Montage_GetCurrentSection_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.Montage_GetBlendTime
struct UEngine_AnimInstance_Montage_GetBlendTime_Params
{
	class UEngine_AnimMontage*                         Montage;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.LockAIResources
struct UEngine_AnimInstance_LockAIResources_Params
{
	bool                                               bLockMovement;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               LockAILogic;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.LinkAnimGraphByTag
struct UEngine_AnimInstance_LinkAnimGraphByTag_Params
{
	struct FName                                       InTag;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.LinkAnimClassLayers
struct UEngine_AnimInstance_LinkAnimClassLayers_Params
{
	class UClass*                                      InClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.IsSyncGroupBetweenMarkers
struct UEngine_AnimInstance_IsSyncGroupBetweenMarkers_Params
{
	struct FName                                       InSyncGroupName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PreviousMarker;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       NextMarker;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRespectMarkerOrder;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.IsPlayingSlotAnimation
struct UEngine_AnimInstance_IsPlayingSlotAnimation_Params
{
	class UEngine_AnimSequenceBase*                    Asset;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       SlotNodeName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.IsAnyMontagePlaying
struct UEngine_AnimInstance_IsAnyMontagePlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.HasMarkerBeenHitThisFrame
struct UEngine_AnimInstance_HasMarkerBeenHitThisFrame_Params
{
	struct FName                                       SyncGroup;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       MarkerName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetTimeToClosestMarker
struct UEngine_AnimInstance_GetTimeToClosestMarker_Params
{
	struct FName                                       SyncGroup;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       MarkerName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OutMarkerTime;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetSyncGroupPosition
struct UEngine_AnimInstance_GetSyncGroupPosition_Params
{
	struct FName                                       InSyncGroupName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_MarkerSyncAnimPosition              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.AnimInstance.GetRelevantAnimTimeRemainingFraction
struct UEngine_AnimInstance_GetRelevantAnimTimeRemainingFraction_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StateIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetRelevantAnimTimeRemaining
struct UEngine_AnimInstance_GetRelevantAnimTimeRemaining_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StateIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetRelevantAnimTimeFraction
struct UEngine_AnimInstance_GetRelevantAnimTimeFraction_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StateIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetRelevantAnimTime
struct UEngine_AnimInstance_GetRelevantAnimTime_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StateIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetRelevantAnimLength
struct UEngine_AnimInstance_GetRelevantAnimLength_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StateIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetOwningComponent
struct UEngine_AnimInstance_GetOwningComponent_Params
{
	class UEngine_SkeletalMeshComponent*               ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.AnimInstance.GetOwningActor
struct UEngine_AnimInstance_GetOwningActor_Params
{
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetLinkedAnimLayerInstanceByGroup
struct UEngine_AnimInstance_GetLinkedAnimLayerInstanceByGroup_Params
{
	struct FName                                       InGroup;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimInstance*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetLinkedAnimLayerInstanceByClass
struct UEngine_AnimInstance_GetLinkedAnimLayerInstanceByClass_Params
{
	class UClass*                                      InClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimInstance*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetLinkedAnimGraphInstancesByTag
struct UEngine_AnimInstance_GetLinkedAnimGraphInstancesByTag_Params
{
	struct FName                                       InTag;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class UEngine_AnimInstance*>                OutLinkedInstances;                                       // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.AnimInstance.GetLinkedAnimGraphInstanceByTag
struct UEngine_AnimInstance_GetLinkedAnimGraphInstanceByTag_Params
{
	struct FName                                       InTag;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AnimInstance*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceTransitionTimeElapsedFraction
struct UEngine_AnimInstance_GetInstanceTransitionTimeElapsedFraction_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TransitionIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceTransitionTimeElapsed
struct UEngine_AnimInstance_GetInstanceTransitionTimeElapsed_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TransitionIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceTransitionCrossfadeDuration
struct UEngine_AnimInstance_GetInstanceTransitionCrossfadeDuration_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TransitionIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceStateWeight
struct UEngine_AnimInstance_GetInstanceStateWeight_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StateIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceMachineWeight
struct UEngine_AnimInstance_GetInstanceMachineWeight_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceCurrentStateElapsedTime
struct UEngine_AnimInstance_GetInstanceCurrentStateElapsedTime_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEndFraction
struct UEngine_AnimInstance_GetInstanceAssetPlayerTimeFromEndFraction_Params
{
	int                                                AssetPlayerIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEnd
struct UEngine_AnimInstance_GetInstanceAssetPlayerTimeFromEnd_Params
{
	int                                                AssetPlayerIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFraction
struct UEngine_AnimInstance_GetInstanceAssetPlayerTimeFraction_Params
{
	int                                                AssetPlayerIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceAssetPlayerTime
struct UEngine_AnimInstance_GetInstanceAssetPlayerTime_Params
{
	int                                                AssetPlayerIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetInstanceAssetPlayerLength
struct UEngine_AnimInstance_GetInstanceAssetPlayerLength_Params
{
	int                                                AssetPlayerIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetCurveValue
struct UEngine_AnimInstance_GetCurveValue_Params
{
	struct FName                                       CurveName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetCurrentStateName
struct UEngine_AnimInstance_GetCurrentStateName_Params
{
	int                                                MachineIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetCurrentActiveMontage
struct UEngine_AnimInstance_GetCurrentActiveMontage_Params
{
	class UEngine_AnimMontage*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.GetAllCurveNames
struct UEngine_AnimInstance_GetAllCurveNames_Params
{
	TArray<struct FName>                               OutNames;                                                 // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.AnimInstance.GetActiveCurveNames
struct UEngine_AnimInstance_GetActiveCurveNames_Params
{
	FEngine_Engine_EAnimCurveType                      CurveType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               OutNames;                                                 // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.AnimInstance.ClearMorphTargets
struct UEngine_AnimInstance_ClearMorphTargets_Params
{
};

// Function Engine.AnimInstance.CalculateDirection
struct UEngine_AnimInstance_CalculateDirection_Params
{
	struct FVector                                     Velocity;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    BaseRotation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimInstance.BlueprintUpdateAnimation
struct UEngine_AnimInstance_BlueprintUpdateAnimation_Params
{
	float                                              DeltaTimeX;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimInstance.BlueprintPostEvaluateAnimation
struct UEngine_AnimInstance_BlueprintPostEvaluateAnimation_Params
{
};

// Function Engine.AnimInstance.BlueprintInitializeAnimation
struct UEngine_AnimInstance_BlueprintInitializeAnimation_Params
{
};

// Function Engine.AnimInstance.BlueprintBeginPlay
struct UEngine_AnimInstance_BlueprintBeginPlay_Params
{
};

// Function Engine.FXSystemComponent.SetVectorParameter
struct UEngine_FXSystemComponent_SetVectorParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.FXSystemComponent.SetUseAutoManageAttachment
struct UEngine_FXSystemComponent_SetUseAutoManageAttachment_Params
{
	bool                                               bAutoManage;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.FXSystemComponent.SetFloatParameter
struct UEngine_FXSystemComponent_SetFloatParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.FXSystemComponent.SetEmitterEnable
struct UEngine_FXSystemComponent_SetEmitterEnable_Params
{
	struct FName                                       EmitterName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bNewEnableState;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.FXSystemComponent.SetColorParameter
struct UEngine_FXSystemComponent_SetColorParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.FXSystemComponent.SetAutoAttachmentParameters
struct UEngine_FXSystemComponent_SetAutoAttachmentParameters_Params
{
	class UEngine_SceneComponent*                      Parent;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       SocketName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     LocationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     RotationRule;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAttachmentRule                     ScaleRule;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.FXSystemComponent.SetActorParameter
struct UEngine_FXSystemComponent_SetActorParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.FXSystemComponent.ReleaseToPool
struct UEngine_FXSystemComponent_ReleaseToPool_Params
{
};

// Function Engine.FXSystemComponent.GetFXSystemAsset
struct UEngine_FXSystemComponent_GetFXSystemAsset_Params
{
	class UEngine_FXSystemAsset*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimNotify.Received_Notify
struct UEngine_AnimNotify_Received_Notify_Params
{
	class UEngine_SkeletalMeshComponent*               MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UEngine_AnimSequenceBase*                    Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimNotify.GetNotifyName
struct UEngine_AnimNotify_GetNotifyName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.AnimNotifyState.Received_NotifyTick
struct UEngine_AnimNotifyState_Received_NotifyTick_Params
{
	class UEngine_SkeletalMeshComponent*               MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UEngine_AnimSequenceBase*                    Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FrameDeltaTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimNotifyState.Received_NotifyEnd
struct UEngine_AnimNotifyState_Received_NotifyEnd_Params
{
	class UEngine_SkeletalMeshComponent*               MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UEngine_AnimSequenceBase*                    Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimNotifyState.Received_NotifyBegin
struct UEngine_AnimNotifyState_Received_NotifyBegin_Params
{
	class UEngine_SkeletalMeshComponent*               MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UEngine_AnimSequenceBase*                    Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TotalDuration;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimNotifyState.GetNotifyName
struct UEngine_AnimNotifyState_GetNotifyName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.Pawn.SpawnDefaultController
struct AEngine_Pawn_SpawnDefaultController_Params
{
};

// Function Engine.Pawn.SetCanAffectNavigationGeneration
struct AEngine_Pawn_SetCanAffectNavigationGeneration_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForceUpdate;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Pawn.ReceiveUnpossessed
struct AEngine_Pawn_ReceiveUnpossessed_Params
{
	class AEngine_Controller*                          OldController;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Pawn.ReceivePossessed
struct AEngine_Pawn_ReceivePossessed_Params
{
	class AEngine_Controller*                          NewController;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Pawn.PawnMakeNoise
struct AEngine_Pawn_PawnMakeNoise_Params
{
	float                                              Loudness;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NoiseLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseNoiseMakerLocation;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               NoiseMaker;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Pawn.OnRep_PlayerState
struct AEngine_Pawn_OnRep_PlayerState_Params
{
};

// Function Engine.Pawn.OnRep_Controller
struct AEngine_Pawn_OnRep_Controller_Params
{
};

// Function Engine.Pawn.LaunchPawn
struct AEngine_Pawn_LaunchPawn_Params
{
	struct FVector                                     LaunchVelocity;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bXYOverride;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bZOverride;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Pawn.K2_GetMovementInputVector
struct AEngine_Pawn_K2_GetMovementInputVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.IsPlayerControlled
struct AEngine_Pawn_IsPlayerControlled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.IsPawnControlled
struct AEngine_Pawn_IsPawnControlled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.IsMoveInputIgnored
struct AEngine_Pawn_IsMoveInputIgnored_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.IsLocallyControlled
struct AEngine_Pawn_IsLocallyControlled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.IsControlled
struct AEngine_Pawn_IsControlled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.IsBotControlled
struct AEngine_Pawn_IsBotControlled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.GetPendingMovementInputVector
struct AEngine_Pawn_GetPendingMovementInputVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.GetNavAgentLocation
struct AEngine_Pawn_GetNavAgentLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.GetMovementComponent
struct AEngine_Pawn_GetMovementComponent_Params
{
	class UEngine_PawnMovementComponent*               ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.Pawn.GetMovementBaseActor
struct AEngine_Pawn_GetMovementBaseActor_Params
{
	class AEngine_Pawn*                                Pawn;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.GetLastMovementInputVector
struct AEngine_Pawn_GetLastMovementInputVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.GetControlRotation
struct AEngine_Pawn_GetControlRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.GetController
struct AEngine_Pawn_GetController_Params
{
	class AEngine_Controller*                          ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.GetBaseAimRotation
struct AEngine_Pawn_GetBaseAimRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.DetachFromControllerPendingDestroy
struct AEngine_Pawn_DetachFromControllerPendingDestroy_Params
{
};

// Function Engine.Pawn.ConsumeMovementInputVector
struct AEngine_Pawn_ConsumeMovementInputVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Pawn.AddMovementInput
struct AEngine_Pawn_AddMovementInput_Params
{
	struct FVector                                     WorldDirection;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScaleValue;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Pawn.AddControllerYawInput
struct AEngine_Pawn_AddControllerYawInput_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Pawn.AddControllerRollInput
struct AEngine_Pawn_AddControllerRollInput_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Pawn.AddControllerPitchInput
struct AEngine_Pawn_AddControllerPitchInput_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.UnCrouch
struct AEngine_Character_UnCrouch_Params
{
	bool                                               bClientSimulation;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.StopJumping
struct AEngine_Character_StopJumping_Params
{
};

// Function Engine.Character.StopAnimMontage
struct AEngine_Character_StopAnimMontage_Params
{
	class UEngine_AnimMontage*                         AnimMontage;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ServerMoveOld
struct AEngine_Character_ServerMoveOld_Params
{
	float                                              OldTimeStamp;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantize10                OldAccel;                                                 // (Parm)
	unsigned char                                      OldMoveFlags;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ServerMoveNoBase
struct AEngine_Character_ServerMoveNoBase_Params
{
	float                                              Timestamp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantize10                InAccel;                                                  // (Parm)
	struct FEngine_Vector_NetQuantize100               ClientLoc;                                                // (Parm)
	unsigned char                                      CompressedMoveFlags;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClientRoll;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           View;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClientMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ServerMoveDualNoBase
struct AEngine_Character_ServerMoveDualNoBase_Params
{
	float                                              TimeStamp0;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantize10                InAccel0;                                                 // (Parm)
	unsigned char                                      PendingFlags;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           View0;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Timestamp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantize10                InAccel;                                                  // (Parm)
	struct FEngine_Vector_NetQuantize100               ClientLoc;                                                // (Parm)
	unsigned char                                      NewFlags;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClientRoll;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           View;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClientMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ServerMoveDualHybridRootMotion
struct AEngine_Character_ServerMoveDualHybridRootMotion_Params
{
	float                                              TimeStamp0;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantize10                InAccel0;                                                 // (Parm)
	unsigned char                                      PendingFlags;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           View0;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Timestamp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantize10                InAccel;                                                  // (Parm)
	struct FEngine_Vector_NetQuantize100               ClientLoc;                                                // (Parm)
	unsigned char                                      NewFlags;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClientRoll;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           View;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  ClientMovementBase;                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       ClientBaseBoneName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClientMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ServerMoveDual
struct AEngine_Character_ServerMoveDual_Params
{
	float                                              TimeStamp0;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantize10                InAccel0;                                                 // (Parm)
	unsigned char                                      PendingFlags;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           View0;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Timestamp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantize10                InAccel;                                                  // (Parm)
	struct FEngine_Vector_NetQuantize100               ClientLoc;                                                // (Parm)
	unsigned char                                      NewFlags;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClientRoll;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           View;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  ClientMovementBase;                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       ClientBaseBoneName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClientMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ServerMove
struct AEngine_Character_ServerMove_Params
{
	float                                              Timestamp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantize10                InAccel;                                                  // (Parm)
	struct FEngine_Vector_NetQuantize100               ClientLoc;                                                // (Parm)
	unsigned char                                      CompressedMoveFlags;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClientRoll;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	uint32_t                                           View;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  ClientMovementBase;                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       ClientBaseBoneName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClientMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.RootMotionDebugClientPrintOnScreen
struct AEngine_Character_RootMotionDebugClientPrintOnScreen_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
};

// Function Engine.Character.PlayAnimMontage
struct AEngine_Character_PlayAnimMontage_Params
{
	class UEngine_AnimMontage*                         AnimMontage;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InPlayRate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       StartSectionName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.OnWalkingOffLedge
struct AEngine_Character_OnWalkingOffLedge_Params
{
	struct FVector                                     PreviousFloorImpactNormal;                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     PreviousFloorContactNormal;                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     PreviousLocation;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              TimeDelta;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.OnRep_RootMotion
struct AEngine_Character_OnRep_RootMotion_Params
{
};

// Function Engine.Character.OnRep_ReplicatedBasedMovement
struct AEngine_Character_OnRep_ReplicatedBasedMovement_Params
{
};

// Function Engine.Character.OnRep_ReplayLastTransformUpdateTimeStamp
struct AEngine_Character_OnRep_ReplayLastTransformUpdateTimeStamp_Params
{
};

// Function Engine.Character.OnRep_IsCrouched
struct AEngine_Character_OnRep_IsCrouched_Params
{
};

// Function Engine.Character.OnLaunched
struct AEngine_Character_OnLaunched_Params
{
	struct FVector                                     LaunchVelocity;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bXYOverride;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bZOverride;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.OnLanded
struct AEngine_Character_OnLanded_Params
{
	struct FEngine_HitResult                           Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.Character.OnJumped
struct AEngine_Character_OnJumped_Params
{
};

// Function Engine.Character.LaunchCharacter
struct AEngine_Character_LaunchCharacter_Params
{
	struct FVector                                     LaunchVelocity;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bXYOverride;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bZOverride;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.K2_UpdateCustomMovement
struct AEngine_Character_K2_UpdateCustomMovement_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.K2_OnStartCrouch
struct AEngine_Character_K2_OnStartCrouch_Params
{
	float                                              HalfHeightAdjust;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScaledHalfHeightAdjust;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.K2_OnMovementModeChanged
struct AEngine_Character_K2_OnMovementModeChanged_Params
{
	TEnumAsByte<FEngine_Engine_EMovementMode>          PrevMovementMode;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EMovementMode>          NewMovementMode;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PrevCustomMode;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NewCustomMode;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.K2_OnEndCrouch
struct AEngine_Character_K2_OnEndCrouch_Params
{
	float                                              HalfHeightAdjust;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScaledHalfHeightAdjust;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.Jump
struct AEngine_Character_Jump_Params
{
};

// Function Engine.Character.IsPlayingRootMotion
struct AEngine_Character_IsPlayingRootMotion_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.IsPlayingNetworkedRootMotionMontage
struct AEngine_Character_IsPlayingNetworkedRootMotionMontage_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.IsJumpProvidingForce
struct AEngine_Character_IsJumpProvidingForce_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.HasAnyRootMotion
struct AEngine_Character_HasAnyRootMotion_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.GetCurrentMontage
struct AEngine_Character_GetCurrentMontage_Params
{
	class UEngine_AnimMontage*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.GetBaseTranslationOffset
struct AEngine_Character_GetBaseTranslationOffset_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.GetBaseRotationOffsetRotator
struct AEngine_Character_GetBaseRotationOffsetRotator_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.GetAnimRootMotionTranslationScale
struct AEngine_Character_GetAnimRootMotionTranslationScale_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.Crouch
struct AEngine_Character_Crouch_Params
{
	bool                                               bClientSimulation;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ClientVeryShortAdjustPosition
struct AEngine_Character_ClientVeryShortAdjustPosition_Params
{
	float                                              Timestamp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewLoc;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  NewBase;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       NewBaseBoneName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bHasBase;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bBaseRelativePosition;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ServerMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ClientCheatWalk
struct AEngine_Character_ClientCheatWalk_Params
{
};

// Function Engine.Character.ClientCheatGhost
struct AEngine_Character_ClientCheatGhost_Params
{
};

// Function Engine.Character.ClientCheatFly
struct AEngine_Character_ClientCheatFly_Params
{
};

// Function Engine.Character.ClientAdjustRootMotionSourcePosition
struct AEngine_Character_ClientAdjustRootMotionSourcePosition_Params
{
	float                                              Timestamp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_RootMotionSourceGroup               ServerRootMotion;                                         // (Parm)
	bool                                               bHasAnimRootMotion;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ServerMontageTrackPosition;                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ServerLoc;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantizeNormal            ServerRotation;                                           // (Parm)
	float                                              ServerVelZ;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  ServerBase;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       ServerBoneName;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bHasBase;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bBaseRelativePosition;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ServerMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ClientAdjustRootMotionPosition
struct AEngine_Character_ClientAdjustRootMotionPosition_Params
{
	float                                              Timestamp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ServerMontageTrackPosition;                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ServerLoc;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_Vector_NetQuantizeNormal            ServerRotation;                                           // (Parm)
	float                                              ServerVelZ;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  ServerBase;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       ServerBoneName;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bHasBase;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bBaseRelativePosition;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ServerMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ClientAdjustPosition
struct AEngine_Character_ClientAdjustPosition_Params
{
	float                                              Timestamp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewLoc;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewVel;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  NewBase;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       NewBaseBoneName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bHasBase;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bBaseRelativePosition;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ServerMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.ClientAckGoodMove
struct AEngine_Character_ClientAckGoodMove_Params
{
	float                                              Timestamp;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Character.CanJumpInternal
struct AEngine_Character_CanJumpInternal_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.CanJump
struct AEngine_Character_CanJump_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.CanCrouch
struct AEngine_Character_CanCrouch_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Character.CacheInitialMeshOffset
struct AEngine_Character_CacheInitialMeshOffset_Params
{
	struct FVector                                     MeshRelativeLocation;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    MeshRelativeRotation;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.UpdateSpline
struct UEngine_SplineComponent_UpdateSpline_Params
{
};

// Function Engine.SplineComponent.SetWorldLocationAtSplinePoint
struct UEngine_SplineComponent_SetWorldLocationAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InLocation;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.SplineComponent.SetUpVectorAtSplinePoint
struct UEngine_SplineComponent_SetUpVectorAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InUpVector;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.SetUnselectedSplineSegmentColor
struct UEngine_SplineComponent_SetUnselectedSplineSegmentColor_Params
{
	struct FLinearColor                                SegmentColor;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.SplineComponent.SetTangentsAtSplinePoint
struct UEngine_SplineComponent_SetTangentsAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InArriveTangent;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     InLeaveTangent;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.SetTangentAtSplinePoint
struct UEngine_SplineComponent_SetTangentAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InTangent;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.SetSplineWorldPoints
struct UEngine_SplineComponent_SetSplineWorldPoints_Params
{
	TArray<struct FVector>                             Points;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.SplineComponent.SetSplinePointType
struct UEngine_SplineComponent_SetSplinePointType_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplinePointType>       Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.SetSplinePoints
struct UEngine_SplineComponent_SetSplinePoints_Params
{
	TArray<struct FVector>                             Points;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.SetSplineLocalPoints
struct UEngine_SplineComponent_SetSplineLocalPoints_Params
{
	TArray<struct FVector>                             Points;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.SplineComponent.SetSelectedSplineSegmentColor
struct UEngine_SplineComponent_SetSelectedSplineSegmentColor_Params
{
	struct FLinearColor                                SegmentColor;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.SplineComponent.SetLocationAtSplinePoint
struct UEngine_SplineComponent_SetLocationAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InLocation;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.SetDrawDebug
struct UEngine_SplineComponent_SetDrawDebug_Params
{
	bool                                               bShow;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.SetDefaultUpVector
struct UEngine_SplineComponent_SetDefaultUpVector_Params
{
	struct FVector                                     UpVector;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.SetClosedLoopAtPosition
struct UEngine_SplineComponent_SetClosedLoopAtPosition_Params
{
	bool                                               bInClosedLoop;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Key;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.SetClosedLoop
struct UEngine_SplineComponent_SetClosedLoop_Params
{
	bool                                               bInClosedLoop;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.RemoveSplinePoint
struct UEngine_SplineComponent_RemoveSplinePoint_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.IsClosedLoop
struct UEngine_SplineComponent_IsClosedLoop_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetWorldTangentAtDistanceAlongSpline
struct UEngine_SplineComponent_GetWorldTangentAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetWorldRotationAtTime
struct UEngine_SplineComponent_GetWorldRotationAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetWorldRotationAtDistanceAlongSpline
struct UEngine_SplineComponent_GetWorldRotationAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetWorldLocationAtTime
struct UEngine_SplineComponent_GetWorldLocationAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetWorldLocationAtSplinePoint
struct UEngine_SplineComponent_GetWorldLocationAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetWorldLocationAtDistanceAlongSpline
struct UEngine_SplineComponent_GetWorldLocationAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetWorldDirectionAtTime
struct UEngine_SplineComponent_GetWorldDirectionAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetWorldDirectionAtDistanceAlongSpline
struct UEngine_SplineComponent_GetWorldDirectionAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetVectorPropertyAtSplinePoint
struct UEngine_SplineComponent_GetVectorPropertyAtSplinePoint_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetVectorPropertyAtSplineInputKey
struct UEngine_SplineComponent_GetVectorPropertyAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetUpVectorAtTime
struct UEngine_SplineComponent_GetUpVectorAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetUpVectorAtSplinePoint
struct UEngine_SplineComponent_GetUpVectorAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetUpVectorAtSplineInputKey
struct UEngine_SplineComponent_GetUpVectorAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetUpVectorAtDistanceAlongSpline
struct UEngine_SplineComponent_GetUpVectorAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetTransformAtTime
struct UEngine_SplineComponent_GetTransformAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseScale;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetTransformAtSplinePoint
struct UEngine_SplineComponent_GetTransformAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseScale;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetTransformAtSplineInputKey
struct UEngine_SplineComponent_GetTransformAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseScale;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetTransformAtDistanceAlongSpline
struct UEngine_SplineComponent_GetTransformAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseScale;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetTangentAtTime
struct UEngine_SplineComponent_GetTangentAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetTangentAtSplinePoint
struct UEngine_SplineComponent_GetTangentAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetTangentAtSplineInputKey
struct UEngine_SplineComponent_GetTangentAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetTangentAtDistanceAlongSpline
struct UEngine_SplineComponent_GetTangentAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetSplinePointType
struct UEngine_SplineComponent_GetSplinePointType_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplinePointType>       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetSplineLength
struct UEngine_SplineComponent_GetSplineLength_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetScaleAtTime
struct UEngine_SplineComponent_GetScaleAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetScaleAtSplinePoint
struct UEngine_SplineComponent_GetScaleAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetScaleAtSplineInputKey
struct UEngine_SplineComponent_GetScaleAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetScaleAtDistanceAlongSpline
struct UEngine_SplineComponent_GetScaleAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRotationAtTime
struct UEngine_SplineComponent_GetRotationAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRotationAtSplinePoint
struct UEngine_SplineComponent_GetRotationAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRotationAtSplineInputKey
struct UEngine_SplineComponent_GetRotationAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRotationAtDistanceAlongSpline
struct UEngine_SplineComponent_GetRotationAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRollAtTime
struct UEngine_SplineComponent_GetRollAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRollAtSplinePoint
struct UEngine_SplineComponent_GetRollAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRollAtSplineInputKey
struct UEngine_SplineComponent_GetRollAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRollAtDistanceAlongSpline
struct UEngine_SplineComponent_GetRollAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRightVectorAtTime
struct UEngine_SplineComponent_GetRightVectorAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRightVectorAtSplinePoint
struct UEngine_SplineComponent_GetRightVectorAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRightVectorAtSplineInputKey
struct UEngine_SplineComponent_GetRightVectorAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetRightVectorAtDistanceAlongSpline
struct UEngine_SplineComponent_GetRightVectorAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetNumberOfSplineSegments
struct UEngine_SplineComponent_GetNumberOfSplineSegments_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetNumberOfSplinePoints
struct UEngine_SplineComponent_GetNumberOfSplinePoints_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetLocationAtTime
struct UEngine_SplineComponent_GetLocationAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetLocationAtSplinePoint
struct UEngine_SplineComponent_GetLocationAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetLocationAtSplineInputKey
struct UEngine_SplineComponent_GetLocationAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetLocationAtDistanceAlongSpline
struct UEngine_SplineComponent_GetLocationAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetLocationAndTangentAtSplinePoint
struct UEngine_SplineComponent_GetLocationAndTangentAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Tangent;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.GetLocalLocationAndTangentAtSplinePoint
struct UEngine_SplineComponent_GetLocalLocationAndTangentAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocalLocation;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocalTangent;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.GetLeaveTangentAtSplinePoint
struct UEngine_SplineComponent_GetLeaveTangentAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetInputKeyAtDistanceAlongSpline
struct UEngine_SplineComponent_GetInputKeyAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetFloatPropertyAtSplinePoint
struct UEngine_SplineComponent_GetFloatPropertyAtSplinePoint_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetFloatPropertyAtSplineInputKey
struct UEngine_SplineComponent_GetFloatPropertyAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetDistanceAlongSplineAtSplinePoint
struct UEngine_SplineComponent_GetDistanceAlongSplineAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetDirectionAtTime
struct UEngine_SplineComponent_GetDirectionAtTime_Params
{
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseConstantVelocity;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetDirectionAtSplinePoint
struct UEngine_SplineComponent_GetDirectionAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetDirectionAtSplineInputKey
struct UEngine_SplineComponent_GetDirectionAtSplineInputKey_Params
{
	float                                              InKey;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetDirectionAtDistanceAlongSpline
struct UEngine_SplineComponent_GetDirectionAtDistanceAlongSpline_Params
{
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetDefaultUpVector
struct UEngine_SplineComponent_GetDefaultUpVector_Params
{
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.GetArriveTangentAtSplinePoint
struct UEngine_SplineComponent_GetArriveTangentAtSplinePoint_Params
{
	int                                                PointIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.FindUpVectorClosestToWorldLocation
struct UEngine_SplineComponent_FindUpVectorClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.FindTransformClosestToWorldLocation
struct UEngine_SplineComponent_FindTransformClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseScale;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.FindTangentClosestToWorldLocation
struct UEngine_SplineComponent_FindTangentClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.FindScaleClosestToWorldLocation
struct UEngine_SplineComponent_FindScaleClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.FindRotationClosestToWorldLocation
struct UEngine_SplineComponent_FindRotationClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.FindRollClosestToWorldLocation
struct UEngine_SplineComponent_FindRollClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.FindRightVectorClosestToWorldLocation
struct UEngine_SplineComponent_FindRightVectorClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.FindLocationClosestToWorldLocation
struct UEngine_SplineComponent_FindLocationClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.FindInputKeyClosestToWorldLocation
struct UEngine_SplineComponent_FindInputKeyClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.FindDirectionClosestToWorldLocation
struct UEngine_SplineComponent_FindDirectionClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineComponent.ClearSplinePoints
struct UEngine_SplineComponent_ClearSplinePoints_Params
{
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.AddSplineWorldPoint
struct UEngine_SplineComponent_AddSplineWorldPoint_Params
{
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.SplineComponent.AddSplinePointAtIndex
struct UEngine_SplineComponent_AddSplinePointAtIndex_Params
{
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.AddSplinePoint
struct UEngine_SplineComponent_AddSplinePoint_Params
{
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESplineCoordinateSpace> CoordinateSpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.AddSplineLocalPoint
struct UEngine_SplineComponent_AddSplineLocalPoint_Params
{
	struct FVector                                     Position;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.SplineComponent.AddPoints
struct UEngine_SplineComponent_AddPoints_Params
{
	TArray<struct FEngine_SplinePoint>                 Points;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineComponent.AddPoint
struct UEngine_SplineComponent_AddPoint_Params
{
	struct FEngine_SplinePoint                         Point;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bUpdateSpline;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.StopDelayed
struct UEngine_AudioComponent_StopDelayed_Params
{
	float                                              DelayTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.Stop
struct UEngine_AudioComponent_Stop_Params
{
};

// Function Engine.AudioComponent.SetWaveParameter
struct UEngine_AudioComponent_SetWaveParameter_Params
{
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundWave*                           InWave;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetVolumeMultiplier
struct UEngine_AudioComponent_SetVolumeMultiplier_Params
{
	float                                              NewVolumeMultiplier;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetUISound
struct UEngine_AudioComponent_SetUISound_Params
{
	bool                                               bInUISound;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetSubmixSend
struct UEngine_AudioComponent_SetSubmixSend_Params
{
	class UEngine_SoundSubmix*                         Submix;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SendLevel;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetSourceBusSendPreEffect
struct UEngine_AudioComponent_SetSourceBusSendPreEffect_Params
{
	class UEngine_SoundSourceBus*                      SoundSourceBus;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SourceBusSendLevel;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetSourceBusSendPostEffect
struct UEngine_AudioComponent_SetSourceBusSendPostEffect_Params
{
	class UEngine_SoundSourceBus*                      SoundSourceBus;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SourceBusSendLevel;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetSound
struct UEngine_AudioComponent_SetSound_Params
{
	class UEngine_SoundBase*                           NewSound;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetPitchMultiplier
struct UEngine_AudioComponent_SetPitchMultiplier_Params
{
	float                                              NewPitchMultiplier;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetPaused
struct UEngine_AudioComponent_SetPaused_Params
{
	bool                                               bPause;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetLowPassFilterFrequency
struct UEngine_AudioComponent_SetLowPassFilterFrequency_Params
{
	float                                              InLowPassFilterFrequency;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetLowPassFilterEnabled
struct UEngine_AudioComponent_SetLowPassFilterEnabled_Params
{
	bool                                               InLowPassFilterEnabled;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetIntParameter
struct UEngine_AudioComponent_SetIntParameter_Params
{
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                inInt;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetFloatParameter
struct UEngine_AudioComponent_SetFloatParameter_Params
{
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InFloat;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.SetBoolParameter
struct UEngine_AudioComponent_SetBoolParameter_Params
{
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InBool;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.Play
struct UEngine_AudioComponent_Play_Params
{
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.IsPlaying
struct UEngine_AudioComponent_IsPlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AudioComponent.HasCookedFFTData
struct UEngine_AudioComponent_HasCookedFFTData_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AudioComponent.HasCookedAmplitudeEnvelopeData
struct UEngine_AudioComponent_HasCookedAmplitudeEnvelopeData_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AudioComponent.GetPlayState
struct UEngine_AudioComponent_GetPlayState_Params
{
	FEngine_Engine_EAudioComponentPlayState            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AudioComponent.GetCookedFFTDataForAllPlayingSounds
struct UEngine_AudioComponent_GetCookedFFTDataForAllPlayingSounds_Params
{
	TArray<struct FEngine_SoundWaveSpectralDataPerSound> OutSoundWaveSpectralData;                                 // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AudioComponent.GetCookedFFTData
struct UEngine_AudioComponent_GetCookedFFTData_Params
{
	TArray<float>                                      FrequenciesToGet;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FEngine_SoundWaveSpectralData>       OutSoundWaveSpectralData;                                 // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AudioComponent.GetCookedEnvelopeDataForAllPlayingSounds
struct UEngine_AudioComponent_GetCookedEnvelopeDataForAllPlayingSounds_Params
{
	TArray<struct FEngine_SoundWaveEnvelopeDataPerSound> OutEnvelopeData;                                          // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AudioComponent.GetCookedEnvelopeData
struct UEngine_AudioComponent_GetCookedEnvelopeData_Params
{
	float                                              OutEnvelopeData;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AudioComponent.FadeOut
struct UEngine_AudioComponent_FadeOut_Params
{
	float                                              FadeOutDuration;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeVolumeLevel;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAudioFaderCurve                    FadeCurve;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.FadeIn
struct UEngine_AudioComponent_FadeIn_Params
{
	float                                              FadeInDuration;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeVolumeLevel;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAudioFaderCurve                    FadeCurve;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.BP_GetAttenuationSettingsToApply
struct UEngine_AudioComponent_BP_GetAttenuationSettingsToApply_Params
{
	struct FEngine_SoundAttenuationSettings            OutAttenuationSettings;                                   // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AudioComponent.AdjustVolume
struct UEngine_AudioComponent_AdjustVolume_Params
{
	float                                              AdjustVolumeDuration;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AdjustVolumeLevel;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAudioFaderCurve                    FadeCurve;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioComponent.AdjustAttenuation
struct UEngine_AudioComponent_AdjustAttenuation_Params
{
	struct FEngine_SoundAttenuationSettings            InAttenuationSettings;                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.OnlineBlueprintCallProxyBase.Activate
struct UEngine_OnlineBlueprintCallProxyBase_Activate_Params
{
};

// Function Engine.BlueprintAsyncActionBase.Activate
struct UEngine_BlueprintAsyncActionBase_Activate_Params
{
};

// Function Engine.MovementComponent.StopMovementImmediately
struct UEngine_MovementComponent_StopMovementImmediately_Params
{
};

// Function Engine.MovementComponent.SnapUpdatedComponentToPlane
struct UEngine_MovementComponent_SnapUpdatedComponentToPlane_Params
{
};

// Function Engine.MovementComponent.SetUpdatedComponent
struct UEngine_MovementComponent_SetUpdatedComponent_Params
{
	class UEngine_SceneComponent*                      NewUpdatedComponent;                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.MovementComponent.SetPlaneConstraintOrigin
struct UEngine_MovementComponent_SetPlaneConstraintOrigin_Params
{
	struct FVector                                     PlaneOrigin;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MovementComponent.SetPlaneConstraintNormal
struct UEngine_MovementComponent_SetPlaneConstraintNormal_Params
{
	struct FVector                                     PlaneNormal;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MovementComponent.SetPlaneConstraintFromVectors
struct UEngine_MovementComponent_SetPlaneConstraintFromVectors_Params
{
	struct FVector                                     Forward;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Up;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MovementComponent.SetPlaneConstraintEnabled
struct UEngine_MovementComponent_SetPlaneConstraintEnabled_Params
{
	bool                                               bEnabled;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MovementComponent.SetPlaneConstraintAxisSetting
struct UEngine_MovementComponent_SetPlaneConstraintAxisSetting_Params
{
	FEngine_Engine_EPlaneConstraintAxisSetting         NewAxisSetting;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MovementComponent.PhysicsVolumeChanged
struct UEngine_MovementComponent_PhysicsVolumeChanged_Params
{
	class AEngine_PhysicsVolume*                       NewVolume;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MovementComponent.K2_MoveUpdatedComponent
struct UEngine_MovementComponent_K2_MoveUpdatedComponent_Params
{
	struct FVector                                     Delta;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bSweep;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MovementComponent.K2_GetModifiedMaxSpeed
struct UEngine_MovementComponent_K2_GetModifiedMaxSpeed_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MovementComponent.K2_GetMaxSpeedModifier
struct UEngine_MovementComponent_K2_GetMaxSpeedModifier_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MovementComponent.IsExceedingMaxSpeed
struct UEngine_MovementComponent_IsExceedingMaxSpeed_Params
{
	float                                              MaxSpeed;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MovementComponent.GetPlaneConstraintOrigin
struct UEngine_MovementComponent_GetPlaneConstraintOrigin_Params
{
	struct FVector                                     ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.MovementComponent.GetPlaneConstraintNormal
struct UEngine_MovementComponent_GetPlaneConstraintNormal_Params
{
	struct FVector                                     ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.MovementComponent.GetPlaneConstraintAxisSetting
struct UEngine_MovementComponent_GetPlaneConstraintAxisSetting_Params
{
	FEngine_Engine_EPlaneConstraintAxisSetting         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MovementComponent.GetPhysicsVolume
struct UEngine_MovementComponent_GetPhysicsVolume_Params
{
	class AEngine_PhysicsVolume*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MovementComponent.GetMaxSpeed
struct UEngine_MovementComponent_GetMaxSpeed_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MovementComponent.GetGravityZ
struct UEngine_MovementComponent_GetGravityZ_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MovementComponent.ConstrainNormalToPlane
struct UEngine_MovementComponent_ConstrainNormalToPlane_Params
{
	struct FVector                                     Normal;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MovementComponent.ConstrainLocationToPlane
struct UEngine_MovementComponent_ConstrainLocationToPlane_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MovementComponent.ConstrainDirectionToPlane
struct UEngine_MovementComponent_ConstrainDirectionToPlane_Params
{
	struct FVector                                     Direction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.NavMovementComponent.StopMovementKeepPathing
struct UEngine_NavMovementComponent_StopMovementKeepPathing_Params
{
};

// Function Engine.NavMovementComponent.StopActiveMovement
struct UEngine_NavMovementComponent_StopActiveMovement_Params
{
};

// Function Engine.NavMovementComponent.IsSwimming
struct UEngine_NavMovementComponent_IsSwimming_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.NavMovementComponent.IsMovingOnGround
struct UEngine_NavMovementComponent_IsMovingOnGround_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.NavMovementComponent.IsFlying
struct UEngine_NavMovementComponent_IsFlying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.NavMovementComponent.IsFalling
struct UEngine_NavMovementComponent_IsFalling_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.NavMovementComponent.IsCrouching
struct UEngine_NavMovementComponent_IsCrouching_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PawnMovementComponent.K2_GetInputVector
struct UEngine_PawnMovementComponent_K2_GetInputVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PawnMovementComponent.IsMoveInputIgnored
struct UEngine_PawnMovementComponent_IsMoveInputIgnored_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PawnMovementComponent.GetPendingInputVector
struct UEngine_PawnMovementComponent_GetPendingInputVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PawnMovementComponent.GetPawnOwner
struct UEngine_PawnMovementComponent_GetPawnOwner_Params
{
	class AEngine_Pawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PawnMovementComponent.GetLastInputVector
struct UEngine_PawnMovementComponent_GetLastInputVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PawnMovementComponent.ConsumeInputVector
struct UEngine_PawnMovementComponent_ConsumeInputVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PawnMovementComponent.AddInputVector
struct UEngine_PawnMovementComponent_AddInputVector_Params
{
	struct FVector                                     WorldVector;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForce;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.SetWalkableFloorZ
struct UEngine_CharacterMovementComponent_SetWalkableFloorZ_Params
{
	float                                              InWalkableFloorZ;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.SetWalkableFloorAngle
struct UEngine_CharacterMovementComponent_SetWalkableFloorAngle_Params
{
	float                                              InWalkableFloorAngle;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.SetMovementMode
struct UEngine_CharacterMovementComponent_SetMovementMode_Params
{
	TEnumAsByte<FEngine_Engine_EMovementMode>          NewMovementMode;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NewCustomMode;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.SetGroupsToIgnoreMask
struct UEngine_CharacterMovementComponent_SetGroupsToIgnoreMask_Params
{
	struct FEngine_NavAvoidanceMask                    GroupMask;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.SetGroupsToIgnore
struct UEngine_CharacterMovementComponent_SetGroupsToIgnore_Params
{
	int                                                GroupFlags;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.SetGroupsToAvoidMask
struct UEngine_CharacterMovementComponent_SetGroupsToAvoidMask_Params
{
	struct FEngine_NavAvoidanceMask                    GroupMask;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.SetGroupsToAvoid
struct UEngine_CharacterMovementComponent_SetGroupsToAvoid_Params
{
	int                                                GroupFlags;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.SetAvoidanceGroupMask
struct UEngine_CharacterMovementComponent_SetAvoidanceGroupMask_Params
{
	struct FEngine_NavAvoidanceMask                    GroupMask;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.SetAvoidanceGroup
struct UEngine_CharacterMovementComponent_SetAvoidanceGroup_Params
{
	int                                                GroupFlags;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.SetAvoidanceEnabled
struct UEngine_CharacterMovementComponent_SetAvoidanceEnabled_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.K2_GetWalkableFloorZ
struct UEngine_CharacterMovementComponent_K2_GetWalkableFloorZ_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.K2_GetWalkableFloorAngle
struct UEngine_CharacterMovementComponent_K2_GetWalkableFloorAngle_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.K2_GetModifiedMaxAcceleration
struct UEngine_CharacterMovementComponent_K2_GetModifiedMaxAcceleration_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.K2_FindFloor
struct UEngine_CharacterMovementComponent_K2_FindFloor_Params
{
	struct FVector                                     CapsuleLocation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_FindFloorResult                     FloorResult;                                              // (Parm, OutParm)
};

// Function Engine.CharacterMovementComponent.K2_ComputeFloorDist
struct UEngine_CharacterMovementComponent_K2_ComputeFloorDist_Params
{
	struct FVector                                     CapsuleLocation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LineDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SweepDistance;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SweepRadius;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_FindFloorResult                     FloorResult;                                              // (Parm, OutParm)
};

// Function Engine.CharacterMovementComponent.IsWalking
struct UEngine_CharacterMovementComponent_IsWalking_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.IsWalkable
struct UEngine_CharacterMovementComponent_IsWalkable_Params
{
	struct FEngine_HitResult                           Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetValidPerchRadius
struct UEngine_CharacterMovementComponent_GetValidPerchRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetPerchRadiusThreshold
struct UEngine_CharacterMovementComponent_GetPerchRadiusThreshold_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetMovementBase
struct UEngine_CharacterMovementComponent_GetMovementBase_Params
{
	class UEngine_PrimitiveComponent*                  ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetMinAnalogSpeed
struct UEngine_CharacterMovementComponent_GetMinAnalogSpeed_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetMaxJumpHeightWithJumpTime
struct UEngine_CharacterMovementComponent_GetMaxJumpHeightWithJumpTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetMaxJumpHeight
struct UEngine_CharacterMovementComponent_GetMaxJumpHeight_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetMaxBrakingDeceleration
struct UEngine_CharacterMovementComponent_GetMaxBrakingDeceleration_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetMaxAcceleration
struct UEngine_CharacterMovementComponent_GetMaxAcceleration_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetLastUpdateVelocity
struct UEngine_CharacterMovementComponent_GetLastUpdateVelocity_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetLastUpdateRotation
struct UEngine_CharacterMovementComponent_GetLastUpdateRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetLastUpdateLocation
struct UEngine_CharacterMovementComponent_GetLastUpdateLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetImpartedMovementBaseVelocity
struct UEngine_CharacterMovementComponent_GetImpartedMovementBaseVelocity_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetCurrentAcceleration
struct UEngine_CharacterMovementComponent_GetCurrentAcceleration_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetCharacterOwner
struct UEngine_CharacterMovementComponent_GetCharacterOwner_Params
{
	class AEngine_Character*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.GetAnalogInputModifier
struct UEngine_CharacterMovementComponent_GetAnalogInputModifier_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.DisableMovement
struct UEngine_CharacterMovementComponent_DisableMovement_Params
{
};

// Function Engine.CharacterMovementComponent.ClearAccumulatedForces
struct UEngine_CharacterMovementComponent_ClearAccumulatedForces_Params
{
};

// Function Engine.CharacterMovementComponent.CapsuleTouched
struct UEngine_CharacterMovementComponent_CapsuleTouched_Params
{
	class UEngine_PrimitiveComponent*                  OverlappedComp;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AEngine_Actor*                               Other;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  OtherComp;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OtherBodyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFromSweep;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           SweepResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.CalcVelocity
struct UEngine_CharacterMovementComponent_CalcVelocity_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Friction;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFluid;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDeceleration;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.AddImpulse
struct UEngine_CharacterMovementComponent_AddImpulse_Params
{
	struct FVector                                     Impulse;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bVelocityChange;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CharacterMovementComponent.AddForce
struct UEngine_CharacterMovementComponent_AddForce_Params
{
	struct FVector                                     force;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetTrailSourceData
struct UEngine_ParticleSystemComponent_SetTrailSourceData_Params
{
	struct FName                                       InFirstSocketName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       InSecondSocketName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETrailWidthMode>        InWidthMode;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InWidth;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetTemplate
struct UEngine_ParticleSystemComponent_SetTemplate_Params
{
	class UEngine_ParticleSystem*                      NewTemplate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetMaterialParameter
struct UEngine_ParticleSystemComponent_SetMaterialParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetBeamTargetTangent
struct UEngine_ParticleSystemComponent_SetBeamTargetTangent_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewTangentPoint;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TargetIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetBeamTargetStrength
struct UEngine_ParticleSystemComponent_SetBeamTargetStrength_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NewTargetStrength;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TargetIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetBeamTargetPoint
struct UEngine_ParticleSystemComponent_SetBeamTargetPoint_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewTargetPoint;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TargetIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetBeamSourceTangent
struct UEngine_ParticleSystemComponent_SetBeamSourceTangent_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewTangentPoint;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SourceIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetBeamSourceStrength
struct UEngine_ParticleSystemComponent_SetBeamSourceStrength_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NewSourceStrength;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SourceIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetBeamSourcePoint
struct UEngine_ParticleSystemComponent_SetBeamSourcePoint_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewSourcePoint;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SourceIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetBeamEndPoint
struct UEngine_ParticleSystemComponent_SetBeamEndPoint_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewEndPoint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.SetAutoAttachParams
struct UEngine_ParticleSystemComponent_SetAutoAttachParams_Params
{
	class UEngine_SceneComponent*                      Parent;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       SocketName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EAttachLocation>        LocationType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.GetNumActiveParticles
struct UEngine_ParticleSystemComponent_GetNumActiveParticles_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.GetNamedMaterial
struct UEngine_ParticleSystemComponent_GetNamedMaterial_Params
{
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.GetBeamTargetTangent
struct UEngine_ParticleSystemComponent_GetBeamTargetTangent_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TargetIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutTangentPoint;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.GetBeamTargetStrength
struct UEngine_ParticleSystemComponent_GetBeamTargetStrength_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TargetIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OutTargetStrength;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.GetBeamTargetPoint
struct UEngine_ParticleSystemComponent_GetBeamTargetPoint_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                TargetIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutTargetPoint;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.GetBeamSourceTangent
struct UEngine_ParticleSystemComponent_GetBeamSourceTangent_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SourceIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutTangentPoint;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.GetBeamSourceStrength
struct UEngine_ParticleSystemComponent_GetBeamSourceStrength_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SourceIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OutSourceStrength;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.GetBeamSourcePoint
struct UEngine_ParticleSystemComponent_GetBeamSourcePoint_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SourceIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutSourcePoint;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.GetBeamEndPoint
struct UEngine_ParticleSystemComponent_GetBeamEndPoint_Params
{
	int                                                EmitterIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutEndPoint;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.GenerateParticleEvent
struct UEngine_ParticleSystemComponent_GenerateParticleEvent_Params
{
	struct FName                                       InEventName;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              InEmitterTime;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InLocation;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InDirection;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InVelocity;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.EndTrails
struct UEngine_ParticleSystemComponent_EndTrails_Params
{
};

// Function Engine.ParticleSystemComponent.CreateNamedDynamicMaterialInstance
struct UEngine_ParticleSystemComponent_CreateNamedDynamicMaterialInstance_Params
{
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   SourceMaterial;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInstanceDynamic*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ParticleSystemComponent.BeginTrails
struct UEngine_ParticleSystemComponent_BeginTrails_Params
{
	struct FName                                       InFirstSocketName;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       InSecondSocketName;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETrailWidthMode>        InWidthMode;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InWidth;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Controller.UnPossess
struct AEngine_Controller_UnPossess_Params
{
};

// Function Engine.Controller.StopMovement
struct AEngine_Controller_StopMovement_Params
{
};

// Function Engine.Controller.SetInitialLocationAndRotation
struct AEngine_Controller_SetInitialLocationAndRotation_Params
{
	struct FVector                                     NewLocation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    NewRotation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.Controller.SetIgnoreMoveInput
struct AEngine_Controller_SetIgnoreMoveInput_Params
{
	bool                                               bNewMoveInput;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Controller.SetIgnoreLookInput
struct AEngine_Controller_SetIgnoreLookInput_Params
{
	bool                                               bNewLookInput;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Controller.SetControlRotation
struct AEngine_Controller_SetControlRotation_Params
{
	struct FRotator                                    NewRotation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.Controller.ResetIgnoreMoveInput
struct AEngine_Controller_ResetIgnoreMoveInput_Params
{
};

// Function Engine.Controller.ResetIgnoreLookInput
struct AEngine_Controller_ResetIgnoreLookInput_Params
{
};

// Function Engine.Controller.ResetIgnoreInputFlags
struct AEngine_Controller_ResetIgnoreInputFlags_Params
{
};

// Function Engine.Controller.ReceiveUnPossess
struct AEngine_Controller_ReceiveUnPossess_Params
{
	class AEngine_Pawn*                                UnpossessedPawn;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Controller.ReceivePossess
struct AEngine_Controller_ReceivePossess_Params
{
	class AEngine_Pawn*                                PossessedPawn;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Controller.ReceiveInstigatedAnyDamage
struct AEngine_Controller_ReceiveInstigatedAnyDamage_Params
{
	float                                              Damage;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_DamageType*                          DamageType;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               DamagedActor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Controller.Possess
struct AEngine_Controller_Possess_Params
{
	class AEngine_Pawn*                                InPawn;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Controller.OnRep_PlayerState
struct AEngine_Controller_OnRep_PlayerState_Params
{
};

// Function Engine.Controller.OnRep_Pawn
struct AEngine_Controller_OnRep_Pawn_Params
{
};

// Function Engine.Controller.LineOfSightTo
struct AEngine_Controller_LineOfSightTo_Params
{
	class AEngine_Actor*                               Other;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ViewPoint;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAlternateChecks;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Controller.K2_GetPawn
struct AEngine_Controller_K2_GetPawn_Params
{
	class AEngine_Pawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Controller.IsPlayerController
struct AEngine_Controller_IsPlayerController_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Controller.IsMoveInputIgnored
struct AEngine_Controller_IsMoveInputIgnored_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Controller.IsLookInputIgnored
struct AEngine_Controller_IsLookInputIgnored_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Controller.IsLocalPlayerController
struct AEngine_Controller_IsLocalPlayerController_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Controller.IsLocalController
struct AEngine_Controller_IsLocalController_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Controller.GetViewTarget
struct AEngine_Controller_GetViewTarget_Params
{
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Controller.GetDesiredRotation
struct AEngine_Controller_GetDesiredRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Controller.GetControlRotation
struct AEngine_Controller_GetControlRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Controller.ClientSetRotation
struct AEngine_Controller_ClientSetRotation_Params
{
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bResetCamera;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Controller.ClientSetLocation
struct AEngine_Controller_ClientSetLocation_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Controller.CastToPlayerController
struct AEngine_Controller_CastToPlayerController_Params
{
	class AEngine_PlayerController*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DecalActor.SetDecalMaterial
struct AEngine_DecalActor_SetDecalMaterial_Params
{
	class UEngine_MaterialInterface*                   NewDecalMaterial;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DecalActor.GetDecalMaterial
struct AEngine_DecalActor_GetDecalMaterial_Params
{
	class UEngine_MaterialInterface*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DecalActor.CreateDynamicMaterialInstance
struct AEngine_DecalActor_CreateDynamicMaterialInstance_Params
{
	class UEngine_MaterialInstanceDynamic*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CameraActor.GetAutoActivatePlayerIndex
struct AEngine_CameraActor_GetAutoActivatePlayerIndex_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CameraComponent.SetUseFieldOfViewForLOD
struct UEngine_CameraComponent_SetUseFieldOfViewForLOD_Params
{
	bool                                               bInUseFieldOfViewForLOD;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraComponent.SetProjectionMode
struct UEngine_CameraComponent_SetProjectionMode_Params
{
	TEnumAsByte<FEngine_Engine_ECameraProjectionMode>  InProjectionMode;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraComponent.SetPostProcessBlendWeight
struct UEngine_CameraComponent_SetPostProcessBlendWeight_Params
{
	float                                              InPostProcessBlendWeight;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraComponent.SetOrthoWidth
struct UEngine_CameraComponent_SetOrthoWidth_Params
{
	float                                              InOrthoWidth;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraComponent.SetOrthoNearClipPlane
struct UEngine_CameraComponent_SetOrthoNearClipPlane_Params
{
	float                                              InOrthoNearClipPlane;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraComponent.SetOrthoFarClipPlane
struct UEngine_CameraComponent_SetOrthoFarClipPlane_Params
{
	float                                              InOrthoFarClipPlane;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraComponent.SetFieldOfView
struct UEngine_CameraComponent_SetFieldOfView_Params
{
	float                                              InFieldOfView;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraComponent.SetConstraintAspectRatio
struct UEngine_CameraComponent_SetConstraintAspectRatio_Params
{
	bool                                               bInConstrainAspectRatio;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraComponent.SetAspectRatio
struct UEngine_CameraComponent_SetAspectRatio_Params
{
	float                                              InAspectRatio;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraComponent.RemoveBlendable
struct UEngine_CameraComponent_RemoveBlendable_Params
{
	TScriptInterface<class UEngine_BlendableInterface> InBlendableObject;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraComponent.OnCameraMeshHiddenChanged
struct UEngine_CameraComponent_OnCameraMeshHiddenChanged_Params
{
};

// Function Engine.CameraComponent.GetCameraView
struct UEngine_CameraComponent_GetCameraView_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_MinimalViewInfo                     DesiredView;                                              // (Parm, OutParm)
};

// Function Engine.CameraComponent.AddOrUpdateBlendable
struct UEngine_CameraComponent_AddOrUpdateBlendable_Params
{
	TScriptInterface<class UEngine_BlendableInterface> InBlendableObject;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InWeight;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.WasInputKeyJustReleased
struct AEngine_PlayerController_WasInputKeyJustReleased_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.WasInputKeyJustPressed
struct AEngine_PlayerController_WasInputKeyJustPressed_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.ToggleSpeaking
struct AEngine_PlayerController_ToggleSpeaking_Params
{
	bool                                               bInSpeaking;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.TestServerLevelVisibilityChange
struct AEngine_PlayerController_TestServerLevelVisibilityChange_Params
{
	struct FName                                       PackageName;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Filename;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SwitchLevel
struct AEngine_PlayerController_SwitchLevel_Params
{
	struct FString                                     URL;                                                      // (Parm, ZeroConstructor)
};

// Function Engine.PlayerController.StopHapticEffect
struct AEngine_PlayerController_StopHapticEffect_Params
{
	FInputCore_InputCore_EControllerHand               Hand;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.StartFire
struct AEngine_PlayerController_StartFire_Params
{
	unsigned char                                      FireModeNum;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SetVirtualJoystickVisibility
struct AEngine_PlayerController_SetVirtualJoystickVisibility_Params
{
	bool                                               bVisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SetViewTargetWithBlend
struct AEngine_PlayerController_SetViewTargetWithBlend_Params
{
	class AEngine_Actor*                               NewViewTarget;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EViewTargetBlendFunction> BlendFunc;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendExp;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLockOutgoing;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SetName
struct AEngine_PlayerController_SetName_Params
{
	struct FString                                     S;                                                        // (Parm, ZeroConstructor)
};

// Function Engine.PlayerController.SetMouseLocation
struct AEngine_PlayerController_SetMouseLocation_Params
{
	int                                                X;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                Y;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SetMouseCursorWidget
struct AEngine_PlayerController_SetMouseCursorWidget_Params
{
	TEnumAsByte<FCoreUObject_EMouseCursor>             Cursor;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UUMG_UserWidget*                             CursorWidget;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.PlayerController.SetHapticsByValue
struct AEngine_PlayerController_SetHapticsByValue_Params
{
	float                                              Frequency;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Amplitude;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	FInputCore_InputCore_EControllerHand               Hand;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SetDisableHaptics
struct AEngine_PlayerController_SetDisableHaptics_Params
{
	bool                                               bNewDisabled;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SetControllerLightColor
struct AEngine_PlayerController_SetControllerLightColor_Params
{
	struct FColor                                      Color;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SetCinematicMode
struct AEngine_PlayerController_SetCinematicMode_Params
{
	bool                                               bInCinematicMode;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bHidePlayer;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsHUD;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsMovement;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsTurning;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SetAudioListenerOverride
struct AEngine_PlayerController_SetAudioListenerOverride_Params
{
	class UEngine_SceneComponent*                      AttachToComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SetAudioListenerAttenuationOverride
struct AEngine_PlayerController_SetAudioListenerAttenuationOverride_Params
{
	class UEngine_SceneComponent*                      AttachToComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     AttenuationLocationOVerride;                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ServerViewSelf
struct AEngine_PlayerController_ServerViewSelf_Params
{
	struct FEngine_ViewTargetTransitionParams          TransitionParams;                                         // (Parm)
};

// Function Engine.PlayerController.ServerViewPrevPlayer
struct AEngine_PlayerController_ServerViewPrevPlayer_Params
{
};

// Function Engine.PlayerController.ServerViewNextPlayer
struct AEngine_PlayerController_ServerViewNextPlayer_Params
{
};

// Function Engine.PlayerController.ServerVerifyViewTarget
struct AEngine_PlayerController_ServerVerifyViewTarget_Params
{
};

// Function Engine.PlayerController.ServerUpdateMultipleLevelsVisibility
struct AEngine_PlayerController_ServerUpdateMultipleLevelsVisibility_Params
{
	TArray<struct FEngine_UpdateLevelVisibilityLevelInfo> LevelVisibilities;                                        // (ConstParm, Parm, ZeroConstructor, ReferenceParm)
};

// Function Engine.PlayerController.ServerUpdateLevelVisibility
struct AEngine_PlayerController_ServerUpdateLevelVisibility_Params
{
	struct FEngine_UpdateLevelVisibilityLevelInfo      LevelVisibility;                                          // (ConstParm, Parm, ReferenceParm)
};

// Function Engine.PlayerController.ServerUpdateCamera
struct AEngine_PlayerController_ServerUpdateCamera_Params
{
	struct FEngine_Vector_NetQuantize                  CamLoc;                                                   // (Parm)
	int                                                CamPitchAndYaw;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ServerUnmutePlayer
struct AEngine_PlayerController_ServerUnmutePlayer_Params
{
	struct FEngine_UniqueNetIdRepl                     PlayerId;                                                 // (Parm)
};

// Function Engine.PlayerController.ServerToggleAILogging
struct AEngine_PlayerController_ServerToggleAILogging_Params
{
};

// Function Engine.PlayerController.ServerShortTimeout
struct AEngine_PlayerController_ServerShortTimeout_Params
{
};

// Function Engine.PlayerController.ServerSetSpectatorWaiting
struct AEngine_PlayerController_ServerSetSpectatorWaiting_Params
{
	bool                                               bWaiting;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ServerSetSpectatorLocation
struct AEngine_PlayerController_ServerSetSpectatorLocation_Params
{
	struct FVector                                     NewLoc;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    NewRot;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ServerRestartPlayer
struct AEngine_PlayerController_ServerRestartPlayer_Params
{
};

// Function Engine.PlayerController.ServerPause
struct AEngine_PlayerController_ServerPause_Params
{
};

// Function Engine.PlayerController.ServerNotifyLoadedWorld
struct AEngine_PlayerController_ServerNotifyLoadedWorld_Params
{
	struct FName                                       WorldPackageName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ServerMutePlayer
struct AEngine_PlayerController_ServerMutePlayer_Params
{
	struct FEngine_UniqueNetIdRepl                     PlayerId;                                                 // (Parm)
};

// Function Engine.PlayerController.ServerExecRPC
struct AEngine_PlayerController_ServerExecRPC_Params
{
	struct FString                                     Msg;                                                      // (Parm, ZeroConstructor)
};

// Function Engine.PlayerController.ServerExec
struct AEngine_PlayerController_ServerExec_Params
{
	struct FString                                     Msg;                                                      // (Parm, ZeroConstructor)
};

// Function Engine.PlayerController.ServerCheckClientPossessionReliable
struct AEngine_PlayerController_ServerCheckClientPossessionReliable_Params
{
};

// Function Engine.PlayerController.ServerCheckClientPossession
struct AEngine_PlayerController_ServerCheckClientPossession_Params
{
};

// Function Engine.PlayerController.ServerChangeName
struct AEngine_PlayerController_ServerChangeName_Params
{
	struct FString                                     S;                                                        // (Parm, ZeroConstructor)
};

// Function Engine.PlayerController.ServerCamera
struct AEngine_PlayerController_ServerCamera_Params
{
	struct FName                                       NewMode;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ServerAcknowledgePossession
struct AEngine_PlayerController_ServerAcknowledgePossession_Params
{
	class AEngine_Pawn*                                P;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.SendToConsole
struct AEngine_PlayerController_SendToConsole_Params
{
	struct FString                                     Command;                                                  // (Parm, ZeroConstructor)
};

// Function Engine.PlayerController.RestartLevel
struct AEngine_PlayerController_RestartLevel_Params
{
};

// Function Engine.PlayerController.ResetControllerLightColor
struct AEngine_PlayerController_ResetControllerLightColor_Params
{
};

// Function Engine.PlayerController.ProjectWorldLocationToScreen
struct AEngine_PlayerController_ProjectWorldLocationToScreen_Params
{
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenLocation;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayerViewportRelative;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.PlayHapticEffect
struct AEngine_PlayerController_PlayHapticEffect_Params
{
	class UEngine_HapticFeedbackEffect_Base*           HapticEffect;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FInputCore_InputCore_EControllerHand               Hand;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.PlayDynamicForceFeedback
struct AEngine_PlayerController_PlayDynamicForceFeedback_Params
{
	float                                              Intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsLeftLarge;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsLeftSmall;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsRightLarge;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsRightSmall;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EDynamicForceFeedbackAction> Action;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_LatentActionInfo                    LatentInfo;                                               // (Parm)
};

// Function Engine.PlayerController.Pause
struct AEngine_PlayerController_Pause_Params
{
};

// Function Engine.PlayerController.OnServerStartedVisualLogger
struct AEngine_PlayerController_OnServerStartedVisualLogger_Params
{
	bool                                               bIsLogging;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.LocalTravel
struct AEngine_PlayerController_LocalTravel_Params
{
	struct FString                                     URL;                                                      // (Parm, ZeroConstructor)
};

// Function Engine.PlayerController.K2_ClientPlayForceFeedback
struct AEngine_PlayerController_K2_ClientPlayForceFeedback_Params
{
	class UEngine_ForceFeedbackEffect*                 ForceFeedbackEffect;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Tag;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLooping;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreTimeDilation;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayWhilePaused;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.IsInputKeyDown
struct AEngine_PlayerController_IsInputKeyDown_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetViewportSize
struct AEngine_PlayerController_GetViewportSize_Params
{
	int                                                SizeX;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                SizeY;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.GetSpectatorPawn
struct AEngine_PlayerController_GetSpectatorPawn_Params
{
	class AEngine_SpectatorPawn*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetMousePosition
struct AEngine_PlayerController_GetMousePosition_Params
{
	float                                              LocationX;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              LocationY;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetInputVectorKeyState
struct AEngine_PlayerController_GetInputVectorKeyState_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetInputTouchState
struct AEngine_PlayerController_GetInputTouchState_Params
{
	TEnumAsByte<FInputCore_InputCore_ETouchIndex>      FingerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LocationX;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              LocationY;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsCurrentlyPressed;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.GetInputMouseDelta
struct AEngine_PlayerController_GetInputMouseDelta_Params
{
	float                                              DeltaX;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaY;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.GetInputMotionState
struct AEngine_PlayerController_GetInputMotionState_Params
{
	struct FVector                                     Tilt;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RotationRate;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Gravity;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Acceleration;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.GetInputKeyTimeDown
struct AEngine_PlayerController_GetInputKeyTimeDown_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetInputAnalogStickState
struct AEngine_PlayerController_GetInputAnalogStickState_Params
{
	TEnumAsByte<FEngine_Engine_EControllerAnalogStick> WhichStick;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StickX;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              StickY;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.GetInputAnalogKeyState
struct AEngine_PlayerController_GetInputAnalogKeyState_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetHUD
struct AEngine_PlayerController_GetHUD_Params
{
	class AEngine_HUD*                                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetHitResultUnderFingerForObjects
struct AEngine_PlayerController_GetHitResultUnderFingerForObjects_Params
{
	TEnumAsByte<FInputCore_InputCore_ETouchIndex>      FingerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           HitResult;                                                // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetHitResultUnderFingerByChannel
struct AEngine_PlayerController_GetHitResultUnderFingerByChannel_Params
{
	TEnumAsByte<FInputCore_InputCore_ETouchIndex>      FingerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETraceTypeQuery>        TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           HitResult;                                                // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetHitResultUnderFinger
struct AEngine_PlayerController_GetHitResultUnderFinger_Params
{
	TEnumAsByte<FInputCore_InputCore_ETouchIndex>      FingerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ECollisionChannel>      TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           HitResult;                                                // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetHitResultUnderCursorForObjects
struct AEngine_PlayerController_GetHitResultUnderCursorForObjects_Params
{
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           HitResult;                                                // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetHitResultUnderCursorByChannel
struct AEngine_PlayerController_GetHitResultUnderCursorByChannel_Params
{
	TEnumAsByte<FEngine_Engine_ETraceTypeQuery>        TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           HitResult;                                                // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetHitResultUnderCursor
struct AEngine_PlayerController_GetHitResultUnderCursor_Params
{
	TEnumAsByte<FEngine_Engine_ECollisionChannel>      TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           HitResult;                                                // (Parm, OutParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.GetFocalLocation
struct AEngine_PlayerController_GetFocalLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.FOV
struct AEngine_PlayerController_FOV_Params
{
	float                                              NewFOV;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.EnableCheats
struct AEngine_PlayerController_EnableCheats_Params
{
};

// Function Engine.PlayerController.DeprojectScreenPositionToWorld
struct AEngine_PlayerController_DeprojectScreenPositionToWorld_Params
{
	float                                              ScreenX;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenY;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldLocation;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldDirection;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.DeprojectMousePositionToWorld
struct AEngine_PlayerController_DeprojectMousePositionToWorld_Params
{
	struct FVector                                     WorldLocation;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldDirection;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.ConsoleKey
struct AEngine_PlayerController_ConsoleKey_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
};

// Function Engine.PlayerController.ClientWasKicked
struct AEngine_PlayerController_ClientWasKicked_Params
{
	struct FText                                       KickReason;                                               // (ConstParm, Parm, ReferenceParm)
};

// Function Engine.PlayerController.ClientVoiceHandshakeComplete
struct AEngine_PlayerController_ClientVoiceHandshakeComplete_Params
{
};

// Function Engine.PlayerController.ClientUpdateMultipleLevelsStreamingStatus
struct AEngine_PlayerController_ClientUpdateMultipleLevelsStreamingStatus_Params
{
	TArray<struct FEngine_UpdateLevelStreamingLevelStatus> LevelStatuses;                                            // (ConstParm, Parm, ZeroConstructor, ReferenceParm)
};

// Function Engine.PlayerController.ClientUpdateLevelStreamingStatus
struct AEngine_PlayerController_ClientUpdateLevelStreamingStatus_Params
{
	struct FName                                       PackageName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bNewShouldBeLoaded;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bNewShouldBeVisible;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bNewShouldBlockOnLoad;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                LODIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientUnmutePlayer
struct AEngine_PlayerController_ClientUnmutePlayer_Params
{
	struct FEngine_UniqueNetIdRepl                     PlayerId;                                                 // (Parm)
};

// Function Engine.PlayerController.ClientTravelInternal
struct AEngine_PlayerController_ClientTravelInternal_Params
{
	struct FString                                     URL;                                                      // (Parm, ZeroConstructor)
	TEnumAsByte<FEngine_Engine_ETravelType>            TravelType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSeamless;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       MapPackageGuid;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientTravel
struct AEngine_PlayerController_ClientTravel_Params
{
	struct FString                                     URL;                                                      // (Parm, ZeroConstructor)
	TEnumAsByte<FEngine_Engine_ETravelType>            TravelType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSeamless;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       MapPackageGuid;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientTeamMessage
struct AEngine_PlayerController_ClientTeamMessage_Params
{
	class AEngine_PlayerState*                         SenderPlayerState;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     S;                                                        // (Parm, ZeroConstructor)
	struct FName                                       Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MsgLifeTime;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientStopForceFeedback
struct AEngine_PlayerController_ClientStopForceFeedback_Params
{
	class UEngine_ForceFeedbackEffect*                 ForceFeedbackEffect;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Tag;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientStopCameraShake
struct AEngine_PlayerController_ClientStopCameraShake_Params
{
	class UClass*                                      Shake;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bImmediately;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientStopCameraAnim
struct AEngine_PlayerController_ClientStopCameraAnim_Params
{
	class UEngine_CameraAnim*                          AnimToStop;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientStartOnlineSession
struct AEngine_PlayerController_ClientStartOnlineSession_Params
{
};

// Function Engine.PlayerController.ClientSpawnCameraLensEffect
struct AEngine_PlayerController_ClientSpawnCameraLensEffect_Params
{
	class UClass*                                      LensEffectEmitterClass;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientSetViewTarget
struct AEngine_PlayerController_ClientSetViewTarget_Params
{
	class AEngine_Actor*                               A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_ViewTargetTransitionParams          TransitionParams;                                         // (Parm)
};

// Function Engine.PlayerController.ClientSetSpectatorWaiting
struct AEngine_PlayerController_ClientSetSpectatorWaiting_Params
{
	bool                                               bWaiting;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientSetHUD
struct AEngine_PlayerController_ClientSetHUD_Params
{
	class UClass*                                      NewHUDClass;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientSetForceMipLevelsToBeResident
struct AEngine_PlayerController_ClientSetForceMipLevelsToBeResident_Params
{
	class UEngine_MaterialInterface*                   Material;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ForceDuration;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                CinematicTextureGroups;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientSetCinematicMode
struct AEngine_PlayerController_ClientSetCinematicMode_Params
{
	bool                                               bInCinematicMode;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsMovement;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsTurning;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsHUD;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientSetCameraMode
struct AEngine_PlayerController_ClientSetCameraMode_Params
{
	struct FName                                       NewCamMode;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientSetCameraFade
struct AEngine_PlayerController_ClientSetCameraFade_Params
{
	bool                                               bEnableFading;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FColor                                      FadeColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   FadeAlpha;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFadeAudio;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientSetBlockOnAsyncLoading
struct AEngine_PlayerController_ClientSetBlockOnAsyncLoading_Params
{
};

// Function Engine.PlayerController.ClientReturnToMainMenuWithTextReason
struct AEngine_PlayerController_ClientReturnToMainMenuWithTextReason_Params
{
	struct FText                                       ReturnReason;                                             // (ConstParm, Parm, ReferenceParm)
};

// Function Engine.PlayerController.ClientReturnToMainMenu
struct AEngine_PlayerController_ClientReturnToMainMenu_Params
{
	struct FString                                     ReturnReason;                                             // (Parm, ZeroConstructor)
};

// Function Engine.PlayerController.ClientRetryClientRestart
struct AEngine_PlayerController_ClientRetryClientRestart_Params
{
	class AEngine_Pawn*                                NewPawn;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientRestart
struct AEngine_PlayerController_ClientRestart_Params
{
	class AEngine_Pawn*                                NewPawn;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientReset
struct AEngine_PlayerController_ClientReset_Params
{
};

// Function Engine.PlayerController.ClientRepObjRef
struct AEngine_PlayerController_ClientRepObjRef_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientReceiveLocalizedMessage
struct AEngine_PlayerController_ClientReceiveLocalizedMessage_Params
{
	class UClass*                                      Message;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Switch;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_PlayerState*                         RelatedPlayerState_2;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_PlayerState*                         RelatedPlayerState_3;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     OptionalObject;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientPrestreamTextures
struct AEngine_PlayerController_ClientPrestreamTextures_Params
{
	class AEngine_Actor*                               ForcedActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ForceDuration;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableStreaming;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                CinematicTextureGroups;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientPrepareMapChange
struct AEngine_PlayerController_ClientPrepareMapChange_Params
{
	struct FName                                       LevelName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFirst;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLast;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientPlaySoundAtLocation
struct AEngine_PlayerController_ClientPlaySoundAtLocation_Params
{
	class UEngine_SoundBase*                           Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientPlaySound
struct AEngine_PlayerController_ClientPlaySound_Params
{
	class UEngine_SoundBase*                           Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientPlayForceFeedback_Internal
struct AEngine_PlayerController_ClientPlayForceFeedback_Internal_Params
{
	class UEngine_ForceFeedbackEffect*                 ForceFeedbackEffect;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_ForceFeedbackParameters             Params;                                                   // (Parm)
};

// Function Engine.PlayerController.ClientPlayCameraShake
struct AEngine_PlayerController_ClientPlayCameraShake_Params
{
	class UClass*                                      Shake;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ECameraAnimPlaySpace>   PlaySpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    UserPlaySpaceRot;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientPlayCameraAnim
struct AEngine_PlayerController_ClientPlayCameraAnim_Params
{
	class UEngine_CameraAnim*                          AnimToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Rate;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendInTime;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRandomStartTime;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ECameraAnimPlaySpace>   Space;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CustomPlaySpace;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientMutePlayer
struct AEngine_PlayerController_ClientMutePlayer_Params
{
	struct FEngine_UniqueNetIdRepl                     PlayerId;                                                 // (Parm)
};

// Function Engine.PlayerController.ClientMessage
struct AEngine_PlayerController_ClientMessage_Params
{
	struct FString                                     S;                                                        // (Parm, ZeroConstructor)
	struct FName                                       Type;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MsgLifeTime;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientIgnoreMoveInput
struct AEngine_PlayerController_ClientIgnoreMoveInput_Params
{
	bool                                               bIgnore;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientIgnoreLookInput
struct AEngine_PlayerController_ClientIgnoreLookInput_Params
{
	bool                                               bIgnore;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientGotoState
struct AEngine_PlayerController_ClientGotoState_Params
{
	struct FName                                       NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientGameEnded
struct AEngine_PlayerController_ClientGameEnded_Params
{
	class AEngine_Actor*                               EndGameFocus;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWinner;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientForceGarbageCollection
struct AEngine_PlayerController_ClientForceGarbageCollection_Params
{
};

// Function Engine.PlayerController.ClientFlushLevelStreaming
struct AEngine_PlayerController_ClientFlushLevelStreaming_Params
{
};

// Function Engine.PlayerController.ClientEndOnlineSession
struct AEngine_PlayerController_ClientEndOnlineSession_Params
{
};

// Function Engine.PlayerController.ClientEnableNetworkVoice
struct AEngine_PlayerController_ClientEnableNetworkVoice_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientCommitMapChange
struct AEngine_PlayerController_ClientCommitMapChange_Params
{
};

// Function Engine.PlayerController.ClientClearCameraLensEffects
struct AEngine_PlayerController_ClientClearCameraLensEffects_Params
{
};

// Function Engine.PlayerController.ClientCapBandwidth
struct AEngine_PlayerController_ClientCapBandwidth_Params
{
	int                                                Cap;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClientCancelPendingMapChange
struct AEngine_PlayerController_ClientCancelPendingMapChange_Params
{
};

// Function Engine.PlayerController.ClientAddTextureStreamingLoc
struct AEngine_PlayerController_ClientAddTextureStreamingLoc_Params
{
	struct FVector                                     InLoc;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideLocation;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ClearAudioListenerOverride
struct AEngine_PlayerController_ClearAudioListenerOverride_Params
{
};

// Function Engine.PlayerController.ClearAudioListenerAttenuationOverride
struct AEngine_PlayerController_ClearAudioListenerAttenuationOverride_Params
{
};

// Function Engine.PlayerController.CanRestartPlayer
struct AEngine_PlayerController_CanRestartPlayer_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerController.Camera
struct AEngine_PlayerController_Camera_Params
{
	struct FName                                       NewMode;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.AddYawInput
struct AEngine_PlayerController_AddYawInput_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.AddRollInput
struct AEngine_PlayerController_AddRollInput_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.AddPitchInput
struct AEngine_PlayerController_AddPitchInput_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerController.ActivateTouchInterface
struct AEngine_PlayerController_ActivateTouchInterface_Params
{
	class UEngine_TouchInterface*                      NewTouchInterface;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.Walk
struct UEngine_CheatManager_Walk_Params
{
};

// Function Engine.CheatManager.ViewSelf
struct UEngine_CheatManager_ViewSelf_Params
{
};

// Function Engine.CheatManager.ViewPlayer
struct UEngine_CheatManager_ViewPlayer_Params
{
	struct FString                                     S;                                                        // (Parm, ZeroConstructor)
};

// Function Engine.CheatManager.ViewClass
struct UEngine_CheatManager_ViewClass_Params
{
	class UClass*                                      DesiredClass;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.ViewActor
struct UEngine_CheatManager_ViewActor_Params
{
	struct FName                                       ActorName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.UpdateSafeArea
struct UEngine_CheatManager_UpdateSafeArea_Params
{
};

// Function Engine.CheatManager.ToggleServerStatReplicatorUpdateStatNet
struct UEngine_CheatManager_ToggleServerStatReplicatorUpdateStatNet_Params
{
};

// Function Engine.CheatManager.ToggleServerStatReplicatorClientOverwrite
struct UEngine_CheatManager_ToggleServerStatReplicatorClientOverwrite_Params
{
};

// Function Engine.CheatManager.ToggleDebugCamera
struct UEngine_CheatManager_ToggleDebugCamera_Params
{
};

// Function Engine.CheatManager.ToggleAILogging
struct UEngine_CheatManager_ToggleAILogging_Params
{
};

// Function Engine.CheatManager.TestCollisionDistance
struct UEngine_CheatManager_TestCollisionDistance_Params
{
};

// Function Engine.CheatManager.Teleport
struct UEngine_CheatManager_Teleport_Params
{
};

// Function Engine.CheatManager.Summon
struct UEngine_CheatManager_Summon_Params
{
	struct FString                                     ClassName;                                                // (Parm, ZeroConstructor)
};

// Function Engine.CheatManager.StreamLevelOut
struct UEngine_CheatManager_StreamLevelOut_Params
{
	struct FName                                       PackageName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.StreamLevelIn
struct UEngine_CheatManager_StreamLevelIn_Params
{
	struct FName                                       PackageName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.SpawnServerStatReplicator
struct UEngine_CheatManager_SpawnServerStatReplicator_Params
{
};

// Function Engine.CheatManager.Slomo
struct UEngine_CheatManager_Slomo_Params
{
	float                                              NewTimeDilation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.SetWorldOrigin
struct UEngine_CheatManager_SetWorldOrigin_Params
{
};

// Function Engine.CheatManager.SetMouseSensitivityToDefault
struct UEngine_CheatManager_SetMouseSensitivityToDefault_Params
{
};

// Function Engine.CheatManager.ServerToggleAILogging
struct UEngine_CheatManager_ServerToggleAILogging_Params
{
};

// Function Engine.CheatManager.ReceiveInitCheatManager
struct UEngine_CheatManager_ReceiveInitCheatManager_Params
{
};

// Function Engine.CheatManager.ReceiveEndPlay
struct UEngine_CheatManager_ReceiveEndPlay_Params
{
};

// Function Engine.CheatManager.PlayersOnly
struct UEngine_CheatManager_PlayersOnly_Params
{
};

// Function Engine.CheatManager.OnlyLoadLevel
struct UEngine_CheatManager_OnlyLoadLevel_Params
{
	struct FName                                       PackageName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.LogLoc
struct UEngine_CheatManager_LogLoc_Params
{
};

// Function Engine.CheatManager.InvertMouse
struct UEngine_CheatManager_InvertMouse_Params
{
};

// Function Engine.CheatManager.God
struct UEngine_CheatManager_God_Params
{
};

// Function Engine.CheatManager.Ghost
struct UEngine_CheatManager_Ghost_Params
{
};

// Function Engine.CheatManager.FreezeFrame
struct UEngine_CheatManager_FreezeFrame_Params
{
	float                                              Delay;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.Fly
struct UEngine_CheatManager_Fly_Params
{
};

// Function Engine.CheatManager.FlushLog
struct UEngine_CheatManager_FlushLog_Params
{
};

// Function Engine.CheatManager.EnableDebugCamera
struct UEngine_CheatManager_EnableDebugCamera_Params
{
};

// Function Engine.CheatManager.DumpVoiceMutingState
struct UEngine_CheatManager_DumpVoiceMutingState_Params
{
};

// Function Engine.CheatManager.DumpPartyState
struct UEngine_CheatManager_DumpPartyState_Params
{
};

// Function Engine.CheatManager.DumpOnlineSessionState
struct UEngine_CheatManager_DumpOnlineSessionState_Params
{
};

// Function Engine.CheatManager.DumpChatState
struct UEngine_CheatManager_DumpChatState_Params
{
};

// Function Engine.CheatManager.DisableDebugCamera
struct UEngine_CheatManager_DisableDebugCamera_Params
{
};

// Function Engine.CheatManager.DestroyTarget
struct UEngine_CheatManager_DestroyTarget_Params
{
};

// Function Engine.CheatManager.DestroyServerStatReplicator
struct UEngine_CheatManager_DestroyServerStatReplicator_Params
{
};

// Function Engine.CheatManager.DestroyPawns
struct UEngine_CheatManager_DestroyPawns_Params
{
	class UClass*                                      aClass;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.DestroyAllPawnsExceptTarget
struct UEngine_CheatManager_DestroyAllPawnsExceptTarget_Params
{
};

// Function Engine.CheatManager.DestroyAll
struct UEngine_CheatManager_DestroyAll_Params
{
	class UClass*                                      aClass;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.DebugCapsuleSweepSize
struct UEngine_CheatManager_DebugCapsuleSweepSize_Params
{
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.DebugCapsuleSweepPawn
struct UEngine_CheatManager_DebugCapsuleSweepPawn_Params
{
};

// Function Engine.CheatManager.DebugCapsuleSweepComplex
struct UEngine_CheatManager_DebugCapsuleSweepComplex_Params
{
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.DebugCapsuleSweepClear
struct UEngine_CheatManager_DebugCapsuleSweepClear_Params
{
};

// Function Engine.CheatManager.DebugCapsuleSweepChannel
struct UEngine_CheatManager_DebugCapsuleSweepChannel_Params
{
	TEnumAsByte<FEngine_Engine_ECollisionChannel>      Channel;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.DebugCapsuleSweepCapture
struct UEngine_CheatManager_DebugCapsuleSweepCapture_Params
{
};

// Function Engine.CheatManager.DebugCapsuleSweep
struct UEngine_CheatManager_DebugCapsuleSweep_Params
{
};

// Function Engine.CheatManager.DamageTarget
struct UEngine_CheatManager_DamageTarget_Params
{
	float                                              DamageAmount;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.CheatScript
struct UEngine_CheatManager_CheatScript_Params
{
	struct FString                                     ScriptName;                                               // (Parm, ZeroConstructor)
};

// Function Engine.CheatManager.ChangeSize
struct UEngine_CheatManager_ChangeSize_Params
{
	float                                              F;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.BugItStringCreator
struct UEngine_CheatManager_BugItStringCreator_Params
{
	struct FVector                                     ViewLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ViewRotation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     GoString;                                                 // (Parm, OutParm, ZeroConstructor)
	struct FString                                     LocString;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.CheatManager.BugItGo
struct UEngine_CheatManager_BugItGo_Params
{
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Yaw;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Roll;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CheatManager.BugIt
struct UEngine_CheatManager_BugIt_Params
{
	struct FString                                     ScreenShotDescription;                                    // (Parm, ZeroConstructor)
};

// Function Engine.SkeletalMeshActor.OnRep_ReplicatedPhysAsset
struct AEngine_SkeletalMeshActor_OnRep_ReplicatedPhysAsset_Params
{
};

// Function Engine.SkeletalMeshActor.OnRep_ReplicatedMesh
struct AEngine_SkeletalMeshActor_OnRep_ReplicatedMesh_Params
{
};

// Function Engine.SkeletalMeshActor.OnRep_ReplicatedMaterial1
struct AEngine_SkeletalMeshActor_OnRep_ReplicatedMaterial1_Params
{
};

// Function Engine.SkeletalMeshActor.OnRep_ReplicatedMaterial0
struct AEngine_SkeletalMeshActor_OnRep_ReplicatedMaterial0_Params
{
};

// Function Engine.GameInstance.ReceiveShutdown
struct UEngine_GameInstance_ReceiveShutdown_Params
{
};

// Function Engine.GameInstance.ReceiveInit
struct UEngine_GameInstance_ReceiveInit_Params
{
};

// Function Engine.GameInstance.HandleTravelError
struct UEngine_GameInstance_HandleTravelError_Params
{
	TEnumAsByte<FEngine_Engine_ETravelFailure>         FailureType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameInstance.HandleNetworkError
struct UEngine_GameInstance_HandleNetworkError_Params
{
	TEnumAsByte<FEngine_Engine_ENetworkFailure>        FailureType;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsServer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameInstance.DebugRemovePlayer
struct UEngine_GameInstance_DebugRemovePlayer_Params
{
	int                                                ControllerId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameInstance.DebugCreatePlayer
struct UEngine_GameInstance_DebugCreatePlayer_Params
{
	int                                                ControllerId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.StartPlay
struct AEngine_GameModeBase_StartPlay_Params
{
};

// Function Engine.GameModeBase.SpawnDefaultPawnFor
struct AEngine_GameModeBase_SpawnDefaultPawnFor_Params
{
	class AEngine_Controller*                          NewPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               StartSpot;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Pawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.SpawnDefaultPawnAtTransform
struct AEngine_GameModeBase_SpawnDefaultPawnAtTransform_Params
{
	class AEngine_Controller*                          NewPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	class AEngine_Pawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.ShouldReset
struct AEngine_GameModeBase_ShouldReset_Params
{
	class AEngine_Actor*                               ActorToReset;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.ReturnToMainMenuHost
struct AEngine_GameModeBase_ReturnToMainMenuHost_Params
{
};

// Function Engine.GameModeBase.RestartPlayerAtTransform
struct AEngine_GameModeBase_RestartPlayerAtTransform_Params
{
	class AEngine_Controller*                          NewPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.GameModeBase.RestartPlayerAtPlayerStart
struct AEngine_GameModeBase_RestartPlayerAtPlayerStart_Params
{
	class AEngine_Controller*                          NewPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               StartSpot;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.RestartPlayer
struct AEngine_GameModeBase_RestartPlayer_Params
{
	class AEngine_Controller*                          NewPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.ResetLevel
struct AEngine_GameModeBase_ResetLevel_Params
{
};

// Function Engine.GameModeBase.PlayerCanRestart
struct AEngine_GameModeBase_PlayerCanRestart_Params
{
	class AEngine_PlayerController*                    Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.MustSpectate
struct AEngine_GameModeBase_MustSpectate_Params
{
	class AEngine_PlayerController*                    NewPlayerController;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.K2_PostLogin
struct AEngine_GameModeBase_K2_PostLogin_Params
{
	class AEngine_PlayerController*                    NewPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.K2_OnSwapPlayerControllers
struct AEngine_GameModeBase_K2_OnSwapPlayerControllers_Params
{
	class AEngine_PlayerController*                    OldPC;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_PlayerController*                    NewPC;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.K2_OnRestartPlayer
struct AEngine_GameModeBase_K2_OnRestartPlayer_Params
{
	class AEngine_Controller*                          NewPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.K2_OnLogout
struct AEngine_GameModeBase_K2_OnLogout_Params
{
	class AEngine_Controller*                          ExitingController;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.K2_OnChangeName
struct AEngine_GameModeBase_K2_OnChangeName_Params
{
	class AEngine_Controller*                          Other;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     NewName;                                                  // (Parm, ZeroConstructor)
	bool                                               bNameChange;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.K2_FindPlayerStart
struct AEngine_GameModeBase_K2_FindPlayerStart_Params
{
	class AEngine_Controller*                          Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     IncomingName;                                             // (Parm, ZeroConstructor)
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.InitStartSpot
struct AEngine_GameModeBase_InitStartSpot_Params
{
	class AEngine_Actor*                               StartSpot;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Controller*                          NewPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.InitializeHUDForPlayer
struct AEngine_GameModeBase_InitializeHUDForPlayer_Params
{
	class AEngine_PlayerController*                    NewPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.HasMatchStarted
struct AEngine_GameModeBase_HasMatchStarted_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.HandleStartingNewPlayer
struct AEngine_GameModeBase_HandleStartingNewPlayer_Params
{
	class AEngine_PlayerController*                    NewPlayer;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.GetNumSpectators
struct AEngine_GameModeBase_GetNumSpectators_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.GetNumPlayers
struct AEngine_GameModeBase_GetNumPlayers_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.GetDefaultPawnClassForController
struct AEngine_GameModeBase_GetDefaultPawnClassForController_Params
{
	class AEngine_Controller*                          InController;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.FindPlayerStart
struct AEngine_GameModeBase_FindPlayerStart_Params
{
	class AEngine_Controller*                          Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     IncomingName;                                             // (Parm, ZeroConstructor)
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.ChoosePlayerStart
struct AEngine_GameModeBase_ChoosePlayerStart_Params
{
	class AEngine_Controller*                          Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameModeBase.ChangeName
struct AEngine_GameModeBase_ChangeName_Params
{
	class AEngine_Controller*                          Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     NewName;                                                  // (Parm, ZeroConstructor)
	bool                                               bNameChange;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameModeBase.CanSpectate
struct AEngine_GameModeBase_CanSpectate_Params
{
	class AEngine_PlayerController*                    Viewer;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_PlayerState*                         ViewTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.UnloadStreamLevel
struct UEngine_GameplayStatics_UnloadStreamLevel_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       LevelName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_LatentActionInfo                    LatentInfo;                                               // (Parm)
	bool                                               bShouldBlockOnUnload;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SuggestProjectileVelocity_CustomArc
struct UEngine_GameplayStatics_SuggestProjectileVelocity_CustomArc_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutLaunchVelocity;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartPos;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndPos;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OverrideGravityZ;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ArcParam;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnSoundAttached
struct UEngine_GameplayStatics_SpawnSoundAttached_Params
{
	class UEngine_SoundBase*                           Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SceneComponent*                      AttachToComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EAttachLocation>        LocationType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bStopWhenAttachedToDestroyed;                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundAttenuation*                    AttenuationSettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundConcurrency*                    ConcurrencySettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AudioComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnSoundAtLocation
struct UEngine_GameplayStatics_SpawnSoundAtLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundBase*                           Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundAttenuation*                    AttenuationSettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundConcurrency*                    ConcurrencySettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AudioComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnSound2D
struct UEngine_GameplayStatics_SpawnSound2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundBase*                           Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundConcurrency*                    ConcurrencySettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPersistAcrossLevelTransition;                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AudioComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnObject
struct UEngine_GameplayStatics_SpawnObject_Params
{
	class UClass*                                      ObjectClass;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     Outer;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnForceFeedbackAttached
struct UEngine_GameplayStatics_SpawnForceFeedbackAttached_Params
{
	class UEngine_ForceFeedbackEffect*                 ForceFeedbackEffect;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SceneComponent*                      AttachToComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EAttachLocation>        LocationType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bStopWhenAttachedToDestroyed;                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLooping;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              IntensityMultiplier;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ForceFeedbackAttenuation*            AttenuationSettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ForceFeedbackComponent*              ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnForceFeedbackAtLocation
struct UEngine_GameplayStatics_SpawnForceFeedbackAtLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ForceFeedbackEffect*                 ForceFeedbackEffect;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLooping;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              IntensityMultiplier;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ForceFeedbackAttenuation*            AttenuationSettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ForceFeedbackComponent*              ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnEmitterAttached
struct UEngine_GameplayStatics_SpawnEmitterAttached_Params
{
	class UEngine_ParticleSystem*                      EmitterTemplate;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SceneComponent*                      AttachToComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EAttachLocation>        LocationType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EPSCPoolMethod                      PoolingMethod;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoActivate;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ParticleSystemComponent*             ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnEmitterAtLocation
struct UEngine_GameplayStatics_SpawnEmitterAtLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ParticleSystem*                      EmitterTemplate;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EPSCPoolMethod                      PoolingMethod;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoActivateSystem;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ParticleSystemComponent*             ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnDialogueAttached
struct UEngine_GameplayStatics_SpawnDialogueAttached_Params
{
	class UEngine_DialogueWave*                        Dialogue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_DialogueContext                     Context;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	class UEngine_SceneComponent*                      AttachToComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EAttachLocation>        LocationType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bStopWhenAttachedToDestroyed;                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundAttenuation*                    AttenuationSettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AudioComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnDialogueAtLocation
struct UEngine_GameplayStatics_SpawnDialogueAtLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_DialogueWave*                        Dialogue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_DialogueContext                     Context;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundAttenuation*                    AttenuationSettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AudioComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnDialogue2D
struct UEngine_GameplayStatics_SpawnDialogue2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_DialogueWave*                        Dialogue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_DialogueContext                     Context;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AudioComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnDecalAttached
struct UEngine_GameplayStatics_SpawnDecalAttached_Params
{
	class UEngine_MaterialInterface*                   DecalMaterial;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DecalSize;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SceneComponent*                      AttachToComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       AttachPointName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EAttachLocation>        LocationType;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LifeSpan;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_DecalComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SpawnDecalAtLocation
struct UEngine_GameplayStatics_SpawnDecalAtLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   DecalMaterial;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DecalSize;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LifeSpan;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_DecalComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetWorldOriginLocation
struct UEngine_GameplayStatics_SetWorldOriginLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FIntVector                                  NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetViewportMouseCaptureMode
struct UEngine_GameplayStatics_SetViewportMouseCaptureMode_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EMouseCaptureMode                   MouseCaptureMode;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetSubtitlesEnabled
struct UEngine_GameplayStatics_SetSubtitlesEnabled_Params
{
	bool                                               bEnabled;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetSoundMixClassOverride
struct UEngine_GameplayStatics_SetSoundMixClassOverride_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundMix*                            InSoundMixModifier;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundClass*                          InSoundClass;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeInTime;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyToChildren;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetPlayerControllerID
struct UEngine_GameplayStatics_SetPlayerControllerID_Params
{
	class AEngine_PlayerController*                    Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ControllerId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetMaxAudioChannelsScaled
struct UEngine_GameplayStatics_SetMaxAudioChannelsScaled_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxChannelCountScale;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetGlobalTimeDilation
struct UEngine_GameplayStatics_SetGlobalTimeDilation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              timeDilation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetGlobalPitchModulation
struct UEngine_GameplayStatics_SetGlobalPitchModulation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchModulation;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TimeSec;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetGlobalListenerFocusParameters
struct UEngine_GameplayStatics_SetGlobalListenerFocusParameters_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              FocusAzimuthScale;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NonFocusAzimuthScale;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FocusDistanceScale;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NonFocusDistanceScale;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FocusVolumeScale;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NonFocusVolumeScale;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FocusPriorityScale;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              NonFocusPriorityScale;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetGamePaused
struct UEngine_GameplayStatics_SetGamePaused_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPaused;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetForceDisableSplitscreen
struct UEngine_GameplayStatics_SetForceDisableSplitscreen_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDisable;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetEnableWorldRendering
struct UEngine_GameplayStatics_SetEnableWorldRendering_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SetBaseSoundMix
struct UEngine_GameplayStatics_SetBaseSoundMix_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundMix*                            InSoundMix;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.SaveGameToSlot
struct UEngine_GameplayStatics_SaveGameToSlot_Params
{
	class UEngine_SaveGame*                            SaveGameObject;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     SlotName;                                                 // (Parm, ZeroConstructor)
	int                                                UserIndex;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.RemovePlayer
struct UEngine_GameplayStatics_RemovePlayer_Params
{
	class AEngine_PlayerController*                    Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyPawn;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.RebaseZeroOriginOntoLocal
struct UEngine_GameplayStatics_RebaseZeroOriginOntoLocal_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.RebaseLocalOriginOntoZero
struct UEngine_GameplayStatics_RebaseLocalOriginOntoZero_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.PushSoundMixModifier
struct UEngine_GameplayStatics_PushSoundMixModifier_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundMix*                            InSoundMixModifier;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.ProjectWorldToScreen
struct UEngine_GameplayStatics_ProjectWorldToScreen_Params
{
	class AEngine_PlayerController*                    Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldPosition;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector2D                                   ScreenPosition;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayerViewportRelative;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.PrimeSound
struct UEngine_GameplayStatics_PrimeSound_Params
{
	class UEngine_SoundBase*                           InSound;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.PopSoundMixModifier
struct UEngine_GameplayStatics_PopSoundMixModifier_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundMix*                            InSoundMixModifier;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.PlayWorldCameraShake
struct UEngine_GameplayStatics_PlayWorldCameraShake_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Shake;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Epicenter;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InnerRadius;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OuterRadius;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Falloff;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOrientShakeTowardsEpicenter;                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.PlaySoundAtLocation
struct UEngine_GameplayStatics_PlaySoundAtLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundBase*                           Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundAttenuation*                    AttenuationSettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundConcurrency*                    ConcurrencySettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               OwningActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.PlaySound2D
struct UEngine_GameplayStatics_PlaySound2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundBase*                           Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundConcurrency*                    ConcurrencySettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               OwningActor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.PlayDialogueAtLocation
struct UEngine_GameplayStatics_PlayDialogueAtLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_DialogueWave*                        Dialogue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_DialogueContext                     Context;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundAttenuation*                    AttenuationSettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.PlayDialogue2D
struct UEngine_GameplayStatics_PlayDialogue2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_DialogueWave*                        Dialogue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_DialogueContext                     Context;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.ParseOption
struct UEngine_GameplayStatics_ParseOption_Params
{
	struct FString                                     Options;                                                  // (Parm, ZeroConstructor)
	struct FString                                     Key;                                                      // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.GameplayStatics.OpenLevel
struct UEngine_GameplayStatics_OpenLevel_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       LevelName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAbsolute;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Options;                                                  // (Parm, ZeroConstructor)
};

// Function Engine.GameplayStatics.MakeHitResult
struct UEngine_GameplayStatics_MakeHitResult_Params
{
	bool                                               bBlockingHit;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInitialOverlap;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ImpactPoint;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Normal;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ImpactNormal;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PhysicalMaterial*                    PhysMat;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               HitActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  HitComponent;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       HitBoneName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                HitItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                FaceIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceStart;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceEnd;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.LoadStreamLevel
struct UEngine_GameplayStatics_LoadStreamLevel_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       LevelName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bMakeVisibleAfterLoad;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldBlockOnLoad;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_LatentActionInfo                    LatentInfo;                                               // (Parm)
};

// Function Engine.GameplayStatics.LoadGameFromSlot
struct UEngine_GameplayStatics_LoadGameFromSlot_Params
{
	struct FString                                     SlotName;                                                 // (Parm, ZeroConstructor)
	int                                                UserIndex;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SaveGame*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.LH_DisableUpdateStreamingState
struct UEngine_GameplayStatics_LH_DisableUpdateStreamingState_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               disableUpdateStreamingState;                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.IsSplitscreenForceDisabled
struct UEngine_GameplayStatics_IsSplitscreenForceDisabled_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.IsGamePaused
struct UEngine_GameplayStatics_IsGamePaused_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.HasOption
struct UEngine_GameplayStatics_HasOption_Params
{
	struct FString                                     Options;                                                  // (Parm, ZeroConstructor)
	struct FString                                     InKey;                                                    // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.HasLaunchOption
struct UEngine_GameplayStatics_HasLaunchOption_Params
{
	struct FString                                     OptionToCheck;                                            // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GrassOverlappingSphereCount
struct UEngine_GameplayStatics_GrassOverlappingSphereCount_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_StaticMesh*                          StaticMesh;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CenterPosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetWorldOriginLocation
struct UEngine_GameplayStatics_GetWorldOriginLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FIntVector                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetWorldDeltaSeconds
struct UEngine_GameplayStatics_GetWorldDeltaSeconds_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetViewProjectionMatrix
struct UEngine_GameplayStatics_GetViewProjectionMatrix_Params
{
	struct FEngine_MinimalViewInfo                     DesiredView;                                              // (Parm)
	struct FMatrix                                     ViewMatrix;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FMatrix                                     ProjectionMatrix;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FMatrix                                     ViewProjectionMatrix;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetViewportMouseCaptureMode
struct UEngine_GameplayStatics_GetViewportMouseCaptureMode_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EMouseCaptureMode                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetUnpausedTimeSeconds
struct UEngine_GameplayStatics_GetUnpausedTimeSeconds_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetTimeSeconds
struct UEngine_GameplayStatics_GetTimeSeconds_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetSurfaceType
struct UEngine_GameplayStatics_GetSurfaceType_Params
{
	struct FEngine_HitResult                           Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EPhysicalSurface>       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetStreamingLevel
struct UEngine_GameplayStatics_GetStreamingLevel_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PackageName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_LevelStreaming*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetRealTimeSeconds
struct UEngine_GameplayStatics_GetRealTimeSeconds_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetPlayerPawn
struct UEngine_GameplayStatics_GetPlayerPawn_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                PlayerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Pawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetPlayerControllerID
struct UEngine_GameplayStatics_GetPlayerControllerID_Params
{
	class AEngine_PlayerController*                    Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetPlayerControllerFromID
struct UEngine_GameplayStatics_GetPlayerControllerFromID_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ControllerId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_PlayerController*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetPlayerController
struct UEngine_GameplayStatics_GetPlayerController_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                PlayerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_PlayerController*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetPlayerCharacter
struct UEngine_GameplayStatics_GetPlayerCharacter_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                PlayerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Character*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetPlayerCameraManager
struct UEngine_GameplayStatics_GetPlayerCameraManager_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                PlayerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_PlayerCameraManager*                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetPlatformName
struct UEngine_GameplayStatics_GetPlatformName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.GameplayStatics.GetObjectClass
struct UEngine_GameplayStatics_GetObjectClass_Params
{
	class UObject*                                     Object;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetMaxAudioChannelCount
struct UEngine_GameplayStatics_GetMaxAudioChannelCount_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetKeyValue
struct UEngine_GameplayStatics_GetKeyValue_Params
{
	struct FString                                     Pair;                                                     // (Parm, ZeroConstructor)
	struct FString                                     Key;                                                      // (Parm, OutParm, ZeroConstructor)
	struct FString                                     Value;                                                    // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.GameplayStatics.GetIntOption
struct UEngine_GameplayStatics_GetIntOption_Params
{
	struct FString                                     Options;                                                  // (Parm, ZeroConstructor)
	struct FString                                     Key;                                                      // (Parm, ZeroConstructor)
	int                                                DefaultValue;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetGlobalTimeDilation
struct UEngine_GameplayStatics_GetGlobalTimeDilation_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetGameState
struct UEngine_GameplayStatics_GetGameState_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_GameStateBase*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetGameMode
struct UEngine_GameplayStatics_GetGameMode_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_GameModeBase*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetGameInstance
struct UEngine_GameplayStatics_GetGameInstance_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_GameInstance*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetEnableWorldRendering
struct UEngine_GameplayStatics_GetEnableWorldRendering_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetCurrentReverbEffect
struct UEngine_GameplayStatics_GetCurrentReverbEffect_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ReverbEffect*                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetCurrentLevelName
struct UEngine_GameplayStatics_GetCurrentLevelName_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRemovePrefixString;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.GameplayStatics.GetAudioTimeSeconds
struct UEngine_GameplayStatics_GetAudioTimeSeconds_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetAllActorsWithTag
struct UEngine_GameplayStatics_GetAllActorsWithTag_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Tag;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       OutActors;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.GameplayStatics.GetAllActorsWithInterface
struct UEngine_GameplayStatics_GetAllActorsWithInterface_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Interface;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       OutActors;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.GameplayStatics.GetAllActorsOfClassWithTag
struct UEngine_GameplayStatics_GetAllActorsOfClassWithTag_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ActorClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Tag;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       OutActors;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.GameplayStatics.GetAllActorsOfClass
struct UEngine_GameplayStatics_GetAllActorsOfClass_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ActorClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       OutActors;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.GameplayStatics.GetActorOfClass
struct UEngine_GameplayStatics_GetActorOfClass_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ActorClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetActorArrayBounds
struct UEngine_GameplayStatics_GetActorArrayBounds_Params
{
	TArray<class AEngine_Actor*>                       Actors;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bOnlyCollidingComponents;                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Center;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoxExtent;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetActorArrayAverageLocation
struct UEngine_GameplayStatics_GetActorArrayAverageLocation_Params
{
	TArray<class AEngine_Actor*>                       Actors;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.GetAccurateRealTime
struct UEngine_GameplayStatics_GetAccurateRealTime_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                Seconds;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              PartialSeconds;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.FlushLevelStreaming
struct UEngine_GameplayStatics_FlushLevelStreaming_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.FinishSpawningActor
struct UEngine_GameplayStatics_FinishSpawningActor_Params
{
	class AEngine_Actor*                               Actor;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.FindCollisionUV
struct UEngine_GameplayStatics_FindCollisionUV_Params
{
	struct FEngine_HitResult                           Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	int                                                UVChannel;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   UV;                                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.EnableLiveStreaming
struct UEngine_GameplayStatics_EnableLiveStreaming_Params
{
	bool                                               Enable;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.DoesSaveGameExist
struct UEngine_GameplayStatics_DoesSaveGameExist_Params
{
	struct FString                                     SlotName;                                                 // (Parm, ZeroConstructor)
	int                                                UserIndex;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.DeprojectScreenToWorld
struct UEngine_GameplayStatics_DeprojectScreenToWorld_Params
{
	class AEngine_PlayerController*                    Player;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenPosition;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     WorldPosition;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldDirection;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.DeleteGameInSlot
struct UEngine_GameplayStatics_DeleteGameInSlot_Params
{
	struct FString                                     SlotName;                                                 // (Parm, ZeroConstructor)
	int                                                UserIndex;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.DeactivateReverbEffect
struct UEngine_GameplayStatics_DeactivateReverbEffect_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       TagName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.CreateSound2D
struct UEngine_GameplayStatics_CreateSound2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundBase*                           Sound;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundConcurrency*                    ConcurrencySettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPersistAcrossLevelTransition;                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoDestroy;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AudioComponent*                      ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.GameplayStatics.CreateSaveGameObject
struct UEngine_GameplayStatics_CreateSaveGameObject_Params
{
	class UClass*                                      SaveGameClass;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SaveGame*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.CreatePlayer
struct UEngine_GameplayStatics_CreatePlayer_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	int                                                ControllerId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnPlayerController;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_PlayerController*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.ClearSoundMixModifiers
struct UEngine_GameplayStatics_ClearSoundMixModifiers_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.ClearSoundMixClassOverride
struct UEngine_GameplayStatics_ClearSoundMixClassOverride_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundMix*                            InSoundMixModifier;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SoundClass*                          InSoundClass;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeOutTime;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.CancelAsyncLoading
struct UEngine_GameplayStatics_CancelAsyncLoading_Params
{
};

// Function Engine.GameplayStatics.BreakHitResult
struct UEngine_GameplayStatics_BreakHitResult_Params
{
	struct FEngine_HitResult                           Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bBlockingHit;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bInitialOverlap;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ImpactPoint;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Normal;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ImpactNormal;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UEngine_PhysicalMaterial*                    PhysMat;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               HitActor;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  HitComponent;                                             // (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       HitBoneName;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                HitItem;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                FaceIndex;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceStart;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceEnd;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameplayStatics.BlueprintSuggestProjectileVelocity
struct UEngine_GameplayStatics_BlueprintSuggestProjectileVelocity_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TossVelocity;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LaunchSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OverrideGravityZ;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ESuggestProjVelocityTraceOption> TraceOption;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              CollisionRadius;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFavorHighArc;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawDebug;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_ByTraceChannel
struct UEngine_GameplayStatics_Blueprint_PredictProjectilePath_ByTraceChannel_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	TArray<struct FVector>                             OutPathPositions;                                         // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     OutLastTraceDestination;                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartPos;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LaunchVelocity;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTracePath;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileRadius;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ECollisionChannel>      TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawDebugTime;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SimFrequency;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxSimTime;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OverrideGravityZ;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_ByObjectType
struct UEngine_GameplayStatics_Blueprint_PredictProjectilePath_ByObjectType_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	TArray<struct FVector>                             OutPathPositions;                                         // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     OutLastTraceDestination;                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartPos;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LaunchVelocity;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTracePath;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileRadius;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawDebugTime;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SimFrequency;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxSimTime;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OverrideGravityZ;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_Advanced
struct UEngine_GameplayStatics_Blueprint_PredictProjectilePath_Advanced_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_PredictProjectilePathParams         PredictParams;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FEngine_PredictProjectilePathResult         PredictResult;                                            // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.BeginSpawningActorFromClass
struct UEngine_GameplayStatics_BeginSpawningActorFromClass_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ActorClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bNoCollisionFail;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               Owner;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.BeginSpawningActorFromBlueprint
struct UEngine_GameplayStatics_BeginSpawningActorFromBlueprint_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Blueprint*                           Blueprint;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bNoCollisionFail;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.BeginDeferredActorSpawnFromClass
struct UEngine_GameplayStatics_BeginDeferredActorSpawnFromClass_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ActorClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  SpawnTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	FEngine_Engine_ESpawnActorCollisionHandlingMethod  CollisionHandlingOverride;                                // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               Owner;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.AreSubtitlesEnabled
struct UEngine_GameplayStatics_AreSubtitlesEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.AreAnyListenersWithinRange
struct UEngine_GameplayStatics_AreAnyListenersWithinRange_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaximumRange;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.ApplyRadialDamageWithFalloff
struct UEngine_GameplayStatics_ApplyRadialDamageWithFalloff_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              BaseDamage;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinimumDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Origin;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              DamageInnerRadius;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DamageOuterRadius;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DamageFalloff;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageTypeClass;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       IgnoreActors;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AEngine_Actor*                               DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Controller*                          InstigatedByController;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ECollisionChannel>      DamagePreventionChannel;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.ApplyRadialDamage
struct UEngine_GameplayStatics_ApplyRadialDamage_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              BaseDamage;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Origin;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              DamageRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageTypeClass;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       IgnoreActors;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AEngine_Actor*                               DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Controller*                          InstigatedByController;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDoFullDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ECollisionChannel>      DamagePreventionChannel;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.ApplyPointDamage
struct UEngine_GameplayStatics_ApplyPointDamage_Params
{
	class AEngine_Actor*                               DamagedActor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BaseDamage;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HitFromDirection;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FEngine_HitResult                           HitInfo;                                                  // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	class AEngine_Controller*                          EventInstigator;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageTypeClass;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.ApplyDamage
struct UEngine_GameplayStatics_ApplyDamage_Params
{
	class AEngine_Actor*                               DamagedActor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BaseDamage;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Controller*                          EventInstigator;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               DamageCauser;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageTypeClass;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameplayStatics.ActivateReverbEffect
struct UEngine_GameplayStatics_ActivateReverbEffect_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ReverbEffect*                        ReverbEffect;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       TagName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameViewportClient.SSSwapControllers
struct UEngine_GameViewportClient_SSSwapControllers_Params
{
};

// Function Engine.GameViewportClient.ShowTitleSafeArea
struct UEngine_GameViewportClient_ShowTitleSafeArea_Params
{
};

// Function Engine.GameViewportClient.SetConsoleTarget
struct UEngine_GameViewportClient_SetConsoleTarget_Params
{
	int                                                PlayerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StaticMeshActor.SetMobility
struct AEngine_StaticMeshActor_SetMobility_Params
{
	TEnumAsByte<FEngine_Engine_EComponentMobility>     InMobility;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.ShowHUD
struct AEngine_HUD_ShowHUD_Params
{
};

// Function Engine.HUD.ShowDebugToggleSubCategory
struct AEngine_HUD_ShowDebugToggleSubCategory_Params
{
	struct FName                                       Category;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.ShowDebugForReticleTargetToggle
struct AEngine_HUD_ShowDebugForReticleTargetToggle_Params
{
	class UClass*                                      DesiredClass;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.ShowDebug
struct AEngine_HUD_ShowDebug_Params
{
	struct FName                                       DebugType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.RemoveDebugText
struct AEngine_HUD_RemoveDebugText_Params
{
	class AEngine_Actor*                               SrcActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLeaveDurationText;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.RemoveAllDebugStrings
struct AEngine_HUD_RemoveAllDebugStrings_Params
{
};

// Function Engine.HUD.ReceiveHitBoxRelease
struct AEngine_HUD_ReceiveHitBoxRelease_Params
{
	struct FName                                       BoxName;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.ReceiveHitBoxEndCursorOver
struct AEngine_HUD_ReceiveHitBoxEndCursorOver_Params
{
	struct FName                                       BoxName;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.ReceiveHitBoxClick
struct AEngine_HUD_ReceiveHitBoxClick_Params
{
	struct FName                                       BoxName;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.ReceiveHitBoxBeginCursorOver
struct AEngine_HUD_ReceiveHitBoxBeginCursorOver_Params
{
	struct FName                                       BoxName;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.ReceiveDrawHUD
struct AEngine_HUD_ReceiveDrawHUD_Params
{
	int                                                SizeX;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SizeY;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.Project
struct AEngine_HUD_Project_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.HUD.PreviousDebugTarget
struct AEngine_HUD_PreviousDebugTarget_Params
{
};

// Function Engine.HUD.NextDebugTarget
struct AEngine_HUD_NextDebugTarget_Params
{
};

// Function Engine.HUD.GetTextSize
struct AEngine_HUD_GetTextSize_Params
{
	struct FString                                     Text;                                                     // (Parm, ZeroConstructor)
	float                                              OutWidth;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutHeight;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UEngine_Font*                                Font;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.GetOwningPlayerController
struct AEngine_HUD_GetOwningPlayerController_Params
{
	class AEngine_PlayerController*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.HUD.GetOwningPawn
struct AEngine_HUD_GetOwningPawn_Params
{
	class AEngine_Pawn*                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.HUD.GetActorsInSelectionRectangle
struct AEngine_HUD_GetActorsInSelectionRectangle_Params
{
	class UClass*                                      ClassFilter;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   FirstPoint;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector2D                                   SecondPoint;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TArray<class AEngine_Actor*>                       OutActors;                                                // (Parm, OutParm, ZeroConstructor)
	bool                                               bIncludeNonCollidingComponents;                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bActorMustBeFullyEnclosed;                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.DrawTextureSimple
struct AEngine_HUD_DrawTextureSimple_Params
{
	class UEngine_Texture*                             Texture;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenX;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenY;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bScalePosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.DrawTexture
struct AEngine_HUD_DrawTexture_Params
{
	class UEngine_Texture*                             Texture;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenX;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenY;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenW;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenH;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TextureU;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TextureV;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TextureUWidth;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TextureVHeight;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TintColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EBlendMode>             BlendMode;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bScalePosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RotPivot;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.DrawText
struct AEngine_HUD_DrawText_Params
{
	struct FString                                     Text;                                                     // (Parm, ZeroConstructor)
	struct FLinearColor                                TextColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenX;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenY;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Font*                                Font;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bScalePosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.DrawRect
struct AEngine_HUD_DrawRect_Params
{
	struct FLinearColor                                RectColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenX;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenY;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenW;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenH;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.DrawMaterialTriangle
struct AEngine_HUD_DrawMaterialTriangle_Params
{
	class UEngine_MaterialInterface*                   Material;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V0_Pos;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V1_Pos;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V2_Pos;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V0_UV;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V1_UV;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V2_UV;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                V0_Color;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                V1_Color;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                V2_Color;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.DrawMaterialSimple
struct AEngine_HUD_DrawMaterialSimple_Params
{
	class UEngine_MaterialInterface*                   Material;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenX;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenY;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenW;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenH;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bScalePosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.DrawMaterial
struct AEngine_HUD_DrawMaterial_Params
{
	class UEngine_MaterialInterface*                   Material;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenX;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenY;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenW;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenH;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaterialU;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaterialV;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaterialUWidth;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaterialVHeight;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bScalePosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RotPivot;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.DrawLine
struct AEngine_HUD_DrawLine_Params
{
	float                                              StartScreenX;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StartScreenY;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              EndScreenX;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              EndScreenY;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LineThickness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.Deproject
struct AEngine_HUD_Deproject_Params
{
	float                                              ScreenX;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ScreenY;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldPosition;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldDirection;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.AddHitBox
struct AEngine_HUD_AddHitBox_Params
{
	struct FVector2D                                   Position;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Size;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bConsumesInput;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Priority;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HUD.AddDebugText
struct AEngine_HUD_AddDebugText_Params
{
	struct FString                                     DebugText;                                                // (Parm, ZeroConstructor)
	class AEngine_Actor*                               SrcActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Offset;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DesiredOffset;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FColor                                      TextColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipOverwriteCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAbsoluteLocation;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bKeepAttachedToActor;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Font*                                InFont;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FontScale;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawShadow;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ChildActorComponent.SetChildActorClass
struct UEngine_ChildActorComponent_SetChildActorClass_Params
{
	class UClass*                                      InClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LevelScriptActor.WorldOriginLocationChanged
struct AEngine_LevelScriptActor_WorldOriginLocationChanged_Params
{
	struct FIntVector                                  OldOriginLocation;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FIntVector                                  NewOriginLocation;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LevelScriptActor.SetCinematicMode
struct AEngine_LevelScriptActor_SetCinematicMode_Params
{
	bool                                               bCinematicMode;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bHidePlayer;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsHUD;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsMovement;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsTurning;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LevelScriptActor.RemoteEvent
struct AEngine_LevelScriptActor_RemoteEvent_Params
{
	struct FName                                       EventName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LevelScriptActor.LevelReset
struct AEngine_LevelScriptActor_LevelReset_Params
{
};

// Function Engine.PlayerCameraManager.StopCameraShake
struct AEngine_PlayerCameraManager_StopCameraShake_Params
{
	class UEngine_CameraShake*                         ShakeInstance;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bImmediately;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.StopCameraFade
struct AEngine_PlayerCameraManager_StopCameraFade_Params
{
};

// Function Engine.PlayerCameraManager.StopCameraAnimInst
struct AEngine_PlayerCameraManager_StopCameraAnimInst_Params
{
	class UEngine_CameraAnimInst*                      AnimInst;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bImmediate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.StopAllInstancesOfCameraShake
struct AEngine_PlayerCameraManager_StopAllInstancesOfCameraShake_Params
{
	class UClass*                                      Shake;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bImmediately;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.StopAllInstancesOfCameraAnim
struct AEngine_PlayerCameraManager_StopAllInstancesOfCameraAnim_Params
{
	class UEngine_CameraAnim*                          Anim;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bImmediate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.StopAllCameraShakes
struct AEngine_PlayerCameraManager_StopAllCameraShakes_Params
{
	bool                                               bImmediately;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.StopAllCameraAnims
struct AEngine_PlayerCameraManager_StopAllCameraAnims_Params
{
	bool                                               bImmediate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.StartCameraFade
struct AEngine_PlayerCameraManager_StartCameraFade_Params
{
	float                                              FromAlpha;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ToAlpha;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldFadeAudio;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bHoldWhenFinished;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.SetManualCameraFade
struct AEngine_PlayerCameraManager_SetManualCameraFade_Params
{
	float                                              InFadeAmount;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bInFadeAudio;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.SetGameCameraCutThisFrame
struct AEngine_PlayerCameraManager_SetGameCameraCutThisFrame_Params
{
};

// Function Engine.PlayerCameraManager.RemoveCameraModifier
struct AEngine_PlayerCameraManager_RemoveCameraModifier_Params
{
	class UEngine_CameraModifier*                      ModifierToRemove;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.RemoveCameraLensEffect
struct AEngine_PlayerCameraManager_RemoveCameraLensEffect_Params
{
	class AEngine_EmitterCameraLensEffectBase*         Emitter;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.PlayCameraShake
struct AEngine_PlayerCameraManager_PlayCameraShake_Params
{
	class UClass*                                      ShakeClass;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ECameraAnimPlaySpace>   PlaySpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    UserPlaySpaceRot;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_CameraShake*                         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.PlayCameraAnim
struct AEngine_PlayerCameraManager_PlayCameraAnim_Params
{
	class UEngine_CameraAnim*                          Anim;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Rate;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendInTime;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRandomStartTime;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ECameraAnimPlaySpace>   PlaySpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    UserPlaySpaceRot;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_CameraAnimInst*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.PhotographyCameraModify
struct AEngine_PlayerCameraManager_PhotographyCameraModify_Params
{
	struct FVector                                     NewCameraLocation;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PreviousCameraLocation;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OriginalCameraLocation;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ResultCameraLocation;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.OnPhotographySessionStart
struct AEngine_PlayerCameraManager_OnPhotographySessionStart_Params
{
};

// Function Engine.PlayerCameraManager.OnPhotographySessionEnd
struct AEngine_PlayerCameraManager_OnPhotographySessionEnd_Params
{
};

// Function Engine.PlayerCameraManager.OnPhotographyMultiPartCaptureStart
struct AEngine_PlayerCameraManager_OnPhotographyMultiPartCaptureStart_Params
{
};

// Function Engine.PlayerCameraManager.OnPhotographyMultiPartCaptureEnd
struct AEngine_PlayerCameraManager_OnPhotographyMultiPartCaptureEnd_Params
{
};

// Function Engine.PlayerCameraManager.GetOwningPlayerController
struct AEngine_PlayerCameraManager_GetOwningPlayerController_Params
{
	class AEngine_PlayerController*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.GetFOVAngle
struct AEngine_PlayerCameraManager_GetFOVAngle_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.GetCameraRotation
struct AEngine_PlayerCameraManager_GetCameraRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.GetCameraLocation
struct AEngine_PlayerCameraManager_GetCameraLocation_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.FindCameraModifierByClass
struct AEngine_PlayerCameraManager_FindCameraModifierByClass_Params
{
	class UClass*                                      ModifierClass;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_CameraModifier*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.ClearCameraLensEffects
struct AEngine_PlayerCameraManager_ClearCameraLensEffects_Params
{
};

// Function Engine.PlayerCameraManager.BlueprintUpdateCamera
struct AEngine_PlayerCameraManager_BlueprintUpdateCamera_Params
{
	class AEngine_Actor*                               CameraTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewCameraLocation;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    NewCameraRotation;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              NewCameraFOV;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.AddNewCameraModifier
struct AEngine_PlayerCameraManager_AddNewCameraModifier_Params
{
	class UClass*                                      ModifierClass;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_CameraModifier*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlayerCameraManager.AddCameraLensEffect
struct AEngine_PlayerCameraManager_AddCameraLensEffect_Params
{
	class UClass*                                      LensEffectEmitterClass;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_EmitterCameraLensEffectBase*         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.WorldSettings.OnRep_WorldGravityZ
struct AEngine_WorldSettings_OnRep_WorldGravityZ_Params
{
};

// Function Engine.GameMode.StartMatch
struct AEngine_GameMode_StartMatch_Params
{
};

// Function Engine.GameMode.SetBandwidthLimit
struct AEngine_GameMode_SetBandwidthLimit_Params
{
	float                                              AsyncIOBandwidthLimit;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameMode.Say
struct AEngine_GameMode_Say_Params
{
	struct FString                                     Msg;                                                      // (Parm, ZeroConstructor)
};

// Function Engine.GameMode.RestartGame
struct AEngine_GameMode_RestartGame_Params
{
};

// Function Engine.GameMode.ReadyToStartMatch
struct AEngine_GameMode_ReadyToStartMatch_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameMode.ReadyToEndMatch
struct AEngine_GameMode_ReadyToEndMatch_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameMode.K2_OnSetMatchState
struct AEngine_GameMode_K2_OnSetMatchState_Params
{
	struct FName                                       NewState;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameMode.IsMatchInProgress
struct AEngine_GameMode_IsMatchInProgress_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameMode.HasMatchEnded
struct AEngine_GameMode_HasMatchEnded_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameMode.GetMatchState
struct AEngine_GameMode_GetMatchState_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameMode.EndMatch
struct AEngine_GameMode_EndMatch_Params
{
};

// Function Engine.GameMode.AbortMatch
struct AEngine_GameMode_AbortMatch_Params
{
};

// Function Engine.GameStateBase.OnRep_SpectatorClass
struct AEngine_GameStateBase_OnRep_SpectatorClass_Params
{
};

// Function Engine.GameStateBase.OnRep_ReplicatedWorldTimeSeconds
struct AEngine_GameStateBase_OnRep_ReplicatedWorldTimeSeconds_Params
{
};

// Function Engine.GameStateBase.OnRep_ReplicatedHasBegunPlay
struct AEngine_GameStateBase_OnRep_ReplicatedHasBegunPlay_Params
{
};

// Function Engine.GameStateBase.OnRep_GameModeClass
struct AEngine_GameStateBase_OnRep_GameModeClass_Params
{
};

// Function Engine.GameStateBase.HasMatchStarted
struct AEngine_GameStateBase_HasMatchStarted_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameStateBase.HasBegunPlay
struct AEngine_GameStateBase_HasBegunPlay_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameStateBase.GetServerWorldTimeSeconds
struct AEngine_GameStateBase_GetServerWorldTimeSeconds_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameStateBase.GetPlayerStartTime
struct AEngine_GameStateBase_GetPlayerStartTime_Params
{
	class AEngine_Controller*                          Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameStateBase.GetPlayerRespawnDelay
struct AEngine_GameStateBase_GetPlayerRespawnDelay_Params
{
	class AEngine_Controller*                          Controller;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameState.OnRep_MatchState
struct AEngine_GameState_OnRep_MatchState_Params
{
};

// Function Engine.GameState.OnRep_ElapsedTime
struct AEngine_GameState_OnRep_ElapsedTime_Params
{
};

// Function Engine.SkyLight.OnRep_bEnabled
struct AEngine_SkyLight_OnRep_bEnabled_Params
{
};

// Function Engine.StaticMeshComponent.SetStaticMesh
struct UEngine_StaticMeshComponent_SetStaticMesh_Params
{
	class UEngine_StaticMesh*                          NewMesh;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMeshComponent.SetReverseCulling
struct UEngine_StaticMeshComponent_SetReverseCulling_Params
{
	bool                                               ReverseCulling;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StaticMeshComponent.SetForcedLodModel
struct UEngine_StaticMeshComponent_SetForcedLodModel_Params
{
	int                                                NewForcedLodModel;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StaticMeshComponent.SetDistanceFieldSelfShadowBias
struct UEngine_StaticMeshComponent_SetDistanceFieldSelfShadowBias_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StaticMeshComponent.OnRep_StaticMesh
struct UEngine_StaticMeshComponent_OnRep_StaticMesh_Params
{
	class UEngine_StaticMesh*                          OldStaticMesh;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StaticMeshComponent.GetLocalBounds
struct UEngine_StaticMeshComponent_GetLocalBounds_Params
{
	struct FVector                                     Min;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Max;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InstancedStaticMeshComponent.UpdateInstanceTransform
struct UEngine_InstancedStaticMeshComponent_UpdateInstanceTransform_Params
{
	int                                                InstanceIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  NewInstanceTransform;                                     // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bWorldSpace;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bMarkRenderStateDirty;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InstancedStaticMeshComponent.SetCullDistances
struct UEngine_InstancedStaticMeshComponent_SetCullDistances_Params
{
	int                                                StartCullDistance;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                EndCullDistance;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InstancedStaticMeshComponent.RemoveInstance
struct UEngine_InstancedStaticMeshComponent_RemoveInstance_Params
{
	int                                                InstanceIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InstancedStaticMeshComponent.GetInstanceTransform
struct UEngine_InstancedStaticMeshComponent_GetInstanceTransform_Params
{
	int                                                InstanceIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  OutInstanceTransform;                                     // (Parm, OutParm, IsPlainOldData)
	bool                                               bWorldSpace;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InstancedStaticMeshComponent.GetInstancesOverlappingSphere
struct UEngine_InstancedStaticMeshComponent_GetInstancesOverlappingSphere_Params
{
	struct FVector                                     Center;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSphereInWorldSpace;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.InstancedStaticMeshComponent.GetInstancesOverlappingBox
struct UEngine_InstancedStaticMeshComponent_GetInstancesOverlappingBox_Params
{
	struct FBox                                        Box;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bBoxInWorldSpace;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.InstancedStaticMeshComponent.GetInstanceCount
struct UEngine_InstancedStaticMeshComponent_GetInstanceCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InstancedStaticMeshComponent.ClearInstances
struct UEngine_InstancedStaticMeshComponent_ClearInstances_Params
{
};

// Function Engine.InstancedStaticMeshComponent.BatchUpdateInstancesTransforms
struct UEngine_InstancedStaticMeshComponent_BatchUpdateInstancesTransforms_Params
{
	int                                                StartInstanceIndex;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FTransform>                          NewInstancesTransforms;                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bWorldSpace;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bMarkRenderStateDirty;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InstancedStaticMeshComponent.BatchUpdateInstancesTransform
struct UEngine_InstancedStaticMeshComponent_BatchUpdateInstancesTransform_Params
{
	int                                                StartInstanceIndex;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumInstances;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  NewInstancesTransform;                                    // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bWorldSpace;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bMarkRenderStateDirty;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTeleport;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InstancedStaticMeshComponent.AddInstanceWorldSpace
struct UEngine_InstancedStaticMeshComponent_AddInstanceWorldSpace_Params
{
	struct FTransform                                  WorldTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InstancedStaticMeshComponent.AddInstance
struct UEngine_InstancedStaticMeshComponent_AddInstance_Params
{
	struct FTransform                                  InstanceTransform;                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.HierarchicalInstancedStaticMeshComponent.RemoveInstances
struct UEngine_HierarchicalInstancedStaticMeshComponent_RemoveInstances_Params
{
	TArray<int>                                        InstancesToRemove;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MaterialInterface.SetForceMipLevelsToBeResident
struct UEngine_MaterialInterface_SetForceMipLevelsToBeResident_Params
{
	bool                                               OverrideForceMiplevelsToBeResident;                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForceMiplevelsToBeResidentValue;                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ForceDuration;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                CinematicTextureGroups;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFastResponse;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MaterialInterface.GetPhysicalMaterial
struct UEngine_MaterialInterface_GetPhysicalMaterial_Params
{
	class UEngine_PhysicalMaterial*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MaterialInterface.GetBaseMaterial
struct UEngine_MaterialInterface_GetBaseMaterial_Params
{
	class UEngine_Material*                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MaterialInstanceConstant.K2_GetVectorParameterValue
struct UEngine_MaterialInstanceConstant_K2_GetVectorParameterValue_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MaterialInstanceConstant.K2_GetTextureParameterValue
struct UEngine_MaterialInstanceConstant_K2_GetTextureParameterValue_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MaterialInstanceConstant.K2_GetScalarParameterValue
struct UEngine_MaterialInstanceConstant_K2_GetScalarParameterValue_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AmbientSound.Stop
struct AEngine_AmbientSound_Stop_Params
{
};

// Function Engine.AmbientSound.Play
struct AEngine_AmbientSound_Play_Params
{
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AmbientSound.FadeOut
struct AEngine_AmbientSound_FadeOut_Params
{
	float                                              FadeOutDuration;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeVolumeLevel;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AmbientSound.FadeIn
struct AEngine_AmbientSound_FadeIn_Params
{
	float                                              FadeInDuration;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FadeVolumeLevel;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AmbientSound.AdjustVolume
struct AEngine_AmbientSound_AdjustVolume_Params
{
	float                                              AdjustVolumeDuration;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AdjustVolumeLevel;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimSequenceBase.GetPlayLength
struct UEngine_AnimSequenceBase_GetPlayLength_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimMontage.GetDefaultBlendOutTime
struct UEngine_AnimMontage_GetDefaultBlendOutTime_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimNotifyState_Trail.OverridePSTemplate
struct UEngine_AnimNotifyState_Trail_OverridePSTemplate_Params
{
	class UEngine_SkeletalMeshComponent*               MeshComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UEngine_AnimSequenceBase*                    Animation;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_ParticleSystem*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.StopAnim
struct UEngine_AnimSingleNodeInstance_StopAnim_Params
{
};

// Function Engine.AnimSingleNodeInstance.SetReverse
struct UEngine_AnimSingleNodeInstance_SetReverse_Params
{
	bool                                               bInReverse;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.SetPreviewCurveOverride
struct UEngine_AnimSingleNodeInstance_SetPreviewCurveOverride_Params
{
	struct FName                                       PoseName;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRemoveIfZero;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.SetPositionWithPreviousTime
struct UEngine_AnimSingleNodeInstance_SetPositionWithPreviousTime_Params
{
	float                                              InPosition;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InPreviousTime;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFireNotifies;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.SetPosition
struct UEngine_AnimSingleNodeInstance_SetPosition_Params
{
	float                                              InPosition;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFireNotifies;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.SetPlayRate
struct UEngine_AnimSingleNodeInstance_SetPlayRate_Params
{
	float                                              InPlayRate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.SetPlaying
struct UEngine_AnimSingleNodeInstance_SetPlaying_Params
{
	bool                                               bIsPlaying;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.SetLooping
struct UEngine_AnimSingleNodeInstance_SetLooping_Params
{
	bool                                               bIsLooping;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.SetBlendSpaceInput
struct UEngine_AnimSingleNodeInstance_SetBlendSpaceInput_Params
{
	struct FVector                                     InBlendInput;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.SetAnimationAsset
struct UEngine_AnimSingleNodeInstance_SetAnimationAsset_Params
{
	class UEngine_AnimationAsset*                      NewAsset;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLooping;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InPlayRate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.PlayAnim
struct UEngine_AnimSingleNodeInstance_PlayAnim_Params
{
	bool                                               bIsLooping;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InPlayRate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InStartPosition;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.GetLength
struct UEngine_AnimSingleNodeInstance_GetLength_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AnimSingleNodeInstance.GetAnimationAsset
struct UEngine_AnimSingleNodeInstance_GetAnimationAsset_Params
{
	class UEngine_AnimationAsset*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ArrowComponent.SetArrowColor
struct UEngine_ArrowComponent_SetArrowColor_Params
{
	struct FLinearColor                                NewColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AsyncActionHandleSaveGame.AsyncSaveGameToSlot
struct UEngine_AsyncActionHandleSaveGame_AsyncSaveGameToSlot_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SaveGame*                            SaveGameObject;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     SlotName;                                                 // (Parm, ZeroConstructor)
	int                                                UserIndex;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AsyncActionHandleSaveGame*           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AsyncActionHandleSaveGame.AsyncLoadGameFromSlot
struct UEngine_AsyncActionHandleSaveGame_AsyncLoadGameFromSlot_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     SlotName;                                                 // (Parm, ZeroConstructor)
	int                                                UserIndex;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_AsyncActionHandleSaveGame*           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AsyncActionLoadPrimaryAssetClass.AsyncLoadPrimaryAssetClass
struct UEngine_AsyncActionLoadPrimaryAssetClass_AsyncLoadPrimaryAssetClass_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPrimaryAssetId                             PrimaryAsset;                                             // (Parm, ZeroConstructor)
	TArray<struct FName>                               LoadBundles;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UEngine_AsyncActionLoadPrimaryAssetClass*    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AsyncActionLoadPrimaryAssetList.AsyncLoadPrimaryAssetList
struct UEngine_AsyncActionLoadPrimaryAssetList_AsyncLoadPrimaryAssetList_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FPrimaryAssetId>                     PrimaryAssetList;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FName>                               LoadBundles;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UEngine_AsyncActionLoadPrimaryAssetList*     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AsyncActionLoadPrimaryAssetClassList.AsyncLoadPrimaryAssetClassList
struct UEngine_AsyncActionLoadPrimaryAssetClassList_AsyncLoadPrimaryAssetClassList_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FPrimaryAssetId>                     PrimaryAssetList;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FName>                               LoadBundles;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UEngine_AsyncActionLoadPrimaryAssetClassList* ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForPrimaryAssetList
struct UEngine_AsyncActionChangePrimaryAssetBundles_AsyncChangeBundleStateForPrimaryAssetList_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FPrimaryAssetId>                     PrimaryAssetList;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FName>                               AddBundles;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FName>                               RemoveBundles;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UEngine_AsyncActionChangePrimaryAssetBundles* ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForMatchingPrimaryAssets
struct UEngine_AsyncActionChangePrimaryAssetBundles_AsyncChangeBundleStateForMatchingPrimaryAssets_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               NewBundles;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FName>                               OldBundles;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UEngine_AsyncActionChangePrimaryAssetBundles* ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.StartPrecompute
struct UEngine_AtmosphericFogComponent_StartPrecompute_Params
{
};

// Function Engine.AtmosphericFogComponent.SetSunMultiplier
struct UEngine_AtmosphericFogComponent_SetSunMultiplier_Params
{
	float                                              NewSunMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.SetStartDistance
struct UEngine_AtmosphericFogComponent_SetStartDistance_Params
{
	float                                              NewStartDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.SetPrecomputeParams
struct UEngine_AtmosphericFogComponent_SetPrecomputeParams_Params
{
	float                                              DensityHeight;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaxScatteringOrder;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                InscatterAltitudeSampleNum;                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.SetFogMultiplier
struct UEngine_AtmosphericFogComponent_SetFogMultiplier_Params
{
	float                                              NewFogMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.SetDistanceScale
struct UEngine_AtmosphericFogComponent_SetDistanceScale_Params
{
	float                                              NewDistanceScale;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.SetDistanceOffset
struct UEngine_AtmosphericFogComponent_SetDistanceOffset_Params
{
	float                                              NewDistanceOffset;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.SetDensityOffset
struct UEngine_AtmosphericFogComponent_SetDensityOffset_Params
{
	float                                              NewDensityOffset;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.SetDensityMultiplier
struct UEngine_AtmosphericFogComponent_SetDensityMultiplier_Params
{
	float                                              NewDensityMultiplier;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.SetDefaultLightColor
struct UEngine_AtmosphericFogComponent_SetDefaultLightColor_Params
{
	struct FLinearColor                                NewLightColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.SetDefaultBrightness
struct UEngine_AtmosphericFogComponent_SetDefaultBrightness_Params
{
	float                                              NewBrightness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.SetAltitudeScale
struct UEngine_AtmosphericFogComponent_SetAltitudeScale_Params
{
	float                                              NewAltitudeScale;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.DisableSunDisk
struct UEngine_AtmosphericFogComponent_DisableSunDisk_Params
{
	bool                                               NewSunDisk;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AtmosphericFogComponent.DisableGroundScattering
struct UEngine_AtmosphericFogComponent_DisableGroundScattering_Params
{
	bool                                               NewGroundScattering;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AsyncActionLoadPrimaryAsset.AsyncLoadPrimaryAsset
struct UEngine_AsyncActionLoadPrimaryAsset_AsyncLoadPrimaryAsset_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPrimaryAssetId                             PrimaryAsset;                                             // (Parm, ZeroConstructor)
	TArray<struct FName>                               LoadBundles;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UEngine_AsyncActionLoadPrimaryAsset*         ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AvoidanceManager.RegisterMovementComponent
struct UEngine_AvoidanceManager_RegisterMovementComponent_Params
{
	class UEngine_MovementComponent*                   MovementComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              AvoidanceWeight;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AvoidanceManager.GetObjectCount
struct UEngine_AvoidanceManager_GetObjectCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AvoidanceManager.GetNewAvoidanceUID
struct UEngine_AvoidanceManager_GetNewAvoidanceUID_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.AvoidanceManager.GetAvoidanceVelocityForComponent
struct UEngine_AvoidanceManager_GetAvoidanceVelocityForComponent_Params
{
	class UEngine_MovementComponent*                   MovementComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BillboardComponent.SetUV
struct UEngine_BillboardComponent_SetUV_Params
{
	int                                                NewU;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NewUL;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NewV;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NewVL;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.BillboardComponent.SetSpriteAndUV
struct UEngine_BillboardComponent_SetSpriteAndUV_Params
{
	class UEngine_Texture2D*                           NewSprite;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NewU;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NewUL;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NewV;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NewVL;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.BillboardComponent.SetSprite
struct UEngine_BillboardComponent_SetSprite_Params
{
	class UEngine_Texture2D*                           NewSprite;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.BlueprintMapLibrary.SetMapPropertyByName
struct UEngine_BlueprintMapLibrary_SetMapPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TMap<int, int>                                     Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.BlueprintMapLibrary.Map_Values
struct UEngine_BlueprintMapLibrary_Map_Values_Params
{
	TMap<int, int>                                     TargetMap;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<int>                                        Values;                                                   // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.BlueprintMapLibrary.Map_Remove
struct UEngine_BlueprintMapLibrary_Map_Remove_Params
{
	TMap<int, int>                                     TargetMap;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintMapLibrary.Map_Length
struct UEngine_BlueprintMapLibrary_Map_Length_Params
{
	TMap<int, int>                                     TargetMap;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintMapLibrary.Map_Keys
struct UEngine_BlueprintMapLibrary_Map_Keys_Params
{
	TMap<int, int>                                     TargetMap;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<int>                                        Keys;                                                     // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.BlueprintMapLibrary.Map_Find
struct UEngine_BlueprintMapLibrary_Map_Find_Params
{
	TMap<int, int>                                     TargetMap;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                Value;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintMapLibrary.Map_Contains
struct UEngine_BlueprintMapLibrary_Map_Contains_Params
{
	TMap<int, int>                                     TargetMap;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintMapLibrary.Map_Clear
struct UEngine_BlueprintMapLibrary_Map_Clear_Params
{
	TMap<int, int>                                     TargetMap;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.BlueprintMapLibrary.Map_Add
struct UEngine_BlueprintMapLibrary_Map_Add_Params
{
	TMap<int, int>                                     TargetMap;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                Key;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.VideoCaptureDir
struct UEngine_BlueprintPathsLibrary_VideoCaptureDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ValidatePath
struct UEngine_BlueprintPathsLibrary_ValidatePath_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	bool                                               bDidSucceed;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FText                                       OutReason;                                                // (Parm, OutParm)
};

// Function Engine.BlueprintPathsLibrary.Split
struct UEngine_BlueprintPathsLibrary_Split_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     PathPart;                                                 // (Parm, OutParm, ZeroConstructor)
	struct FString                                     FilenamePart;                                             // (Parm, OutParm, ZeroConstructor)
	struct FString                                     ExtensionPart;                                            // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.BlueprintPathsLibrary.SourceConfigDir
struct UEngine_BlueprintPathsLibrary_SourceConfigDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ShouldSaveToUserDir
struct UEngine_BlueprintPathsLibrary_ShouldSaveToUserDir_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.ShaderWorkingDir
struct UEngine_BlueprintPathsLibrary_ShaderWorkingDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.SetProjectFilePath
struct UEngine_BlueprintPathsLibrary_SetProjectFilePath_Params
{
	struct FString                                     NewGameProjectFilePath;                                   // (Parm, ZeroConstructor)
};

// Function Engine.BlueprintPathsLibrary.SetExtension
struct UEngine_BlueprintPathsLibrary_SetExtension_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     InNewExtension;                                           // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ScreenShotDir
struct UEngine_BlueprintPathsLibrary_ScreenShotDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.SandboxesDir
struct UEngine_BlueprintPathsLibrary_SandboxesDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.RootDir
struct UEngine_BlueprintPathsLibrary_RootDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.RemoveDuplicateSlashes
struct UEngine_BlueprintPathsLibrary_RemoveDuplicateSlashes_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OutPath;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.BlueprintPathsLibrary.ProjectUserDir
struct UEngine_BlueprintPathsLibrary_ProjectUserDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ProjectSavedDir
struct UEngine_BlueprintPathsLibrary_ProjectSavedDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ProjectPluginsDir
struct UEngine_BlueprintPathsLibrary_ProjectPluginsDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ProjectPersistentDownloadDir
struct UEngine_BlueprintPathsLibrary_ProjectPersistentDownloadDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ProjectModsDir
struct UEngine_BlueprintPathsLibrary_ProjectModsDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ProjectLogDir
struct UEngine_BlueprintPathsLibrary_ProjectLogDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ProjectIntermediateDir
struct UEngine_BlueprintPathsLibrary_ProjectIntermediateDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ProjectDir
struct UEngine_BlueprintPathsLibrary_ProjectDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ProjectContentDir
struct UEngine_BlueprintPathsLibrary_ProjectContentDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ProjectConfigDir
struct UEngine_BlueprintPathsLibrary_ProjectConfigDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ProfilingDir
struct UEngine_BlueprintPathsLibrary_ProfilingDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.NormalizeFilename
struct UEngine_BlueprintPathsLibrary_NormalizeFilename_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OutPath;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.BlueprintPathsLibrary.NormalizeDirectoryName
struct UEngine_BlueprintPathsLibrary_NormalizeDirectoryName_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OutPath;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.BlueprintPathsLibrary.MakeValidFileName
struct UEngine_BlueprintPathsLibrary_MakeValidFileName_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
	struct FString                                     InReplacementChar;                                        // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.MakeStandardFilename
struct UEngine_BlueprintPathsLibrary_MakeStandardFilename_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OutPath;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.BlueprintPathsLibrary.MakePlatformFilename
struct UEngine_BlueprintPathsLibrary_MakePlatformFilename_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OutPath;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.BlueprintPathsLibrary.MakePathRelativeTo
struct UEngine_BlueprintPathsLibrary_MakePathRelativeTo_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     InRelativeTo;                                             // (Parm, ZeroConstructor)
	struct FString                                     OutPath;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.LaunchDir
struct UEngine_BlueprintPathsLibrary_LaunchDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.IsSamePath
struct UEngine_BlueprintPathsLibrary_IsSamePath_Params
{
	struct FString                                     PathA;                                                    // (Parm, ZeroConstructor)
	struct FString                                     PathB;                                                    // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.IsRestrictedPath
struct UEngine_BlueprintPathsLibrary_IsRestrictedPath_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.IsRelative
struct UEngine_BlueprintPathsLibrary_IsRelative_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.IsProjectFilePathSet
struct UEngine_BlueprintPathsLibrary_IsProjectFilePathSet_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.IsDrive
struct UEngine_BlueprintPathsLibrary_IsDrive_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.HasProjectPersistentDownloadDir
struct UEngine_BlueprintPathsLibrary_HasProjectPersistentDownloadDir_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.GetToolTipLocalizationPaths
struct UEngine_BlueprintPathsLibrary_GetToolTipLocalizationPaths_Params
{
	TArray<struct FString>                             ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)
};

// Function Engine.BlueprintPathsLibrary.GetRestrictedFolderNames
struct UEngine_BlueprintPathsLibrary_GetRestrictedFolderNames_Params
{
	TArray<struct FString>                             ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)
};

// Function Engine.BlueprintPathsLibrary.GetRelativePathToRoot
struct UEngine_BlueprintPathsLibrary_GetRelativePathToRoot_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GetPropertyNameLocalizationPaths
struct UEngine_BlueprintPathsLibrary_GetPropertyNameLocalizationPaths_Params
{
	TArray<struct FString>                             ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)
};

// Function Engine.BlueprintPathsLibrary.GetProjectFilePath
struct UEngine_BlueprintPathsLibrary_GetProjectFilePath_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GetPath
struct UEngine_BlueprintPathsLibrary_GetPath_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GetInvalidFileSystemChars
struct UEngine_BlueprintPathsLibrary_GetInvalidFileSystemChars_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GetGameLocalizationPaths
struct UEngine_BlueprintPathsLibrary_GetGameLocalizationPaths_Params
{
	TArray<struct FString>                             ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)
};

// Function Engine.BlueprintPathsLibrary.GetExtension
struct UEngine_BlueprintPathsLibrary_GetExtension_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	bool                                               bIncludeDot;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GetEngineLocalizationPaths
struct UEngine_BlueprintPathsLibrary_GetEngineLocalizationPaths_Params
{
	TArray<struct FString>                             ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)
};

// Function Engine.BlueprintPathsLibrary.GetEditorLocalizationPaths
struct UEngine_BlueprintPathsLibrary_GetEditorLocalizationPaths_Params
{
	TArray<struct FString>                             ReturnValue;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)
};

// Function Engine.BlueprintPathsLibrary.GetCleanFilename
struct UEngine_BlueprintPathsLibrary_GetCleanFilename_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GetBaseFilename
struct UEngine_BlueprintPathsLibrary_GetBaseFilename_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	bool                                               bRemovePath;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GeneratedConfigDir
struct UEngine_BlueprintPathsLibrary_GeneratedConfigDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GameUserDeveloperDir
struct UEngine_BlueprintPathsLibrary_GameUserDeveloperDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GameSourceDir
struct UEngine_BlueprintPathsLibrary_GameSourceDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GameDevelopersDir
struct UEngine_BlueprintPathsLibrary_GameDevelopersDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.GameAgnosticSavedDir
struct UEngine_BlueprintPathsLibrary_GameAgnosticSavedDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.FileExists
struct UEngine_BlueprintPathsLibrary_FileExists_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.FeaturePackDir
struct UEngine_BlueprintPathsLibrary_FeaturePackDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EnterprisePluginsDir
struct UEngine_BlueprintPathsLibrary_EnterprisePluginsDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EnterpriseFeaturePackDir
struct UEngine_BlueprintPathsLibrary_EnterpriseFeaturePackDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EnterpriseDir
struct UEngine_BlueprintPathsLibrary_EnterpriseDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EngineVersionAgnosticUserDir
struct UEngine_BlueprintPathsLibrary_EngineVersionAgnosticUserDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EngineUserDir
struct UEngine_BlueprintPathsLibrary_EngineUserDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EngineSourceDir
struct UEngine_BlueprintPathsLibrary_EngineSourceDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EngineSavedDir
struct UEngine_BlueprintPathsLibrary_EngineSavedDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EnginePluginsDir
struct UEngine_BlueprintPathsLibrary_EnginePluginsDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EngineIntermediateDir
struct UEngine_BlueprintPathsLibrary_EngineIntermediateDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EngineDir
struct UEngine_BlueprintPathsLibrary_EngineDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EngineContentDir
struct UEngine_BlueprintPathsLibrary_EngineContentDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.EngineConfigDir
struct UEngine_BlueprintPathsLibrary_EngineConfigDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.DirectoryExists
struct UEngine_BlueprintPathsLibrary_DirectoryExists_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.DiffDir
struct UEngine_BlueprintPathsLibrary_DiffDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.CreateTempFilename
struct UEngine_BlueprintPathsLibrary_CreateTempFilename_Params
{
	struct FString                                     Path;                                                     // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Extension;                                                // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ConvertToSandboxPath
struct UEngine_BlueprintPathsLibrary_ConvertToSandboxPath_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     InSandboxName;                                            // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ConvertRelativePathToFull
struct UEngine_BlueprintPathsLibrary_ConvertRelativePathToFull_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     InBasePath;                                               // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ConvertFromSandboxPath
struct UEngine_BlueprintPathsLibrary_ConvertFromSandboxPath_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     InSandboxName;                                            // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.Combine
struct UEngine_BlueprintPathsLibrary_Combine_Params
{
	TArray<struct FString>                             InPaths;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.CollapseRelativeDirectories
struct UEngine_BlueprintPathsLibrary_CollapseRelativeDirectories_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OutPath;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPathsLibrary.CloudDir
struct UEngine_BlueprintPathsLibrary_CloudDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.ChangeExtension
struct UEngine_BlueprintPathsLibrary_ChangeExtension_Params
{
	struct FString                                     InPath;                                                   // (Parm, ZeroConstructor)
	struct FString                                     InNewExtension;                                           // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.BugItDir
struct UEngine_BlueprintPathsLibrary_BugItDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.AutomationTransientDir
struct UEngine_BlueprintPathsLibrary_AutomationTransientDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.AutomationLogDir
struct UEngine_BlueprintPathsLibrary_AutomationLogDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPathsLibrary.AutomationDir
struct UEngine_BlueprintPathsLibrary_AutomationDir_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationFromNow
struct UEngine_BlueprintPlatformLibrary_ScheduleLocalNotificationFromNow_Params
{
	int                                                inSecondsFromNow;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       Title;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       Body;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       Action;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FString                                     ActivationEvent;                                          // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationBadgeFromNow
struct UEngine_BlueprintPlatformLibrary_ScheduleLocalNotificationBadgeFromNow_Params
{
	int                                                inSecondsFromNow;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ActivationEvent;                                          // (Parm, ZeroConstructor)
};

// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationBadgeAtTime
struct UEngine_BlueprintPlatformLibrary_ScheduleLocalNotificationBadgeAtTime_Params
{
	struct FDateTime                                   FireDateTime;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               LocalTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ActivationEvent;                                          // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationAtTime
struct UEngine_BlueprintPlatformLibrary_ScheduleLocalNotificationAtTime_Params
{
	struct FDateTime                                   FireDateTime;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               LocalTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       Title;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       Body;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       Action;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FString                                     ActivationEvent;                                          // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPlatformLibrary.GetLaunchNotification
struct UEngine_BlueprintPlatformLibrary_GetLaunchNotification_Params
{
	bool                                               NotificationLaunchedApp;                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ActivationEvent;                                          // (Parm, OutParm, ZeroConstructor)
	int                                                FireDate;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.BlueprintPlatformLibrary.GetDeviceOrientation
struct UEngine_BlueprintPlatformLibrary_GetDeviceOrientation_Params
{
	TEnumAsByte<FEngine_Engine_EScreenOrientation>     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintPlatformLibrary.ClearAllLocalNotifications
struct UEngine_BlueprintPlatformLibrary_ClearAllLocalNotifications_Params
{
};

// Function Engine.BlueprintPlatformLibrary.CancelLocalNotificationById
struct UEngine_BlueprintPlatformLibrary_CancelLocalNotificationById_Params
{
	int                                                NotificationId;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.BlueprintPlatformLibrary.CancelLocalNotification
struct UEngine_BlueprintPlatformLibrary_CancelLocalNotification_Params
{
	struct FString                                     ActivationEvent;                                          // (Parm, ZeroConstructor)
};

// Function Engine.BlueprintSetLibrary.SetSetPropertyByName
struct UEngine_BlueprintSetLibrary_SetSetPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.BlueprintSetLibrary.Set_Union
struct UEngine_BlueprintSetLibrary_Set_Union_Params
{
};

// Function Engine.BlueprintSetLibrary.Set_ToArray
struct UEngine_BlueprintSetLibrary_Set_ToArray_Params
{
	TArray<int>                                        Result;                                                   // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.BlueprintSetLibrary.Set_RemoveItems
struct UEngine_BlueprintSetLibrary_Set_RemoveItems_Params
{
	TArray<int>                                        Items;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.BlueprintSetLibrary.Set_Remove
struct UEngine_BlueprintSetLibrary_Set_Remove_Params
{
	int                                                Item;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintSetLibrary.Set_Length
struct UEngine_BlueprintSetLibrary_Set_Length_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintSetLibrary.Set_Intersection
struct UEngine_BlueprintSetLibrary_Set_Intersection_Params
{
};

// Function Engine.BlueprintSetLibrary.Set_Difference
struct UEngine_BlueprintSetLibrary_Set_Difference_Params
{
};

// Function Engine.BlueprintSetLibrary.Set_Contains
struct UEngine_BlueprintSetLibrary_Set_Contains_Params
{
	int                                                ItemToFind;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BlueprintSetLibrary.Set_Clear
struct UEngine_BlueprintSetLibrary_Set_Clear_Params
{
};

// Function Engine.BlueprintSetLibrary.Set_AddItems
struct UEngine_BlueprintSetLibrary_Set_AddItems_Params
{
	TArray<int>                                        NewItems;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.BlueprintSetLibrary.Set_Add
struct UEngine_BlueprintSetLibrary_Set_Add_Params
{
	int                                                NewItem;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.AudioVolume.SetReverbSettings
struct AEngine_AudioVolume_SetReverbSettings_Params
{
	struct FEngine_ReverbSettings                      NewReverbSettings;                                        // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.AudioVolume.SetPriority
struct AEngine_AudioVolume_SetPriority_Params
{
	float                                              NewPriority;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioVolume.SetInteriorSettings
struct AEngine_AudioVolume_SetInteriorSettings_Params
{
	struct FEngine_InteriorSettings                    NewInteriorSettings;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.AudioVolume.SetEnabled
struct AEngine_AudioVolume_SetEnabled_Params
{
	bool                                               bNewEnabled;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.AudioVolume.OnRep_bEnabled
struct AEngine_AudioVolume_OnRep_bEnabled_Params
{
};

// Function Engine.BoxComponent.SetBoxExtent
struct UEngine_BoxComponent_SetBoxExtent_Params
{
	struct FVector                                     InBoxExtent;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateOverlaps;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.BoxComponent.GetUnscaledBoxExtent
struct UEngine_BoxComponent_GetUnscaledBoxExtent_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.BoxComponent.GetScaledBoxExtent
struct UEngine_BoxComponent_GetScaledBoxExtent_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CameraAnimInst.Stop
struct UEngine_CameraAnimInst_Stop_Params
{
	bool                                               bImmediate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraAnimInst.SetScale
struct UEngine_CameraAnimInst_SetScale_Params
{
	float                                              NewDuration;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraAnimInst.SetDuration
struct UEngine_CameraAnimInst_SetDuration_Params
{
	float                                              NewDuration;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraModifier.IsDisabled
struct UEngine_CameraModifier_IsDisabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CameraModifier.GetViewTarget
struct UEngine_CameraModifier_GetViewTarget_Params
{
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CameraModifier.EnableModifier
struct UEngine_CameraModifier_EnableModifier_Params
{
};

// Function Engine.CameraModifier.DisableModifier
struct UEngine_CameraModifier_DisableModifier_Params
{
	bool                                               bImmediate;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraModifier.BlueprintModifyPostProcess
struct UEngine_CameraModifier_BlueprintModifyPostProcess_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PostProcessBlendWeight;                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FEngine_PostProcessSettings                 PostProcessSettings;                                      // (Parm, OutParm)
};

// Function Engine.CameraModifier.BlueprintModifyCamera
struct UEngine_CameraModifier_BlueprintModifyCamera_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ViewLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ViewRotation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              FOV;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NewViewLocation;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    NewViewRotation;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              NewFOV;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraShake.ReceiveStopShake
struct UEngine_CameraShake_ReceiveStopShake_Params
{
	bool                                               bImmediately;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraShake.ReceivePlayShake
struct UEngine_CameraShake_ReceivePlayShake_Params
{
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CameraShake.ReceiveIsFinished
struct UEngine_CameraShake_ReceiveIsFinished_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CameraShake.BlueprintUpdateCameraShake
struct UEngine_CameraShake_BlueprintUpdateCameraShake_Params
{
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_MinimalViewInfo                     POV;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FEngine_MinimalViewInfo                     ModifiedPOV;                                              // (Parm, OutParm)
};

// Function Engine.Canvas.K2_TextSize
struct UEngine_Canvas_K2_TextSize_Params
{
	class UEngine_Font*                                RenderFont;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     RenderText;                                               // (Parm, ZeroConstructor)
	struct FVector2D                                   Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Canvas.K2_StrLen
struct UEngine_Canvas_K2_StrLen_Params
{
	class UEngine_Font*                                RenderFont;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     RenderText;                                               // (Parm, ZeroConstructor)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Canvas.K2_Project
struct UEngine_Canvas_K2_Project_Params
{
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Canvas.K2_DrawTriangle
struct UEngine_Canvas_K2_DrawTriangle_Params
{
	class UEngine_Texture*                             RenderTexture;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_CanvasUVTri>                 Triangles;                                                // (Parm, ZeroConstructor)
};

// Function Engine.Canvas.K2_DrawTexture
struct UEngine_Canvas_K2_DrawTexture_Params
{
	class UEngine_Texture*                             RenderTexture;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenPosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CoordinatePosition;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CoordinateSize;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RenderColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EBlendMode>             BlendMode;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PivotPoint;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Canvas.K2_DrawText
struct UEngine_Canvas_K2_DrawText_Params
{
	class UEngine_Font*                                RenderFont;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     RenderText;                                               // (Parm, ZeroConstructor)
	struct FVector2D                                   ScreenPosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RenderColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Kerning;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ShadowColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ShadowOffset;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bCentreX;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bCentreY;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOutlined;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                OutlineColor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Canvas.K2_DrawPolygon
struct UEngine_Canvas_K2_DrawPolygon_Params
{
	class UEngine_Texture*                             RenderTexture;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenPosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfSides;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RenderColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Canvas.K2_DrawMaterialTriangle
struct UEngine_Canvas_K2_DrawMaterialTriangle_Params
{
	class UEngine_MaterialInterface*                   RenderMaterial;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_CanvasUVTri>                 Triangles;                                                // (Parm, ZeroConstructor)
};

// Function Engine.Canvas.K2_DrawMaterial
struct UEngine_Canvas_K2_DrawMaterial_Params
{
	class UEngine_MaterialInterface*                   RenderMaterial;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenPosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CoordinatePosition;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CoordinateSize;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PivotPoint;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Canvas.K2_DrawLine
struct UEngine_Canvas_K2_DrawLine_Params
{
	struct FVector2D                                   ScreenPositionA;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenPositionB;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RenderColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Canvas.K2_DrawBox
struct UEngine_Canvas_K2_DrawBox_Params
{
	struct FVector2D                                   ScreenPosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RenderColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Canvas.K2_DrawBorder
struct UEngine_Canvas_K2_DrawBorder_Params
{
	class UEngine_Texture*                             BorderTexture;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture*                             BackgroundTexture;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture*                             LeftBorderTexture;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture*                             RightBorderTexture;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture*                             TopBorderTexture;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture*                             BottomBorderTexture;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenPosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScreenSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CoordinatePosition;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CoordinateSize;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RenderColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   BorderScale;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   BackgroundScale;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PivotPoint;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   CornerSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Canvas.K2_Deproject
struct UEngine_Canvas_K2_Deproject_Params
{
	struct FVector2D                                   ScreenPosition;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldOrigin;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldDirection;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CanvasRenderTarget2D.UpdateResource
struct UEngine_CanvasRenderTarget2D_UpdateResource_Params
{
};

// Function Engine.CanvasRenderTarget2D.ReceiveUpdate
struct UEngine_CanvasRenderTarget2D_ReceiveUpdate_Params
{
	class UEngine_Canvas*                              Canvas;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Width;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Height;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CanvasRenderTarget2D.GetSize
struct UEngine_CanvasRenderTarget2D_GetSize_Params
{
	int                                                Width;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Height;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CanvasRenderTarget2D.CreateCanvasRenderTarget2D
struct UEngine_CanvasRenderTarget2D_CreateCanvasRenderTarget2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CanvasRenderTarget2DClass;                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Width;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Height;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_CanvasRenderTarget2D*                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CapsuleComponent.SetCapsuleSize
struct UEngine_CapsuleComponent_SetCapsuleSize_Params
{
	float                                              InRadius;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InHalfHeight;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateOverlaps;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CapsuleComponent.SetCapsuleRadius
struct UEngine_CapsuleComponent_SetCapsuleRadius_Params
{
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateOverlaps;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CapsuleComponent.SetCapsuleHalfHeight
struct UEngine_CapsuleComponent_SetCapsuleHalfHeight_Params
{
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateOverlaps;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetUnscaledCapsuleSize_WithoutHemisphere
struct UEngine_CapsuleComponent_GetUnscaledCapsuleSize_WithoutHemisphere_Params
{
	float                                              OutRadius;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutHalfHeightWithoutHemisphere;                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetUnscaledCapsuleSize
struct UEngine_CapsuleComponent_GetUnscaledCapsuleSize_Params
{
	float                                              OutRadius;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutHalfHeight;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetUnscaledCapsuleRadius
struct UEngine_CapsuleComponent_GetUnscaledCapsuleRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight_WithoutHemisphere
struct UEngine_CapsuleComponent_GetUnscaledCapsuleHalfHeight_WithoutHemisphere_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight
struct UEngine_CapsuleComponent_GetUnscaledCapsuleHalfHeight_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetShapeScale
struct UEngine_CapsuleComponent_GetShapeScale_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetScaledCapsuleSize_WithoutHemisphere
struct UEngine_CapsuleComponent_GetScaledCapsuleSize_WithoutHemisphere_Params
{
	float                                              OutRadius;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutHalfHeightWithoutHemisphere;                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetScaledCapsuleSize
struct UEngine_CapsuleComponent_GetScaledCapsuleSize_Params
{
	float                                              OutRadius;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutHalfHeight;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetScaledCapsuleRadius
struct UEngine_CapsuleComponent_GetScaledCapsuleRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight_WithoutHemisphere
struct UEngine_CapsuleComponent_GetScaledCapsuleHalfHeight_WithoutHemisphere_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight
struct UEngine_CapsuleComponent_GetScaledCapsuleHalfHeight_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CurveBase.GetValueRange
struct UEngine_CurveBase_GetValueRange_Params
{
	float                                              MinValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              MaxValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CurveBase.GetTimeRange
struct UEngine_CurveBase_GetTimeRange_Params
{
	float                                              MinTime;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              MaxTime;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.CurveFloat.GetFloatValue
struct UEngine_CurveFloat_GetFloatValue_Params
{
	float                                              InTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CurveLinearColor.GetLinearColorValue
struct UEngine_CurveLinearColor_GetLinearColorValue_Params
{
	float                                              InTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CurveLinearColor.GetClampedLinearColorValue
struct UEngine_CurveLinearColor_GetClampedLinearColorValue_Params
{
	float                                              InTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Texture2D.Blueprint_GetSizeY
struct UEngine_Texture2D_Blueprint_GetSizeY_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Texture2D.Blueprint_GetSizeX
struct UEngine_Texture2D_Blueprint_GetSizeX_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CurveLinearColorAtlas.GetCurvePosition
struct UEngine_CurveLinearColorAtlas_GetCurvePosition_Params
{
	class UEngine_CurveLinearColor*                    InCurve;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Position;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CurveSourceInterface.GetCurveValue
struct UEngine_CurveSourceInterface_GetCurveValue_Params
{
	struct FName                                       CurveName;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CurveSourceInterface.GetCurves
struct UEngine_CurveSourceInterface_GetCurves_Params
{
	TArray<struct FEngine_NamedCurveValue>             OutValues;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.CurveSourceInterface.GetBindingName
struct UEngine_CurveSourceInterface_GetBindingName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.CurveVector.GetVectorValue
struct UEngine_CurveVector_GetVectorValue_Params
{
	float                                              InTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DataTableFunctionLibrary.GetDataTableRowNames
struct UEngine_DataTableFunctionLibrary_GetDataTableRowNames_Params
{
	class UEngine_DataTable*                           Table;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               OutRowNames;                                              // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.DataTableFunctionLibrary.GetDataTableRowFromName
struct UEngine_DataTableFunctionLibrary_GetDataTableRowFromName_Params
{
	class UEngine_DataTable*                           Table;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RowName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TableRowBase                        OutRow;                                                   // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DataTableFunctionLibrary.GetDataTableColumnAsString
struct UEngine_DataTableFunctionLibrary_GetDataTableColumnAsString_Params
{
	class UEngine_DataTable*                           DataTable;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.DataTableFunctionLibrary.EvaluateCurveTableRow
struct UEngine_DataTableFunctionLibrary_EvaluateCurveTableRow_Params
{
	class UEngine_CurveTable*                          CurveTable;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RowName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InXY;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EEvaluateCurveTableResult> OutResult;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutXY;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ContextString;                                            // (Parm, ZeroConstructor)
};

// Function Engine.DataTableFunctionLibrary.DoesDataTableRowExist
struct UEngine_DataTableFunctionLibrary_DoesDataTableRowExist_Params
{
	class UEngine_DataTable*                           Table;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       RowName;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DebugCameraController.ToggleDisplay
struct AEngine_DebugCameraController_ToggleDisplay_Params
{
};

// Function Engine.DebugCameraController.ShowDebugSelectedInfo
struct AEngine_DebugCameraController_ShowDebugSelectedInfo_Params
{
};

// Function Engine.DebugCameraController.SetPawnMovementSpeedScale
struct AEngine_DebugCameraController_SetPawnMovementSpeedScale_Params
{
	float                                              NewSpeedScale;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DebugCameraController.ReceiveOnDeactivate
struct AEngine_DebugCameraController_ReceiveOnDeactivate_Params
{
	class AEngine_PlayerController*                    RestoredPC;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DebugCameraController.ReceiveOnActorSelected
struct AEngine_DebugCameraController_ReceiveOnActorSelected_Params
{
	class AEngine_Actor*                               NewSelectedActor;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SelectHitLocation;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     SelectHitNormal;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FEngine_HitResult                           Hit;                                                      // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.DebugCameraController.ReceiveOnActivate
struct AEngine_DebugCameraController_ReceiveOnActivate_Params
{
	class AEngine_PlayerController*                    OriginalPC;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DebugCameraController.GetSelectedActor
struct AEngine_DebugCameraController_GetSelectedActor_Params
{
	class AEngine_Actor*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DecalComponent.SetSortOrder
struct UEngine_DecalComponent_SetSortOrder_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DecalComponent.SetFadeScreenSize
struct UEngine_DecalComponent_SetFadeScreenSize_Params
{
	float                                              NewFadeScreenSize;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DecalComponent.SetFadeOut
struct UEngine_DecalComponent_SetFadeOut_Params
{
	float                                              StartDelay;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               DestroyOwnerAfterFade;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DecalComponent.SetFadeIn
struct UEngine_DecalComponent_SetFadeIn_Params
{
	float                                              StartDelay;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duaration;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DecalComponent.SetDecalMaterial
struct UEngine_DecalComponent_SetDecalMaterial_Params
{
	class UEngine_MaterialInterface*                   NewDecalMaterial;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DecalComponent.GetFadeStartDelay
struct UEngine_DecalComponent_GetFadeStartDelay_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DecalComponent.GetFadeInStartDelay
struct UEngine_DecalComponent_GetFadeInStartDelay_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DecalComponent.GetFadeInDuration
struct UEngine_DecalComponent_GetFadeInDuration_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DecalComponent.GetFadeDuration
struct UEngine_DecalComponent_GetFadeDuration_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DecalComponent.GetDecalMaterial
struct UEngine_DecalComponent_GetDecalMaterial_Params
{
	class UEngine_MaterialInterface*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DecalComponent.CreateDynamicMaterialInstance
struct UEngine_DecalComponent_CreateDynamicMaterialInstance_Params
{
	class UEngine_MaterialInstanceDynamic*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.DefaultPawn.TurnAtRate
struct AEngine_DefaultPawn_TurnAtRate_Params
{
	float                                              Rate;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DefaultPawn.MoveUp_World
struct AEngine_DefaultPawn_MoveUp_World_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DefaultPawn.MoveRight
struct AEngine_DefaultPawn_MoveRight_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DefaultPawn.MoveForward
struct AEngine_DefaultPawn_MoveForward_Params
{
	float                                              Val;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DefaultPawn.LookUpAtRate
struct AEngine_DefaultPawn_LookUpAtRate_Params
{
	float                                              Rate;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Light.ToggleEnabled
struct AEngine_Light_ToggleEnabled_Params
{
};

// Function Engine.Light.SetLightFunctionScale
struct AEngine_Light_SetLightFunctionScale_Params
{
	struct FVector                                     NewLightFunctionScale;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Light.SetLightFunctionMaterial
struct AEngine_Light_SetLightFunctionMaterial_Params
{
	class UEngine_MaterialInterface*                   NewLightFunctionMaterial;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Light.SetLightFunctionFadeDistance
struct AEngine_Light_SetLightFunctionFadeDistance_Params
{
	float                                              NewLightFunctionFadeDistance;                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Light.SetLightColor
struct AEngine_Light_SetLightColor_Params
{
	struct FLinearColor                                NewLightColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Light.SetEnabled
struct AEngine_Light_SetEnabled_Params
{
	bool                                               bSetEnabled;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Light.SetCastShadows
struct AEngine_Light_SetCastShadows_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Light.SetBrightness
struct AEngine_Light_SetBrightness_Params
{
	float                                              NewBrightness;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Light.SetAffectTranslucentLighting
struct AEngine_Light_SetAffectTranslucentLighting_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Light.OnRep_bEnabled
struct AEngine_Light_OnRep_bEnabled_Params
{
};

// Function Engine.Light.IsEnabled
struct AEngine_Light_IsEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Light.GetLightColor
struct AEngine_Light_GetLightColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Light.GetBrightness
struct AEngine_Light_GetBrightness_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LightComponentBase.SetSamplesPerPixel
struct UEngine_LightComponentBase_SetSamplesPerPixel_Params
{
	int                                                NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponentBase.SetCastVolumetricShadow
struct UEngine_LightComponentBase_SetCastVolumetricShadow_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponentBase.SetCastShadows
struct UEngine_LightComponentBase_SetCastShadows_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponentBase.SetCastRaytracedShadow
struct UEngine_LightComponentBase_SetCastRaytracedShadow_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponentBase.SetCastDeepShadow
struct UEngine_LightComponentBase_SetCastDeepShadow_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponentBase.SetAffectReflection
struct UEngine_LightComponentBase_SetAffectReflection_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponentBase.SetAffectGlobalIllumination
struct UEngine_LightComponentBase_SetAffectGlobalIllumination_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponentBase.GetLightColor
struct UEngine_LightComponentBase_GetLightColor_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LightComponent.SetVolumetricScatteringIntensity
struct UEngine_LightComponent_SetVolumetricScatteringIntensity_Params
{
	float                                              NewIntensity;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetUseIESBrightness
struct UEngine_LightComponent_SetUseIESBrightness_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetTransmission
struct UEngine_LightComponent_SetTransmission_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetTemperature
struct UEngine_LightComponent_SetTemperature_Params
{
	float                                              NewTemperature;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetSpecularScale
struct UEngine_LightComponent_SetSpecularScale_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetShadowSlopeBias
struct UEngine_LightComponent_SetShadowSlopeBias_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetShadowBias
struct UEngine_LightComponent_SetShadowBias_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetLightFunctionScale
struct UEngine_LightComponent_SetLightFunctionScale_Params
{
	struct FVector                                     NewLightFunctionScale;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetLightFunctionMaterial
struct UEngine_LightComponent_SetLightFunctionMaterial_Params
{
	class UEngine_MaterialInterface*                   NewLightFunctionMaterial;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetLightFunctionFadeDistance
struct UEngine_LightComponent_SetLightFunctionFadeDistance_Params
{
	float                                              NewLightFunctionFadeDistance;                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetLightFunctionDisabledBrightness
struct UEngine_LightComponent_SetLightFunctionDisabledBrightness_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetLightColor
struct UEngine_LightComponent_SetLightColor_Params
{
	struct FLinearColor                                NewLightColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSRGB;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetIntensity
struct UEngine_LightComponent_SetIntensity_Params
{
	float                                              NewIntensity;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetIndirectLightingIntensity
struct UEngine_LightComponent_SetIndirectLightingIntensity_Params
{
	float                                              NewIntensity;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetIESTexture
struct UEngine_LightComponent_SetIESTexture_Params
{
	class UEngine_TextureLightProfile*                 NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetIESBrightnessScale
struct UEngine_LightComponent_SetIESBrightnessScale_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetForceCachedShadowsForMovablePrimitives
struct UEngine_LightComponent_SetForceCachedShadowsForMovablePrimitives_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetEnableLightShaftBloom
struct UEngine_LightComponent_SetEnableLightShaftBloom_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetBloomTint
struct UEngine_LightComponent_SetBloomTint_Params
{
	struct FColor                                      NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetBloomThreshold
struct UEngine_LightComponent_SetBloomThreshold_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetBloomScale
struct UEngine_LightComponent_SetBloomScale_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetBloomMaxBrightness
struct UEngine_LightComponent_SetBloomMaxBrightness_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetAffectTranslucentLighting
struct UEngine_LightComponent_SetAffectTranslucentLighting_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LightComponent.SetAffectDynamicIndirectLighting
struct UEngine_LightComponent_SetAffectDynamicIndirectLighting_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DirectionalLightComponent.SetShadowDistanceFadeoutFraction
struct UEngine_DirectionalLightComponent_SetShadowDistanceFadeoutFraction_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DirectionalLightComponent.SetShadowAmount
struct UEngine_DirectionalLightComponent_SetShadowAmount_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DirectionalLightComponent.SetOcclusionMaskDarkness
struct UEngine_DirectionalLightComponent_SetOcclusionMaskDarkness_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DirectionalLightComponent.SetLightShaftOverrideDirection
struct UEngine_DirectionalLightComponent_SetLightShaftOverrideDirection_Params
{
	struct FVector                                     NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DirectionalLightComponent.SetEnableLightShaftOcclusion
struct UEngine_DirectionalLightComponent_SetEnableLightShaftOcclusion_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceStationaryLight
struct UEngine_DirectionalLightComponent_SetDynamicShadowDistanceStationaryLight_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceMovableLight
struct UEngine_DirectionalLightComponent_SetDynamicShadowDistanceMovableLight_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DirectionalLightComponent.SetDynamicShadowCascades
struct UEngine_DirectionalLightComponent_SetDynamicShadowCascades_Params
{
	int                                                NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DirectionalLightComponent.SetCascadeTransitionFraction
struct UEngine_DirectionalLightComponent_SetCascadeTransitionFraction_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.DirectionalLightComponent.SetCascadeDistributionExponent
struct UEngine_DirectionalLightComponent_SetCascadeDistributionExponent_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SphereComponent.SetSphereRadius
struct UEngine_SphereComponent_SetSphereRadius_Params
{
	float                                              InSphereRadius;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateOverlaps;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SphereComponent.GetUnscaledSphereRadius
struct UEngine_SphereComponent_GetUnscaledSphereRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SphereComponent.GetShapeScale
struct UEngine_SphereComponent_GetShapeScale_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SphereComponent.GetScaledSphereRadius
struct UEngine_SphereComponent_GetScaledSphereRadius_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Emitter.ToggleActive
struct AEngine_Emitter_ToggleActive_Params
{
};

// Function Engine.Emitter.SetVectorParameter
struct AEngine_Emitter_SetVectorParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Emitter.SetTemplate
struct AEngine_Emitter_SetTemplate_Params
{
	class UEngine_ParticleSystem*                      NewTemplate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Emitter.SetMaterialParameter
struct AEngine_Emitter_SetMaterialParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Emitter.SetFloatParameter
struct AEngine_Emitter_SetFloatParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Emitter.SetColorParameter
struct AEngine_Emitter_SetColorParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Emitter.SetActorParameter
struct AEngine_Emitter_SetActorParameter_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_Actor*                               Param;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Emitter.OnRep_bCurrentlyActive
struct AEngine_Emitter_OnRep_bCurrentlyActive_Params
{
};

// Function Engine.Emitter.OnParticleSystemFinished
struct AEngine_Emitter_OnParticleSystemFinished_Params
{
	class UEngine_ParticleSystemComponent*             finishedComponent;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.Emitter.IsActive
struct AEngine_Emitter_IsActive_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Emitter.Deactivate
struct AEngine_Emitter_Deactivate_Params
{
};

// Function Engine.Emitter.Activate
struct AEngine_Emitter_Activate_Params
{
};

// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogScatteringDistribution
struct UEngine_ExponentialHeightFogComponent_SetVolumetricFogScatteringDistribution_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogExtinctionScale
struct UEngine_ExponentialHeightFogComponent_SetVolumetricFogExtinctionScale_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogEmissive
struct UEngine_ExponentialHeightFogComponent_SetVolumetricFogEmissive_Params
{
	struct FLinearColor                                NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogDistance
struct UEngine_ExponentialHeightFogComponent_SetVolumetricFogDistance_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogAlbedo
struct UEngine_ExponentialHeightFogComponent_SetVolumetricFogAlbedo_Params
{
	struct FColor                                      NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetVolumetricFog
struct UEngine_ExponentialHeightFogComponent_SetVolumetricFog_Params
{
	bool                                               bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetStartDistance
struct UEngine_ExponentialHeightFogComponent_SetStartDistance_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetNonDirectionalInscatteringColorDistance
struct UEngine_ExponentialHeightFogComponent_SetNonDirectionalInscatteringColorDistance_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetInscatteringTextureTint
struct UEngine_ExponentialHeightFogComponent_SetInscatteringTextureTint_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemapAngle
struct UEngine_ExponentialHeightFogComponent_SetInscatteringColorCubemapAngle_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemap
struct UEngine_ExponentialHeightFogComponent_SetInscatteringColorCubemap_Params
{
	class UEngine_TextureCube*                         Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetFullyDirectionalInscatteringColorDistance
struct UEngine_ExponentialHeightFogComponent_SetFullyDirectionalInscatteringColorDistance_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetFogMaxOpacity
struct UEngine_ExponentialHeightFogComponent_SetFogMaxOpacity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetFogInscatteringColor
struct UEngine_ExponentialHeightFogComponent_SetFogInscatteringColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetFogHeightFalloff
struct UEngine_ExponentialHeightFogComponent_SetFogHeightFalloff_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetFogDensity
struct UEngine_ExponentialHeightFogComponent_SetFogDensity_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetFogCutoffDistance
struct UEngine_ExponentialHeightFogComponent_SetFogCutoffDistance_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringStartDistance
struct UEngine_ExponentialHeightFogComponent_SetDirectionalInscatteringStartDistance_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringExponent
struct UEngine_ExponentialHeightFogComponent_SetDirectionalInscatteringExponent_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringColor
struct UEngine_ExponentialHeightFogComponent_SetDirectionalInscatteringColor_Params
{
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.Exporter.ScriptRunAssetExportTask
struct UEngine_Exporter_ScriptRunAssetExportTask_Params
{
	class UEngine_AssetExportTask*                     Task;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Exporter.RunAssetExportTasks
struct UEngine_Exporter_RunAssetExportTasks_Params
{
	TArray<class UEngine_AssetExportTask*>             ExportTasks;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.Exporter.RunAssetExportTask
struct UEngine_Exporter_RunAssetExportTask_Params
{
	class UEngine_AssetExportTask*                     Task;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ExponentialHeightFog.OnRep_bEnabled
struct AEngine_ExponentialHeightFog_OnRep_bEnabled_Params
{
};

// Function Engine.GameUserSettings.ValidateSettings
struct UEngine_GameUserSettings_ValidateSettings_Params
{
};

// Function Engine.GameUserSettings.SupportsHDRDisplayOutput
struct UEngine_GameUserSettings_SupportsHDRDisplayOutput_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetVSyncEnabled
struct UEngine_GameUserSettings_SetVSyncEnabled_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetVisualEffectQuality
struct UEngine_GameUserSettings_SetVisualEffectQuality_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetViewDistanceQuality
struct UEngine_GameUserSettings_SetViewDistanceQuality_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetToDefaults
struct UEngine_GameUserSettings_SetToDefaults_Params
{
};

// Function Engine.GameUserSettings.SetTextureQuality
struct UEngine_GameUserSettings_SetTextureQuality_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetShadowQuality
struct UEngine_GameUserSettings_SetShadowQuality_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetShadingQuality
struct UEngine_GameUserSettings_SetShadingQuality_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetScreenResolution
struct UEngine_GameUserSettings_SetScreenResolution_Params
{
	struct FIntPoint                                   Resolution;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetResolutionScaleValueEx
struct UEngine_GameUserSettings_SetResolutionScaleValueEx_Params
{
	float                                              NewScaleValue;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetResolutionScaleValue
struct UEngine_GameUserSettings_SetResolutionScaleValue_Params
{
	int                                                NewScaleValue;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetResolutionScaleNormalized
struct UEngine_GameUserSettings_SetResolutionScaleNormalized_Params
{
	float                                              NewScaleNormalized;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetPostProcessingQuality
struct UEngine_GameUserSettings_SetPostProcessingQuality_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetOverallScalabilityLevel
struct UEngine_GameUserSettings_SetOverallScalabilityLevel_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetFullscreenMode
struct UEngine_GameUserSettings_SetFullscreenMode_Params
{
	TEnumAsByte<FEngine_Engine_EWindowMode>            InFullscreenMode;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetFrameRateLimit
struct UEngine_GameUserSettings_SetFrameRateLimit_Params
{
	float                                              NewLimit;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetFoliageQuality
struct UEngine_GameUserSettings_SetFoliageQuality_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetDynamicResolutionEnabled
struct UEngine_GameUserSettings_SetDynamicResolutionEnabled_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetBenchmarkFallbackValues
struct UEngine_GameUserSettings_SetBenchmarkFallbackValues_Params
{
};

// Function Engine.GameUserSettings.SetAudioQualityLevel
struct UEngine_GameUserSettings_SetAudioQualityLevel_Params
{
	int                                                QualityLevel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SetAntiAliasingQuality
struct UEngine_GameUserSettings_SetAntiAliasingQuality_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.SaveSettings
struct UEngine_GameUserSettings_SaveSettings_Params
{
};

// Function Engine.GameUserSettings.RunHardwareBenchmark
struct UEngine_GameUserSettings_RunHardwareBenchmark_Params
{
	int                                                WorkScale;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              CPUMultiplier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              GPUMultiplier;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.RevertVideoMode
struct UEngine_GameUserSettings_RevertVideoMode_Params
{
};

// Function Engine.GameUserSettings.ResetToCurrentSettings
struct UEngine_GameUserSettings_ResetToCurrentSettings_Params
{
};

// Function Engine.GameUserSettings.LoadSettings
struct UEngine_GameUserSettings_LoadSettings_Params
{
	bool                                               bForceReload;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.IsVSyncEnabled
struct UEngine_GameUserSettings_IsVSyncEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.IsVSyncDirty
struct UEngine_GameUserSettings_IsVSyncDirty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.IsScreenResolutionDirty
struct UEngine_GameUserSettings_IsScreenResolutionDirty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.IsHDREnabled
struct UEngine_GameUserSettings_IsHDREnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.IsFullscreenModeDirty
struct UEngine_GameUserSettings_IsFullscreenModeDirty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.IsDynamicResolutionEnabled
struct UEngine_GameUserSettings_IsDynamicResolutionEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.IsDynamicResolutionDirty
struct UEngine_GameUserSettings_IsDynamicResolutionDirty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.IsDirty
struct UEngine_GameUserSettings_IsDirty_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetVisualEffectQuality
struct UEngine_GameUserSettings_GetVisualEffectQuality_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetViewDistanceQuality
struct UEngine_GameUserSettings_GetViewDistanceQuality_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetTextureQuality
struct UEngine_GameUserSettings_GetTextureQuality_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetSyncInterval
struct UEngine_GameUserSettings_GetSyncInterval_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetShadowQuality
struct UEngine_GameUserSettings_GetShadowQuality_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetShadingQuality
struct UEngine_GameUserSettings_GetShadingQuality_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetScreenResolution
struct UEngine_GameUserSettings_GetScreenResolution_Params
{
	struct FIntPoint                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetResolutionScaleNormalized
struct UEngine_GameUserSettings_GetResolutionScaleNormalized_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetResolutionScaleInformationEx
struct UEngine_GameUserSettings_GetResolutionScaleInformationEx_Params
{
	float                                              CurrentScaleNormalized;                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              CurrentScaleValue;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              MinScaleValue;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              MaxScaleValue;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetResolutionScaleInformation
struct UEngine_GameUserSettings_GetResolutionScaleInformation_Params
{
	float                                              CurrentScaleNormalized;                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                CurrentScaleValue;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                MinScaleValue;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                MaxScaleValue;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetRecommendedResolutionScale
struct UEngine_GameUserSettings_GetRecommendedResolutionScale_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetPreferredFullscreenMode
struct UEngine_GameUserSettings_GetPreferredFullscreenMode_Params
{
	TEnumAsByte<FEngine_Engine_EWindowMode>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetPostProcessingQuality
struct UEngine_GameUserSettings_GetPostProcessingQuality_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetOverallScalabilityLevel
struct UEngine_GameUserSettings_GetOverallScalabilityLevel_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetLastConfirmedScreenResolution
struct UEngine_GameUserSettings_GetLastConfirmedScreenResolution_Params
{
	struct FIntPoint                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetLastConfirmedFullscreenMode
struct UEngine_GameUserSettings_GetLastConfirmedFullscreenMode_Params
{
	TEnumAsByte<FEngine_Engine_EWindowMode>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetGameUserSettings
struct UEngine_GameUserSettings_GetGameUserSettings_Params
{
	class UEngine_GameUserSettings*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetFullscreenMode
struct UEngine_GameUserSettings_GetFullscreenMode_Params
{
	TEnumAsByte<FEngine_Engine_EWindowMode>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetFrameRateLimit
struct UEngine_GameUserSettings_GetFrameRateLimit_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetFoliageQuality
struct UEngine_GameUserSettings_GetFoliageQuality_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetDesktopResolution
struct UEngine_GameUserSettings_GetDesktopResolution_Params
{
	struct FIntPoint                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetDefaultWindowPosition
struct UEngine_GameUserSettings_GetDefaultWindowPosition_Params
{
	struct FIntPoint                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetDefaultWindowMode
struct UEngine_GameUserSettings_GetDefaultWindowMode_Params
{
	TEnumAsByte<FEngine_Engine_EWindowMode>            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetDefaultResolutionScale
struct UEngine_GameUserSettings_GetDefaultResolutionScale_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetDefaultResolution
struct UEngine_GameUserSettings_GetDefaultResolution_Params
{
	struct FIntPoint                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetCurrentHDRDisplayNits
struct UEngine_GameUserSettings_GetCurrentHDRDisplayNits_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetAudioQualityLevel
struct UEngine_GameUserSettings_GetAudioQualityLevel_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.GetAntiAliasingQuality
struct UEngine_GameUserSettings_GetAntiAliasingQuality_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.GameUserSettings.EnableHDRDisplayOutput
struct UEngine_GameUserSettings_EnableHDRDisplayOutput_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                DisplayNits;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.ConfirmVideoMode
struct UEngine_GameUserSettings_ConfirmVideoMode_Params
{
};

// Function Engine.GameUserSettings.ApplySettings
struct UEngine_GameUserSettings_ApplySettings_Params
{
	bool                                               bCheckForCommandLineOverrides;                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.ApplyResolutionSettings
struct UEngine_GameUserSettings_ApplyResolutionSettings_Params
{
	bool                                               bCheckForCommandLineOverrides;                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.GameUserSettings.ApplyNonResolutionSettings
struct UEngine_GameUserSettings_ApplyNonResolutionSettings_Params
{
};

// Function Engine.GameUserSettings.ApplyHardwareBenchmarkResults
struct UEngine_GameUserSettings_ApplyHardwareBenchmarkResults_Params
{
};

// Function Engine.SpotLight.SetOuterConeAngle
struct AEngine_SpotLight_SetOuterConeAngle_Params
{
	float                                              NewOuterConeAngle;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SpotLight.SetInnerConeAngle
struct AEngine_SpotLight_SetInnerConeAngle_Params
{
	float                                              NewInnerConeAngle;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ForceFeedbackComponent.Stop
struct UEngine_ForceFeedbackComponent_Stop_Params
{
};

// Function Engine.ForceFeedbackComponent.SetIntensityMultiplier
struct UEngine_ForceFeedbackComponent_SetIntensityMultiplier_Params
{
	float                                              NewIntensityMultiplier;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ForceFeedbackComponent.SetForceFeedbackEffect
struct UEngine_ForceFeedbackComponent_SetForceFeedbackEffect_Params
{
	class UEngine_ForceFeedbackEffect*                 NewForceFeedbackEffect;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ForceFeedbackComponent.Play
struct UEngine_ForceFeedbackComponent_Play_Params
{
	float                                              StartTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ForceFeedbackComponent.BP_GetAttenuationSettingsToApply
struct UEngine_ForceFeedbackComponent_BP_GetAttenuationSettingsToApply_Params
{
	struct FEngine_ForceFeedbackAttenuationSettings    OutAttenuationSettings;                                   // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ForceFeedbackComponent.AdjustAttenuation
struct UEngine_ForceFeedbackComponent_AdjustAttenuation_Params
{
	struct FEngine_ForceFeedbackAttenuationSettings    InAttenuationSettings;                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.ImportanceSamplingLibrary.RandomSobolFloat
struct UEngine_ImportanceSamplingLibrary_RandomSobolFloat_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Dimension;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Seed;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ImportanceSamplingLibrary.RandomSobolCell3D
struct UEngine_ImportanceSamplingLibrary_RandomSobolCell3D_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumCells;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Cell;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Seed;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ImportanceSamplingLibrary.RandomSobolCell2D
struct UEngine_ImportanceSamplingLibrary_RandomSobolCell2D_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumCells;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Cell;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Seed;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ImportanceSamplingLibrary.NextSobolFloat
struct UEngine_ImportanceSamplingLibrary_NextSobolFloat_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Dimension;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PreviousValue;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ImportanceSamplingLibrary.NextSobolCell3D
struct UEngine_ImportanceSamplingLibrary_NextSobolCell3D_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumCells;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PreviousValue;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ImportanceSamplingLibrary.NextSobolCell2D
struct UEngine_ImportanceSamplingLibrary_NextSobolCell2D_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumCells;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PreviousValue;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ImportanceSamplingLibrary.MakeImportanceTexture
struct UEngine_ImportanceSamplingLibrary_MakeImportanceTexture_Params
{
	class UEngine_Texture2D*                           Texture;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EImportanceWeight>      WeightingFunc;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_ImportanceTexture                   ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.ImportanceSamplingLibrary.ImportanceSample
struct UEngine_ImportanceSamplingLibrary_ImportanceSample_Params
{
	struct FEngine_ImportanceTexture                   Texture;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector2D                                   Rand;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                Samples;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SamplePosition;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SampleColor;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              SampleIntensity;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              SampleSize;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ImportanceSamplingLibrary.BreakImportanceTexture
struct UEngine_ImportanceSamplingLibrary_BreakImportanceTexture_Params
{
	struct FEngine_ImportanceTexture                   ImportanceTexture;                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	class UEngine_Texture2D*                           Texture;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EImportanceWeight>      WeightingFunc;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InputComponent.WasControllerKeyJustReleased
struct UEngine_InputComponent_WasControllerKeyJustReleased_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InputComponent.WasControllerKeyJustPressed
struct UEngine_InputComponent_WasControllerKeyJustPressed_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InputComponent.IsControllerKeyDown
struct UEngine_InputComponent_IsControllerKeyDown_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InputComponent.GetTouchState
struct UEngine_InputComponent_GetTouchState_Params
{
	int                                                FingerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LocationX;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              LocationY;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bIsCurrentlyPressed;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InputComponent.GetControllerVectorKeyState
struct UEngine_InputComponent_GetControllerVectorKeyState_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InputComponent.GetControllerMouseDelta
struct UEngine_InputComponent_GetControllerMouseDelta_Params
{
	float                                              DeltaX;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaY;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InputComponent.GetControllerKeyTimeDown
struct UEngine_InputComponent_GetControllerKeyTimeDown_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InputComponent.GetControllerAnalogStickState
struct UEngine_InputComponent_GetControllerAnalogStickState_Params
{
	TEnumAsByte<FEngine_Engine_EControllerAnalogStick> WhichStick;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              StickX;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              StickY;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InputComponent.GetControllerAnalogKeyState
struct UEngine_InputComponent_GetControllerAnalogKeyState_Params
{
	struct FInputCore_Key                              Key;                                                      // (Parm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InputSettings.SaveKeyMappings
struct UEngine_InputSettings_SaveKeyMappings_Params
{
};

// Function Engine.InputSettings.RemoveAxisMapping
struct UEngine_InputSettings_RemoveAxisMapping_Params
{
	struct FEngine_InputAxisKeyMapping                 KeyMapping;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bForceRebuildKeymaps;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InputSettings.RemoveActionMapping
struct UEngine_InputSettings_RemoveActionMapping_Params
{
	struct FEngine_InputActionKeyMapping               KeyMapping;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bForceRebuildKeymaps;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InputSettings.GetInputSettings
struct UEngine_InputSettings_GetInputSettings_Params
{
	class UEngine_InputSettings*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.InputSettings.GetAxisNames
struct UEngine_InputSettings_GetAxisNames_Params
{
	TArray<struct FName>                               AxisNames;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.InputSettings.GetAxisMappingByName
struct UEngine_InputSettings_GetAxisMappingByName_Params
{
	struct FName                                       InAxisName;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_InputAxisKeyMapping>         OutMappings;                                              // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.InputSettings.GetActionNames
struct UEngine_InputSettings_GetActionNames_Params
{
	TArray<struct FName>                               ActionNames;                                              // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.InputSettings.GetActionMappingByName
struct UEngine_InputSettings_GetActionMappingByName_Params
{
	struct FName                                       InActionName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_InputActionKeyMapping>       OutMappings;                                              // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.InputSettings.ForceRebuildKeymaps
struct UEngine_InputSettings_ForceRebuildKeymaps_Params
{
};

// Function Engine.InputSettings.AddAxisMapping
struct UEngine_InputSettings_AddAxisMapping_Params
{
	struct FEngine_InputAxisKeyMapping                 KeyMapping;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bForceRebuildKeymaps;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InputSettings.AddActionMapping
struct UEngine_InputSettings_AddActionMapping_Params
{
	struct FEngine_InputActionKeyMapping               KeyMapping;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bForceRebuildKeymaps;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.HealthSnapshotBlueprintLibrary.StopPerformanceSnapshots
struct UEngine_HealthSnapshotBlueprintLibrary_StopPerformanceSnapshots_Params
{
};

// Function Engine.HealthSnapshotBlueprintLibrary.StartPerformanceSnapshots
struct UEngine_HealthSnapshotBlueprintLibrary_StartPerformanceSnapshots_Params
{
};

// Function Engine.HealthSnapshotBlueprintLibrary.LogPerformanceSnapshot
struct UEngine_HealthSnapshotBlueprintLibrary_LogPerformanceSnapshot_Params
{
	struct FString                                     SnapshotTitle;                                            // (ConstParm, Parm, ZeroConstructor)
	bool                                               bResetStats;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InterpToMovementComponent.StopSimulating
struct UEngine_InterpToMovementComponent_StopSimulating_Params
{
	struct FEngine_HitResult                           HitResult;                                                // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.InterpToMovementComponent.RestartMovement
struct UEngine_InterpToMovementComponent_RestartMovement_Params
{
	float                                              InitialDirection;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// DelegateFunction Engine.InterpToMovementComponent.OnInterpToWaitEndDelegate__DelegateSignature
struct UEngine_InterpToMovementComponent_OnInterpToWaitEndDelegate__DelegateSignature_Params
{
	struct FEngine_HitResult                           ImpactResult;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// DelegateFunction Engine.InterpToMovementComponent.OnInterpToWaitBeginDelegate__DelegateSignature
struct UEngine_InterpToMovementComponent_OnInterpToWaitBeginDelegate__DelegateSignature_Params
{
	struct FEngine_HitResult                           ImpactResult;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// DelegateFunction Engine.InterpToMovementComponent.OnInterpToStopDelegate__DelegateSignature
struct UEngine_InterpToMovementComponent_OnInterpToStopDelegate__DelegateSignature_Params
{
	struct FEngine_HitResult                           ImpactResult;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// DelegateFunction Engine.InterpToMovementComponent.OnInterpToReverseDelegate__DelegateSignature
struct UEngine_InterpToMovementComponent_OnInterpToReverseDelegate__DelegateSignature_Params
{
	struct FEngine_HitResult                           ImpactResult;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// DelegateFunction Engine.InterpToMovementComponent.OnInterpToResetDelegate__DelegateSignature
struct UEngine_InterpToMovementComponent_OnInterpToResetDelegate__DelegateSignature_Params
{
	struct FEngine_HitResult                           ImpactResult;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.InterpToMovementComponent.FinaliseControlPoints
struct UEngine_InterpToMovementComponent_FinaliseControlPoints_Params
{
};

// Function Engine.KismetArrayLibrary.SetArrayPropertyByName
struct UEngine_KismetArrayLibrary_SetArrayPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.KismetArrayLibrary.FilterArray
struct UEngine_KismetArrayLibrary_FilterArray_Params
{
	TArray<class AEngine_Actor*>                       TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      FilterClass;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       FilteredArray;                                            // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.KismetArrayLibrary.Array_Swap
struct UEngine_KismetArrayLibrary_Array_Swap_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                FirstIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                SecondIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Shuffle
struct UEngine_KismetArrayLibrary_Array_Shuffle_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.KismetArrayLibrary.Array_Set
struct UEngine_KismetArrayLibrary_Array_Set_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Item;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bSizeToFit;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Resize
struct UEngine_KismetArrayLibrary_Array_Resize_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                Size;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_RemoveItem
struct UEngine_KismetArrayLibrary_Array_RemoveItem_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                Item;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Remove
struct UEngine_KismetArrayLibrary_Array_Remove_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                IndexToRemove;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Length
struct UEngine_KismetArrayLibrary_Array_Length_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_LastIndex
struct UEngine_KismetArrayLibrary_Array_LastIndex_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_IsValidIndex
struct UEngine_KismetArrayLibrary_Array_IsValidIndex_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                IndexToTest;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Insert
struct UEngine_KismetArrayLibrary_Array_Insert_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                NewItem;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Identical
struct UEngine_KismetArrayLibrary_Array_Identical_Params
{
	TArray<int>                                        ArrayA;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<int>                                        ArrayB;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Get
struct UEngine_KismetArrayLibrary_Array_Get_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Item;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Find
struct UEngine_KismetArrayLibrary_Array_Find_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ItemToFind;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Contains
struct UEngine_KismetArrayLibrary_Array_Contains_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ItemToFind;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Clear
struct UEngine_KismetArrayLibrary_Array_Clear_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.KismetArrayLibrary.Array_Append
struct UEngine_KismetArrayLibrary_Array_Append_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<int>                                        SourceArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.KismetArrayLibrary.Array_AddUnique
struct UEngine_KismetArrayLibrary_Array_AddUnique_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                NewItem;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetArrayLibrary.Array_Add
struct UEngine_KismetArrayLibrary_Array_Add_Params
{
	TArray<int>                                        TargetArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                NewItem;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_IsTouchEvent
struct UEngine_KismetInputLibrary_PointerEvent_IsTouchEvent_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_IsMouseButtonDown
struct UEngine_KismetInputLibrary_PointerEvent_IsMouseButtonDown_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FInputCore_Key                              MouseButton;                                              // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_GetWheelDelta
struct UEngine_KismetInputLibrary_PointerEvent_GetWheelDelta_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_GetUserIndex
struct UEngine_KismetInputLibrary_PointerEvent_GetUserIndex_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_GetTouchpadIndex
struct UEngine_KismetInputLibrary_PointerEvent_GetTouchpadIndex_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_GetScreenSpacePosition
struct UEngine_KismetInputLibrary_PointerEvent_GetScreenSpacePosition_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_GetPointerIndex
struct UEngine_KismetInputLibrary_PointerEvent_GetPointerIndex_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_GetLastScreenSpacePosition
struct UEngine_KismetInputLibrary_PointerEvent_GetLastScreenSpacePosition_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_GetGestureType
struct UEngine_KismetInputLibrary_PointerEvent_GetGestureType_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	FEngine_Engine_ESlateGesture                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_GetGestureDelta
struct UEngine_KismetInputLibrary_PointerEvent_GetGestureDelta_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.PointerEvent_GetEffectingButton
struct UEngine_KismetInputLibrary_PointerEvent_GetEffectingButton_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FInputCore_Key                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetInputLibrary.PointerEvent_GetCursorDelta
struct UEngine_KismetInputLibrary_PointerEvent_GetCursorDelta_Params
{
	struct FSlateCore_PointerEvent                     Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_IsVectorAxis
struct UEngine_KismetInputLibrary_Key_IsVectorAxis_Params
{
	struct FInputCore_Key                              Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_IsValid
struct UEngine_KismetInputLibrary_Key_IsValid_Params
{
	struct FInputCore_Key                              Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_IsMouseButton
struct UEngine_KismetInputLibrary_Key_IsMouseButton_Params
{
	struct FInputCore_Key                              Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_IsModifierKey
struct UEngine_KismetInputLibrary_Key_IsModifierKey_Params
{
	struct FInputCore_Key                              Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_IsKeyboardKey
struct UEngine_KismetInputLibrary_Key_IsKeyboardKey_Params
{
	struct FInputCore_Key                              Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_IsGamepadKey
struct UEngine_KismetInputLibrary_Key_IsGamepadKey_Params
{
	struct FInputCore_Key                              Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_IsFloatAxis
struct UEngine_KismetInputLibrary_Key_IsFloatAxis_Params
{
	struct FInputCore_Key                              Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_GetNavigationDirectionFromKey
struct UEngine_KismetInputLibrary_Key_GetNavigationDirectionFromKey_Params
{
	struct FSlateCore_KeyEvent                         InKeyEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	FSlateCore_SlateCore_EUINavigation                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_GetNavigationDirectionFromAnalog
struct UEngine_KismetInputLibrary_Key_GetNavigationDirectionFromAnalog_Params
{
	struct FSlateCore_AnalogInputEvent                 InAnalogEvent;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	FSlateCore_SlateCore_EUINavigation                 ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_GetNavigationActionFromKey
struct UEngine_KismetInputLibrary_Key_GetNavigationActionFromKey_Params
{
	struct FSlateCore_KeyEvent                         InKeyEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	FSlateCore_SlateCore_EUINavigationAction           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_GetNavigationAction
struct UEngine_KismetInputLibrary_Key_GetNavigationAction_Params
{
	struct FInputCore_Key                              InKey;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	FSlateCore_SlateCore_EUINavigationAction           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.Key_GetDisplayName
struct UEngine_KismetInputLibrary_Key_GetDisplayName_Params
{
	struct FInputCore_Key                              Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetInputLibrary.InputEvent_IsShiftDown
struct UEngine_KismetInputLibrary_InputEvent_IsShiftDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsRightShiftDown
struct UEngine_KismetInputLibrary_InputEvent_IsRightShiftDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsRightControlDown
struct UEngine_KismetInputLibrary_InputEvent_IsRightControlDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsRightCommandDown
struct UEngine_KismetInputLibrary_InputEvent_IsRightCommandDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsRightAltDown
struct UEngine_KismetInputLibrary_InputEvent_IsRightAltDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsRepeat
struct UEngine_KismetInputLibrary_InputEvent_IsRepeat_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsLeftShiftDown
struct UEngine_KismetInputLibrary_InputEvent_IsLeftShiftDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsLeftControlDown
struct UEngine_KismetInputLibrary_InputEvent_IsLeftControlDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsLeftCommandDown
struct UEngine_KismetInputLibrary_InputEvent_IsLeftCommandDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsLeftAltDown
struct UEngine_KismetInputLibrary_InputEvent_IsLeftAltDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsControlDown
struct UEngine_KismetInputLibrary_InputEvent_IsControlDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsCommandDown
struct UEngine_KismetInputLibrary_InputEvent_IsCommandDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputEvent_IsAltDown
struct UEngine_KismetInputLibrary_InputEvent_IsAltDown_Params
{
	struct FSlateCore_InputEvent                       Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.InputChord_GetDisplayName
struct UEngine_KismetInputLibrary_InputChord_GetDisplayName_Params
{
	struct FSlate_InputChord                           Key;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetInputLibrary.GetUserIndex
struct UEngine_KismetInputLibrary_GetUserIndex_Params
{
	struct FSlateCore_KeyEvent                         Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.GetKey
struct UEngine_KismetInputLibrary_GetKey_Params
{
	struct FSlateCore_KeyEvent                         Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FInputCore_Key                              ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetInputLibrary.GetAnalogValue
struct UEngine_KismetInputLibrary_GetAnalogValue_Params
{
	struct FSlateCore_AnalogInputEvent                 Input;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.EqualEqual_KeyKey
struct UEngine_KismetInputLibrary_EqualEqual_KeyKey_Params
{
	struct FInputCore_Key                              A;                                                        // (Parm)
	struct FInputCore_Key                              B;                                                        // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.EqualEqual_InputChordInputChord
struct UEngine_KismetInputLibrary_EqualEqual_InputChordInputChord_Params
{
	struct FSlate_InputChord                           A;                                                        // (Parm)
	struct FSlate_InputChord                           B;                                                        // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInputLibrary.CalibrateTilt
struct UEngine_KismetInputLibrary_CalibrateTilt_Params
{
};

// Function Engine.KismetInternationalizationLibrary.SetCurrentLocale
struct UEngine_KismetInternationalizationLibrary_SetCurrentLocale_Params
{
	struct FString                                     Culture;                                                  // (Parm, ZeroConstructor)
	bool                                               SaveToConfig;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInternationalizationLibrary.SetCurrentLanguageAndLocale
struct UEngine_KismetInternationalizationLibrary_SetCurrentLanguageAndLocale_Params
{
	struct FString                                     Culture;                                                  // (Parm, ZeroConstructor)
	bool                                               SaveToConfig;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInternationalizationLibrary.SetCurrentLanguage
struct UEngine_KismetInternationalizationLibrary_SetCurrentLanguage_Params
{
	struct FString                                     Culture;                                                  // (Parm, ZeroConstructor)
	bool                                               SaveToConfig;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInternationalizationLibrary.SetCurrentCulture
struct UEngine_KismetInternationalizationLibrary_SetCurrentCulture_Params
{
	struct FString                                     Culture;                                                  // (Parm, ZeroConstructor)
	bool                                               SaveToConfig;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInternationalizationLibrary.SetCurrentAssetGroupCulture
struct UEngine_KismetInternationalizationLibrary_SetCurrentAssetGroupCulture_Params
{
	struct FName                                       AssetGroup;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Culture;                                                  // (Parm, ZeroConstructor)
	bool                                               SaveToConfig;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetInternationalizationLibrary.GetSuitableCulture
struct UEngine_KismetInternationalizationLibrary_GetSuitableCulture_Params
{
	TArray<struct FString>                             AvailableCultures;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FString                                     CultureToMatch;                                           // (Parm, ZeroConstructor)
	struct FString                                     FallbackCulture;                                          // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetInternationalizationLibrary.GetNativeCulture
struct UEngine_KismetInternationalizationLibrary_GetNativeCulture_Params
{
	FCoreUObject_ELocalizedTextSourceCategory          TextCategory;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetInternationalizationLibrary.GetLocalizedCultures
struct UEngine_KismetInternationalizationLibrary_GetLocalizedCultures_Params
{
	bool                                               IncludeGame;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IncludeEngine;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IncludeEditor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               IncludeAdditional;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetInternationalizationLibrary.GetCurrentLocale
struct UEngine_KismetInternationalizationLibrary_GetCurrentLocale_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetInternationalizationLibrary.GetCurrentLanguage
struct UEngine_KismetInternationalizationLibrary_GetCurrentLanguage_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetInternationalizationLibrary.GetCurrentCulture
struct UEngine_KismetInternationalizationLibrary_GetCurrentCulture_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetInternationalizationLibrary.GetCurrentAssetGroupCulture
struct UEngine_KismetInternationalizationLibrary_GetCurrentAssetGroupCulture_Params
{
	struct FName                                       AssetGroup;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetInternationalizationLibrary.GetCultureDisplayName
struct UEngine_KismetInternationalizationLibrary_GetCultureDisplayName_Params
{
	struct FString                                     Culture;                                                  // (Parm, ZeroConstructor)
	bool                                               Localized;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetInternationalizationLibrary.ClearCurrentAssetGroupCulture
struct UEngine_KismetInternationalizationLibrary_ClearCurrentAssetGroupCulture_Params
{
	struct FName                                       AssetGroup;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               SaveToConfig;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMaterialLibrary.SetVectorParameterValue
struct UEngine_KismetMaterialLibrary_SetVectorParameterValue_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialParameterCollection*         Collection;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ParameterValue;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetMaterialLibrary.SetScalarParameterValue
struct UEngine_KismetMaterialLibrary_SetScalarParameterValue_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialParameterCollection*         Collection;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ParameterValue;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMaterialLibrary.GetVectorParameterValue
struct UEngine_KismetMaterialLibrary_GetVectorParameterValue_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialParameterCollection*         Collection;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMaterialLibrary.GetScalarParameterValue
struct UEngine_KismetMaterialLibrary_GetScalarParameterValue_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialParameterCollection*         Collection;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMaterialLibrary.CreateDynamicMaterialInstance
struct UEngine_KismetMaterialLibrary_CreateDynamicMaterialInstance_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   Parent;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       OptionalName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInstanceDynamic*             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Xor_IntInt
struct UEngine_KismetMathLibrary_Xor_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Xor_Int64Int64
struct UEngine_KismetMathLibrary_Xor_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.WeightedMovingAverage_FVector
struct UEngine_KismetMathLibrary_WeightedMovingAverage_FVector_Params
{
	struct FVector                                     CurrentSample;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PreviousSample;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.WeightedMovingAverage_FRotator
struct UEngine_KismetMathLibrary_WeightedMovingAverage_FRotator_Params
{
	struct FRotator                                    CurrentSample;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    PreviousSample;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.WeightedMovingAverage_Float
struct UEngine_KismetMathLibrary_WeightedMovingAverage_Float_Params
{
	float                                              CurrentSample;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PreviousSample;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Weight;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VSizeXYSquared
struct UEngine_KismetMathLibrary_VSizeXYSquared_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VSizeXY
struct UEngine_KismetMathLibrary_VSizeXY_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VSizeSquared
struct UEngine_KismetMathLibrary_VSizeSquared_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VSize2DSquared
struct UEngine_KismetMathLibrary_VSize2DSquared_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VSize2D
struct UEngine_KismetMathLibrary_VSize2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VSize
struct UEngine_KismetMathLibrary_VSize_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VLerp
struct UEngine_KismetMathLibrary_VLerp_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VInterpTo_Constant
struct UEngine_KismetMathLibrary_VInterpTo_Constant_Params
{
	struct FVector                                     Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VInterpTo
struct UEngine_KismetMathLibrary_VInterpTo_Params
{
	struct FVector                                     Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VectorSpringInterp
struct UEngine_KismetMathLibrary_VectorSpringInterp_Params
{
	struct FVector                                     Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_VectorSpringState                   SpringState;                                              // (Parm, OutParm, ReferenceParm)
	float                                              Stiffness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              CriticalDampingFactor;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Mass;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Zero
struct UEngine_KismetMathLibrary_Vector_Zero_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Up
struct UEngine_KismetMathLibrary_Vector_Up_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_UnwindEuler
struct UEngine_KismetMathLibrary_Vector_UnwindEuler_Params
{
	struct FVector                                     A;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_UnitCartesianToSpherical
struct UEngine_KismetMathLibrary_Vector_UnitCartesianToSpherical_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_ToRadians
struct UEngine_KismetMathLibrary_Vector_ToRadians_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_ToDegrees
struct UEngine_KismetMathLibrary_Vector_ToDegrees_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_SnappedToGrid
struct UEngine_KismetMathLibrary_Vector_SnappedToGrid_Params
{
	struct FVector                                     InVect;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InGridSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Set
struct UEngine_KismetMathLibrary_Vector_Set_Params
{
	struct FVector                                     A;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Right
struct UEngine_KismetMathLibrary_Vector_Right_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Reciprocal
struct UEngine_KismetMathLibrary_Vector_Reciprocal_Params
{
	struct FVector                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_ProjectOnToNormal
struct UEngine_KismetMathLibrary_Vector_ProjectOnToNormal_Params
{
	struct FVector                                     V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InNormal;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_One
struct UEngine_KismetMathLibrary_Vector_One_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_NormalUnsafe
struct UEngine_KismetMathLibrary_Vector_NormalUnsafe_Params
{
	struct FVector                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Normalize
struct UEngine_KismetMathLibrary_Vector_Normalize_Params
{
	struct FVector                                     A;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Normal2D
struct UEngine_KismetMathLibrary_Vector_Normal2D_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_MirrorByPlane
struct UEngine_KismetMathLibrary_Vector_MirrorByPlane_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPlane                                      InPlane;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Left
struct UEngine_KismetMathLibrary_Vector_Left_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_IsZero
struct UEngine_KismetMathLibrary_Vector_IsZero_Params
{
	struct FVector                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_IsUnit
struct UEngine_KismetMathLibrary_Vector_IsUnit_Params
{
	struct FVector                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              SquaredLenthTolerance;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_IsUniform
struct UEngine_KismetMathLibrary_Vector_IsUniform_Params
{
	struct FVector                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_IsNormal
struct UEngine_KismetMathLibrary_Vector_IsNormal_Params
{
	struct FVector                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_IsNearlyZero
struct UEngine_KismetMathLibrary_Vector_IsNearlyZero_Params
{
	struct FVector                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_IsNAN
struct UEngine_KismetMathLibrary_Vector_IsNAN_Params
{
	struct FVector                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_HeadingAngle
struct UEngine_KismetMathLibrary_Vector_HeadingAngle_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_GetSignVector
struct UEngine_KismetMathLibrary_Vector_GetSignVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_GetProjection
struct UEngine_KismetMathLibrary_Vector_GetProjection_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_GetAbsMin
struct UEngine_KismetMathLibrary_Vector_GetAbsMin_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_GetAbsMax
struct UEngine_KismetMathLibrary_Vector_GetAbsMax_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_GetAbs
struct UEngine_KismetMathLibrary_Vector_GetAbs_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Forward
struct UEngine_KismetMathLibrary_Vector_Forward_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Down
struct UEngine_KismetMathLibrary_Vector_Down_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_DistanceSquared
struct UEngine_KismetMathLibrary_Vector_DistanceSquared_Params
{
	struct FVector                                     v1;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     v2;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Distance2DSquared
struct UEngine_KismetMathLibrary_Vector_Distance2DSquared_Params
{
	struct FVector                                     v1;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     v2;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Distance2D
struct UEngine_KismetMathLibrary_Vector_Distance2D_Params
{
	struct FVector                                     v1;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     v2;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Distance
struct UEngine_KismetMathLibrary_Vector_Distance_Params
{
	struct FVector                                     v1;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     v2;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_CosineAngle2D
struct UEngine_KismetMathLibrary_Vector_CosineAngle2D_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_ComponentMin
struct UEngine_KismetMathLibrary_Vector_ComponentMin_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_ComponentMax
struct UEngine_KismetMathLibrary_Vector_ComponentMax_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_ClampSizeMax2D
struct UEngine_KismetMathLibrary_Vector_ClampSizeMax2D_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_ClampSizeMax
struct UEngine_KismetMathLibrary_Vector_ClampSizeMax_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_ClampSize2D
struct UEngine_KismetMathLibrary_Vector_ClampSize2D_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_BoundedToCube
struct UEngine_KismetMathLibrary_Vector_BoundedToCube_Params
{
	struct FVector                                     InVect;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InRadius;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_BoundedToBox
struct UEngine_KismetMathLibrary_Vector_BoundedToBox_Params
{
	struct FVector                                     InVect;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InBoxMin;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InBoxMax;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Backward
struct UEngine_KismetMathLibrary_Vector_Backward_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_Assign
struct UEngine_KismetMathLibrary_Vector_Assign_Params
{
	struct FVector                                     A;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     InVector;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector_AddBounded
struct UEngine_KismetMathLibrary_Vector_AddBounded_Params
{
	struct FVector                                     A;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     InAddVect;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InRadius;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_Zero
struct UEngine_KismetMathLibrary_Vector4_Zero_Params
{
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_SizeSquared3
struct UEngine_KismetMathLibrary_Vector4_SizeSquared3_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_SizeSquared
struct UEngine_KismetMathLibrary_Vector4_SizeSquared_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_Size3
struct UEngine_KismetMathLibrary_Vector4_Size3_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_Size
struct UEngine_KismetMathLibrary_Vector4_Size_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_Set
struct UEngine_KismetMathLibrary_Vector4_Set_Params
{
	struct FVector4                                    A;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              W;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_NormalUnsafe3
struct UEngine_KismetMathLibrary_Vector4_NormalUnsafe3_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_Normalize3
struct UEngine_KismetMathLibrary_Vector4_Normalize3_Params
{
	struct FVector4                                    A;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_Normal3
struct UEngine_KismetMathLibrary_Vector4_Normal3_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_Negated
struct UEngine_KismetMathLibrary_Vector4_Negated_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_MirrorByVector3
struct UEngine_KismetMathLibrary_Vector4_MirrorByVector3_Params
{
	struct FVector4                                    Direction;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    SurfaceNormal;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_IsZero
struct UEngine_KismetMathLibrary_Vector4_IsZero_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_IsUnit3
struct UEngine_KismetMathLibrary_Vector4_IsUnit3_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              SquaredLenthTolerance;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_IsNormal3
struct UEngine_KismetMathLibrary_Vector4_IsNormal3_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_IsNearlyZero3
struct UEngine_KismetMathLibrary_Vector4_IsNearlyZero3_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_IsNAN
struct UEngine_KismetMathLibrary_Vector4_IsNAN_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_DotProduct3
struct UEngine_KismetMathLibrary_Vector4_DotProduct3_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_DotProduct
struct UEngine_KismetMathLibrary_Vector4_DotProduct_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_CrossProduct3
struct UEngine_KismetMathLibrary_Vector4_CrossProduct3_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector4_Assign
struct UEngine_KismetMathLibrary_Vector4_Assign_Params
{
	struct FVector4                                    A;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    InVector;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector2DInterpTo_Constant
struct UEngine_KismetMathLibrary_Vector2DInterpTo_Constant_Params
{
	struct FVector2D                                   Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector2DInterpTo
struct UEngine_KismetMathLibrary_Vector2DInterpTo_Params
{
	struct FVector2D                                   Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector2D_Zero
struct UEngine_KismetMathLibrary_Vector2D_Zero_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector2D_Unit45Deg
struct UEngine_KismetMathLibrary_Vector2D_Unit45Deg_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Vector2D_One
struct UEngine_KismetMathLibrary_Vector2D_One_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.VEase
struct UEngine_KismetMathLibrary_VEase_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EEasingFunc>            EasingFunc;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendExp;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Steps;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.UtcNow
struct UEngine_KismetMathLibrary_UtcNow_Params
{
	struct FDateTime                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.TransformRotation
struct UEngine_KismetMathLibrary_TransformRotation_Params
{
	struct FTransform                                  T;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.TransformLocation
struct UEngine_KismetMathLibrary_TransformLocation_Params
{
	struct FTransform                                  T;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.TransformDirection
struct UEngine_KismetMathLibrary_TransformDirection_Params
{
	struct FTransform                                  T;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     Direction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Transform_Determinant
struct UEngine_KismetMathLibrary_Transform_Determinant_Params
{
	struct FTransform                                  Transform;                                                // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ToSign2D
struct UEngine_KismetMathLibrary_ToSign2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ToRounded2D
struct UEngine_KismetMathLibrary_ToRounded2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ToDirectionAndLength2D
struct UEngine_KismetMathLibrary_ToDirectionAndLength2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   OutDir;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutLength;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Today
struct UEngine_KismetMathLibrary_Today_Params
{
	struct FDateTime                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.TLerp
struct UEngine_KismetMathLibrary_TLerp_Params
{
	struct FTransform                                  A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ELerpInterpolationMode> InterpMode;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.TInterpTo
struct UEngine_KismetMathLibrary_TInterpTo_Params
{
	struct FTransform                                  Current;                                                  // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  Target;                                                   // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.TimespanZeroValue
struct UEngine_KismetMathLibrary_TimespanZeroValue_Params
{
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.TimespanRatio
struct UEngine_KismetMathLibrary_TimespanRatio_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.TimespanMinValue
struct UEngine_KismetMathLibrary_TimespanMinValue_Params
{
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.TimespanMaxValue
struct UEngine_KismetMathLibrary_TimespanMaxValue_Params
{
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.TimespanFromString
struct UEngine_KismetMathLibrary_TimespanFromString_Params
{
	struct FString                                     TimespanString;                                           // (Parm, ZeroConstructor)
	struct FTimespan                                   Result;                                                   // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.TEase
struct UEngine_KismetMathLibrary_TEase_Params
{
	struct FTransform                                  A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EEasingFunc>            EasingFunc;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendExp;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Steps;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Tan
struct UEngine_KismetMathLibrary_Tan_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_VectorVector
struct UEngine_KismetMathLibrary_Subtract_VectorVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_VectorInt
struct UEngine_KismetMathLibrary_Subtract_VectorInt_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_VectorFloat
struct UEngine_KismetMathLibrary_Subtract_VectorFloat_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_Vector4Vector4
struct UEngine_KismetMathLibrary_Subtract_Vector4Vector4_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_Vector2DVector2D
struct UEngine_KismetMathLibrary_Subtract_Vector2DVector2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_Vector2DFloat
struct UEngine_KismetMathLibrary_Subtract_Vector2DFloat_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_TimespanTimespan
struct UEngine_KismetMathLibrary_Subtract_TimespanTimespan_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.Subtract_QuatQuat
struct UEngine_KismetMathLibrary_Subtract_QuatQuat_Params
{
	struct FQuat                                       A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_LinearColorLinearColor
struct UEngine_KismetMathLibrary_Subtract_LinearColorLinearColor_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_IntInt
struct UEngine_KismetMathLibrary_Subtract_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_Int64Int64
struct UEngine_KismetMathLibrary_Subtract_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_FloatFloat
struct UEngine_KismetMathLibrary_Subtract_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Subtract_DateTimeTimespan
struct UEngine_KismetMathLibrary_Subtract_DateTimeTimespan_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.Subtract_DateTimeDateTime
struct UEngine_KismetMathLibrary_Subtract_DateTimeDateTime_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   B;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.Subtract_ByteByte
struct UEngine_KismetMathLibrary_Subtract_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Square
struct UEngine_KismetMathLibrary_Square_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Sqrt
struct UEngine_KismetMathLibrary_Sqrt_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Spherical2DToUnitCartesian
struct UEngine_KismetMathLibrary_Spherical2DToUnitCartesian_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Sin
struct UEngine_KismetMathLibrary_Sin_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SignOfInteger64
struct UEngine_KismetMathLibrary_SignOfInteger64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SignOfInteger
struct UEngine_KismetMathLibrary_SignOfInteger_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SignOfFloat
struct UEngine_KismetMathLibrary_SignOfFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SetRandomStreamSeed
struct UEngine_KismetMathLibrary_SetRandomStreamSeed_Params
{
	struct FRandomStream                               Stream;                                                   // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                NewSeed;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Set2D
struct UEngine_KismetMathLibrary_Set2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SelectVector
struct UEngine_KismetMathLibrary_SelectVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPickA;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SelectTransform
struct UEngine_KismetMathLibrary_SelectTransform_Params
{
	struct FTransform                                  A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               bPickA;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SelectString
struct UEngine_KismetMathLibrary_SelectString_Params
{
	struct FString                                     A;                                                        // (Parm, ZeroConstructor)
	struct FString                                     B;                                                        // (Parm, ZeroConstructor)
	bool                                               bPickA;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.SelectRotator
struct UEngine_KismetMathLibrary_SelectRotator_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPickA;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SelectObject
struct UEngine_KismetMathLibrary_SelectObject_Params
{
	class UObject*                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSelectA;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SelectInt
struct UEngine_KismetMathLibrary_SelectInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPickA;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SelectFloat
struct UEngine_KismetMathLibrary_SelectFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPickA;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SelectColor
struct UEngine_KismetMathLibrary_SelectColor_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPickA;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SelectClass
struct UEngine_KismetMathLibrary_SelectClass_Params
{
	class UClass*                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSelectA;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.SeedRandomStream
struct UEngine_KismetMathLibrary_SeedRandomStream_Params
{
	struct FRandomStream                               Stream;                                                   // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.KismetMathLibrary.SafeDivide
struct UEngine_KismetMathLibrary_SafeDivide_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Round64
struct UEngine_KismetMathLibrary_Round64_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Round
struct UEngine_KismetMathLibrary_Round_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RotatorFromAxisAndAngle
struct UEngine_KismetMathLibrary_RotatorFromAxisAndAngle_Params
{
	struct FVector                                     Axis;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RotateAngleAxis
struct UEngine_KismetMathLibrary_RotateAngleAxis_Params
{
	struct FVector                                     InVect;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleDeg;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Axis;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RLerp
struct UEngine_KismetMathLibrary_RLerp_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShortestPath;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RInterpTo_Constant
struct UEngine_KismetMathLibrary_RInterpTo_Constant_Params
{
	struct FRotator                                    Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RInterpTo
struct UEngine_KismetMathLibrary_RInterpTo_Params
{
	struct FRotator                                    Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RGBToHSV_Vector
struct UEngine_KismetMathLibrary_RGBToHSV_Vector_Params
{
	struct FLinearColor                                RGB;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                HSV;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RGBToHSV
struct UEngine_KismetMathLibrary_RGBToHSV_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              H;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              S;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              A;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RGBLinearToHSV
struct UEngine_KismetMathLibrary_RGBLinearToHSV_Params
{
	struct FLinearColor                                RGB;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ResetVectorSpringState
struct UEngine_KismetMathLibrary_ResetVectorSpringState_Params
{
	struct FEngine_VectorSpringState                   SpringState;                                              // (Parm, OutParm, ReferenceParm)
};

// Function Engine.KismetMathLibrary.ResetRandomStream
struct UEngine_KismetMathLibrary_ResetRandomStream_Params
{
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.KismetMathLibrary.ResetFloatSpringState
struct UEngine_KismetMathLibrary_ResetFloatSpringState_Params
{
	struct FEngine_FloatSpringState                    SpringState;                                              // (Parm, OutParm, ReferenceParm)
};

// Function Engine.KismetMathLibrary.REase
struct UEngine_KismetMathLibrary_REase_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShortestPath;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EEasingFunc>            EasingFunc;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendExp;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Steps;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInRadiansFromStream
struct UEngine_KismetMathLibrary_RandomUnitVectorInEllipticalConeInRadiansFromStream_Params
{
	struct FVector                                     ConeDir;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              MaxYawInRadians;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitchInRadians;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInRadians
struct UEngine_KismetMathLibrary_RandomUnitVectorInEllipticalConeInRadians_Params
{
	struct FVector                                     ConeDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxYawInRadians;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitchInRadians;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInDegreesFromStream
struct UEngine_KismetMathLibrary_RandomUnitVectorInEllipticalConeInDegreesFromStream_Params
{
	struct FVector                                     ConeDir;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              MaxYawInDegrees;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitchInDegrees;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInDegrees
struct UEngine_KismetMathLibrary_RandomUnitVectorInEllipticalConeInDegrees_Params
{
	struct FVector                                     ConeDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxYawInDegrees;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitchInDegrees;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInRadiansFromStream
struct UEngine_KismetMathLibrary_RandomUnitVectorInConeInRadiansFromStream_Params
{
	struct FVector                                     ConeDir;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ConeHalfAngleInRadians;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInRadians
struct UEngine_KismetMathLibrary_RandomUnitVectorInConeInRadians_Params
{
	struct FVector                                     ConeDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ConeHalfAngleInRadians;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInDegreesFromStream
struct UEngine_KismetMathLibrary_RandomUnitVectorInConeInDegreesFromStream_Params
{
	struct FVector                                     ConeDir;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ConeHalfAngleInDegrees;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInDegrees
struct UEngine_KismetMathLibrary_RandomUnitVectorInConeInDegrees_Params
{
	struct FVector                                     ConeDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ConeHalfAngleInDegrees;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomUnitVectorFromStream
struct UEngine_KismetMathLibrary_RandomUnitVectorFromStream_Params
{
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomUnitVector
struct UEngine_KismetMathLibrary_RandomUnitVector_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomRotatorFromStream
struct UEngine_KismetMathLibrary_RandomRotatorFromStream_Params
{
	bool                                               bRoll;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomRotator
struct UEngine_KismetMathLibrary_RandomRotator_Params
{
	bool                                               bRoll;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomPointInBoundingBox
struct UEngine_KismetMathLibrary_RandomPointInBoundingBox_Params
{
	struct FVector                                     Origin;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoxExtent;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomIntegerInRangeFromStream
struct UEngine_KismetMathLibrary_RandomIntegerInRangeFromStream_Params
{
	int                                                Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomIntegerInRange
struct UEngine_KismetMathLibrary_RandomIntegerInRange_Params
{
	int                                                Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomIntegerFromStream
struct UEngine_KismetMathLibrary_RandomIntegerFromStream_Params
{
	int                                                Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomInteger64InRange
struct UEngine_KismetMathLibrary_RandomInteger64InRange_Params
{
	int64_t                                            Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomInteger64
struct UEngine_KismetMathLibrary_RandomInteger64_Params
{
	int64_t                                            Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomInteger
struct UEngine_KismetMathLibrary_RandomInteger_Params
{
	int                                                Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomFloatInRangeFromStream
struct UEngine_KismetMathLibrary_RandomFloatInRangeFromStream_Params
{
	float                                              Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomFloatInRange
struct UEngine_KismetMathLibrary_RandomFloatInRange_Params
{
	float                                              Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomFloatFromStream
struct UEngine_KismetMathLibrary_RandomFloatFromStream_Params
{
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomFloat
struct UEngine_KismetMathLibrary_RandomFloat_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomBoolWithWeightFromStream
struct UEngine_KismetMathLibrary_RandomBoolWithWeightFromStream_Params
{
	float                                              Weight;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRandomStream                               RandomStream;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomBoolWithWeight
struct UEngine_KismetMathLibrary_RandomBoolWithWeight_Params
{
	float                                              Weight;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomBoolFromStream
struct UEngine_KismetMathLibrary_RandomBoolFromStream_Params
{
	struct FRandomStream                               Stream;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RandomBool
struct UEngine_KismetMathLibrary_RandomBool_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.RadiansToDegrees
struct UEngine_KismetMathLibrary_RadiansToDegrees_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_VectorUp
struct UEngine_KismetMathLibrary_Quat_VectorUp_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_VectorRight
struct UEngine_KismetMathLibrary_Quat_VectorRight_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_VectorForward
struct UEngine_KismetMathLibrary_Quat_VectorForward_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_UnrotateVector
struct UEngine_KismetMathLibrary_Quat_UnrotateVector_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     V;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_SizeSquared
struct UEngine_KismetMathLibrary_Quat_SizeSquared_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_Size
struct UEngine_KismetMathLibrary_Quat_Size_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_SetFromEuler
struct UEngine_KismetMathLibrary_Quat_SetFromEuler_Params
{
	struct FQuat                                       Q;                                                        // (Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     Euler;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_SetComponents
struct UEngine_KismetMathLibrary_Quat_SetComponents_Params
{
	struct FQuat                                       Q;                                                        // (Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              W;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_Rotator
struct UEngine_KismetMathLibrary_Quat_Rotator_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_RotateVector
struct UEngine_KismetMathLibrary_Quat_RotateVector_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     V;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_Normalized
struct UEngine_KismetMathLibrary_Quat_Normalized_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_Normalize
struct UEngine_KismetMathLibrary_Quat_Normalize_Params
{
	struct FQuat                                       Q;                                                        // (Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_MakeFromEuler
struct UEngine_KismetMathLibrary_Quat_MakeFromEuler_Params
{
	struct FVector                                     Euler;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_Log
struct UEngine_KismetMathLibrary_Quat_Log_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_IsNormalized
struct UEngine_KismetMathLibrary_Quat_IsNormalized_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_IsNonFinite
struct UEngine_KismetMathLibrary_Quat_IsNonFinite_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_IsIdentity
struct UEngine_KismetMathLibrary_Quat_IsIdentity_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_IsFinite
struct UEngine_KismetMathLibrary_Quat_IsFinite_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_Inversed
struct UEngine_KismetMathLibrary_Quat_Inversed_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_Identity
struct UEngine_KismetMathLibrary_Quat_Identity_Params
{
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_GetRotationAxis
struct UEngine_KismetMathLibrary_Quat_GetRotationAxis_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_GetAxisZ
struct UEngine_KismetMathLibrary_Quat_GetAxisZ_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_GetAxisY
struct UEngine_KismetMathLibrary_Quat_GetAxisY_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_GetAxisX
struct UEngine_KismetMathLibrary_Quat_GetAxisX_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_GetAngle
struct UEngine_KismetMathLibrary_Quat_GetAngle_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_Exp
struct UEngine_KismetMathLibrary_Quat_Exp_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_Euler
struct UEngine_KismetMathLibrary_Quat_Euler_Params
{
	struct FQuat                                       Q;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_EnforceShortestArcWith
struct UEngine_KismetMathLibrary_Quat_EnforceShortestArcWith_Params
{
	struct FQuat                                       A;                                                        // (Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Quat_AngularDistance
struct UEngine_KismetMathLibrary_Quat_AngularDistance_Params
{
	struct FQuat                                       A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ProjectVectorOnToVector
struct UEngine_KismetMathLibrary_ProjectVectorOnToVector_Params
{
	struct FVector                                     V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ProjectVectorOnToPlane
struct UEngine_KismetMathLibrary_ProjectVectorOnToPlane_Params
{
	struct FVector                                     V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PlaneNormal;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ProjectPointOnToPlane
struct UEngine_KismetMathLibrary_ProjectPointOnToPlane_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PlaneBase;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PlaneNormal;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.PointsAreCoplanar
struct UEngine_KismetMathLibrary_PointsAreCoplanar_Params
{
	TArray<struct FVector>                             Points;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.PerlinNoise1D
struct UEngine_KismetMathLibrary_PerlinNoise1D_Params
{
	float                                              Value;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Percent_IntInt
struct UEngine_KismetMathLibrary_Percent_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Percent_FloatFloat
struct UEngine_KismetMathLibrary_Percent_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Percent_ByteByte
struct UEngine_KismetMathLibrary_Percent_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Or_IntInt
struct UEngine_KismetMathLibrary_Or_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Or_Int64Int64
struct UEngine_KismetMathLibrary_Or_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Now
struct UEngine_KismetMathLibrary_Now_Params
{
	struct FDateTime                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.NotEqualExactly_VectorVector
struct UEngine_KismetMathLibrary_NotEqualExactly_VectorVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqualExactly_Vector4Vector4
struct UEngine_KismetMathLibrary_NotEqualExactly_Vector4Vector4_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqualExactly_Vector2DVector2D
struct UEngine_KismetMathLibrary_NotEqualExactly_Vector2DVector2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_VectorVector
struct UEngine_KismetMathLibrary_NotEqual_VectorVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ErrorTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_Vector4Vector4
struct UEngine_KismetMathLibrary_NotEqual_Vector4Vector4_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ErrorTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_Vector2DVector2D
struct UEngine_KismetMathLibrary_NotEqual_Vector2DVector2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ErrorTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_TimespanTimespan
struct UEngine_KismetMathLibrary_NotEqual_TimespanTimespan_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_RotatorRotator
struct UEngine_KismetMathLibrary_NotEqual_RotatorRotator_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ErrorTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_QuatQuat
struct UEngine_KismetMathLibrary_NotEqual_QuatQuat_Params
{
	struct FQuat                                       A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              ErrorTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_ObjectObject
struct UEngine_KismetMathLibrary_NotEqual_ObjectObject_Params
{
	class UObject*                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_NameName
struct UEngine_KismetMathLibrary_NotEqual_NameName_Params
{
	struct FName                                       A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_MatrixMatrix
struct UEngine_KismetMathLibrary_NotEqual_MatrixMatrix_Params
{
	struct FMatrix                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_LinearColorLinearColor
struct UEngine_KismetMathLibrary_NotEqual_LinearColorLinearColor_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_IntInt
struct UEngine_KismetMathLibrary_NotEqual_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_Int64Int64
struct UEngine_KismetMathLibrary_NotEqual_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_FloatFloat
struct UEngine_KismetMathLibrary_NotEqual_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_DateTimeDateTime
struct UEngine_KismetMathLibrary_NotEqual_DateTimeDateTime_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_ClassClass
struct UEngine_KismetMathLibrary_NotEqual_ClassClass_Params
{
	class UClass*                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_ByteByte
struct UEngine_KismetMathLibrary_NotEqual_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NotEqual_BoolBool
struct UEngine_KismetMathLibrary_NotEqual_BoolBool_Params
{
	bool                                               A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Not_PreBool
struct UEngine_KismetMathLibrary_Not_PreBool_Params
{
	bool                                               A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Not_Int64
struct UEngine_KismetMathLibrary_Not_Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Not_Int
struct UEngine_KismetMathLibrary_Not_Int_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NormalSafe2D
struct UEngine_KismetMathLibrary_NormalSafe2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NormalizeToRange
struct UEngine_KismetMathLibrary_NormalizeToRange_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RangeMin;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RangeMax;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NormalizedDeltaRotator
struct UEngine_KismetMathLibrary_NormalizedDeltaRotator_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NormalizeAxis
struct UEngine_KismetMathLibrary_NormalizeAxis_Params
{
	float                                              Angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Normalize2D
struct UEngine_KismetMathLibrary_Normalize2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Normal2D
struct UEngine_KismetMathLibrary_Normal2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Normal
struct UEngine_KismetMathLibrary_Normal_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NegateVector
struct UEngine_KismetMathLibrary_NegateVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NegateRotator
struct UEngine_KismetMathLibrary_NegateRotator_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Negated2D
struct UEngine_KismetMathLibrary_Negated2D_Params
{
	struct FVector2D                                   A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NearlyEqual_TransformTransform
struct UEngine_KismetMathLibrary_NearlyEqual_TransformTransform_Params
{
	struct FTransform                                  A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              LocationTolerance;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              RotationTolerance;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale3DTolerance;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.NearlyEqual_FloatFloat
struct UEngine_KismetMathLibrary_NearlyEqual_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ErrorTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MultiplyMultiply_FloatFloat
struct UEngine_KismetMathLibrary_MultiplyMultiply_FloatFloat_Params
{
	float                                              Base;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Exp;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MultiplyByPi
struct UEngine_KismetMathLibrary_MultiplyByPi_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_VectorVector
struct UEngine_KismetMathLibrary_Multiply_VectorVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_VectorInt
struct UEngine_KismetMathLibrary_Multiply_VectorInt_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_VectorFloat
struct UEngine_KismetMathLibrary_Multiply_VectorFloat_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_Vector4Vector4
struct UEngine_KismetMathLibrary_Multiply_Vector4Vector4_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_Vector2DVector2D
struct UEngine_KismetMathLibrary_Multiply_Vector2DVector2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_Vector2DFloat
struct UEngine_KismetMathLibrary_Multiply_Vector2DFloat_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_TimespanFloat
struct UEngine_KismetMathLibrary_Multiply_TimespanFloat_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	float                                              Scalar;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.Multiply_RotatorInt
struct UEngine_KismetMathLibrary_Multiply_RotatorInt_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_RotatorFloat
struct UEngine_KismetMathLibrary_Multiply_RotatorFloat_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_QuatQuat
struct UEngine_KismetMathLibrary_Multiply_QuatQuat_Params
{
	struct FQuat                                       A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_MatrixMatrix
struct UEngine_KismetMathLibrary_Multiply_MatrixMatrix_Params
{
	struct FMatrix                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_MatrixFloat
struct UEngine_KismetMathLibrary_Multiply_MatrixFloat_Params
{
	struct FMatrix                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_LinearColorLinearColor
struct UEngine_KismetMathLibrary_Multiply_LinearColorLinearColor_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_LinearColorFloat
struct UEngine_KismetMathLibrary_Multiply_LinearColorFloat_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_IntInt
struct UEngine_KismetMathLibrary_Multiply_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_IntFloat
struct UEngine_KismetMathLibrary_Multiply_IntFloat_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_Int64Int64
struct UEngine_KismetMathLibrary_Multiply_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_FloatFloat
struct UEngine_KismetMathLibrary_Multiply_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Multiply_ByteByte
struct UEngine_KismetMathLibrary_Multiply_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MirrorVectorByNormal
struct UEngine_KismetMathLibrary_MirrorVectorByNormal_Params
{
	struct FVector                                     InVect;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InNormal;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MinOfIntArray
struct UEngine_KismetMathLibrary_MinOfIntArray_Params
{
	TArray<int>                                        IntArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                IndexOfMinValue;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                MinValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MinOfFloatArray
struct UEngine_KismetMathLibrary_MinOfFloatArray_Params
{
	TArray<float>                                      FloatArray;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                IndexOfMinValue;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              MinValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MinOfByteArray
struct UEngine_KismetMathLibrary_MinOfByteArray_Params
{
	TArray<unsigned char>                              ByteArray;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                IndexOfMinValue;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MinInt64
struct UEngine_KismetMathLibrary_MinInt64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MinimumAreaRectangle
struct UEngine_KismetMathLibrary_MinimumAreaRectangle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             InVerts;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     SampleSurfaceNormal;                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     OutRectCenter;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    OutRectRotation;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutSideLengthX;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutSideLengthY;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               bDebugDraw;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Min
struct UEngine_KismetMathLibrary_Min_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MaxOfIntArray
struct UEngine_KismetMathLibrary_MaxOfIntArray_Params
{
	TArray<int>                                        IntArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                IndexOfMaxValue;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                MaxValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MaxOfFloatArray
struct UEngine_KismetMathLibrary_MaxOfFloatArray_Params
{
	TArray<float>                                      FloatArray;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                IndexOfMaxValue;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              MaxValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MaxOfByteArray
struct UEngine_KismetMathLibrary_MaxOfByteArray_Params
{
	TArray<unsigned char>                              ByteArray;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                IndexOfMaxValue;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxValue;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MaxInt64
struct UEngine_KismetMathLibrary_MaxInt64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Max
struct UEngine_KismetMathLibrary_Max_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_TransformVector4
struct UEngine_KismetMathLibrary_Matrix_TransformVector4_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_TransformVector
struct UEngine_KismetMathLibrary_Matrix_TransformVector_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_TransformPosition
struct UEngine_KismetMathLibrary_Matrix_TransformPosition_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_ToQuat
struct UEngine_KismetMathLibrary_Matrix_ToQuat_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_SetOrigin
struct UEngine_KismetMathLibrary_Matrix_SetOrigin_Params
{
	struct FMatrix                                     M;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     NewOrigin;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_SetColumn
struct UEngine_KismetMathLibrary_Matrix_SetColumn_Params
{
	struct FMatrix                                     M;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EMatrixColumns>         Column;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_SetAxis
struct UEngine_KismetMathLibrary_Matrix_SetAxis_Params
{
	struct FMatrix                                     M;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FCoreUObject_EAxis>                    Axis;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AxisVector;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_ScaleTranslation
struct UEngine_KismetMathLibrary_Matrix_ScaleTranslation_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     Scale3D;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_RemoveTranslation
struct UEngine_KismetMathLibrary_Matrix_RemoveTranslation_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_RemoveScaling
struct UEngine_KismetMathLibrary_Matrix_RemoveScaling_Params
{
	struct FMatrix                                     M;                                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_Mirror
struct UEngine_KismetMathLibrary_Matrix_Mirror_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FCoreUObject_EAxis>                    MirrorAxis;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FCoreUObject_EAxis>                    FlipAxis;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_InverseTransformVector
struct UEngine_KismetMathLibrary_Matrix_InverseTransformVector_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_InverseTransformPosition
struct UEngine_KismetMathLibrary_Matrix_InverseTransformPosition_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_Identity
struct UEngine_KismetMathLibrary_Matrix_Identity_Params
{
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetUnitAxis
struct UEngine_KismetMathLibrary_Matrix_GetUnitAxis_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FCoreUObject_EAxis>                    Axis;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetUnitAxes
struct UEngine_KismetMathLibrary_Matrix_GetUnitAxes_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     X;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Y;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Z;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetTransposed
struct UEngine_KismetMathLibrary_Matrix_GetTransposed_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetTransposeAdjoint
struct UEngine_KismetMathLibrary_Matrix_GetTransposeAdjoint_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetScaleVector
struct UEngine_KismetMathLibrary_Matrix_GetScaleVector_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetScaledAxis
struct UEngine_KismetMathLibrary_Matrix_GetScaledAxis_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FCoreUObject_EAxis>                    Axis;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetScaledAxes
struct UEngine_KismetMathLibrary_Matrix_GetScaledAxes_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     X;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Y;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Z;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetRotDeterminant
struct UEngine_KismetMathLibrary_Matrix_GetRotDeterminant_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetRotator
struct UEngine_KismetMathLibrary_Matrix_GetRotator_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetOrigin
struct UEngine_KismetMathLibrary_Matrix_GetOrigin_Params
{
	struct FMatrix                                     InMatrix;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetMaximumAxisScale
struct UEngine_KismetMathLibrary_Matrix_GetMaximumAxisScale_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetMatrixWithoutScale
struct UEngine_KismetMathLibrary_Matrix_GetMatrixWithoutScale_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetInverse
struct UEngine_KismetMathLibrary_Matrix_GetInverse_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetFrustumTopPlane
struct UEngine_KismetMathLibrary_Matrix_GetFrustumTopPlane_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FPlane                                      OutPlane;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetFrustumRightPlane
struct UEngine_KismetMathLibrary_Matrix_GetFrustumRightPlane_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FPlane                                      OutPlane;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetFrustumNearPlane
struct UEngine_KismetMathLibrary_Matrix_GetFrustumNearPlane_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FPlane                                      OutPlane;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetFrustumLeftPlane
struct UEngine_KismetMathLibrary_Matrix_GetFrustumLeftPlane_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FPlane                                      OutPlane;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetFrustumFarPlane
struct UEngine_KismetMathLibrary_Matrix_GetFrustumFarPlane_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FPlane                                      OutPlane;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetFrustumBottomPlane
struct UEngine_KismetMathLibrary_Matrix_GetFrustumBottomPlane_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FPlane                                      OutPlane;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetDeterminant
struct UEngine_KismetMathLibrary_Matrix_GetDeterminant_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_GetColumn
struct UEngine_KismetMathLibrary_Matrix_GetColumn_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EMatrixColumns>         Column;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_ContainsNaN
struct UEngine_KismetMathLibrary_Matrix_ContainsNaN_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_ConcatenateTranslation
struct UEngine_KismetMathLibrary_Matrix_ConcatenateTranslation_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     Translation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Matrix_ApplyScale
struct UEngine_KismetMathLibrary_Matrix_ApplyScale_Params
{
	struct FMatrix                                     M;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MapRangeUnclamped
struct UEngine_KismetMathLibrary_MapRangeUnclamped_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InRangeA;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InRangeB;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OutRangeA;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OutRangeB;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MapRangeClamped
struct UEngine_KismetMathLibrary_MapRangeClamped_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InRangeA;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InRangeB;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OutRangeA;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OutRangeB;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeVector4
struct UEngine_KismetMathLibrary_MakeVector4_Params
{
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              W;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeVector2D
struct UEngine_KismetMathLibrary_MakeVector2D_Params
{
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeVector
struct UEngine_KismetMathLibrary_MakeVector_Params
{
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeTransform
struct UEngine_KismetMathLibrary_MakeTransform_Params
{
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeTimespan2
struct UEngine_KismetMathLibrary_MakeTimespan2_Params
{
	int                                                Days;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Hours;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Minutes;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Seconds;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                FractionNano;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.MakeTimespan
struct UEngine_KismetMathLibrary_MakeTimespan_Params
{
	int                                                Days;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Hours;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Minutes;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Seconds;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Milliseconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.MakeRotFromZY
struct UEngine_KismetMathLibrary_MakeRotFromZY_Params
{
	struct FVector                                     Z;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     Y;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRotFromZX
struct UEngine_KismetMathLibrary_MakeRotFromZX_Params
{
	struct FVector                                     Z;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     X;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRotFromZ
struct UEngine_KismetMathLibrary_MakeRotFromZ_Params
{
	struct FVector                                     Z;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRotFromYZ
struct UEngine_KismetMathLibrary_MakeRotFromYZ_Params
{
	struct FVector                                     Y;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     Z;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRotFromYX
struct UEngine_KismetMathLibrary_MakeRotFromYX_Params
{
	struct FVector                                     Y;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     X;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRotFromY
struct UEngine_KismetMathLibrary_MakeRotFromY_Params
{
	struct FVector                                     Y;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRotFromXZ
struct UEngine_KismetMathLibrary_MakeRotFromXZ_Params
{
	struct FVector                                     X;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     Z;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRotFromXY
struct UEngine_KismetMathLibrary_MakeRotFromXY_Params
{
	struct FVector                                     X;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     Y;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRotFromX
struct UEngine_KismetMathLibrary_MakeRotFromX_Params
{
	struct FVector                                     X;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRotator
struct UEngine_KismetMathLibrary_MakeRotator_Params
{
	float                                              Roll;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Yaw;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRotationFromAxes
struct UEngine_KismetMathLibrary_MakeRotationFromAxes_Params
{
	struct FVector                                     Forward;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Right;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Up;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRelativeTransform
struct UEngine_KismetMathLibrary_MakeRelativeTransform_Params
{
	struct FTransform                                  A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  RelativeTo;                                               // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeRandomStream
struct UEngine_KismetMathLibrary_MakeRandomStream_Params
{
	int                                                InitialSeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRandomStream                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.MakeQualifiedFrameTime
struct UEngine_KismetMathLibrary_MakeQualifiedFrameTime_Params
{
	struct FFrameNumber                                Frame;                                                    // (Parm)
	struct FFrameRate                                  FrameRate;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              SubFrame;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FQualifiedFrameTime                         ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetMathLibrary.MakePulsatingValue
struct UEngine_KismetMathLibrary_MakePulsatingValue_Params
{
	float                                              InCurrentTime;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InPulsesPerSecond;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InPhase;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakePlaneFromPointAndNormal
struct UEngine_KismetMathLibrary_MakePlaneFromPointAndNormal_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Normal;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPlane                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeFrameRate
struct UEngine_KismetMathLibrary_MakeFrameRate_Params
{
	int                                                Numerator;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Denominator;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FFrameRate                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeDateTime
struct UEngine_KismetMathLibrary_MakeDateTime_Params
{
	int                                                Year;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Month;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Day;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Hour;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Minute;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Second;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Millisecond;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FDateTime                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.MakeColor
struct UEngine_KismetMathLibrary_MakeColor_Params
{
	float                                              R;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              G;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.MakeBox2D
struct UEngine_KismetMathLibrary_MakeBox2D_Params
{
	struct FVector2D                                   Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBox2D                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.MakeBox
struct UEngine_KismetMathLibrary_MakeBox_Params
{
	struct FVector                                     Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBox                                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Loge
struct UEngine_KismetMathLibrary_Loge_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Log
struct UEngine_KismetMathLibrary_Log_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Base;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinePlaneIntersection_OriginNormal
struct UEngine_KismetMathLibrary_LinePlaneIntersection_OriginNormal_Params
{
	struct FVector                                     LineStart;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     LineEnd;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     PlaneOrigin;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PlaneNormal;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              T;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Intersection;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinePlaneIntersection
struct UEngine_KismetMathLibrary_LinePlaneIntersection_Params
{
	struct FVector                                     LineStart;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     LineEnd;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FPlane                                      APlane;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              T;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Intersection;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColorLerpUsingHSV
struct UEngine_KismetMathLibrary_LinearColorLerpUsingHSV_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColorLerp
struct UEngine_KismetMathLibrary_LinearColorLerp_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Yellow
struct UEngine_KismetMathLibrary_LinearColor_Yellow_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_White
struct UEngine_KismetMathLibrary_LinearColor_White_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Transparent
struct UEngine_KismetMathLibrary_LinearColor_Transparent_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_ToRGBE
struct UEngine_KismetMathLibrary_LinearColor_ToRGBE_Params
{
	struct FLinearColor                                InLinearColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FColor                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_ToNewOpacity
struct UEngine_KismetMathLibrary_LinearColor_ToNewOpacity_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InOpacity;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_SetTemperature
struct UEngine_KismetMathLibrary_LinearColor_SetTemperature_Params
{
	struct FLinearColor                                InOutColor;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              InTemperature;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_SetRGBA
struct UEngine_KismetMathLibrary_LinearColor_SetRGBA_Params
{
	struct FLinearColor                                InOutColor;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              R;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              G;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_SetRandomHue
struct UEngine_KismetMathLibrary_LinearColor_SetRandomHue_Params
{
	struct FLinearColor                                InOutColor;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_SetFromSRGB
struct UEngine_KismetMathLibrary_LinearColor_SetFromSRGB_Params
{
	struct FLinearColor                                InOutColor;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FColor                                      InSRGB;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_SetFromPow22
struct UEngine_KismetMathLibrary_LinearColor_SetFromPow22_Params
{
	struct FLinearColor                                InOutColor;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FColor                                      InColor;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_SetFromHSV
struct UEngine_KismetMathLibrary_LinearColor_SetFromHSV_Params
{
	struct FLinearColor                                InOutColor;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              H;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              S;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Set
struct UEngine_KismetMathLibrary_LinearColor_Set_Params
{
	struct FLinearColor                                InOutColor;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Red
struct UEngine_KismetMathLibrary_LinearColor_Red_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_QuantizeRound
struct UEngine_KismetMathLibrary_LinearColor_QuantizeRound_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FColor                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Quantize
struct UEngine_KismetMathLibrary_LinearColor_Quantize_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FColor                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_IsNearEqual
struct UEngine_KismetMathLibrary_LinearColor_IsNearEqual_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Green
struct UEngine_KismetMathLibrary_LinearColor_Green_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Gray
struct UEngine_KismetMathLibrary_LinearColor_Gray_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_GetMin
struct UEngine_KismetMathLibrary_LinearColor_GetMin_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_GetMax
struct UEngine_KismetMathLibrary_LinearColor_GetMax_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_GetLuminance
struct UEngine_KismetMathLibrary_LinearColor_GetLuminance_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Distance
struct UEngine_KismetMathLibrary_LinearColor_Distance_Params
{
	struct FLinearColor                                C1;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                C2;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Desaturated
struct UEngine_KismetMathLibrary_LinearColor_Desaturated_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InDesaturation;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Blue
struct UEngine_KismetMathLibrary_LinearColor_Blue_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LinearColor_Black
struct UEngine_KismetMathLibrary_LinearColor_Black_Params
{
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LessLess_VectorRotator
struct UEngine_KismetMathLibrary_LessLess_VectorRotator_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LessEqual_TimespanTimespan
struct UEngine_KismetMathLibrary_LessEqual_TimespanTimespan_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LessEqual_IntInt
struct UEngine_KismetMathLibrary_LessEqual_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LessEqual_Int64Int64
struct UEngine_KismetMathLibrary_LessEqual_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LessEqual_FloatFloat
struct UEngine_KismetMathLibrary_LessEqual_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LessEqual_DateTimeDateTime
struct UEngine_KismetMathLibrary_LessEqual_DateTimeDateTime_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.LessEqual_ByteByte
struct UEngine_KismetMathLibrary_LessEqual_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Less_TimespanTimespan
struct UEngine_KismetMathLibrary_Less_TimespanTimespan_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Less_IntInt
struct UEngine_KismetMathLibrary_Less_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Less_Int64Int64
struct UEngine_KismetMathLibrary_Less_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Less_FloatFloat
struct UEngine_KismetMathLibrary_Less_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Less_DateTimeDateTime
struct UEngine_KismetMathLibrary_Less_DateTimeDateTime_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Less_ByteByte
struct UEngine_KismetMathLibrary_Less_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Lerp
struct UEngine_KismetMathLibrary_Lerp_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.IsZero2D
struct UEngine_KismetMathLibrary_IsZero2D_Params
{
	struct FVector2D                                   A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.IsPointInBoxWithTransform
struct UEngine_KismetMathLibrary_IsPointInBoxWithTransform_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  BoxWorldTransform;                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     BoxExtent;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.IsPointInBox
struct UEngine_KismetMathLibrary_IsPointInBox_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoxOrigin;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoxExtent;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.IsNearlyZero2D
struct UEngine_KismetMathLibrary_IsNearlyZero2D_Params
{
	struct FVector2D                                   A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.IsMorning
struct UEngine_KismetMathLibrary_IsMorning_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.IsLeapYear
struct UEngine_KismetMathLibrary_IsLeapYear_Params
{
	int                                                Year;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.IsAfternoon
struct UEngine_KismetMathLibrary_IsAfternoon_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.InvertTransform
struct UEngine_KismetMathLibrary_InvertTransform_Params
{
	struct FTransform                                  T;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.InverseTransformRotation
struct UEngine_KismetMathLibrary_InverseTransformRotation_Params
{
	struct FTransform                                  T;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.InverseTransformLocation
struct UEngine_KismetMathLibrary_InverseTransformLocation_Params
{
	struct FTransform                                  T;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.InverseTransformDirection
struct UEngine_KismetMathLibrary_InverseTransformDirection_Params
{
	struct FTransform                                  T;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     Direction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.InRange_IntInt
struct UEngine_KismetMathLibrary_InRange_IntInt_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InclusiveMin;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InclusiveMax;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.InRange_Int64Int64
struct UEngine_KismetMathLibrary_InRange_Int64Int64_Params
{
	int64_t                                            Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InclusiveMin;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InclusiveMax;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.InRange_FloatFloat
struct UEngine_KismetMathLibrary_InRange_FloatFloat_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InclusiveMin;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InclusiveMax;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Hypotenuse
struct UEngine_KismetMathLibrary_Hypotenuse_Params
{
	float                                              Width;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Height;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.HSVToRGBLinear
struct UEngine_KismetMathLibrary_HSVToRGBLinear_Params
{
	struct FLinearColor                                HSV;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.HSVToRGB_Vector
struct UEngine_KismetMathLibrary_HSVToRGB_Vector_Params
{
	struct FLinearColor                                HSV;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                RGB;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.HSVToRGB
struct UEngine_KismetMathLibrary_HSVToRGB_Params
{
	float                                              H;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              S;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GridSnap_Float
struct UEngine_KismetMathLibrary_GridSnap_Float_Params
{
	float                                              Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              GridSize;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GreaterGreater_VectorRotator
struct UEngine_KismetMathLibrary_GreaterGreater_VectorRotator_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GreaterEqual_TimespanTimespan
struct UEngine_KismetMathLibrary_GreaterEqual_TimespanTimespan_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GreaterEqual_IntInt
struct UEngine_KismetMathLibrary_GreaterEqual_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GreaterEqual_Int64Int64
struct UEngine_KismetMathLibrary_GreaterEqual_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GreaterEqual_FloatFloat
struct UEngine_KismetMathLibrary_GreaterEqual_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GreaterEqual_DateTimeDateTime
struct UEngine_KismetMathLibrary_GreaterEqual_DateTimeDateTime_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GreaterEqual_ByteByte
struct UEngine_KismetMathLibrary_GreaterEqual_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Greater_TimespanTimespan
struct UEngine_KismetMathLibrary_Greater_TimespanTimespan_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Greater_IntInt
struct UEngine_KismetMathLibrary_Greater_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Greater_Int64Int64
struct UEngine_KismetMathLibrary_Greater_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Greater_FloatFloat
struct UEngine_KismetMathLibrary_Greater_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Greater_DateTimeDateTime
struct UEngine_KismetMathLibrary_Greater_DateTimeDateTime_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Greater_ByteByte
struct UEngine_KismetMathLibrary_Greater_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetYear
struct UEngine_KismetMathLibrary_GetYear_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetYawPitchFromVector
struct UEngine_KismetMathLibrary_GetYawPitchFromVector_Params
{
	struct FVector                                     InVec;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Yaw;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetVectorArrayAverage
struct UEngine_KismetMathLibrary_GetVectorArrayAverage_Params
{
	TArray<struct FVector>                             Vectors;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetUpVector
struct UEngine_KismetMathLibrary_GetUpVector_Params
{
	struct FRotator                                    InRot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetTotalSeconds
struct UEngine_KismetMathLibrary_GetTotalSeconds_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetTotalMinutes
struct UEngine_KismetMathLibrary_GetTotalMinutes_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetTotalMilliseconds
struct UEngine_KismetMathLibrary_GetTotalMilliseconds_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetTotalHours
struct UEngine_KismetMathLibrary_GetTotalHours_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetTotalDays
struct UEngine_KismetMathLibrary_GetTotalDays_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetTimeOfDay
struct UEngine_KismetMathLibrary_GetTimeOfDay_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.GetTAU
struct UEngine_KismetMathLibrary_GetTAU_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetSlopeDegreeAngles
struct UEngine_KismetMathLibrary_GetSlopeDegreeAngles_Params
{
	struct FVector                                     MyRightYAxis;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     FloorNormal;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     UpVector;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              OutSlopePitchDegreeAngle;                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              OutSlopeRollDegreeAngle;                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetSeconds
struct UEngine_KismetMathLibrary_GetSeconds_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetSecond
struct UEngine_KismetMathLibrary_GetSecond_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetRotated2D
struct UEngine_KismetMathLibrary_GetRotated2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleDeg;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetRightVector
struct UEngine_KismetMathLibrary_GetRightVector_Params
{
	struct FRotator                                    InRot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetReflectionVector
struct UEngine_KismetMathLibrary_GetReflectionVector_Params
{
	struct FVector                                     Direction;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SurfaceNormal;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetPointDistanceToSegment
struct UEngine_KismetMathLibrary_GetPointDistanceToSegment_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SegmentStart;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SegmentEnd;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetPointDistanceToLine
struct UEngine_KismetMathLibrary_GetPointDistanceToLine_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LineOrigin;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LineDirection;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetPI
struct UEngine_KismetMathLibrary_GetPI_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetMonth
struct UEngine_KismetMathLibrary_GetMonth_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetMinutes
struct UEngine_KismetMathLibrary_GetMinutes_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetMinute
struct UEngine_KismetMathLibrary_GetMinute_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetMinElement
struct UEngine_KismetMathLibrary_GetMinElement_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetMin2D
struct UEngine_KismetMathLibrary_GetMin2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetMilliseconds
struct UEngine_KismetMathLibrary_GetMilliseconds_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetMillisecond
struct UEngine_KismetMathLibrary_GetMillisecond_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetMaxElement
struct UEngine_KismetMathLibrary_GetMaxElement_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetMax2D
struct UEngine_KismetMathLibrary_GetMax2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetHours
struct UEngine_KismetMathLibrary_GetHours_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetHour12
struct UEngine_KismetMathLibrary_GetHour12_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetHour
struct UEngine_KismetMathLibrary_GetHour_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetForwardVector
struct UEngine_KismetMathLibrary_GetForwardVector_Params
{
	struct FRotator                                    InRot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetDuration
struct UEngine_KismetMathLibrary_GetDuration_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.GetDirectionUnitVector
struct UEngine_KismetMathLibrary_GetDirectionUnitVector_Params
{
	struct FVector                                     From;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     To;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetDays
struct UEngine_KismetMathLibrary_GetDays_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetDayOfYear
struct UEngine_KismetMathLibrary_GetDayOfYear_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetDay
struct UEngine_KismetMathLibrary_GetDay_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetDate
struct UEngine_KismetMathLibrary_GetDate_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.GetAzimuthAndElevation
struct UEngine_KismetMathLibrary_GetAzimuthAndElevation_Params
{
	struct FVector                                     InDirection;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReferenceFrame;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              Azimuth;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Elevation;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetAxes
struct UEngine_KismetMathLibrary_GetAxes_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     X;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Y;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Z;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetAbsMax2D
struct UEngine_KismetMathLibrary_GetAbsMax2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.GetAbs2D
struct UEngine_KismetMathLibrary_GetAbs2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FTruncVector
struct UEngine_KismetMathLibrary_FTruncVector_Params
{
	struct FVector                                     InVector;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FIntVector                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FTrunc64
struct UEngine_KismetMathLibrary_FTrunc64_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FTrunc
struct UEngine_KismetMathLibrary_FTrunc_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FromSeconds
struct UEngine_KismetMathLibrary_FromSeconds_Params
{
	float                                              Seconds;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.FromMinutes
struct UEngine_KismetMathLibrary_FromMinutes_Params
{
	float                                              Minutes;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.FromMilliseconds
struct UEngine_KismetMathLibrary_FromMilliseconds_Params
{
	float                                              Milliseconds;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.FromHours
struct UEngine_KismetMathLibrary_FromHours_Params
{
	float                                              Hours;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.FromDays
struct UEngine_KismetMathLibrary_FromDays_Params
{
	float                                              Days;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.Fraction
struct UEngine_KismetMathLibrary_Fraction_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FMod
struct UEngine_KismetMathLibrary_FMod_Params
{
	float                                              Dividend;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Divisor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Remainder;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FMin
struct UEngine_KismetMathLibrary_FMin_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FMax
struct UEngine_KismetMathLibrary_FMax_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FloatSpringInterp
struct UEngine_KismetMathLibrary_FloatSpringInterp_Params
{
	float                                              Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_FloatSpringState                    SpringState;                                              // (Parm, OutParm, ReferenceParm)
	float                                              Stiffness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              CriticalDampingFactor;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Mass;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FixedTurn
struct UEngine_KismetMathLibrary_FixedTurn_Params
{
	float                                              InCurrent;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InDesired;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InDeltaRate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FInterpTo_Constant
struct UEngine_KismetMathLibrary_FInterpTo_Constant_Params
{
	float                                              Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FInterpTo
struct UEngine_KismetMathLibrary_FInterpTo_Params
{
	float                                              Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FInterpEaseInOut
struct UEngine_KismetMathLibrary_FInterpEaseInOut_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Exponent;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FindNearestPointsOnLineSegments
struct UEngine_KismetMathLibrary_FindNearestPointsOnLineSegments_Params
{
	struct FVector                                     Segment1Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Segment1End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Segment2Start;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Segment2End;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Segment1Point;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Segment2Point;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FindLookAtRotation
struct UEngine_KismetMathLibrary_FindLookAtRotation_Params
{
	struct FVector                                     Start;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     Target;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FindClosestPointOnSegment
struct UEngine_KismetMathLibrary_FindClosestPointOnSegment_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SegmentStart;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SegmentEnd;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FindClosestPointOnLine
struct UEngine_KismetMathLibrary_FindClosestPointOnLine_Params
{
	struct FVector                                     Point;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LineOrigin;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LineDirection;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FFloor64
struct UEngine_KismetMathLibrary_FFloor64_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FFloor
struct UEngine_KismetMathLibrary_FFloor_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FClamp
struct UEngine_KismetMathLibrary_FClamp_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FCeil64
struct UEngine_KismetMathLibrary_FCeil64_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.FCeil
struct UEngine_KismetMathLibrary_FCeil_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Exp
struct UEngine_KismetMathLibrary_Exp_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualExactly_VectorVector
struct UEngine_KismetMathLibrary_EqualExactly_VectorVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualExactly_Vector4Vector4
struct UEngine_KismetMathLibrary_EqualExactly_Vector4Vector4_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualExactly_Vector2DVector2D
struct UEngine_KismetMathLibrary_EqualExactly_Vector2DVector2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_VectorVector
struct UEngine_KismetMathLibrary_EqualEqual_VectorVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ErrorTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_Vector4Vector4
struct UEngine_KismetMathLibrary_EqualEqual_Vector4Vector4_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              ErrorTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_Vector2DVector2D
struct UEngine_KismetMathLibrary_EqualEqual_Vector2DVector2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ErrorTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_TransformTransform
struct UEngine_KismetMathLibrary_EqualEqual_TransformTransform_Params
{
	struct FTransform                                  A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_TimespanTimespan
struct UEngine_KismetMathLibrary_EqualEqual_TimespanTimespan_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_RotatorRotator
struct UEngine_KismetMathLibrary_EqualEqual_RotatorRotator_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ErrorTolerance;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_QuatQuat
struct UEngine_KismetMathLibrary_EqualEqual_QuatQuat_Params
{
	struct FQuat                                       A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_ObjectObject
struct UEngine_KismetMathLibrary_EqualEqual_ObjectObject_Params
{
	class UObject*                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_NameName
struct UEngine_KismetMathLibrary_EqualEqual_NameName_Params
{
	struct FName                                       A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_MatrixMatrix
struct UEngine_KismetMathLibrary_EqualEqual_MatrixMatrix_Params
{
	struct FMatrix                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              Tolerance;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_LinearColorLinearColor
struct UEngine_KismetMathLibrary_EqualEqual_LinearColorLinearColor_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_IntInt
struct UEngine_KismetMathLibrary_EqualEqual_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_Int64Int64
struct UEngine_KismetMathLibrary_EqualEqual_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_FloatFloat
struct UEngine_KismetMathLibrary_EqualEqual_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_DateTimeDateTime
struct UEngine_KismetMathLibrary_EqualEqual_DateTimeDateTime_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_ClassClass
struct UEngine_KismetMathLibrary_EqualEqual_ClassClass_Params
{
	class UClass*                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_ByteByte
struct UEngine_KismetMathLibrary_EqualEqual_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.EqualEqual_BoolBool
struct UEngine_KismetMathLibrary_EqualEqual_BoolBool_Params
{
	bool                                               A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Ease
struct UEngine_KismetMathLibrary_Ease_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EEasingFunc>            EasingFunc;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BlendExp;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Steps;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_FVector
struct UEngine_KismetMathLibrary_DynamicWeightedMovingAverage_FVector_Params
{
	struct FVector                                     CurrentSample;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PreviousSample;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistance;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinWeight;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxWeight;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_FRotator
struct UEngine_KismetMathLibrary_DynamicWeightedMovingAverage_FRotator_Params
{
	struct FRotator                                    CurrentSample;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    PreviousSample;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistance;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinWeight;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxWeight;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_Float
struct UEngine_KismetMathLibrary_DynamicWeightedMovingAverage_Float_Params
{
	float                                              CurrentSample;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              PreviousSample;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistance;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinWeight;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxWeight;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DotProduct2D
struct UEngine_KismetMathLibrary_DotProduct2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Dot_VectorVector
struct UEngine_KismetMathLibrary_Dot_VectorVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_VectorVector
struct UEngine_KismetMathLibrary_Divide_VectorVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_VectorInt
struct UEngine_KismetMathLibrary_Divide_VectorInt_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_VectorFloat
struct UEngine_KismetMathLibrary_Divide_VectorFloat_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_Vector4Vector4
struct UEngine_KismetMathLibrary_Divide_Vector4Vector4_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_Vector2DVector2D
struct UEngine_KismetMathLibrary_Divide_Vector2DVector2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_Vector2DFloat
struct UEngine_KismetMathLibrary_Divide_Vector2DFloat_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_TimespanFloat
struct UEngine_KismetMathLibrary_Divide_TimespanFloat_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	float                                              Scalar;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.Divide_LinearColorLinearColor
struct UEngine_KismetMathLibrary_Divide_LinearColorLinearColor_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_IntInt
struct UEngine_KismetMathLibrary_Divide_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_Int64Int64
struct UEngine_KismetMathLibrary_Divide_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_FloatFloat
struct UEngine_KismetMathLibrary_Divide_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Divide_ByteByte
struct UEngine_KismetMathLibrary_Divide_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DistanceSquared2D
struct UEngine_KismetMathLibrary_DistanceSquared2D_Params
{
	struct FVector2D                                   v1;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   v2;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Distance2D
struct UEngine_KismetMathLibrary_Distance2D_Params
{
	struct FVector2D                                   v1;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   v2;                                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DegTan
struct UEngine_KismetMathLibrary_DegTan_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DegSin
struct UEngine_KismetMathLibrary_DegSin_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DegreesToRadians
struct UEngine_KismetMathLibrary_DegreesToRadians_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DegCos
struct UEngine_KismetMathLibrary_DegCos_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DegAtan2
struct UEngine_KismetMathLibrary_DegAtan2_Params
{
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DegAtan
struct UEngine_KismetMathLibrary_DegAtan_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DegAsin
struct UEngine_KismetMathLibrary_DegAsin_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DegAcos
struct UEngine_KismetMathLibrary_DegAcos_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DaysInYear
struct UEngine_KismetMathLibrary_DaysInYear_Params
{
	int                                                Year;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DaysInMonth
struct UEngine_KismetMathLibrary_DaysInMonth_Params
{
	int                                                Year;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Month;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DateTimeMinValue
struct UEngine_KismetMathLibrary_DateTimeMinValue_Params
{
	struct FDateTime                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.DateTimeMaxValue
struct UEngine_KismetMathLibrary_DateTimeMaxValue_Params
{
	struct FDateTime                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.DateTimeFromString
struct UEngine_KismetMathLibrary_DateTimeFromString_Params
{
	struct FString                                     DateTimeString;                                           // (Parm, ZeroConstructor)
	struct FDateTime                                   Result;                                                   // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.DateTimeFromIsoString
struct UEngine_KismetMathLibrary_DateTimeFromIsoString_Params
{
	struct FString                                     IsoString;                                                // (Parm, ZeroConstructor)
	struct FDateTime                                   Result;                                                   // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.CrossProduct2D
struct UEngine_KismetMathLibrary_CrossProduct2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Cross_VectorVector
struct UEngine_KismetMathLibrary_Cross_VectorVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.CreateVectorFromYawPitch
struct UEngine_KismetMathLibrary_CreateVectorFromYawPitch_Params
{
	float                                              Yaw;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Length;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Cos
struct UEngine_KismetMathLibrary_Cos_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ConvertTransformToRelative
struct UEngine_KismetMathLibrary_ConvertTransformToRelative_Params
{
	struct FTransform                                  Transform;                                                // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  ParentTransform;                                          // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_VectorToVector2D
struct UEngine_KismetMathLibrary_Conv_VectorToVector2D_Params
{
	struct FVector                                     InVector;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_VectorToTransform
struct UEngine_KismetMathLibrary_Conv_VectorToTransform_Params
{
	struct FVector                                     InLocation;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_VectorToRotator
struct UEngine_KismetMathLibrary_Conv_VectorToRotator_Params
{
	struct FVector                                     InVec;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_VectorToQuaterion
struct UEngine_KismetMathLibrary_Conv_VectorToQuaterion_Params
{
	struct FVector                                     InVec;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_VectorToLinearColor
struct UEngine_KismetMathLibrary_Conv_VectorToLinearColor_Params
{
	struct FVector                                     InVec;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_Vector4ToVector
struct UEngine_KismetMathLibrary_Conv_Vector4ToVector_Params
{
	struct FVector4                                    InVector4;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_Vector4ToRotator
struct UEngine_KismetMathLibrary_Conv_Vector4ToRotator_Params
{
	struct FVector4                                    InVec;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_Vector4ToQuaterion
struct UEngine_KismetMathLibrary_Conv_Vector4ToQuaterion_Params
{
	struct FVector4                                    InVec;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_Vector2DToVector
struct UEngine_KismetMathLibrary_Conv_Vector2DToVector_Params
{
	struct FVector2D                                   InVector2D;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_Vector2DToIntPoint
struct UEngine_KismetMathLibrary_Conv_Vector2DToIntPoint_Params
{
	struct FVector2D                                   InVector2D;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_TransformToMatrix
struct UEngine_KismetMathLibrary_Conv_TransformToMatrix_Params
{
	struct FTransform                                  Transform;                                                // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_RotatorToVector
struct UEngine_KismetMathLibrary_Conv_RotatorToVector_Params
{
	struct FRotator                                    InRot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_RotatorToTransform
struct UEngine_KismetMathLibrary_Conv_RotatorToTransform_Params
{
	struct FRotator                                    InRotator;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_MatrixToTransform
struct UEngine_KismetMathLibrary_Conv_MatrixToTransform_Params
{
	struct FMatrix                                     InMatrix;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_MatrixToRotator
struct UEngine_KismetMathLibrary_Conv_MatrixToRotator_Params
{
	struct FMatrix                                     InMatrix;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_LinearColorToVector
struct UEngine_KismetMathLibrary_Conv_LinearColorToVector_Params
{
	struct FLinearColor                                InLinearColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_LinearColorToColor
struct UEngine_KismetMathLibrary_Conv_LinearColorToColor_Params
{
	struct FLinearColor                                InLinearColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               InUseSRGB;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FColor                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_IntVectorToVector
struct UEngine_KismetMathLibrary_Conv_IntVectorToVector_Params
{
	struct FIntVector                                  InIntVector;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_IntToIntVector
struct UEngine_KismetMathLibrary_Conv_IntToIntVector_Params
{
	int                                                inInt;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FIntVector                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_IntToInt64
struct UEngine_KismetMathLibrary_Conv_IntToInt64_Params
{
	int                                                inInt;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_IntToFloat
struct UEngine_KismetMathLibrary_Conv_IntToFloat_Params
{
	int                                                inInt;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_IntToByte
struct UEngine_KismetMathLibrary_Conv_IntToByte_Params
{
	int                                                inInt;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_IntToBool
struct UEngine_KismetMathLibrary_Conv_IntToBool_Params
{
	int                                                inInt;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_FloatToVector
struct UEngine_KismetMathLibrary_Conv_FloatToVector_Params
{
	float                                              InFloat;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_FloatToLinearColor
struct UEngine_KismetMathLibrary_Conv_FloatToLinearColor_Params
{
	float                                              InFloat;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_ColorToLinearColor
struct UEngine_KismetMathLibrary_Conv_ColorToLinearColor_Params
{
	struct FColor                                      InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_ByteToInt
struct UEngine_KismetMathLibrary_Conv_ByteToInt_Params
{
	unsigned char                                      InByte;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_ByteToFloat
struct UEngine_KismetMathLibrary_Conv_ByteToFloat_Params
{
	unsigned char                                      InByte;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_BoolToInt
struct UEngine_KismetMathLibrary_Conv_BoolToInt_Params
{
	bool                                               InBool;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_BoolToFloat
struct UEngine_KismetMathLibrary_Conv_BoolToFloat_Params
{
	bool                                               InBool;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Conv_BoolToByte
struct UEngine_KismetMathLibrary_Conv_BoolToByte_Params
{
	bool                                               InBool;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ComposeTransforms
struct UEngine_KismetMathLibrary_ComposeTransforms_Params
{
	struct FTransform                                  A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ComposeRotators
struct UEngine_KismetMathLibrary_ComposeRotators_Params
{
	struct FRotator                                    A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ClassIsChildOf
struct UEngine_KismetMathLibrary_ClassIsChildOf_Params
{
	class UClass*                                      TestClass;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ParentClass;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ClampVectorSize
struct UEngine_KismetMathLibrary_ClampVectorSize_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ClampInt64
struct UEngine_KismetMathLibrary_ClampInt64_Params
{
	int64_t                                            Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ClampAxis
struct UEngine_KismetMathLibrary_ClampAxis_Params
{
	float                                              Angle;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ClampAxes2D
struct UEngine_KismetMathLibrary_ClampAxes2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinAxisVal;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxAxisVal;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.ClampAngle
struct UEngine_KismetMathLibrary_ClampAngle_Params
{
	float                                              AngleDegrees;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MinAngleDegrees;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngleDegrees;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Clamp
struct UEngine_KismetMathLibrary_Clamp_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Min;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Max;                                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.CInterpTo
struct UEngine_KismetMathLibrary_CInterpTo_Params
{
	struct FLinearColor                                Current;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Target;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DeltaTime;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakVector4
struct UEngine_KismetMathLibrary_BreakVector4_Params
{
	struct FVector4                                    InVec;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	float                                              X;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              W;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakVector2D
struct UEngine_KismetMathLibrary_BreakVector2D_Params
{
	struct FVector2D                                   InVec;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakVector
struct UEngine_KismetMathLibrary_BreakVector_Params
{
	struct FVector                                     InVec;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakTransform
struct UEngine_KismetMathLibrary_BreakTransform_Params
{
	struct FTransform                                  InTransform;                                              // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Scale;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakTimespan2
struct UEngine_KismetMathLibrary_BreakTimespan2_Params
{
	struct FTimespan                                   InTimespan;                                               // (Parm, ZeroConstructor)
	int                                                Days;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Hours;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Minutes;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Seconds;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                FractionNano;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakTimespan
struct UEngine_KismetMathLibrary_BreakTimespan_Params
{
	struct FTimespan                                   InTimespan;                                               // (Parm, ZeroConstructor)
	int                                                Days;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Hours;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Minutes;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Seconds;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Milliseconds;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakRotIntoAxes
struct UEngine_KismetMathLibrary_BreakRotIntoAxes_Params
{
	struct FRotator                                    InRot;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     X;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Y;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Z;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakRotator
struct UEngine_KismetMathLibrary_BreakRotator_Params
{
	struct FRotator                                    InRot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Roll;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              Yaw;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakRandomStream
struct UEngine_KismetMathLibrary_BreakRandomStream_Params
{
	struct FRandomStream                               InRandomStream;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                InitialSeed;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakQualifiedFrameTime
struct UEngine_KismetMathLibrary_BreakQualifiedFrameTime_Params
{
	struct FQualifiedFrameTime                         InFrameTime;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FFrameNumber                                Frame;                                                    // (Parm, OutParm)
	struct FFrameRate                                  FrameRate;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              SubFrame;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakFrameRate
struct UEngine_KismetMathLibrary_BreakFrameRate_Params
{
	struct FFrameRate                                  InFrameRate;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                Numerator;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Denominator;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakDateTime
struct UEngine_KismetMathLibrary_BreakDateTime_Params
{
	struct FDateTime                                   InDateTime;                                               // (Parm, ZeroConstructor)
	int                                                Year;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Month;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Day;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Hour;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Minute;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Second;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Millisecond;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BreakColor
struct UEngine_KismetMathLibrary_BreakColor_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              R;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              G;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              A;                                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BooleanXOR
struct UEngine_KismetMathLibrary_BooleanXOR_Params
{
	bool                                               A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BooleanOR
struct UEngine_KismetMathLibrary_BooleanOR_Params
{
	bool                                               A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BooleanNOR
struct UEngine_KismetMathLibrary_BooleanNOR_Params
{
	bool                                               A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BooleanNAND
struct UEngine_KismetMathLibrary_BooleanNAND_Params
{
	bool                                               A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BooleanAND
struct UEngine_KismetMathLibrary_BooleanAND_Params
{
	bool                                               A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BMin
struct UEngine_KismetMathLibrary_BMin_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.BMax
struct UEngine_KismetMathLibrary_BMax_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Atan2
struct UEngine_KismetMathLibrary_Atan2_Params
{
	float                                              Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Atan
struct UEngine_KismetMathLibrary_Atan_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Asin
struct UEngine_KismetMathLibrary_Asin_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.And_IntInt
struct UEngine_KismetMathLibrary_And_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.And_Int64Int64
struct UEngine_KismetMathLibrary_And_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_VectorVector
struct UEngine_KismetMathLibrary_Add_VectorVector_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_VectorInt
struct UEngine_KismetMathLibrary_Add_VectorInt_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_VectorFloat
struct UEngine_KismetMathLibrary_Add_VectorFloat_Params
{
	struct FVector                                     A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_Vector4Vector4
struct UEngine_KismetMathLibrary_Add_Vector4Vector4_Params
{
	struct FVector4                                    A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector4                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_Vector2DVector2D
struct UEngine_KismetMathLibrary_Add_Vector2DVector2D_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_Vector2DFloat
struct UEngine_KismetMathLibrary_Add_Vector2DFloat_Params
{
	struct FVector2D                                   A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_TimespanTimespan
struct UEngine_KismetMathLibrary_Add_TimespanTimespan_Params
{
	struct FTimespan                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.Add_QuatQuat
struct UEngine_KismetMathLibrary_Add_QuatQuat_Params
{
	struct FQuat                                       A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FQuat                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_MatrixMatrix
struct UEngine_KismetMathLibrary_Add_MatrixMatrix_Params
{
	struct FMatrix                                     A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FMatrix                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_LinearColorLinearColor
struct UEngine_KismetMathLibrary_Add_LinearColorLinearColor_Params
{
	struct FLinearColor                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_IntInt
struct UEngine_KismetMathLibrary_Add_IntInt_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_Int64Int64
struct UEngine_KismetMathLibrary_Add_Int64Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_FloatFloat
struct UEngine_KismetMathLibrary_Add_FloatFloat_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Add_DateTimeTimespan
struct UEngine_KismetMathLibrary_Add_DateTimeTimespan_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FTimespan                                   B;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.Add_DateTimeDateTime
struct UEngine_KismetMathLibrary_Add_DateTimeDateTime_Params
{
	struct FDateTime                                   A;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   B;                                                        // (Parm, ZeroConstructor)
	struct FDateTime                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetMathLibrary.Add_ByteByte
struct UEngine_KismetMathLibrary_Add_ByteByte_Params
{
	unsigned char                                      A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Acos
struct UEngine_KismetMathLibrary_Acos_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Abs_Int64
struct UEngine_KismetMathLibrary_Abs_Int64_Params
{
	int64_t                                            A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Abs_Int
struct UEngine_KismetMathLibrary_Abs_Int_Params
{
	int                                                A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetMathLibrary.Abs
struct UEngine_KismetMathLibrary_Abs_Params
{
	float                                              A;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.MarkBit
struct UEngine_KismetNodeHelperLibrary_MarkBit_Params
{
	int                                                Data;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.HasUnmarkedBit
struct UEngine_KismetNodeHelperLibrary_HasUnmarkedBit_Params
{
	int                                                Data;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumBits;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.HasMarkedBit
struct UEngine_KismetNodeHelperLibrary_HasMarkedBit_Params
{
	int                                                Data;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumBits;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.GetValidValue
struct UEngine_KismetNodeHelperLibrary_GetValidValue_Params
{
	class UEnum*                                       Enum;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnumeratorValue;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.GetUnmarkedBit
struct UEngine_KismetNodeHelperLibrary_GetUnmarkedBit_Params
{
	int                                                Data;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StartIdx;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumBits;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bRandom;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.GetRandomUnmarkedBit
struct UEngine_KismetNodeHelperLibrary_GetRandomUnmarkedBit_Params
{
	int                                                Data;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StartIdx;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumBits;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.GetFirstUnmarkedBit
struct UEngine_KismetNodeHelperLibrary_GetFirstUnmarkedBit_Params
{
	int                                                Data;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StartIdx;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumBits;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.GetEnumeratorValueFromIndex
struct UEngine_KismetNodeHelperLibrary_GetEnumeratorValueFromIndex_Params
{
	class UEnum*                                       Enum;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnumeratorIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.GetEnumeratorUserFriendlyName
struct UEngine_KismetNodeHelperLibrary_GetEnumeratorUserFriendlyName_Params
{
	class UEnum*                                       Enum;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnumeratorValue;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetNodeHelperLibrary.GetEnumeratorName
struct UEngine_KismetNodeHelperLibrary_GetEnumeratorName_Params
{
	class UEnum*                                       Enum;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnumeratorValue;                                          // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.ClearBit
struct UEngine_KismetNodeHelperLibrary_ClearBit_Params
{
	int                                                Data;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.ClearAllBits
struct UEngine_KismetNodeHelperLibrary_ClearAllBits_Params
{
	int                                                Data;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetNodeHelperLibrary.BitIsMarked
struct UEngine_KismetNodeHelperLibrary_BitIsMarked_Params
{
	int                                                Data;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.SetCastInsetShadowForAllAttachments
struct UEngine_KismetRenderingLibrary_SetCastInsetShadowForAllAttachments_Params
{
	class UEngine_PrimitiveComponent*                  PrimitiveComponent;                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bCastInsetShadow;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLightAttachmentsAsGroup;                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.RenderTargetCreateStaticTexture2DEditorOnly
struct UEngine_KismetRenderingLibrary_RenderTargetCreateStaticTexture2DEditorOnly_Params
{
	class UEngine_TextureRenderTarget2D*               RenderTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	TEnumAsByte<FEngine_Engine_ETextureCompressionSettings> CompressionSettings;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETextureMipGenSettings> MipSettings;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture2D*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.ReleaseRenderTarget2D
struct UEngine_KismetRenderingLibrary_ReleaseRenderTarget2D_Params
{
	class UEngine_TextureRenderTarget2D*               TextureRenderTarget;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.ReadRenderTargetUV
struct UEngine_KismetRenderingLibrary_ReadRenderTargetUV_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureRenderTarget2D*               TextureRenderTarget;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              U;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FColor                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.ReadRenderTargetRawUV
struct UEngine_KismetRenderingLibrary_ReadRenderTargetRawUV_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureRenderTarget2D*               TextureRenderTarget;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              U;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.ReadRenderTargetRawPixel
struct UEngine_KismetRenderingLibrary_ReadRenderTargetRawPixel_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureRenderTarget2D*               TextureRenderTarget;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.ReadRenderTargetPixel
struct UEngine_KismetRenderingLibrary_ReadRenderTargetPixel_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureRenderTarget2D*               TextureRenderTarget;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                X;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Y;                                                        // (Parm, ZeroConstructor, IsPlainOldData)
	struct FColor                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.MakeSkinWeightInfo
struct UEngine_KismetRenderingLibrary_MakeSkinWeightInfo_Params
{
	int                                                Bone0;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Weight0;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Bone1;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Weight1;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Bone2;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Weight2;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Bone3;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Weight3;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_SkelMeshSkinWeightInfo              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.ImportFileAsTexture2D
struct UEngine_KismetRenderingLibrary_ImportFileAsTexture2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Filename;                                                 // (Parm, ZeroConstructor)
	class UEngine_Texture2D*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.ImportBufferAsTexture2D
struct UEngine_KismetRenderingLibrary_ImportBufferAsTexture2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              Buffer;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UEngine_Texture2D*                           ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.ExportTexture2D
struct UEngine_KismetRenderingLibrary_ExportTexture2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture2D*                           Texture;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FilePath;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Filename;                                                 // (Parm, ZeroConstructor)
};

// Function Engine.KismetRenderingLibrary.ExportRenderTarget
struct UEngine_KismetRenderingLibrary_ExportRenderTarget_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureRenderTarget2D*               TextureRenderTarget;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FilePath;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Filename;                                                 // (Parm, ZeroConstructor)
};

// Function Engine.KismetRenderingLibrary.EndDrawCanvasToRenderTarget
struct UEngine_KismetRenderingLibrary_EndDrawCanvasToRenderTarget_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_DrawToRenderTargetContext           Context;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.KismetRenderingLibrary.DrawMaterialToRenderTarget
struct UEngine_KismetRenderingLibrary_DrawMaterialToRenderTarget_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureRenderTarget2D*               TextureRenderTarget;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   Material;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.CreateRenderTarget2D
struct UEngine_KismetRenderingLibrary_CreateRenderTarget2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Width;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Height;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETextureRenderTargetFormat> Format;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ClearColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoGenerateMipMaps;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureRenderTarget2D*               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.ConvertRenderTargetToTexture2DEditorOnly
struct UEngine_KismetRenderingLibrary_ConvertRenderTargetToTexture2DEditorOnly_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureRenderTarget2D*               RenderTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture2D*                           Texture;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.ClearRenderTarget2D
struct UEngine_KismetRenderingLibrary_ClearRenderTarget2D_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureRenderTarget2D*               TextureRenderTarget;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ClearColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.BreakSkinWeightInfo
struct UEngine_KismetRenderingLibrary_BreakSkinWeightInfo_Params
{
	struct FEngine_SkelMeshSkinWeightInfo              InWeight;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Bone0;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Weight0;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Bone1;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Weight1;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Bone2;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Weight2;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                Bone3;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Weight3;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetRenderingLibrary.BeginDrawCanvasToRenderTarget
struct UEngine_KismetRenderingLibrary_BeginDrawCanvasToRenderTarget_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureRenderTarget2D*               TextureRenderTarget;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Canvas*                              Canvas;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Size;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FEngine_DrawToRenderTargetContext           Context;                                                  // (Parm, OutParm)
};

// Function Engine.KismetStringLibrary.TrimTrailing
struct UEngine_KismetStringLibrary_TrimTrailing_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Trim
struct UEngine_KismetStringLibrary_Trim_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.ToUpper
struct UEngine_KismetStringLibrary_ToUpper_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.ToLower
struct UEngine_KismetStringLibrary_ToLower_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.TimeSecondsToString
struct UEngine_KismetStringLibrary_TimeSecondsToString_Params
{
	float                                              InSeconds;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.StartsWith
struct UEngine_KismetStringLibrary_StartsWith_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     InPrefix;                                                 // (Parm, ZeroConstructor)
	TEnumAsByte<FCoreUObject_ESearchCase>              SearchCase;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Split
struct UEngine_KismetStringLibrary_Split_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     InStr;                                                    // (Parm, ZeroConstructor)
	struct FString                                     LeftS;                                                    // (Parm, OutParm, ZeroConstructor)
	struct FString                                     RightS;                                                   // (Parm, OutParm, ZeroConstructor)
	TEnumAsByte<FCoreUObject_ESearchCase>              SearchCase;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FCoreUObject_ESearchDir>               SearchDir;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.RightPad
struct UEngine_KismetStringLibrary_RightPad_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	int                                                ChCount;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.RightChop
struct UEngine_KismetStringLibrary_RightChop_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	int                                                count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Right
struct UEngine_KismetStringLibrary_Right_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	int                                                count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Reverse
struct UEngine_KismetStringLibrary_Reverse_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.ReplaceInline
struct UEngine_KismetStringLibrary_ReplaceInline_Params
{
	struct FString                                     SourceString;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FString                                     SearchText;                                               // (Parm, ZeroConstructor)
	struct FString                                     ReplacementText;                                          // (Parm, ZeroConstructor)
	TEnumAsByte<FCoreUObject_ESearchCase>              SearchCase;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Replace
struct UEngine_KismetStringLibrary_Replace_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     From;                                                     // (Parm, ZeroConstructor)
	struct FString                                     To;                                                       // (Parm, ZeroConstructor)
	TEnumAsByte<FCoreUObject_ESearchCase>              SearchCase;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.ParseIntoArray
struct UEngine_KismetStringLibrary_ParseIntoArray_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     Delimiter;                                                // (Parm, ZeroConstructor)
	bool                                               CullEmptyStrings;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.NotEqual_StrStr
struct UEngine_KismetStringLibrary_NotEqual_StrStr_Params
{
	struct FString                                     A;                                                        // (Parm, ZeroConstructor)
	struct FString                                     B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.NotEqual_StriStri
struct UEngine_KismetStringLibrary_NotEqual_StriStri_Params
{
	struct FString                                     A;                                                        // (Parm, ZeroConstructor)
	struct FString                                     B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Mid
struct UEngine_KismetStringLibrary_Mid_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	int                                                Start;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.MatchesWildcard
struct UEngine_KismetStringLibrary_MatchesWildcard_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     Wildcard;                                                 // (Parm, ZeroConstructor)
	TEnumAsByte<FCoreUObject_ESearchCase>              SearchCase;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Len
struct UEngine_KismetStringLibrary_Len_Params
{
	struct FString                                     S;                                                        // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.LeftPad
struct UEngine_KismetStringLibrary_LeftPad_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	int                                                ChCount;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.LeftChop
struct UEngine_KismetStringLibrary_LeftChop_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	int                                                count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Left
struct UEngine_KismetStringLibrary_Left_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	int                                                count;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.JoinStringArray
struct UEngine_KismetStringLibrary_JoinStringArray_Params
{
	TArray<struct FString>                             SourceArray;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FString                                     Separator;                                                // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.IsNumeric
struct UEngine_KismetStringLibrary_IsNumeric_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.GetSubstring
struct UEngine_KismetStringLibrary_GetSubstring_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	int                                                StartIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Length;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.GetCharacterAsNumber
struct UEngine_KismetStringLibrary_GetCharacterAsNumber_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.GetCharacterArrayFromString
struct UEngine_KismetStringLibrary_GetCharacterArrayFromString_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	TArray<struct FString>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.FindSubstring
struct UEngine_KismetStringLibrary_FindSubstring_Params
{
	struct FString                                     SearchIn;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Substring;                                                // (Parm, ZeroConstructor)
	bool                                               bUseCase;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSearchFromEnd;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                StartPosition;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.EqualEqual_StrStr
struct UEngine_KismetStringLibrary_EqualEqual_StrStr_Params
{
	struct FString                                     A;                                                        // (Parm, ZeroConstructor)
	struct FString                                     B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.EqualEqual_StriStri
struct UEngine_KismetStringLibrary_EqualEqual_StriStri_Params
{
	struct FString                                     A;                                                        // (Parm, ZeroConstructor)
	struct FString                                     B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.EndsWith
struct UEngine_KismetStringLibrary_EndsWith_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	struct FString                                     InSuffix;                                                 // (Parm, ZeroConstructor)
	TEnumAsByte<FCoreUObject_ESearchCase>              SearchCase;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.CullArray
struct UEngine_KismetStringLibrary_CullArray_Params
{
	struct FString                                     SourceString;                                             // (Parm, ZeroConstructor)
	TArray<struct FString>                             inArray;                                                  // (Parm, OutParm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Conv_VectorToString
struct UEngine_KismetStringLibrary_Conv_VectorToString_Params
{
	struct FVector                                     InVec;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_Vector2dToString
struct UEngine_KismetStringLibrary_Conv_Vector2dToString_Params
{
	struct FVector2D                                   InVec;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_TransformToString
struct UEngine_KismetStringLibrary_Conv_TransformToString_Params
{
	struct FTransform                                  InTrans;                                                  // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_StringToVector2D
struct UEngine_KismetStringLibrary_Conv_StringToVector2D_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
	struct FVector2D                                   OutConvertedVector2D;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               OutIsValid;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Conv_StringToVector
struct UEngine_KismetStringLibrary_Conv_StringToVector_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
	struct FVector                                     OutConvertedVector;                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               OutIsValid;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Conv_StringToRotator
struct UEngine_KismetStringLibrary_Conv_StringToRotator_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
	struct FRotator                                    OutConvertedRotator;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               OutIsValid;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Conv_StringToName
struct UEngine_KismetStringLibrary_Conv_StringToName_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Conv_StringToInt
struct UEngine_KismetStringLibrary_Conv_StringToInt_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Conv_StringToFloat
struct UEngine_KismetStringLibrary_Conv_StringToFloat_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Conv_StringToColor
struct UEngine_KismetStringLibrary_Conv_StringToColor_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
	struct FLinearColor                                OutConvertedColor;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               OutIsValid;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Conv_RotatorToString
struct UEngine_KismetStringLibrary_Conv_RotatorToString_Params
{
	struct FRotator                                    InRot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_ObjectToString
struct UEngine_KismetStringLibrary_Conv_ObjectToString_Params
{
	class UObject*                                     InObj;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_NameToString
struct UEngine_KismetStringLibrary_Conv_NameToString_Params
{
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_MatrixToString
struct UEngine_KismetStringLibrary_Conv_MatrixToString_Params
{
	struct FMatrix                                     InMatrix;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_IntVectorToString
struct UEngine_KismetStringLibrary_Conv_IntVectorToString_Params
{
	struct FIntVector                                  InIntVec;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_IntToString
struct UEngine_KismetStringLibrary_Conv_IntToString_Params
{
	int                                                inInt;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_FloatToString
struct UEngine_KismetStringLibrary_Conv_FloatToString_Params
{
	float                                              InFloat;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_ColorToString
struct UEngine_KismetStringLibrary_Conv_ColorToString_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_ByteToString
struct UEngine_KismetStringLibrary_Conv_ByteToString_Params
{
	unsigned char                                      InByte;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Conv_BoolToString
struct UEngine_KismetStringLibrary_Conv_BoolToString_Params
{
	bool                                               InBool;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.Contains
struct UEngine_KismetStringLibrary_Contains_Params
{
	struct FString                                     SearchIn;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Substring;                                                // (Parm, ZeroConstructor)
	bool                                               bUseCase;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSearchFromEnd;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringLibrary.Concat_StrStr
struct UEngine_KismetStringLibrary_Concat_StrStr_Params
{
	struct FString                                     A;                                                        // (Parm, ZeroConstructor)
	struct FString                                     B;                                                        // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.BuildString_Vector2d
struct UEngine_KismetStringLibrary_BuildString_Vector2d_Params
{
	struct FString                                     AppendTo;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	struct FVector2D                                   InVector2D;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Suffix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.BuildString_Vector
struct UEngine_KismetStringLibrary_BuildString_Vector_Params
{
	struct FString                                     AppendTo;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	struct FVector                                     InVector;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Suffix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.BuildString_Rotator
struct UEngine_KismetStringLibrary_BuildString_Rotator_Params
{
	struct FString                                     AppendTo;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	struct FRotator                                    InRot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Suffix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.BuildString_Object
struct UEngine_KismetStringLibrary_BuildString_Object_Params
{
	struct FString                                     AppendTo;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	class UObject*                                     InObj;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Suffix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.BuildString_Name
struct UEngine_KismetStringLibrary_BuildString_Name_Params
{
	struct FString                                     AppendTo;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Suffix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.BuildString_IntVector
struct UEngine_KismetStringLibrary_BuildString_IntVector_Params
{
	struct FString                                     AppendTo;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	struct FIntVector                                  InIntVector;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Suffix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.BuildString_Int
struct UEngine_KismetStringLibrary_BuildString_Int_Params
{
	struct FString                                     AppendTo;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	int                                                inInt;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Suffix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.BuildString_Float
struct UEngine_KismetStringLibrary_BuildString_Float_Params
{
	struct FString                                     AppendTo;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	float                                              InFloat;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Suffix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.BuildString_Color
struct UEngine_KismetStringLibrary_BuildString_Color_Params
{
	struct FString                                     AppendTo;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Suffix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringLibrary.BuildString_Bool
struct UEngine_KismetStringLibrary_BuildString_Bool_Params
{
	struct FString                                     AppendTo;                                                 // (Parm, ZeroConstructor)
	struct FString                                     Prefix;                                                   // (Parm, ZeroConstructor)
	bool                                               InBool;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Suffix;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringTableLibrary.IsRegisteredTableId
struct UEngine_KismetStringTableLibrary_IsRegisteredTableId_Params
{
	struct FName                                       TableId;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringTableLibrary.IsRegisteredTableEntry
struct UEngine_KismetStringTableLibrary_IsRegisteredTableEntry_Params
{
	struct FName                                       TableId;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Key;                                                      // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetStringTableLibrary.GetTableNamespace
struct UEngine_KismetStringTableLibrary_GetTableNamespace_Params
{
	struct FName                                       TableId;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringTableLibrary.GetTableEntrySourceString
struct UEngine_KismetStringTableLibrary_GetTableEntrySourceString_Params
{
	struct FName                                       TableId;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Key;                                                      // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringTableLibrary.GetTableEntryMetaData
struct UEngine_KismetStringTableLibrary_GetTableEntryMetaData_Params
{
	struct FName                                       TableId;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Key;                                                      // (Parm, ZeroConstructor)
	struct FName                                       MetaDataId;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringTableLibrary.GetRegisteredStringTables
struct UEngine_KismetStringTableLibrary_GetRegisteredStringTables_Params
{
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringTableLibrary.GetMetaDataIdsFromStringTableEntry
struct UEngine_KismetStringTableLibrary_GetMetaDataIdsFromStringTableEntry_Params
{
	struct FName                                       TableId;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Key;                                                      // (Parm, ZeroConstructor)
	TArray<struct FName>                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetStringTableLibrary.GetKeysFromStringTable
struct UEngine_KismetStringTableLibrary_GetKeysFromStringTable_Params
{
	struct FName                                       TableId;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.UnregisterForRemoteNotifications
struct UEngine_KismetSystemLibrary_UnregisterForRemoteNotifications_Params
{
};

// Function Engine.KismetSystemLibrary.UnloadPrimaryAssetList
struct UEngine_KismetSystemLibrary_UnloadPrimaryAssetList_Params
{
	TArray<struct FPrimaryAssetId>                     PrimaryAssetIdList;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.KismetSystemLibrary.UnloadPrimaryAsset
struct UEngine_KismetSystemLibrary_UnloadPrimaryAsset_Params
{
	struct FPrimaryAssetId                             PrimaryAssetId;                                           // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.TransactObject
struct UEngine_KismetSystemLibrary_TransactObject_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.StackTrace
struct UEngine_KismetSystemLibrary_StackTrace_Params
{
};

// Function Engine.KismetSystemLibrary.SphereTraceSingleForObjects
struct UEngine_KismetSystemLibrary_SphereTraceSingleForObjects_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SphereTraceSingleByProfile
struct UEngine_KismetSystemLibrary_SphereTraceSingleByProfile_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SphereTraceSingle
struct UEngine_KismetSystemLibrary_SphereTraceSingle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETraceTypeQuery>        TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SphereTraceMultiForObjects
struct UEngine_KismetSystemLibrary_SphereTraceMultiForObjects_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SphereTraceMultiByProfile
struct UEngine_KismetSystemLibrary_SphereTraceMultiByProfile_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SphereTraceMulti
struct UEngine_KismetSystemLibrary_SphereTraceMulti_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETraceTypeQuery>        TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SphereOverlapComponents
struct UEngine_KismetSystemLibrary_SphereOverlapComponents_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SpherePos;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              SphereRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      ComponentClassFilter;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UEngine_PrimitiveComponent*>          OutComponents;                                            // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SphereOverlapActors
struct UEngine_KismetSystemLibrary_SphereOverlapActors_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SpherePos;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              SphereRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      ActorClassFilter;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class AEngine_Actor*>                       OutActors;                                                // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SnapshotObject
struct UEngine_KismetSystemLibrary_SnapshotObject_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.ShowPlatformSpecificLeaderboardScreen
struct UEngine_KismetSystemLibrary_ShowPlatformSpecificLeaderboardScreen_Params
{
	struct FString                                     CategoryName;                                             // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.ShowPlatformSpecificAchievementsScreen
struct UEngine_KismetSystemLibrary_ShowPlatformSpecificAchievementsScreen_Params
{
	class AEngine_PlayerController*                    SpecificPlayer;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.ShowInterstitialAd
struct UEngine_KismetSystemLibrary_ShowInterstitialAd_Params
{
};

// Function Engine.KismetSystemLibrary.ShowAdBanner
struct UEngine_KismetSystemLibrary_ShowAdBanner_Params
{
	int                                                AdIdIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShowOnBottomOfScreen;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetWindowTitle
struct UEngine_KismetSystemLibrary_SetWindowTitle_Params
{
	struct FText                                       Title;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.KismetSystemLibrary.SetVolumeButtonsHandledBySystem
struct UEngine_KismetSystemLibrary_SetVolumeButtonsHandledBySystem_Params
{
	bool                                               bEnabled;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetVectorPropertyByName
struct UEngine_KismetSystemLibrary_SetVectorPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetUserActivity
struct UEngine_KismetSystemLibrary_SetUserActivity_Params
{
	struct FEngine_UserActivity                        UserActivity;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.KismetSystemLibrary.SetTransformPropertyByName
struct UEngine_KismetSystemLibrary_SetTransformPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  Value;                                                    // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetTextPropertyByName
struct UEngine_KismetSystemLibrary_SetTextPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       Value;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.KismetSystemLibrary.SetSuppressViewportTransitionMessage
struct UEngine_KismetSystemLibrary_SetSuppressViewportTransitionMessage_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bState;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetStructurePropertyByName
struct UEngine_KismetSystemLibrary_SetStructurePropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_GenericStruct                       Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetStringPropertyByName
struct UEngine_KismetSystemLibrary_SetStringPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Value;                                                    // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.SetSoftObjectPropertyByName
struct UEngine_KismetSystemLibrary_SetSoftObjectPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetSoftClassPropertyByName
struct UEngine_KismetSystemLibrary_SetSoftClassPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetRotatorPropertyByName
struct UEngine_KismetSystemLibrary_SetRotatorPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetObjectPropertyByName
struct UEngine_KismetSystemLibrary_SetObjectPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetNamePropertyByName
struct UEngine_KismetSystemLibrary_SetNamePropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetLinearColorPropertyByName
struct UEngine_KismetSystemLibrary_SetLinearColorPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetIntPropertyByName
struct UEngine_KismetSystemLibrary_SetIntPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetInterfacePropertyByName
struct UEngine_KismetSystemLibrary_SetInterfacePropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	TScriptInterface<class UInterface>                 Value;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetInt64PropertyByName
struct UEngine_KismetSystemLibrary_SetInt64PropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int64_t                                            Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetFloatPropertyByName
struct UEngine_KismetSystemLibrary_SetFloatPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetCollisionProfileNameProperty
struct UEngine_KismetSystemLibrary_SetCollisionProfileNameProperty_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_CollisionProfileName                Value;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.KismetSystemLibrary.SetClassPropertyByName
struct UEngine_KismetSystemLibrary_SetClassPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetBytePropertyByName
struct UEngine_KismetSystemLibrary_SetBytePropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.SetBoolPropertyByName
struct UEngine_KismetSystemLibrary_SetBoolPropertyByName_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       PropertyName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.RetriggerableDelay
struct UEngine_KismetSystemLibrary_RetriggerableDelay_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_LatentActionInfo                    LatentInfo;                                               // (Parm)
};

// Function Engine.KismetSystemLibrary.ResetGamepadAssignmentToController
struct UEngine_KismetSystemLibrary_ResetGamepadAssignmentToController_Params
{
	int                                                ControllerId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.ResetGamepadAssignments
struct UEngine_KismetSystemLibrary_ResetGamepadAssignments_Params
{
};

// Function Engine.KismetSystemLibrary.RegisterForRemoteNotifications
struct UEngine_KismetSystemLibrary_RegisterForRemoteNotifications_Params
{
};

// Function Engine.KismetSystemLibrary.QuitGame
struct UEngine_KismetSystemLibrary_QuitGame_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	class AEngine_PlayerController*                    SpecificPlayer;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EQuitPreference>        QuitPreference;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnorePlatformRestrictions;                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.PrintWarning
struct UEngine_KismetSystemLibrary_PrintWarning_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.PrintText
struct UEngine_KismetSystemLibrary_PrintText_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       InText;                                                   // (ConstParm, Parm)
	bool                                               bPrintToScreen;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPrintToLog;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TextColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.PrintString
struct UEngine_KismetSystemLibrary_PrintString_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
	bool                                               bPrintToScreen;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bPrintToLog;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TextColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// DelegateFunction Engine.KismetSystemLibrary.OnAssetLoaded__DelegateSignature
struct UEngine_KismetSystemLibrary_OnAssetLoaded__DelegateSignature_Params
{
	class UObject*                                     Loaded;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// DelegateFunction Engine.KismetSystemLibrary.OnAssetClassLoaded__DelegateSignature
struct UEngine_KismetSystemLibrary_OnAssetClassLoaded__DelegateSignature_Params
{
	class UClass*                                      Loaded;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.NotEqual_SoftObjectReference
struct UEngine_KismetSystemLibrary_NotEqual_SoftObjectReference_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.NotEqual_SoftClassReference
struct UEngine_KismetSystemLibrary_NotEqual_SoftClassReference_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.NotEqual_PrimaryAssetType
struct UEngine_KismetSystemLibrary_NotEqual_PrimaryAssetType_Params
{
	struct FPrimaryAssetType                           A;                                                        // (Parm, ZeroConstructor)
	struct FPrimaryAssetType                           B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.NotEqual_PrimaryAssetId
struct UEngine_KismetSystemLibrary_NotEqual_PrimaryAssetId_Params
{
	struct FPrimaryAssetId                             A;                                                        // (Parm, ZeroConstructor)
	struct FPrimaryAssetId                             B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.NormalizeFilename
struct UEngine_KismetSystemLibrary_NormalizeFilename_Params
{
	struct FString                                     InFilename;                                               // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.MoveComponentTo
struct UEngine_KismetSystemLibrary_MoveComponentTo_Params
{
	class UEngine_SceneComponent*                      Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     TargetRelativeLocation;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    TargetRelativeRotation;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEaseOut;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEaseIn;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              OverTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bForceShortestRotationPath;                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EMoveComponentAction>   MoveAction;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_LatentActionInfo                    LatentInfo;                                               // (Parm)
};

// Function Engine.KismetSystemLibrary.MakeSoftObjectPath
struct UEngine_KismetSystemLibrary_MakeSoftObjectPath_Params
{
	struct FString                                     PathString;                                               // (Parm, ZeroConstructor)
	struct FSoftObjectPath                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.MakeSoftClassPath
struct UEngine_KismetSystemLibrary_MakeSoftClassPath_Params
{
	struct FString                                     PathString;                                               // (Parm, ZeroConstructor)
	struct FSoftClassPath                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.MakeLiteralText
struct UEngine_KismetSystemLibrary_MakeLiteralText_Params
{
	struct FText                                       Value;                                                    // (Parm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetSystemLibrary.MakeLiteralString
struct UEngine_KismetSystemLibrary_MakeLiteralString_Params
{
	struct FString                                     Value;                                                    // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.MakeLiteralName
struct UEngine_KismetSystemLibrary_MakeLiteralName_Params
{
	struct FName                                       Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.MakeLiteralInt
struct UEngine_KismetSystemLibrary_MakeLiteralInt_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.MakeLiteralFloat
struct UEngine_KismetSystemLibrary_MakeLiteralFloat_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.MakeLiteralByte
struct UEngine_KismetSystemLibrary_MakeLiteralByte_Params
{
	unsigned char                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.MakeLiteralBool
struct UEngine_KismetSystemLibrary_MakeLiteralBool_Params
{
	bool                                               Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.LoadInterstitialAd
struct UEngine_KismetSystemLibrary_LoadInterstitialAd_Params
{
	int                                                AdIdIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.LoadClassAsset_Blocking
struct UEngine_KismetSystemLibrary_LoadClassAsset_Blocking_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.LoadAssetClass
struct UEngine_KismetSystemLibrary_LoadAssetClass_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnLoaded;                                                 // (Parm, ZeroConstructor)
	struct FEngine_LatentActionInfo                    LatentInfo;                                               // (Parm)
};

// Function Engine.KismetSystemLibrary.LoadAsset_Blocking
struct UEngine_KismetSystemLibrary_LoadAsset_Blocking_Params
{
	class UObject*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.LoadAsset
struct UEngine_KismetSystemLibrary_LoadAsset_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnLoaded;                                                 // (Parm, ZeroConstructor)
	struct FEngine_LatentActionInfo                    LatentInfo;                                               // (Parm)
};

// Function Engine.KismetSystemLibrary.LineTraceSingleForObjects
struct UEngine_KismetSystemLibrary_LineTraceSingleForObjects_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.LineTraceSingleByProfile
struct UEngine_KismetSystemLibrary_LineTraceSingleByProfile_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.LineTraceSingle
struct UEngine_KismetSystemLibrary_LineTraceSingle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETraceTypeQuery>        TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.LineTraceMultiForObjects
struct UEngine_KismetSystemLibrary_LineTraceMultiForObjects_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.LineTraceMultiByProfile
struct UEngine_KismetSystemLibrary_LineTraceMultiByProfile_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.LineTraceMulti
struct UEngine_KismetSystemLibrary_LineTraceMulti_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETraceTypeQuery>        TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.LaunchURL
struct UEngine_KismetSystemLibrary_LaunchURL_Params
{
	struct FString                                     URL;                                                      // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.K2_UnPauseTimerHandle
struct UEngine_KismetSystemLibrary_K2_UnPauseTimerHandle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm)
};

// Function Engine.KismetSystemLibrary.K2_UnPauseTimerDelegate
struct UEngine_KismetSystemLibrary_K2_UnPauseTimerDelegate_Params
{
	struct FScriptDelegate                             Delegate;                                                 // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.K2_UnPauseTimer
struct UEngine_KismetSystemLibrary_K2_UnPauseTimer_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FunctionName;                                             // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.K2_TimerExistsHandle
struct UEngine_KismetSystemLibrary_K2_TimerExistsHandle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_TimerExistsDelegate
struct UEngine_KismetSystemLibrary_K2_TimerExistsDelegate_Params
{
	struct FScriptDelegate                             Delegate;                                                 // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_TimerExists
struct UEngine_KismetSystemLibrary_K2_TimerExists_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FunctionName;                                             // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_SetTimerDelegate
struct UEngine_KismetSystemLibrary_K2_SetTimerDelegate_Params
{
	struct FScriptDelegate                             Delegate;                                                 // (Parm, ZeroConstructor)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLooping;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InitialStartDelay;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InitialStartDelayVariance;                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetSystemLibrary.K2_SetTimer
struct UEngine_KismetSystemLibrary_K2_SetTimer_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FunctionName;                                             // (Parm, ZeroConstructor)
	float                                              Time;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bLooping;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InitialStartDelay;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InitialStartDelayVariance;                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetSystemLibrary.K2_PauseTimerHandle
struct UEngine_KismetSystemLibrary_K2_PauseTimerHandle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm)
};

// Function Engine.KismetSystemLibrary.K2_PauseTimerDelegate
struct UEngine_KismetSystemLibrary_K2_PauseTimerDelegate_Params
{
	struct FScriptDelegate                             Delegate;                                                 // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.K2_PauseTimer
struct UEngine_KismetSystemLibrary_K2_PauseTimer_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FunctionName;                                             // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.K2_IsValidTimerHandle
struct UEngine_KismetSystemLibrary_K2_IsValidTimerHandle_Params
{
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_IsTimerPausedHandle
struct UEngine_KismetSystemLibrary_K2_IsTimerPausedHandle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_IsTimerPausedDelegate
struct UEngine_KismetSystemLibrary_K2_IsTimerPausedDelegate_Params
{
	struct FScriptDelegate                             Delegate;                                                 // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_IsTimerPaused
struct UEngine_KismetSystemLibrary_K2_IsTimerPaused_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FunctionName;                                             // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_IsTimerActiveHandle
struct UEngine_KismetSystemLibrary_K2_IsTimerActiveHandle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_IsTimerActiveDelegate
struct UEngine_KismetSystemLibrary_K2_IsTimerActiveDelegate_Params
{
	struct FScriptDelegate                             Delegate;                                                 // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_IsTimerActive
struct UEngine_KismetSystemLibrary_K2_IsTimerActive_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FunctionName;                                             // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_InvalidateTimerHandle
struct UEngine_KismetSystemLibrary_K2_InvalidateTimerHandle_Params
{
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm, OutParm, ReferenceParm)
	struct FEngine_TimerHandle                         ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTimeHandle
struct UEngine_KismetSystemLibrary_K2_GetTimerRemainingTimeHandle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTimeDelegate
struct UEngine_KismetSystemLibrary_K2_GetTimerRemainingTimeDelegate_Params
{
	struct FScriptDelegate                             Delegate;                                                 // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTime
struct UEngine_KismetSystemLibrary_K2_GetTimerRemainingTime_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FunctionName;                                             // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTimeHandle
struct UEngine_KismetSystemLibrary_K2_GetTimerElapsedTimeHandle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTimeDelegate
struct UEngine_KismetSystemLibrary_K2_GetTimerElapsedTimeDelegate_Params
{
	struct FScriptDelegate                             Delegate;                                                 // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTime
struct UEngine_KismetSystemLibrary_K2_GetTimerElapsedTime_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FunctionName;                                             // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.K2_ClearTimerHandle
struct UEngine_KismetSystemLibrary_K2_ClearTimerHandle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm)
};

// Function Engine.KismetSystemLibrary.K2_ClearTimerDelegate
struct UEngine_KismetSystemLibrary_K2_ClearTimerDelegate_Params
{
	struct FScriptDelegate                             Delegate;                                                 // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.K2_ClearTimer
struct UEngine_KismetSystemLibrary_K2_ClearTimer_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     FunctionName;                                             // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.K2_ClearAndInvalidateTimerHandle
struct UEngine_KismetSystemLibrary_K2_ClearAndInvalidateTimerHandle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_TimerHandle                         Handle;                                                   // (Parm, OutParm, ReferenceParm)
};

// Function Engine.KismetSystemLibrary.IsValidSoftObjectReference
struct UEngine_KismetSystemLibrary_IsValidSoftObjectReference_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsValidSoftClassReference
struct UEngine_KismetSystemLibrary_IsValidSoftClassReference_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsValidPrimaryAssetType
struct UEngine_KismetSystemLibrary_IsValidPrimaryAssetType_Params
{
	struct FPrimaryAssetType                           PrimaryAssetType;                                         // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsValidPrimaryAssetId
struct UEngine_KismetSystemLibrary_IsValidPrimaryAssetId_Params
{
	struct FPrimaryAssetId                             PrimaryAssetId;                                           // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsValidClass
struct UEngine_KismetSystemLibrary_IsValidClass_Params
{
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsValid
struct UEngine_KismetSystemLibrary_IsValid_Params
{
	class UObject*                                     Object;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsUnattended
struct UEngine_KismetSystemLibrary_IsUnattended_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsStandalone
struct UEngine_KismetSystemLibrary_IsStandalone_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsServer
struct UEngine_KismetSystemLibrary_IsServer_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsScreensaverEnabled
struct UEngine_KismetSystemLibrary_IsScreensaverEnabled_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsPackagedForDistribution
struct UEngine_KismetSystemLibrary_IsPackagedForDistribution_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsLoggedIn
struct UEngine_KismetSystemLibrary_IsLoggedIn_Params
{
	class AEngine_PlayerController*                    SpecificPlayer;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsInterstitialAdRequested
struct UEngine_KismetSystemLibrary_IsInterstitialAdRequested_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsInterstitialAdAvailable
struct UEngine_KismetSystemLibrary_IsInterstitialAdAvailable_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsDedicatedServer
struct UEngine_KismetSystemLibrary_IsDedicatedServer_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.IsControllerAssignedToGamepad
struct UEngine_KismetSystemLibrary_IsControllerAssignedToGamepad_Params
{
	int                                                ControllerId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.HideAdBanner
struct UEngine_KismetSystemLibrary_HideAdBanner_Params
{
};

// Function Engine.KismetSystemLibrary.GetVolumeButtonsHandledBySystem
struct UEngine_KismetSystemLibrary_GetVolumeButtonsHandledBySystem_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetUniqueDeviceId
struct UEngine_KismetSystemLibrary_GetUniqueDeviceId_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetSupportedFullscreenResolutions
struct UEngine_KismetSystemLibrary_GetSupportedFullscreenResolutions_Params
{
	TArray<struct FIntPoint>                           Resolutions;                                              // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetSoftObjectReferenceFromPrimaryAssetId
struct UEngine_KismetSystemLibrary_GetSoftObjectReferenceFromPrimaryAssetId_Params
{
	struct FPrimaryAssetId                             PrimaryAssetId;                                           // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.GetSoftClassReferenceFromPrimaryAssetId
struct UEngine_KismetSystemLibrary_GetSoftClassReferenceFromPrimaryAssetId_Params
{
	struct FPrimaryAssetId                             PrimaryAssetId;                                           // (Parm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.GetRenderingMaterialQualityLevel
struct UEngine_KismetSystemLibrary_GetRenderingMaterialQualityLevel_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetRenderingDetailMode
struct UEngine_KismetSystemLibrary_GetRenderingDetailMode_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetProjectSavedDirectory
struct UEngine_KismetSystemLibrary_GetProjectSavedDirectory_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetProjectDirectory
struct UEngine_KismetSystemLibrary_GetProjectDirectory_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetProjectContentDirectory
struct UEngine_KismetSystemLibrary_GetProjectContentDirectory_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetPrimaryAssetsWithBundleState
struct UEngine_KismetSystemLibrary_GetPrimaryAssetsWithBundleState_Params
{
	TArray<struct FName>                               RequiredBundles;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FName>                               ExcludedBundles;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FPrimaryAssetType>                   ValidTypes;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bForceCurrentState;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FPrimaryAssetId>                     OutPrimaryAssetIdList;                                    // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdList
struct UEngine_KismetSystemLibrary_GetPrimaryAssetIdList_Params
{
	struct FPrimaryAssetType                           PrimaryAssetType;                                         // (Parm, ZeroConstructor)
	TArray<struct FPrimaryAssetId>                     OutPrimaryAssetIdList;                                    // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromSoftObjectReference
struct UEngine_KismetSystemLibrary_GetPrimaryAssetIdFromSoftObjectReference_Params
{
	struct FPrimaryAssetId                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromSoftClassReference
struct UEngine_KismetSystemLibrary_GetPrimaryAssetIdFromSoftClassReference_Params
{
	struct FPrimaryAssetId                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromObject
struct UEngine_KismetSystemLibrary_GetPrimaryAssetIdFromObject_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPrimaryAssetId                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromClass
struct UEngine_KismetSystemLibrary_GetPrimaryAssetIdFromClass_Params
{
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPrimaryAssetId                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetPreferredLanguages
struct UEngine_KismetSystemLibrary_GetPreferredLanguages_Params
{
	TArray<struct FString>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetPlatformUserName
struct UEngine_KismetSystemLibrary_GetPlatformUserName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetPathName
struct UEngine_KismetSystemLibrary_GetPathName_Params
{
	class UObject*                                     Object;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetOuterObject
struct UEngine_KismetSystemLibrary_GetOuterObject_Params
{
	class UObject*                                     Object;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetObjectName
struct UEngine_KismetSystemLibrary_GetObjectName_Params
{
	class UObject*                                     Object;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetObjectFromPrimaryAssetId
struct UEngine_KismetSystemLibrary_GetObjectFromPrimaryAssetId_Params
{
	struct FPrimaryAssetId                             PrimaryAssetId;                                           // (Parm, ZeroConstructor)
	class UObject*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetMinYResolutionForUI
struct UEngine_KismetSystemLibrary_GetMinYResolutionForUI_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetMinYResolutionFor3DView
struct UEngine_KismetSystemLibrary_GetMinYResolutionFor3DView_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetLocalCurrencySymbol
struct UEngine_KismetSystemLibrary_GetLocalCurrencySymbol_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetLocalCurrencyCode
struct UEngine_KismetSystemLibrary_GetLocalCurrencyCode_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetGameTimeInSeconds
struct UEngine_KismetSystemLibrary_GetGameTimeInSeconds_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetGamepadControllerName
struct UEngine_KismetSystemLibrary_GetGamepadControllerName_Params
{
	int                                                ControllerId;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetGameName
struct UEngine_KismetSystemLibrary_GetGameName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetGameBundleId
struct UEngine_KismetSystemLibrary_GetGameBundleId_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetFrameCount
struct UEngine_KismetSystemLibrary_GetFrameCount_Params
{
	int64_t                                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetEngineVersion
struct UEngine_KismetSystemLibrary_GetEngineVersion_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetDisplayName
struct UEngine_KismetSystemLibrary_GetDisplayName_Params
{
	class UObject*                                     Object;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetDeviceId
struct UEngine_KismetSystemLibrary_GetDeviceId_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetDefaultLocale
struct UEngine_KismetSystemLibrary_GetDefaultLocale_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetDefaultLanguage
struct UEngine_KismetSystemLibrary_GetDefaultLanguage_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetCurrentBundleState
struct UEngine_KismetSystemLibrary_GetCurrentBundleState_Params
{
	struct FPrimaryAssetId                             PrimaryAssetId;                                           // (Parm, ZeroConstructor)
	bool                                               bForceCurrentState;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               OutBundles;                                               // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetConvenientWindowedResolutions
struct UEngine_KismetSystemLibrary_GetConvenientWindowedResolutions_Params
{
	TArray<struct FIntPoint>                           Resolutions;                                              // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetConsoleVariableIntValue
struct UEngine_KismetSystemLibrary_GetConsoleVariableIntValue_Params
{
	struct FString                                     VariableName;                                             // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetConsoleVariableFloatValue
struct UEngine_KismetSystemLibrary_GetConsoleVariableFloatValue_Params
{
	struct FString                                     VariableName;                                             // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetConsoleVariableBoolValue
struct UEngine_KismetSystemLibrary_GetConsoleVariableBoolValue_Params
{
	struct FString                                     VariableName;                                             // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetComponentBounds
struct UEngine_KismetSystemLibrary_GetComponentBounds_Params
{
	class UEngine_SceneComponent*                      Component;                                                // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     Origin;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoxExtent;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	float                                              SphereRadius;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetCommandLine
struct UEngine_KismetSystemLibrary_GetCommandLine_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetClassFromPrimaryAssetId
struct UEngine_KismetSystemLibrary_GetClassFromPrimaryAssetId_Params
{
	struct FPrimaryAssetId                             PrimaryAssetId;                                           // (Parm, ZeroConstructor)
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetClassDisplayName
struct UEngine_KismetSystemLibrary_GetClassDisplayName_Params
{
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.GetAdIDCount
struct UEngine_KismetSystemLibrary_GetAdIDCount_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.GetActorListFromComponentList
struct UEngine_KismetSystemLibrary_GetActorListFromComponentList_Params
{
	TArray<class UEngine_PrimitiveComponent*>          ComponentList;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      ActorClassFilter;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       OutActorList;                                             // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.GetActorBounds
struct UEngine_KismetSystemLibrary_GetActorBounds_Params
{
	class AEngine_Actor*                               Actor;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Origin;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoxExtent;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.ForceCloseAdBanner
struct UEngine_KismetSystemLibrary_ForceCloseAdBanner_Params
{
};

// Function Engine.KismetSystemLibrary.FlushPersistentDebugLines
struct UEngine_KismetSystemLibrary_FlushPersistentDebugLines_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.FlushDebugStrings
struct UEngine_KismetSystemLibrary_FlushDebugStrings_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.ExecuteConsoleCommand
struct UEngine_KismetSystemLibrary_ExecuteConsoleCommand_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Command;                                                  // (Parm, ZeroConstructor)
	class AEngine_PlayerController*                    SpecificPlayer;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.EqualEqual_SoftObjectReference
struct UEngine_KismetSystemLibrary_EqualEqual_SoftObjectReference_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.EqualEqual_SoftClassReference
struct UEngine_KismetSystemLibrary_EqualEqual_SoftClassReference_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.EqualEqual_PrimaryAssetType
struct UEngine_KismetSystemLibrary_EqualEqual_PrimaryAssetType_Params
{
	struct FPrimaryAssetType                           A;                                                        // (Parm, ZeroConstructor)
	struct FPrimaryAssetType                           B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.EqualEqual_PrimaryAssetId
struct UEngine_KismetSystemLibrary_EqualEqual_PrimaryAssetId_Params
{
	struct FPrimaryAssetId                             A;                                                        // (Parm, ZeroConstructor)
	struct FPrimaryAssetId                             B;                                                        // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.EndTransaction
struct UEngine_KismetSystemLibrary_EndTransaction_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugString
struct UEngine_KismetSystemLibrary_DrawDebugString_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TextLocation;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Text;                                                     // (Parm, ZeroConstructor)
	class AEngine_Actor*                               TestBaseActor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TextColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugSphere
struct UEngine_KismetSystemLibrary_DrawDebugSphere_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Center;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Segments;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugPoint
struct UEngine_KismetSystemLibrary_DrawDebugPoint_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Size;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                PointColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugPlane
struct UEngine_KismetSystemLibrary_DrawDebugPlane_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FPlane                                      PlaneCoordinates;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     Location;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Size;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                PlaneColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugLine
struct UEngine_KismetSystemLibrary_DrawDebugLine_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LineStart;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LineEnd;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugFrustum
struct UEngine_KismetSystemLibrary_DrawDebugFrustum_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  FrustumTransform;                                         // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FLinearColor                                FrustumColor;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryTransform
struct UEngine_KismetSystemLibrary_DrawDebugFloatHistoryTransform_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_DebugFloatHistory                   FloatHistory;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FTransform                                  DrawTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector2D                                   DrawSize;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DrawColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryLocation
struct UEngine_KismetSystemLibrary_DrawDebugFloatHistoryLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_DebugFloatHistory                   FloatHistory;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     DrawLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   DrawSize;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DrawColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugCylinder
struct UEngine_KismetSystemLibrary_DrawDebugCylinder_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                Segments;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugCoordinateSystem
struct UEngine_KismetSystemLibrary_DrawDebugCoordinateSystem_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AxisLoc;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AxisRot;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugConeInDegrees
struct UEngine_KismetSystemLibrary_DrawDebugConeInDegrees_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Origin;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Direction;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Length;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleWidth;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleHeight;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumSides;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugCone
struct UEngine_KismetSystemLibrary_DrawDebugCone_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Origin;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Direction;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Length;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleWidth;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngleHeight;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumSides;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugCircle
struct UEngine_KismetSystemLibrary_DrawDebugCircle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Center;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                NumSegments;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     YAxis;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ZAxis;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawAxis;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugCapsule
struct UEngine_KismetSystemLibrary_DrawDebugCapsule_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Center;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugCamera
struct UEngine_KismetSystemLibrary_DrawDebugCamera_Params
{
	class AEngine_CameraActor*                         CameraActor;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                CameraColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugBox
struct UEngine_KismetSystemLibrary_DrawDebugBox_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Center;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Extent;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DrawDebugArrow
struct UEngine_KismetSystemLibrary_DrawDebugArrow_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LineStart;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LineEnd;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ArrowSize;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LineColor;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.DoesImplementInterface
struct UEngine_KismetSystemLibrary_DoesImplementInterface_Params
{
	class UObject*                                     TestObject;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Interface;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.Delay
struct UEngine_KismetSystemLibrary_Delay_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_LatentActionInfo                    LatentInfo;                                               // (Parm)
};

// Function Engine.KismetSystemLibrary.CreateCopyForUndoBuffer
struct UEngine_KismetSystemLibrary_CreateCopyForUndoBuffer_Params
{
	class UObject*                                     ObjectToModify;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.ConvertToRelativePath
struct UEngine_KismetSystemLibrary_ConvertToRelativePath_Params
{
	struct FString                                     Filename;                                                 // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.ConvertToAbsolutePath
struct UEngine_KismetSystemLibrary_ConvertToAbsolutePath_Params
{
	struct FString                                     Filename;                                                 // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.Conv_SoftObjPathToSoftObjRef
struct UEngine_KismetSystemLibrary_Conv_SoftObjPathToSoftObjRef_Params
{
	struct FSoftObjectPath                             SoftObjectPath;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.KismetSystemLibrary.Conv_SoftObjectReferenceToString
struct UEngine_KismetSystemLibrary_Conv_SoftObjectReferenceToString_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.Conv_SoftObjectReferenceToObject
struct UEngine_KismetSystemLibrary_Conv_SoftObjectReferenceToObject_Params
{
	class UObject*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.Conv_SoftClassReferenceToString
struct UEngine_KismetSystemLibrary_Conv_SoftClassReferenceToString_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.Conv_SoftClassReferenceToClass
struct UEngine_KismetSystemLibrary_Conv_SoftClassReferenceToClass_Params
{
	class UClass*                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.Conv_SoftClassPathToSoftClassRef
struct UEngine_KismetSystemLibrary_Conv_SoftClassPathToSoftClassRef_Params
{
	struct FSoftClassPath                              SoftClassPath;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.KismetSystemLibrary.Conv_PrimaryAssetTypeToString
struct UEngine_KismetSystemLibrary_Conv_PrimaryAssetTypeToString_Params
{
	struct FPrimaryAssetType                           PrimaryAssetType;                                         // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.Conv_PrimaryAssetIdToString
struct UEngine_KismetSystemLibrary_Conv_PrimaryAssetIdToString_Params
{
	struct FPrimaryAssetId                             PrimaryAssetId;                                           // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetSystemLibrary.Conv_ObjectToSoftObjectReference
struct UEngine_KismetSystemLibrary_Conv_ObjectToSoftObjectReference_Params
{
	class UObject*                                     Object;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.Conv_InterfaceToObject
struct UEngine_KismetSystemLibrary_Conv_InterfaceToObject_Params
{
	TScriptInterface<class UInterface>                 Interface;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	class UObject*                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.Conv_ClassToSoftClassReference
struct UEngine_KismetSystemLibrary_Conv_ClassToSoftClassReference_Params
{
	class UClass*                                      Class;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.ControlScreensaver
struct UEngine_KismetSystemLibrary_ControlScreensaver_Params
{
	bool                                               bAllowScreenSaver;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.ComponentOverlapComponents
struct UEngine_KismetSystemLibrary_ComponentOverlapComponents_Params
{
	class UEngine_PrimitiveComponent*                  Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FTransform                                  ComponentTransform;                                       // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      ComponentClassFilter;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UEngine_PrimitiveComponent*>          OutComponents;                                            // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.ComponentOverlapActors
struct UEngine_KismetSystemLibrary_ComponentOverlapActors_Params
{
	class UEngine_PrimitiveComponent*                  Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FTransform                                  ComponentTransform;                                       // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      ActorClassFilter;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class AEngine_Actor*>                       OutActors;                                                // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.CollectGarbage
struct UEngine_KismetSystemLibrary_CollectGarbage_Params
{
};

// Function Engine.KismetSystemLibrary.CapsuleTraceSingleForObjects
struct UEngine_KismetSystemLibrary_CapsuleTraceSingleForObjects_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.CapsuleTraceSingleByProfile
struct UEngine_KismetSystemLibrary_CapsuleTraceSingleByProfile_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.CapsuleTraceSingle
struct UEngine_KismetSystemLibrary_CapsuleTraceSingle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETraceTypeQuery>        TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.CapsuleTraceMultiForObjects
struct UEngine_KismetSystemLibrary_CapsuleTraceMultiForObjects_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.CapsuleTraceMultiByProfile
struct UEngine_KismetSystemLibrary_CapsuleTraceMultiByProfile_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.CapsuleTraceMulti
struct UEngine_KismetSystemLibrary_CapsuleTraceMulti_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETraceTypeQuery>        TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.CapsuleOverlapComponents
struct UEngine_KismetSystemLibrary_CapsuleOverlapComponents_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CapsulePos;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      ComponentClassFilter;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UEngine_PrimitiveComponent*>          OutComponents;                                            // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.CapsuleOverlapActors
struct UEngine_KismetSystemLibrary_CapsuleOverlapActors_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CapsulePos;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeight;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      ActorClassFilter;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class AEngine_Actor*>                       OutActors;                                                // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.CanLaunchURL
struct UEngine_KismetSystemLibrary_CanLaunchURL_Params
{
	struct FString                                     URL;                                                      // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.CancelTransaction
struct UEngine_KismetSystemLibrary_CancelTransaction_Params
{
	int                                                Index;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.BreakSoftObjectPath
struct UEngine_KismetSystemLibrary_BreakSoftObjectPath_Params
{
	struct FSoftObjectPath                             InSoftObjectPath;                                         // (Parm, ZeroConstructor)
	struct FString                                     PathString;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.BreakSoftClassPath
struct UEngine_KismetSystemLibrary_BreakSoftClassPath_Params
{
	struct FSoftClassPath                              InSoftClassPath;                                          // (Parm, ZeroConstructor)
	struct FString                                     PathString;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.KismetSystemLibrary.BoxTraceSingleForObjects
struct UEngine_KismetSystemLibrary_BoxTraceSingleForObjects_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HalfSize;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Orientation;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.BoxTraceSingleByProfile
struct UEngine_KismetSystemLibrary_BoxTraceSingleByProfile_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HalfSize;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Orientation;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.BoxTraceSingle
struct UEngine_KismetSystemLibrary_BoxTraceSingle_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HalfSize;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Orientation;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETraceTypeQuery>        TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_HitResult                           OutHit;                                                   // (Parm, OutParm, IsPlainOldData)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.BoxTraceMultiForObjects
struct UEngine_KismetSystemLibrary_BoxTraceMultiForObjects_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HalfSize;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Orientation;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.BoxTraceMultiByProfile
struct UEngine_KismetSystemLibrary_BoxTraceMultiByProfile_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HalfSize;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Orientation;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.BoxTraceMulti
struct UEngine_KismetSystemLibrary_BoxTraceMulti_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HalfSize;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Orientation;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ETraceTypeQuery>        TraceChannel;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceComplex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_EDrawDebugTrace>        DrawDebugType;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngine_HitResult>                   OutHits;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreSelf;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceColor;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TraceHitColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              DrawTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.BoxOverlapComponents
struct UEngine_KismetSystemLibrary_BoxOverlapComponents_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoxPos;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Extent;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      ComponentClassFilter;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UEngine_PrimitiveComponent*>          OutComponents;                                            // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.BoxOverlapActors
struct UEngine_KismetSystemLibrary_BoxOverlapActors_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoxPos;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoxExtent;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<FEngine_Engine_EObjectTypeQuery>> ObjectTypes;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      ActorClassFilter;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	TArray<class AEngine_Actor*>                       ActorsToIgnore;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class AEngine_Actor*>                       OutActors;                                                // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.BeginTransaction
struct UEngine_KismetSystemLibrary_BeginTransaction_Params
{
	struct FString                                     Context;                                                  // (Parm, ZeroConstructor)
	struct FText                                       Description;                                              // (Parm)
	class UObject*                                     PrimaryObject;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetSystemLibrary.AddFloatHistorySample
struct UEngine_KismetSystemLibrary_AddFloatHistorySample_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_DebugFloatHistory                   FloatHistory;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FEngine_DebugFloatHistory                   ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.TextTrimTrailing
struct UEngine_KismetTextLibrary_TextTrimTrailing_Params
{
	struct FText                                       InText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.TextTrimPrecedingAndTrailing
struct UEngine_KismetTextLibrary_TextTrimPrecedingAndTrailing_Params
{
	struct FText                                       InText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.TextTrimPreceding
struct UEngine_KismetTextLibrary_TextTrimPreceding_Params
{
	struct FText                                       InText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.TextToUpper
struct UEngine_KismetTextLibrary_TextToUpper_Params
{
	struct FText                                       InText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.TextToLower
struct UEngine_KismetTextLibrary_TextToLower_Params
{
	struct FText                                       InText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.TextIsTransient
struct UEngine_KismetTextLibrary_TextIsTransient_Params
{
	struct FText                                       InText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetTextLibrary.TextIsFromStringTable
struct UEngine_KismetTextLibrary_TextIsFromStringTable_Params
{
	struct FText                                       Text;                                                     // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetTextLibrary.TextIsEmpty
struct UEngine_KismetTextLibrary_TextIsEmpty_Params
{
	struct FText                                       InText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetTextLibrary.TextIsCultureInvariant
struct UEngine_KismetTextLibrary_TextIsCultureInvariant_Params
{
	struct FText                                       InText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetTextLibrary.TextFromStringTable
struct UEngine_KismetTextLibrary_TextFromStringTable_Params
{
	struct FName                                       TableId;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Key;                                                      // (Parm, ZeroConstructor)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.StringTableIdAndKeyFromText
struct UEngine_KismetTextLibrary_StringTableIdAndKeyFromText_Params
{
	struct FText                                       Text;                                                     // (Parm)
	struct FName                                       OutTableId;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FString                                     OutKey;                                                   // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetTextLibrary.PolyglotDataToText
struct UEngine_KismetTextLibrary_PolyglotDataToText_Params
{
	struct FPolyglotTextData                           PolyglotData;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.NotEqual_TextText
struct UEngine_KismetTextLibrary_NotEqual_TextText_Params
{
	struct FText                                       A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetTextLibrary.NotEqual_IgnoreCase_TextText
struct UEngine_KismetTextLibrary_NotEqual_IgnoreCase_TextText_Params
{
	struct FText                                       A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetTextLibrary.IsPolyglotDataValid
struct UEngine_KismetTextLibrary_IsPolyglotDataValid_Params
{
	struct FPolyglotTextData                           PolyglotData;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               IsValid;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ErrorMessage;                                             // (Parm, OutParm)
};

// Function Engine.KismetTextLibrary.GetEmptyText
struct UEngine_KismetTextLibrary_GetEmptyText_Params
{
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Format
struct UEngine_KismetTextLibrary_Format_Params
{
	struct FText                                       InPattern;                                                // (Parm)
	TArray<struct FEngine_FormatArgumentData>          InArgs;                                                   // (Parm, ZeroConstructor)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.FindTextInLocalizationTable
struct UEngine_KismetTextLibrary_FindTextInLocalizationTable_Params
{
	struct FString                                     Namespace;                                                // (Parm, ZeroConstructor)
	struct FString                                     Key;                                                      // (Parm, ZeroConstructor)
	struct FText                                       OutText;                                                  // (Parm, OutParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetTextLibrary.EqualEqual_TextText
struct UEngine_KismetTextLibrary_EqualEqual_TextText_Params
{
	struct FText                                       A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetTextLibrary.EqualEqual_IgnoreCase_TextText
struct UEngine_KismetTextLibrary_EqualEqual_IgnoreCase_TextText_Params
{
	struct FText                                       A;                                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FText                                       B;                                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetTextLibrary.Conv_VectorToText
struct UEngine_KismetTextLibrary_Conv_VectorToText_Params
{
	struct FVector                                     InVec;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_Vector2dToText
struct UEngine_KismetTextLibrary_Conv_Vector2dToText_Params
{
	struct FVector2D                                   InVec;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_TransformToText
struct UEngine_KismetTextLibrary_Conv_TransformToText_Params
{
	struct FTransform                                  InTrans;                                                  // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_TextToString
struct UEngine_KismetTextLibrary_Conv_TextToString_Params
{
	struct FText                                       InText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_StringToText
struct UEngine_KismetTextLibrary_Conv_StringToText_Params
{
	struct FString                                     inString;                                                 // (Parm, ZeroConstructor)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_RotatorToText
struct UEngine_KismetTextLibrary_Conv_RotatorToText_Params
{
	struct FRotator                                    InRot;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_ObjectToText
struct UEngine_KismetTextLibrary_Conv_ObjectToText_Params
{
	class UObject*                                     InObj;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_NameToText
struct UEngine_KismetTextLibrary_Conv_NameToText_Params
{
	struct FName                                       InName;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_IntToText
struct UEngine_KismetTextLibrary_Conv_IntToText_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysSign;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseGrouping;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinimumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaximumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_Int64ToText
struct UEngine_KismetTextLibrary_Conv_Int64ToText_Params
{
	int64_t                                            Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysSign;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseGrouping;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinimumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaximumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_FloatToText
struct UEngine_KismetTextLibrary_Conv_FloatToText_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ERoundingMode>          RoundingMode;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysSign;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseGrouping;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinimumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaximumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinimumFractionalDigits;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaximumFractionalDigits;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_ColorToText
struct UEngine_KismetTextLibrary_Conv_ColorToText_Params
{
	struct FLinearColor                                InColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_ByteToText
struct UEngine_KismetTextLibrary_Conv_ByteToText_Params
{
	unsigned char                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.Conv_BoolToText
struct UEngine_KismetTextLibrary_Conv_BoolToText_Params
{
	bool                                               InBool;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsTimeZoneTime_DateTime
struct UEngine_KismetTextLibrary_AsTimeZoneTime_DateTime_Params
{
	struct FDateTime                                   InDateTime;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FString                                     InTimeZone;                                               // (Parm, ZeroConstructor)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsTimeZoneDateTime_DateTime
struct UEngine_KismetTextLibrary_AsTimeZoneDateTime_DateTime_Params
{
	struct FDateTime                                   InDateTime;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FString                                     InTimeZone;                                               // (Parm, ZeroConstructor)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsTimeZoneDate_DateTime
struct UEngine_KismetTextLibrary_AsTimeZoneDate_DateTime_Params
{
	struct FDateTime                                   InDateTime;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FString                                     InTimeZone;                                               // (Parm, ZeroConstructor)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsTimespan_Timespan
struct UEngine_KismetTextLibrary_AsTimespan_Timespan_Params
{
	struct FTimespan                                   InTimespan;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsTime_DateTime
struct UEngine_KismetTextLibrary_AsTime_DateTime_Params
{
	struct FDateTime                                   In;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsPercent_Float
struct UEngine_KismetTextLibrary_AsPercent_Float_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ERoundingMode>          RoundingMode;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysSign;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseGrouping;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinimumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaximumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinimumFractionalDigits;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaximumFractionalDigits;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsDateTime_DateTime
struct UEngine_KismetTextLibrary_AsDateTime_DateTime_Params
{
	struct FDateTime                                   In;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsDate_DateTime
struct UEngine_KismetTextLibrary_AsDate_DateTime_Params
{
	struct FDateTime                                   InDateTime;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsCurrencyBase
struct UEngine_KismetTextLibrary_AsCurrencyBase_Params
{
	int                                                BaseValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     CurrencyCode;                                             // (Parm, ZeroConstructor)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsCurrency_Integer
struct UEngine_KismetTextLibrary_AsCurrency_Integer_Params
{
	int                                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ERoundingMode>          RoundingMode;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysSign;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseGrouping;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinimumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaximumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinimumFractionalDigits;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaximumFractionalDigits;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     CurrencyCode;                                             // (Parm, ZeroConstructor)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.KismetTextLibrary.AsCurrency_Float
struct UEngine_KismetTextLibrary_AsCurrency_Float_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_ERoundingMode>          RoundingMode;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysSign;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUseGrouping;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinimumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaximumIntegralDigits;                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MinimumFractionalDigits;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                MaximumFractionalDigits;                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     CurrencyCode;                                             // (Parm, ZeroConstructor)
	struct FText                                       ReturnValue;                                              // (Parm, OutParm, ReturnParm)
};

// Function Engine.World.K2_GetWorldSettings
struct UEngine_World_K2_GetWorldSettings_Params
{
	class AEngine_WorldSettings*                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.World.HandleTimelineScrubbed
struct UEngine_World_HandleTimelineScrubbed_Params
{
};

// Function Engine.LevelStreaming.ShouldBeLoaded
struct UEngine_LevelStreaming_ShouldBeLoaded_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LevelStreaming.SetShouldBeVisible
struct UEngine_LevelStreaming_SetShouldBeVisible_Params
{
	bool                                               bInShouldBeVisible;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LevelStreaming.SetShouldBeLoaded
struct UEngine_LevelStreaming_SetShouldBeLoaded_Params
{
	bool                                               bInShouldBeLoaded;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LevelStreaming.SetPriority
struct UEngine_LevelStreaming_SetPriority_Params
{
	int                                                NewPriority;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LevelStreaming.SetLevelLODIndex
struct UEngine_LevelStreaming_SetLevelLODIndex_Params
{
	int                                                LODIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LevelStreaming.IsStreamingStatePending
struct UEngine_LevelStreaming_IsStreamingStatePending_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LevelStreaming.IsLevelVisible
struct UEngine_LevelStreaming_IsLevelVisible_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LevelStreaming.IsLevelLoaded
struct UEngine_LevelStreaming_IsLevelLoaded_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LevelStreaming.GetWorldAssetPackageFName
struct UEngine_LevelStreaming_GetWorldAssetPackageFName_Params
{
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LevelStreaming.GetLoadedLevel
struct UEngine_LevelStreaming_GetLoadedLevel_Params
{
	class UEngine_Level*                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LevelStreaming.GetLevelScriptActor
struct UEngine_LevelStreaming_GetLevelScriptActor_Params
{
	class AEngine_LevelScriptActor*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LevelStreaming.CreateInstance
struct UEngine_LevelStreaming_CreateInstance_Params
{
	struct FString                                     UniqueInstanceName;                                       // (Parm, ZeroConstructor)
	class UEngine_LevelStreaming*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LevelStreamingDynamic.LoadLevelInstanceBySoftObjectPtr
struct UEngine_LevelStreamingDynamic_LoadLevelInstanceBySoftObjectPtr_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOutSuccess;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UEngine_LevelStreamingDynamic*               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LevelStreamingDynamic.LoadLevelInstance
struct UEngine_LevelStreamingDynamic_LoadLevelInstance_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     LevelName;                                                // (Parm, ZeroConstructor)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bOutSuccess;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UEngine_LevelStreamingDynamic*               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.LocalLightComponent.SetIntensityUnits
struct UEngine_LocalLightComponent_SetIntensityUnits_Params
{
	FEngine_Engine_ELightUnits                         NewIntensityUnits;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LocalLightComponent.SetAttenuationRadius
struct UEngine_LocalLightComponent_SetAttenuationRadius_Params
{
	float                                              NewRadius;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.LocalLightComponent.GetUnitsConversionFactor
struct UEngine_LocalLightComponent_GetUnitsConversionFactor_Params
{
	FEngine_Engine_ELightUnits                         SrcUnits;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_ELightUnits                         TargetUnits;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              CosHalfConeAngle;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MaterialBillboardComponent.SetElements
struct UEngine_MaterialBillboardComponent_SetElements_Params
{
	TArray<struct FEngine_MaterialSpriteElement>       NewElements;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.MaterialBillboardComponent.AddElement
struct UEngine_MaterialBillboardComponent_AddElement_Params
{
	class UEngine_MaterialInterface*                   Material;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_CurveFloat*                          DistanceToOpacityCurve;                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bSizeIsInScreenSpace;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BaseSizeX;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              BaseSizeY;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_CurveFloat*                          DistanceToSizeCurve;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetGuidLibrary.Parse_StringToGuid
struct UEngine_KismetGuidLibrary_Parse_StringToGuid_Params
{
	struct FString                                     GuidString;                                               // (Parm, ZeroConstructor)
	struct FGuid                                       OutGuid;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	bool                                               success;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.KismetGuidLibrary.NotEqual_GuidGuid
struct UEngine_KismetGuidLibrary_NotEqual_GuidGuid_Params
{
	struct FGuid                                       A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FGuid                                       B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetGuidLibrary.NewGuid
struct UEngine_KismetGuidLibrary_NewGuid_Params
{
	struct FGuid                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetGuidLibrary.IsValid_Guid
struct UEngine_KismetGuidLibrary_IsValid_Guid_Params
{
	struct FGuid                                       InGuid;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetGuidLibrary.Invalidate_Guid
struct UEngine_KismetGuidLibrary_Invalidate_Guid_Params
{
	struct FGuid                                       InGuid;                                                   // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.KismetGuidLibrary.EqualEqual_GuidGuid
struct UEngine_KismetGuidLibrary_EqualEqual_GuidGuid_Params
{
	struct FGuid                                       A;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FGuid                                       B;                                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.KismetGuidLibrary.Conv_GuidToString
struct UEngine_KismetGuidLibrary_Conv_GuidToString_Params
{
	struct FGuid                                       InGuid;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.MaterialInstanceDynamic.SetVectorParameterValue
struct UEngine_MaterialInstanceDynamic_SetVectorParameterValue_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MaterialInstanceDynamic.SetTextureParameterValue
struct UEngine_MaterialInstanceDynamic_SetTextureParameterValue_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture*                             Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MaterialInstanceDynamic.SetScalarParameterValue
struct UEngine_MaterialInstanceDynamic_SetScalarParameterValue_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MaterialInstanceDynamic.K2_InterpolateMaterialInstanceParams
struct UEngine_MaterialInstanceDynamic_K2_InterpolateMaterialInstanceParams_Params
{
	class UEngine_MaterialInstance*                    SourceA;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInstance*                    SourceB;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MaterialInstanceDynamic.K2_GetVectorParameterValue
struct UEngine_MaterialInstanceDynamic_K2_GetVectorParameterValue_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MaterialInstanceDynamic.K2_GetTextureParameterValue
struct UEngine_MaterialInstanceDynamic_K2_GetTextureParameterValue_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_Texture*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MaterialInstanceDynamic.K2_GetScalarParameterValue
struct UEngine_MaterialInstanceDynamic_K2_GetScalarParameterValue_Params
{
	struct FName                                       ParameterName;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.MaterialInstanceDynamic.K2_CopyMaterialInstanceParameters
struct UEngine_MaterialInstanceDynamic_K2_CopyMaterialInstanceParameters_Params
{
	class UEngine_MaterialInterface*                   Source;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bQuickParametersOnly;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MaterialInstanceDynamic.CopyParameterOverrides
struct UEngine_MaterialInstanceDynamic_CopyParameterOverrides_Params
{
	class UEngine_MaterialInstance*                    MaterialInstance;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MaterialInstanceDynamic.CopyInterpParameters
struct UEngine_MaterialInstanceDynamic_CopyInterpParameters_Params
{
	class UEngine_MaterialInstance*                    Source;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MatineeActor.Stop
struct AEngine_MatineeActor_Stop_Params
{
};

// Function Engine.MatineeActor.SetPosition
struct AEngine_MatineeActor_SetPosition_Params
{
	float                                              NewPosition;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bJump;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MatineeActor.SetLoopingState
struct AEngine_MatineeActor_SetLoopingState_Params
{
	bool                                               bNewLooping;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MatineeActor.Reverse
struct AEngine_MatineeActor_Reverse_Params
{
};

// Function Engine.MatineeActor.Play
struct AEngine_MatineeActor_Play_Params
{
};

// Function Engine.MatineeActor.Pause
struct AEngine_MatineeActor_Pause_Params
{
};

// Function Engine.MatineeActor.EnableGroupByName
struct AEngine_MatineeActor_EnableGroupByName_Params
{
	struct FString                                     GroupName;                                                // (Parm, ZeroConstructor)
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MatineeActor.ChangePlaybackDirection
struct AEngine_MatineeActor_ChangePlaybackDirection_Params
{
};

// Function Engine.MeshVertexPainterKismetLibrary.RemovePaintedVertices
struct UEngine_MeshVertexPainterKismetLibrary_RemovePaintedVertices_Params
{
	class UEngine_StaticMeshComponent*                 StaticMeshComponent;                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.MeshVertexPainterKismetLibrary.PaintVerticesSingleColor
struct UEngine_MeshVertexPainterKismetLibrary_PaintVerticesSingleColor_Params
{
	class UEngine_StaticMeshComponent*                 StaticMeshComponent;                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                FillColor;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bConvertToSRGB;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.MeshVertexPainterKismetLibrary.PaintVerticesLerpAlongAxis
struct UEngine_MeshVertexPainterKismetLibrary_PaintVerticesLerpAlongAxis_Params
{
	class UEngine_StaticMeshComponent*                 StaticMeshComponent;                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FLinearColor                                StartColor;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FLinearColor                                EndColor;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	FEngine_Engine_EVertexPaintAxis                    Axis;                                                     // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bConvertToSRGB;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ParticleSystem.ContainsEmitterType
struct UEngine_ParticleSystem_ContainsEmitterType_Params
{
	class UClass*                                      TypeData;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PhysicalAnimationComponent.SetStrengthMultiplyer
struct UEngine_PhysicalAnimationComponent_SetStrengthMultiplyer_Params
{
	float                                              InStrengthMultiplyer;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicalAnimationComponent.SetSkeletalMeshComponent
struct UEngine_PhysicalAnimationComponent_SetSkeletalMeshComponent_Params
{
	class UEngine_SkeletalMeshComponent*               InSkeletalMeshComponent;                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.PhysicalAnimationComponent.GetBodyTargetTransform
struct UEngine_PhysicalAnimationComponent_GetBodyTargetTransform_Params
{
	struct FName                                       BodyName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettingsBelow
struct UEngine_PhysicalAnimationComponent_ApplyPhysicalAnimationSettingsBelow_Params
{
	struct FName                                       BodyName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_PhysicalAnimationData               PhysicalAnimationData;                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bIncludeSelf;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettings
struct UEngine_PhysicalAnimationComponent_ApplyPhysicalAnimationSettings_Params
{
	struct FName                                       BodyName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FEngine_PhysicalAnimationData               PhysicalAnimationData;                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationProfileBelow
struct UEngine_PhysicalAnimationComponent_ApplyPhysicalAnimationProfileBelow_Params
{
	struct FName                                       BodyName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeSelf;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bClearNotFound;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetOrientationDriveTwistAndSwing
struct UEngine_PhysicsConstraintComponent_SetOrientationDriveTwistAndSwing_Params
{
	bool                                               bEnableTwistDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableSwingDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetOrientationDriveSLERP
struct UEngine_PhysicsConstraintComponent_SetOrientationDriveSLERP_Params
{
	bool                                               bEnableSLERP;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetLinearZLimit
struct UEngine_PhysicsConstraintComponent_SetLinearZLimit_Params
{
	TEnumAsByte<FEngine_Engine_ELinearConstraintMotion> ConstraintType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LimitSize;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetLinearYLimit
struct UEngine_PhysicsConstraintComponent_SetLinearYLimit_Params
{
	TEnumAsByte<FEngine_Engine_ELinearConstraintMotion> ConstraintType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LimitSize;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetLinearXLimit
struct UEngine_PhysicsConstraintComponent_SetLinearXLimit_Params
{
	TEnumAsByte<FEngine_Engine_ELinearConstraintMotion> ConstraintType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LimitSize;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetLinearVelocityTarget
struct UEngine_PhysicsConstraintComponent_SetLinearVelocityTarget_Params
{
	struct FVector                                     InVelTarget;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetLinearVelocityDrive
struct UEngine_PhysicsConstraintComponent_SetLinearVelocityDrive_Params
{
	bool                                               bEnableDriveX;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableDriveY;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableDriveZ;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetLinearPositionTarget
struct UEngine_PhysicsConstraintComponent_SetLinearPositionTarget_Params
{
	struct FVector                                     InPosTarget;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetLinearPositionDrive
struct UEngine_PhysicsConstraintComponent_SetLinearPositionDrive_Params
{
	bool                                               bEnableDriveX;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableDriveY;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableDriveZ;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetLinearDriveParams
struct UEngine_PhysicsConstraintComponent_SetLinearDriveParams_Params
{
	float                                              PositionStrength;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VelocityStrength;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InForceLimit;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetLinearBreakable
struct UEngine_PhysicsConstraintComponent_SetLinearBreakable_Params
{
	bool                                               bLinearBreakable;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              LinearBreakThreshold;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetDisableCollision
struct UEngine_PhysicsConstraintComponent_SetDisableCollision_Params
{
	bool                                               bDisableCollision;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetConstraintReferencePosition
struct UEngine_PhysicsConstraintComponent_SetConstraintReferencePosition_Params
{
	TEnumAsByte<FEngine_Engine_EConstraintFrame>       Frame;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RefPosition;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetConstraintReferenceOrientation
struct UEngine_PhysicsConstraintComponent_SetConstraintReferenceOrientation_Params
{
	TEnumAsByte<FEngine_Engine_EConstraintFrame>       Frame;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PriAxis;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FVector                                     SecAxis;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetConstraintReferenceFrame
struct UEngine_PhysicsConstraintComponent_SetConstraintReferenceFrame_Params
{
	TEnumAsByte<FEngine_Engine_EConstraintFrame>       Frame;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  RefFrame;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetConstrainedComponents
struct UEngine_PhysicsConstraintComponent_SetConstrainedComponents_Params
{
	class UEngine_PrimitiveComponent*                  Component1;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName1;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_PrimitiveComponent*                  Component2;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName2;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularVelocityTarget
struct UEngine_PhysicsConstraintComponent_SetAngularVelocityTarget_Params
{
	struct FVector                                     InVelTarget;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDriveTwistAndSwing
struct UEngine_PhysicsConstraintComponent_SetAngularVelocityDriveTwistAndSwing_Params
{
	bool                                               bEnableTwistDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableSwingDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDriveSLERP
struct UEngine_PhysicsConstraintComponent_SetAngularVelocityDriveSLERP_Params
{
	bool                                               bEnableSLERP;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDrive
struct UEngine_PhysicsConstraintComponent_SetAngularVelocityDrive_Params
{
	bool                                               bEnableSwingDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableTwistDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularTwistLimit
struct UEngine_PhysicsConstraintComponent_SetAngularTwistLimit_Params
{
	TEnumAsByte<FEngine_Engine_EAngularConstraintMotion> ConstraintType;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              TwistLimitAngle;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularSwing2Limit
struct UEngine_PhysicsConstraintComponent_SetAngularSwing2Limit_Params
{
	TEnumAsByte<FEngine_Engine_EAngularConstraintMotion> MotionType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Swing2LimitAngle;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularSwing1Limit
struct UEngine_PhysicsConstraintComponent_SetAngularSwing1Limit_Params
{
	TEnumAsByte<FEngine_Engine_EAngularConstraintMotion> MotionType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Swing1LimitAngle;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularOrientationTarget
struct UEngine_PhysicsConstraintComponent_SetAngularOrientationTarget_Params
{
	struct FRotator                                    InPosTarget;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularOrientationDrive
struct UEngine_PhysicsConstraintComponent_SetAngularOrientationDrive_Params
{
	bool                                               bEnableSwingDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableTwistDrive;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularDriveParams
struct UEngine_PhysicsConstraintComponent_SetAngularDriveParams_Params
{
	float                                              PositionStrength;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              VelocityStrength;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InForceLimit;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularDriveMode
struct UEngine_PhysicsConstraintComponent_SetAngularDriveMode_Params
{
	TEnumAsByte<FEngine_Engine_EAngularDriveMode>      DriveMode;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.SetAngularBreakable
struct UEngine_PhysicsConstraintComponent_SetAngularBreakable_Params
{
	bool                                               bAngularBreakable;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              AngularBreakThreshold;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.IsBroken
struct UEngine_PhysicsConstraintComponent_IsBroken_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.GetCurrentTwist
struct UEngine_PhysicsConstraintComponent_GetCurrentTwist_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.GetCurrentSwing2
struct UEngine_PhysicsConstraintComponent_GetCurrentSwing2_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.GetCurrentSwing1
struct UEngine_PhysicsConstraintComponent_GetCurrentSwing1_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.GetConstraintForce
struct UEngine_PhysicsConstraintComponent_GetConstraintForce_Params
{
	struct FVector                                     OutLinearForce;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OutAngularForce;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsConstraintComponent.BreakConstraint
struct UEngine_PhysicsConstraintComponent_BreakConstraint_Params
{
};

// Function Engine.PawnNoiseEmitterComponent.MakeNoise
struct UEngine_PawnNoiseEmitterComponent_MakeNoise_Params
{
	class AEngine_Actor*                               NoiseMaker;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Loudness;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NoiseLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.SetTargetRotation
struct UEngine_PhysicsHandleComponent_SetTargetRotation_Params
{
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.SetTargetLocationAndRotation
struct UEngine_PhysicsHandleComponent_SetTargetLocationAndRotation_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    NewRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.SetTargetLocation
struct UEngine_PhysicsHandleComponent_SetTargetLocation_Params
{
	struct FVector                                     NewLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.SetLinearStiffness
struct UEngine_PhysicsHandleComponent_SetLinearStiffness_Params
{
	float                                              NewLinearStiffness;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.SetLinearDamping
struct UEngine_PhysicsHandleComponent_SetLinearDamping_Params
{
	float                                              NewLinearDamping;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.SetInterpolationSpeed
struct UEngine_PhysicsHandleComponent_SetInterpolationSpeed_Params
{
	float                                              NewInterpolationSpeed;                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.SetAngularStiffness
struct UEngine_PhysicsHandleComponent_SetAngularStiffness_Params
{
	float                                              NewAngularStiffness;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.SetAngularDamping
struct UEngine_PhysicsHandleComponent_SetAngularDamping_Params
{
	float                                              NewAngularDamping;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.ReleaseComponent
struct UEngine_PhysicsHandleComponent_ReleaseComponent_Params
{
};

// Function Engine.PhysicsHandleComponent.GrabComponentAtLocationWithRotation
struct UEngine_PhysicsHandleComponent_GrabComponentAtLocationWithRotation_Params
{
	class UEngine_PrimitiveComponent*                  Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       InBoneName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.GrabComponentAtLocation
struct UEngine_PhysicsHandleComponent_GrabComponentAtLocation_Params
{
	class UEngine_PrimitiveComponent*                  Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       InBoneName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     GrabLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.GrabComponent
struct UEngine_PhysicsHandleComponent_GrabComponent_Params
{
	class UEngine_PrimitiveComponent*                  Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       InBoneName;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     GrabLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bConstrainRotation;                                       // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.GetTargetLocationAndRotation
struct UEngine_PhysicsHandleComponent_GetTargetLocationAndRotation_Params
{
	struct FVector                                     TargetLocation;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    TargetRotation;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PhysicsHandleComponent.GetGrabbedComponent
struct UEngine_PhysicsHandleComponent_GetGrabbedComponent_Params
{
	class UEngine_PrimitiveComponent*                  ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.PhysicsSpringComponent.GetSpringRestingPoint
struct UEngine_PhysicsSpringComponent_GetSpringRestingPoint_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PhysicsSpringComponent.GetSpringDirection
struct UEngine_PhysicsSpringComponent_GetSpringDirection_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PhysicsSpringComponent.GetSpringCurrentEndPoint
struct UEngine_PhysicsSpringComponent_GetSpringCurrentEndPoint_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PhysicsSpringComponent.GetNormalizedCompressionScalar
struct UEngine_PhysicsSpringComponent_GetNormalizedCompressionScalar_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlanarReflection.OnInterpToggle
struct AEngine_PlanarReflection_OnInterpToggle_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneCaptureComponent.ShowOnlyComponent
struct UEngine_SceneCaptureComponent_ShowOnlyComponent_Params
{
	class UEngine_PrimitiveComponent*                  InComponent;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.SceneCaptureComponent.ShowOnlyActorComponents
struct UEngine_SceneCaptureComponent_ShowOnlyActorComponents_Params
{
	class AEngine_Actor*                               InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneCaptureComponent.SetCaptureSortPriority
struct UEngine_SceneCaptureComponent_SetCaptureSortPriority_Params
{
	int                                                NewCaptureSortPriority;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneCaptureComponent.RemoveShowOnlyComponent
struct UEngine_SceneCaptureComponent_RemoveShowOnlyComponent_Params
{
	class UEngine_PrimitiveComponent*                  InComponent;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.SceneCaptureComponent.RemoveShowOnlyActorComponents
struct UEngine_SceneCaptureComponent_RemoveShowOnlyActorComponents_Params
{
	class AEngine_Actor*                               InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneCaptureComponent.HideComponent
struct UEngine_SceneCaptureComponent_HideComponent_Params
{
	class UEngine_PrimitiveComponent*                  InComponent;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.SceneCaptureComponent.HideActorComponents
struct UEngine_SceneCaptureComponent_HideActorComponents_Params
{
	class AEngine_Actor*                               InActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneCaptureComponent.ClearShowOnlyComponents
struct UEngine_SceneCaptureComponent_ClearShowOnlyComponents_Params
{
};

// Function Engine.SceneCaptureComponent.ClearHiddenComponents
struct UEngine_SceneCaptureComponent_ClearHiddenComponents_Params
{
};

// Function Engine.PlatformEventsComponent.SupportsConvertibleLaptops
struct UEngine_PlatformEventsComponent_SupportsConvertibleLaptops_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// DelegateFunction Engine.PlatformEventsComponent.PlatformEventDelegate__DelegateSignature
struct UEngine_PlatformEventsComponent_PlatformEventDelegate__DelegateSignature_Params
{
};

// Function Engine.PlatformEventsComponent.IsInTabletMode
struct UEngine_PlatformEventsComponent_IsInTabletMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlatformEventsComponent.IsInLaptopMode
struct UEngine_PlatformEventsComponent_IsInLaptopMode_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlatformInterfaceWebResponse.GetNumHeaders
struct UEngine_PlatformInterfaceWebResponse_GetNumHeaders_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PlatformInterfaceWebResponse.GetHeaderValue
struct UEngine_PlatformInterfaceWebResponse_GetHeaderValue_Params
{
	struct FString                                     HeaderName;                                               // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.PlatformInterfaceWebResponse.GetHeader
struct UEngine_PlatformInterfaceWebResponse_GetHeader_Params
{
	int                                                HeaderIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Header;                                                   // (Parm, OutParm, ZeroConstructor)
	struct FString                                     Value;                                                    // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.PlayerInput.SetMouseSensitivity
struct UEngine_PlayerInput_SetMouseSensitivity_Params
{
	float                                              Sensitivity;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerInput.SetBind
struct UEngine_PlayerInput_SetBind_Params
{
	struct FName                                       BindName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Command;                                                  // (Parm, ZeroConstructor)
};

// Function Engine.PlayerInput.InvertAxisKey
struct UEngine_PlayerInput_InvertAxisKey_Params
{
	struct FInputCore_Key                              AxisKey;                                                  // (ConstParm, Parm)
};

// Function Engine.PlayerInput.InvertAxis
struct UEngine_PlayerInput_InvertAxis_Params
{
	struct FName                                       AxisName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerInput.ClearSmoothing
struct UEngine_PlayerInput_ClearSmoothing_Params
{
};

// Function Engine.PointLight.SetRadius
struct AEngine_PointLight_SetRadius_Params
{
	float                                              NewRadius;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PointLight.SetLightFalloffExponent
struct AEngine_PointLight_SetLightFalloffExponent_Params
{
	float                                              NewLightFalloffExponent;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PointLightComponent.SetSourceRadius
struct UEngine_PointLightComponent_SetSourceRadius_Params
{
	float                                              bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PointLightComponent.SetSourceLength
struct UEngine_PointLightComponent_SetSourceLength_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PointLightComponent.SetSoftSourceRadius
struct UEngine_PointLightComponent_SetSoftSourceRadius_Params
{
	float                                              bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PointLightComponent.SetLightFalloffExponent
struct UEngine_PointLightComponent_SetLightFalloffExponent_Params
{
	float                                              NewLightFalloffExponent;                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PoseableMeshComponent.SetBoneTransformByName
struct UEngine_PoseableMeshComponent_SetBoneTransformByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  InTransform;                                              // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EBoneSpaces>            BoneSpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PoseableMeshComponent.SetBoneScaleByName
struct UEngine_PoseableMeshComponent_SetBoneScaleByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InScale3D;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EBoneSpaces>            BoneSpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PoseableMeshComponent.SetBoneRotationByName
struct UEngine_PoseableMeshComponent_SetBoneRotationByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    InRotation;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EBoneSpaces>            BoneSpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PoseableMeshComponent.SetBoneLocationByName
struct UEngine_PoseableMeshComponent_SetBoneLocationByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     InLocation;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EBoneSpaces>            BoneSpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PoseableMeshComponent.ResetBoneTransformByName
struct UEngine_PoseableMeshComponent_ResetBoneTransformByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PoseableMeshComponent.GetBoneTransformByName
struct UEngine_PoseableMeshComponent_GetBoneTransformByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EBoneSpaces>            BoneSpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ReturnValue;                                              // (Parm, OutParm, ReturnParm, IsPlainOldData)
};

// Function Engine.PoseableMeshComponent.GetBoneScaleByName
struct UEngine_PoseableMeshComponent_GetBoneScaleByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EBoneSpaces>            BoneSpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PoseableMeshComponent.GetBoneRotationByName
struct UEngine_PoseableMeshComponent_GetBoneRotationByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EBoneSpaces>            BoneSpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PoseableMeshComponent.GetBoneLocationByName
struct UEngine_PoseableMeshComponent_GetBoneLocationByName_Params
{
	struct FName                                       BoneName;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<FEngine_Engine_EBoneSpaces>            BoneSpace;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.PoseableMeshComponent.CopyPoseFromSkeletalComponent
struct UEngine_PoseableMeshComponent_CopyPoseFromSkeletalComponent_Params
{
	class UEngine_SkeletalMeshComponent*               InComponentToCopy;                                        // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.PostProcessComponent.AddOrUpdateBlendable
struct UEngine_PostProcessComponent_AddOrUpdateBlendable_Params
{
	TScriptInterface<class UEngine_BlendableInterface> InBlendableObject;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InWeight;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PostProcessVolume.AddOrUpdateBlendable
struct AEngine_PostProcessVolume_AddOrUpdateBlendable_Params
{
	TScriptInterface<class UEngine_BlendableInterface> InBlendableObject;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InWeight;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ProjectileMovementComponent.StopSimulating
struct UEngine_ProjectileMovementComponent_StopSimulating_Params
{
	struct FEngine_HitResult                           HitResult;                                                // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// Function Engine.ProjectileMovementComponent.SetVelocityInLocalSpace
struct UEngine_ProjectileMovementComponent_SetVelocityInLocalSpace_Params
{
	struct FVector                                     NewVelocity;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.ProjectileMovementComponent.SetInterpolatedComponent
struct UEngine_ProjectileMovementComponent_SetInterpolatedComponent_Params
{
	class UEngine_SceneComponent*                      Component;                                                // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.ProjectileMovementComponent.ResetInterpolation
struct UEngine_ProjectileMovementComponent_ResetInterpolation_Params
{
};

// DelegateFunction Engine.ProjectileMovementComponent.OnProjectileStopDelegate__DelegateSignature
struct UEngine_ProjectileMovementComponent_OnProjectileStopDelegate__DelegateSignature_Params
{
	struct FEngine_HitResult                           ImpactResult;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
};

// DelegateFunction Engine.ProjectileMovementComponent.OnProjectileBounceDelegate__DelegateSignature
struct UEngine_ProjectileMovementComponent_OnProjectileBounceDelegate__DelegateSignature_Params
{
	struct FEngine_HitResult                           ImpactResult;                                             // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
	struct FVector                                     ImpactVelocity;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.ProjectileMovementComponent.MoveInterpolationTarget
struct UEngine_ProjectileMovementComponent_MoveInterpolationTarget_Params
{
	struct FVector                                     NewLocation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	struct FRotator                                    NewRotation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.ProjectileMovementComponent.LimitVelocity
struct UEngine_ProjectileMovementComponent_LimitVelocity_Params
{
	struct FVector                                     NewVelocity;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ProjectileMovementComponent.IsVelocityUnderSimulationThreshold
struct UEngine_ProjectileMovementComponent_IsVelocityUnderSimulationThreshold_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.ProjectileMovementComponent.IsInterpolationComplete
struct UEngine_ProjectileMovementComponent_IsInterpolationComplete_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.RadialForceActor.ToggleForce
struct AEngine_RadialForceActor_ToggleForce_Params
{
};

// Function Engine.RadialForceActor.FireImpulse
struct AEngine_RadialForceActor_FireImpulse_Params
{
};

// Function Engine.RadialForceActor.EnableForce
struct AEngine_RadialForceActor_EnableForce_Params
{
};

// Function Engine.RadialForceActor.DisableForce
struct AEngine_RadialForceActor_DisableForce_Params
{
};

// Function Engine.RadialForceComponent.RemoveObjectTypeToAffect
struct UEngine_RadialForceComponent_RemoveObjectTypeToAffect_Params
{
	TEnumAsByte<FEngine_Engine_EObjectTypeQuery>       ObjectType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.RadialForceComponent.FireImpulse
struct UEngine_RadialForceComponent_FireImpulse_Params
{
};

// Function Engine.RadialForceComponent.AddObjectTypeToAffect
struct UEngine_RadialForceComponent_AddObjectTypeToAffect_Params
{
	TEnumAsByte<FEngine_Engine_EObjectTypeQuery>       ObjectType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.RectLightComponent.SetSourceWidth
struct UEngine_RectLightComponent_SetSourceWidth_Params
{
	float                                              bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.RectLightComponent.SetSourceTexture
struct UEngine_RectLightComponent_SetSourceTexture_Params
{
	class UEngine_Texture*                             bNewValue;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.RectLightComponent.SetSourceHeight
struct UEngine_RectLightComponent_SetSourceHeight_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.RectLightComponent.SetBarnDoorLength
struct UEngine_RectLightComponent_SetBarnDoorLength_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.RectLightComponent.SetBarnDoorAngle
struct UEngine_RectLightComponent_SetBarnDoorAngle_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerState.ReceiveOverrideWith
struct AEngine_PlayerState_ReceiveOverrideWith_Params
{
	class AEngine_PlayerState*                         OldPlayerState;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerState.ReceiveCopyProperties
struct AEngine_PlayerState_ReceiveCopyProperties_Params
{
	class AEngine_PlayerState*                         NewPlayerState;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.PlayerState.OnRep_UniqueId
struct AEngine_PlayerState_OnRep_UniqueId_Params
{
};

// Function Engine.PlayerState.OnRep_Score
struct AEngine_PlayerState_OnRep_Score_Params
{
};

// Function Engine.PlayerState.OnRep_PlayerName
struct AEngine_PlayerState_OnRep_PlayerName_Params
{
};

// Function Engine.PlayerState.OnRep_PlayerId
struct AEngine_PlayerState_OnRep_PlayerId_Params
{
};

// Function Engine.PlayerState.OnRep_bIsInactive
struct AEngine_PlayerState_OnRep_bIsInactive_Params
{
};

// Function Engine.PlayerState.GetPlayerName
struct AEngine_PlayerState_GetPlayerName_Params
{
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.SceneCapture2D.OnInterpToggle
struct AEngine_SceneCapture2D_OnInterpToggle_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneCaptureComponent2D.CaptureScene
struct UEngine_SceneCaptureComponent2D_CaptureScene_Params
{
};

// Function Engine.SceneCaptureComponent2D.AddOrUpdateBlendable
struct UEngine_SceneCaptureComponent2D_AddOrUpdateBlendable_Params
{
	TScriptInterface<class UEngine_BlendableInterface> InBlendableObject;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InWeight;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SceneCaptureComponentCube.CaptureScene
struct UEngine_SceneCaptureComponentCube_CaptureScene_Params
{
};

// Function Engine.SceneCaptureCube.OnInterpToggle
struct AEngine_SceneCaptureCube_OnInterpToggle_Params
{
	bool                                               bEnable;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMesh.SetLODSettings
struct UEngine_SkeletalMesh_SetLODSettings_Params
{
	class UEngine_SkeletalMeshLODSettings*             InLODSettings;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMesh.NumSockets
struct UEngine_SkeletalMesh_NumSockets_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMesh.K2_GetAllMorphTargetNames
struct UEngine_SkeletalMesh_K2_GetAllMorphTargetNames_Params
{
	TArray<struct FString>                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.SkeletalMesh.IsSectionUsingCloth
struct UEngine_SkeletalMesh_IsSectionUsingCloth_Params
{
	int                                                InSectionIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckCorrespondingSections;                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMesh.GetSocketByIndex
struct UEngine_SkeletalMesh_GetSocketByIndex_Params
{
	int                                                Index;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SkeletalMeshSocket*                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMesh.GetNodeMappingContainer
struct UEngine_SkeletalMesh_GetNodeMappingContainer_Params
{
	class UEngine_Blueprint*                           SourceAsset;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_NodeMappingContainer*                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMesh.GetImportedBounds
struct UEngine_SkeletalMesh_GetImportedBounds_Params
{
	struct FBoxSphereBounds                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMesh.GetBounds
struct UEngine_SkeletalMesh_GetBounds_Params
{
	struct FBoxSphereBounds                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMesh.FindSocketInfo
struct UEngine_SkeletalMesh_FindSocketInfo_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  OutTransform;                                             // (Parm, OutParm, IsPlainOldData)
	int                                                OutBoneIndex;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	int                                                OutIndex;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UEngine_SkeletalMeshSocket*                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMesh.FindSocketAndIndex
struct UEngine_SkeletalMesh_FindSocketAndIndex_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                OutIndex;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData)
	class UEngine_SkeletalMeshSocket*                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMesh.FindSocket
struct UEngine_SkeletalMesh_FindSocket_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_SkeletalMeshSocket*                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkeletalMeshSocket.InitializeSocketFromLocation
struct UEngine_SkeletalMeshSocket_InitializeSocketFromLocation_Params
{
	class UEngine_SkeletalMeshComponent*               SkelComp;                                                 // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     WorldLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WorldNormal;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkeletalMeshSocket.GetSocketLocation
struct UEngine_SkeletalMeshSocket_GetSocketLocation_Params
{
	class UEngine_SkeletalMeshComponent*               SkelComp;                                                 // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetSkyLuminanceFactor
struct UEngine_SkyAtmosphereComponent_SetSkyLuminanceFactor_Params
{
	struct FLinearColor                                NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetRayleighScatteringScale
struct UEngine_SkyAtmosphereComponent_SetRayleighScatteringScale_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetRayleighScattering
struct UEngine_SkyAtmosphereComponent_SetRayleighScattering_Params
{
	struct FLinearColor                                NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetRayleighExponentialDistribution
struct UEngine_SkyAtmosphereComponent_SetRayleighExponentialDistribution_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetOtherAbsorptionScale
struct UEngine_SkyAtmosphereComponent_SetOtherAbsorptionScale_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetOtherAbsorption
struct UEngine_SkyAtmosphereComponent_SetOtherAbsorption_Params
{
	struct FLinearColor                                NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetMieScatteringScale
struct UEngine_SkyAtmosphereComponent_SetMieScatteringScale_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetMieScattering
struct UEngine_SkyAtmosphereComponent_SetMieScattering_Params
{
	struct FLinearColor                                NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetMieExponentialDistribution
struct UEngine_SkyAtmosphereComponent_SetMieExponentialDistribution_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetMieAnisotropy
struct UEngine_SkyAtmosphereComponent_SetMieAnisotropy_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetMieAbsorptionScale
struct UEngine_SkyAtmosphereComponent_SetMieAbsorptionScale_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetMieAbsorption
struct UEngine_SkyAtmosphereComponent_SetMieAbsorption_Params
{
	struct FLinearColor                                NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetHeightFogContribution
struct UEngine_SkyAtmosphereComponent_SetHeightFogContribution_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.SetAerialPespectiveViewDistanceScale
struct UEngine_SkyAtmosphereComponent_SetAerialPespectiveViewDistanceScale_Params
{
	float                                              NewValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyAtmosphereComponent.OverrideAtmosphereLightDirection
struct UEngine_SkyAtmosphereComponent_OverrideAtmosphereLightDirection_Params
{
	int                                                AtmosphereLightIndex;                                     // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LightDirection;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetVolumetricScatteringIntensity
struct UEngine_SkyLightComponent_SetVolumetricScatteringIntensity_Params
{
	float                                              NewIntensity;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetOcclusionTint
struct UEngine_SkyLightComponent_SetOcclusionTint_Params
{
	struct FColor                                      InTint;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetOcclusionExponent
struct UEngine_SkyLightComponent_SetOcclusionExponent_Params
{
	float                                              InOcclusionExponent;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetOcclusionContrast
struct UEngine_SkyLightComponent_SetOcclusionContrast_Params
{
	float                                              InOcclusionContrast;                                      // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetMinOcclusion
struct UEngine_SkyLightComponent_SetMinOcclusion_Params
{
	float                                              InMinOcclusion;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetLowerHemisphereColor
struct UEngine_SkyLightComponent_SetLowerHemisphereColor_Params
{
	struct FLinearColor                                InLowerHemisphereColor;                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetLightColor
struct UEngine_SkyLightComponent_SetLightColor_Params
{
	struct FLinearColor                                NewLightColor;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetIntensity
struct UEngine_SkyLightComponent_SetIntensity_Params
{
	float                                              NewIntensity;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetIndirectLightingIntensity
struct UEngine_SkyLightComponent_SetIndirectLightingIntensity_Params
{
	float                                              NewIntensity;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetCubemapBlend
struct UEngine_SkyLightComponent_SetCubemapBlend_Params
{
	class UEngine_TextureCube*                         SourceCubemap;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_TextureCube*                         DestinationCubemap;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              InBlendFraction;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyLightComponent.SetCubemap
struct UEngine_SkyLightComponent_SetCubemap_Params
{
	class UEngine_TextureCube*                         NewCubemap;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SkyLightComponent.RecaptureSky
struct UEngine_SkyLightComponent_RecaptureSky_Params
{
};

// Function Engine.SoundSubmix.StopRecordingOutput
struct UEngine_SoundSubmix_StopRecordingOutput_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	FEngine_Engine_EAudioRecordingExportType           ExportType;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // (Parm, ZeroConstructor)
	struct FString                                     Path;                                                     // (Parm, ZeroConstructor)
	class UEngine_SoundWave*                           ExistingSoundWaveToOverwrite;                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SoundSubmix.StopEnvelopeFollowing
struct UEngine_SoundSubmix_StopEnvelopeFollowing_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SoundSubmix.StartRecordingOutput
struct UEngine_SoundSubmix_StartRecordingOutput_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              ExpectedDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SoundSubmix.StartEnvelopeFollowing
struct UEngine_SoundSubmix_StartEnvelopeFollowing_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SoundSubmix.SetSubmixOutputVolume
struct UEngine_SoundSubmix_SetSubmixOutputVolume_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	float                                              InOutputVolume;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SoundSubmix.AddEnvelopeFollowerDelegate
struct UEngine_SoundSubmix_AddEnvelopeFollowerDelegate_Params
{
	class UObject*                                     WorldContextObject;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnSubmixEnvelopeBP;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.SplineMeshComponent.UpdateMesh
struct UEngine_SplineMeshComponent_UpdateMesh_Params
{
};

// Function Engine.SplineMeshComponent.SetStartTangent
struct UEngine_SplineMeshComponent_SetStartTangent_Params
{
	struct FVector                                     StartTangent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetStartScale
struct UEngine_SplineMeshComponent_SetStartScale_Params
{
	struct FVector2D                                   StartScale;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetStartRoll
struct UEngine_SplineMeshComponent_SetStartRoll_Params
{
	float                                              StartRoll;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetStartPosition
struct UEngine_SplineMeshComponent_SetStartPosition_Params
{
	struct FVector                                     StartPos;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetStartOffset
struct UEngine_SplineMeshComponent_SetStartOffset_Params
{
	struct FVector2D                                   StartOffset;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetStartAndEnd
struct UEngine_SplineMeshComponent_SetStartAndEnd_Params
{
	struct FVector                                     StartPos;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartTangent;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndPos;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndTangent;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetSplineUpDir
struct UEngine_SplineMeshComponent_SetSplineUpDir_Params
{
	struct FVector                                     InSplineUpDir;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetForwardAxis
struct UEngine_SplineMeshComponent_SetForwardAxis_Params
{
	TEnumAsByte<FEngine_Engine_ESplineMeshAxis>        InForwardAxis;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetEndTangent
struct UEngine_SplineMeshComponent_SetEndTangent_Params
{
	struct FVector                                     EndTangent;                                               // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetEndScale
struct UEngine_SplineMeshComponent_SetEndScale_Params
{
	struct FVector2D                                   EndScale;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetEndRoll
struct UEngine_SplineMeshComponent_SetEndRoll_Params
{
	float                                              EndRoll;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetEndPosition
struct UEngine_SplineMeshComponent_SetEndPosition_Params
{
	struct FVector                                     EndPos;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetEndOffset
struct UEngine_SplineMeshComponent_SetEndOffset_Params
{
	struct FVector2D                                   EndOffset;                                                // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetBoundaryMin
struct UEngine_SplineMeshComponent_SetBoundaryMin_Params
{
	float                                              InBoundaryMin;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.SetBoundaryMax
struct UEngine_SplineMeshComponent_SetBoundaryMax_Params
{
	float                                              InBoundaryMax;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMesh;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetStartTangent
struct UEngine_SplineMeshComponent_GetStartTangent_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetStartScale
struct UEngine_SplineMeshComponent_GetStartScale_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetStartRoll
struct UEngine_SplineMeshComponent_GetStartRoll_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetStartPosition
struct UEngine_SplineMeshComponent_GetStartPosition_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetStartOffset
struct UEngine_SplineMeshComponent_GetStartOffset_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetSplineUpDir
struct UEngine_SplineMeshComponent_GetSplineUpDir_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetForwardAxis
struct UEngine_SplineMeshComponent_GetForwardAxis_Params
{
	TEnumAsByte<FEngine_Engine_ESplineMeshAxis>        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetEndTangent
struct UEngine_SplineMeshComponent_GetEndTangent_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetEndScale
struct UEngine_SplineMeshComponent_GetEndScale_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetEndRoll
struct UEngine_SplineMeshComponent_GetEndRoll_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetEndPosition
struct UEngine_SplineMeshComponent_GetEndPosition_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetEndOffset
struct UEngine_SplineMeshComponent_GetEndOffset_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetBoundaryMin
struct UEngine_SplineMeshComponent_GetBoundaryMin_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SplineMeshComponent.GetBoundaryMax
struct UEngine_SplineMeshComponent_GetBoundaryMax_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SpotLightComponent.SetOuterConeAngle
struct UEngine_SpotLightComponent_SetOuterConeAngle_Params
{
	float                                              NewOuterConeAngle;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SpotLightComponent.SetInnerConeAngle
struct UEngine_SpotLightComponent_SetInnerConeAngle_Params
{
	float                                              NewInnerConeAngle;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SpringArmComponent.IsCollisionFixApplied
struct UEngine_SpringArmComponent_IsCollisionFixApplied_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SpringArmComponent.GetUnfixedCameraPosition
struct UEngine_SpringArmComponent_GetUnfixedCameraPosition_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SpringArmComponent.GetTargetRotation
struct UEngine_SpringArmComponent_GetTargetRotation_Params
{
	struct FRotator                                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMesh.RemoveSocket
struct UEngine_StaticMesh_RemoveSocket_Params
{
	class UEngine_StaticMeshSocket*                    Socket;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StaticMesh.GetNumSections
struct UEngine_StaticMesh_GetNumSections_Params
{
	int                                                InLOD;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMesh.GetNumLODs
struct UEngine_StaticMesh_GetNumLODs_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMesh.GetMinimumLODForPlatforms
struct UEngine_StaticMesh_GetMinimumLODForPlatforms_Params
{
	TMap<struct FName, int>                            PlatformMinimumLODs;                                      // (Parm, OutParm, ZeroConstructor)
};

// Function Engine.StaticMesh.GetMinimumLODForPlatform
struct UEngine_StaticMesh_GetMinimumLODForPlatform_Params
{
	struct FName                                       PlatformName;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMesh.GetMaterialIndex
struct UEngine_StaticMesh_GetMaterialIndex_Params
{
	struct FName                                       MaterialSlotName;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMesh.GetMaterial
struct UEngine_StaticMesh_GetMaterial_Params
{
	int                                                MaterialIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_MaterialInterface*                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMesh.GetBounds
struct UEngine_StaticMesh_GetBounds_Params
{
	struct FBoxSphereBounds                            ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMesh.GetBoundingBox
struct UEngine_StaticMesh_GetBoundingBox_Params
{
	struct FBox                                        ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMesh.FindSocket
struct UEngine_StaticMesh_FindSocket_Params
{
	struct FName                                       InSocketName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_StaticMeshSocket*                    ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMesh.CreateStaticMeshDescription
struct UEngine_StaticMesh_CreateStaticMeshDescription_Params
{
	class UObject*                                     Outer;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UStaticMeshDescription_StaticMeshDescription* ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StaticMesh.BuildFromStaticMeshDescriptions
struct UEngine_StaticMesh_BuildFromStaticMeshDescriptions_Params
{
	TArray<class UStaticMeshDescription_StaticMeshDescription*> StaticMeshDescriptions;                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function Engine.StaticMesh.AddSocket
struct UEngine_StaticMesh_AddSocket_Params
{
	class UEngine_StaticMeshSocket*                    Socket;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StaticMesh.AddMaterial
struct UEngine_StaticMesh_AddMaterial_Params
{
	class UEngine_MaterialInterface*                   Material;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StereoLayerComponent.SetUVRect
struct UEngine_StereoLayerComponent_SetUVRect_Params
{
	struct FBox2D                                      InUVRect;                                                 // (Parm, ZeroConstructor)
};

// Function Engine.StereoLayerComponent.SetTexture
struct UEngine_StereoLayerComponent_SetTexture_Params
{
	class UEngine_Texture*                             InTexture;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StereoLayerComponent.SetQuadSize
struct UEngine_StereoLayerComponent_SetQuadSize_Params
{
	struct FVector2D                                   InQuadSize;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StereoLayerComponent.SetPriority
struct UEngine_StereoLayerComponent_SetPriority_Params
{
	int                                                InPriority;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StereoLayerComponent.SetLeftTexture
struct UEngine_StereoLayerComponent_SetLeftTexture_Params
{
	class UEngine_Texture*                             InTexture;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StereoLayerComponent.SetEquirectProps
struct UEngine_StereoLayerComponent_SetEquirectProps_Params
{
	struct FEngine_EquirectProps                       InScaleBiases;                                            // (Parm)
};

// Function Engine.StereoLayerComponent.MarkTextureForUpdate
struct UEngine_StereoLayerComponent_MarkTextureForUpdate_Params
{
};

// Function Engine.StereoLayerComponent.GetUVRect
struct UEngine_StereoLayerComponent_GetUVRect_Params
{
	struct FBox2D                                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.StereoLayerComponent.GetTexture
struct UEngine_StereoLayerComponent_GetTexture_Params
{
	class UEngine_Texture*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StereoLayerComponent.GetQuadSize
struct UEngine_StereoLayerComponent_GetQuadSize_Params
{
	struct FVector2D                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StereoLayerComponent.GetPriority
struct UEngine_StereoLayerComponent_GetPriority_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StereoLayerComponent.GetLeftTexture
struct UEngine_StereoLayerComponent_GetLeftTexture_Params
{
	class UEngine_Texture*                             ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.StereoLayerFunctionLibrary.ShowSplashScreen
struct UEngine_StereoLayerFunctionLibrary_ShowSplashScreen_Params
{
};

// Function Engine.StereoLayerFunctionLibrary.SetSplashScreen
struct UEngine_StereoLayerFunctionLibrary_SetSplashScreen_Params
{
	class UEngine_Texture*                             Texture;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Scale;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Offset;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShowLoadingMovie;                                        // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bShowOnSet;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.StereoLayerFunctionLibrary.HideSplashScreen
struct UEngine_StereoLayerFunctionLibrary_HideSplashScreen_Params
{
};

// Function Engine.StereoLayerFunctionLibrary.EnableAutoLoadingSplashScreen
struct UEngine_StereoLayerFunctionLibrary_EnableAutoLoadingSplashScreen_Params
{
	bool                                               InAutoShowEnabled;                                        // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.SubsystemBlueprintLibrary.GetWorldSubsystem
struct UEngine_SubsystemBlueprintLibrary_GetWorldSubsystem_Params
{
	class UObject*                                     ContextObject;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_WorldSubsystem*                      ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SubsystemBlueprintLibrary.GetLocalPlayerSubSystemFromPlayerController
struct UEngine_SubsystemBlueprintLibrary_GetLocalPlayerSubSystemFromPlayerController_Params
{
	class AEngine_PlayerController*                    PlayerController;                                         // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_LocalPlayerSubsystem*                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SubsystemBlueprintLibrary.GetLocalPlayerSubsystem
struct UEngine_SubsystemBlueprintLibrary_GetLocalPlayerSubsystem_Params
{
	class UObject*                                     ContextObject;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_LocalPlayerSubsystem*                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SubsystemBlueprintLibrary.GetGameInstanceSubsystem
struct UEngine_SubsystemBlueprintLibrary_GetGameInstanceSubsystem_Params
{
	class UObject*                                     ContextObject;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_GameInstanceSubsystem*               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SubsystemBlueprintLibrary.GetEngineSubsystem
struct UEngine_SubsystemBlueprintLibrary_GetEngineSubsystem_Params
{
	class UClass*                                      Class;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_EngineSubsystem*                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimecodeProvider.GetTimecode
struct UEngine_TimecodeProvider_GetTimecode_Params
{
	struct FTimecode                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimecodeProvider.GetSynchronizationState
struct UEngine_TimecodeProvider_GetSynchronizationState_Params
{
	FEngine_Engine_ETimecodeProviderSynchronizationState ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimecodeProvider.GetFrameRate
struct UEngine_TimecodeProvider_GetFrameRate_Params
{
	struct FFrameRate                                  ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimecodeProvider.GetDelayedTimecode
struct UEngine_TimecodeProvider_GetDelayedTimecode_Params
{
	struct FTimecode                                   ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.SystemTimeTimecodeProvider.SetFrameRate
struct UEngine_SystemTimeTimecodeProvider_SetFrameRate_Params
{
	struct FFrameRate                                  InFrameRate;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
};

// Function Engine.TextRenderComponent.SetYScale
struct UEngine_TextRenderComponent_SetYScale_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TextRenderComponent.SetXScale
struct UEngine_TextRenderComponent_SetXScale_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TextRenderComponent.SetWorldSize
struct UEngine_TextRenderComponent_SetWorldSize_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TextRenderComponent.SetVertSpacingAdjust
struct UEngine_TextRenderComponent_SetVertSpacingAdjust_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TextRenderComponent.SetVerticalAlignment
struct UEngine_TextRenderComponent_SetVerticalAlignment_Params
{
	TEnumAsByte<FEngine_Engine_EVerticalTextAligment>  Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TextRenderComponent.SetTextRenderColor
struct UEngine_TextRenderComponent_SetTextRenderColor_Params
{
	struct FColor                                      Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TextRenderComponent.SetTextMaterial
struct UEngine_TextRenderComponent_SetTextMaterial_Params
{
	class UEngine_MaterialInterface*                   Material;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TextRenderComponent.SetText
struct UEngine_TextRenderComponent_SetText_Params
{
	struct FString                                     Value;                                                    // (Parm, ZeroConstructor)
};

// Function Engine.TextRenderComponent.SetHorizSpacingAdjust
struct UEngine_TextRenderComponent_SetHorizSpacingAdjust_Params
{
	float                                              Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TextRenderComponent.SetHorizontalAlignment
struct UEngine_TextRenderComponent_SetHorizontalAlignment_Params
{
	TEnumAsByte<FEngine_Engine_EHorizTextAligment>     Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TextRenderComponent.SetFont
struct UEngine_TextRenderComponent_SetFont_Params
{
	class UEngine_Font*                                Value;                                                    // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TextRenderComponent.K2_SetText
struct UEngine_TextRenderComponent_K2_SetText_Params
{
	struct FText                                       Value;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function Engine.TextRenderComponent.GetTextWorldSize
struct UEngine_TextRenderComponent_GetTextWorldSize_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TextRenderComponent.GetTextLocalSize
struct UEngine_TextRenderComponent_GetTextLocalSize_Params
{
	struct FVector                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimelineComponent.Stop
struct UEngine_TimelineComponent_Stop_Params
{
};

// Function Engine.TimelineComponent.SetVectorCurve
struct UEngine_TimelineComponent_SetVectorCurve_Params
{
	class UEngine_CurveVector*                         NewVectorCurve;                                           // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       VectorTrackName;                                          // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TimelineComponent.SetTimelineLengthMode
struct UEngine_TimelineComponent_SetTimelineLengthMode_Params
{
	TEnumAsByte<FEngine_Engine_ETimelineLengthMode>    NewLengthMode;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TimelineComponent.SetTimelineLength
struct UEngine_TimelineComponent_SetTimelineLength_Params
{
	float                                              NewLength;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TimelineComponent.SetPlayRate
struct UEngine_TimelineComponent_SetPlayRate_Params
{
	float                                              NewRate;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TimelineComponent.SetPlaybackPosition
struct UEngine_TimelineComponent_SetPlaybackPosition_Params
{
	float                                              NewPosition;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFireEvents;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bFireUpdate;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TimelineComponent.SetNewTime
struct UEngine_TimelineComponent_SetNewTime_Params
{
	float                                              NewTime;                                                  // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TimelineComponent.SetLooping
struct UEngine_TimelineComponent_SetLooping_Params
{
	bool                                               bNewLooping;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TimelineComponent.SetLinearColorCurve
struct UEngine_TimelineComponent_SetLinearColorCurve_Params
{
	class UEngine_CurveLinearColor*                    NewLinearColorCurve;                                      // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       LinearColorTrackName;                                     // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TimelineComponent.SetIgnoreTimeDilation
struct UEngine_TimelineComponent_SetIgnoreTimeDilation_Params
{
	bool                                               bNewIgnoreTimeDilation;                                   // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TimelineComponent.SetFloatCurve
struct UEngine_TimelineComponent_SetFloatCurve_Params
{
	class UEngine_CurveFloat*                          NewFloatCurve;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       FloatTrackName;                                           // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.TimelineComponent.ReverseFromEnd
struct UEngine_TimelineComponent_ReverseFromEnd_Params
{
};

// Function Engine.TimelineComponent.Reverse
struct UEngine_TimelineComponent_Reverse_Params
{
};

// Function Engine.TimelineComponent.PlayFromStart
struct UEngine_TimelineComponent_PlayFromStart_Params
{
};

// Function Engine.TimelineComponent.Play
struct UEngine_TimelineComponent_Play_Params
{
};

// Function Engine.TimelineComponent.OnRep_Timeline
struct UEngine_TimelineComponent_OnRep_Timeline_Params
{
};

// Function Engine.TimelineComponent.IsReversing
struct UEngine_TimelineComponent_IsReversing_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimelineComponent.IsPlaying
struct UEngine_TimelineComponent_IsPlaying_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimelineComponent.IsLooping
struct UEngine_TimelineComponent_IsLooping_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimelineComponent.GetTimelineLength
struct UEngine_TimelineComponent_GetTimelineLength_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimelineComponent.GetPlayRate
struct UEngine_TimelineComponent_GetPlayRate_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimelineComponent.GetPlaybackPosition
struct UEngine_TimelineComponent_GetPlaybackPosition_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TimelineComponent.GetIgnoreTimeDilation
struct UEngine_TimelineComponent_GetIgnoreTimeDilation_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TwitterIntegrationBase.TwitterRequest
struct UEngine_TwitterIntegrationBase_TwitterRequest_Params
{
	struct FString                                     URL;                                                      // (Parm, ZeroConstructor)
	TArray<struct FString>                             ParamKeysAndValues;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<FEngine_Engine_ETwitterRequestMethod>  RequestMethod;                                            // (Parm, ZeroConstructor, IsPlainOldData)
	int                                                AccountIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TwitterIntegrationBase.ShowTweetUI
struct UEngine_TwitterIntegrationBase_ShowTweetUI_Params
{
	struct FString                                     InitialMessage;                                           // (Parm, ZeroConstructor)
	struct FString                                     URL;                                                      // (Parm, ZeroConstructor)
	struct FString                                     Picture;                                                  // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TwitterIntegrationBase.Init
struct UEngine_TwitterIntegrationBase_Init_Params
{
};

// Function Engine.TwitterIntegrationBase.GetNumAccounts
struct UEngine_TwitterIntegrationBase_GetNumAccounts_Params
{
	int                                                ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TwitterIntegrationBase.GetAccountName
struct UEngine_TwitterIntegrationBase_GetAccountName_Params
{
	int                                                AccountIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function Engine.TwitterIntegrationBase.CanShowTweetUI
struct UEngine_TwitterIntegrationBase_CanShowTweetUI_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.TwitterIntegrationBase.AuthorizeAccounts
struct UEngine_TwitterIntegrationBase_AuthorizeAccounts_Params
{
	bool                                               ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.VectorFieldComponent.SetIntensity
struct UEngine_VectorFieldComponent_SetIntensity_Params
{
	float                                              NewIntensity;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.VisualLoggerKismetLibrary.RedirectVislog
struct UEngine_VisualLoggerKismetLibrary_RedirectVislog_Params
{
	class UObject*                                     SourceOwner;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UObject*                                     DestinationOwner;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.VisualLoggerKismetLibrary.LogText
struct UEngine_VisualLoggerKismetLibrary_LogText_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Text;                                                     // (Parm, ZeroConstructor)
	struct FName                                       LogCategory;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToMessageLog;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.VisualLoggerKismetLibrary.LogSegment
struct UEngine_VisualLoggerKismetLibrary_LogSegment_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SegmentStart;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SegmentEnd;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Text;                                                     // (Parm, ZeroConstructor)
	struct FLinearColor                                ObjectColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       CategoryName;                                             // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToMessageLog;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.VisualLoggerKismetLibrary.LogLocation
struct UEngine_VisualLoggerKismetLibrary_LogLocation_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Text;                                                     // (Parm, ZeroConstructor)
	struct FLinearColor                                ObjectColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       LogCategory;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToMessageLog;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.VisualLoggerKismetLibrary.LogBox
struct UEngine_VisualLoggerKismetLibrary_LogBox_Params
{
	class UObject*                                     WorldContextObject;                                       // (Parm, ZeroConstructor, IsPlainOldData)
	struct FBox                                        BoxShape;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
	struct FString                                     Text;                                                     // (Parm, ZeroConstructor)
	struct FLinearColor                                ObjectColor;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	struct FName                                       LogCategory;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	bool                                               bAddToMessageLog;                                         // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.VisualLoggerKismetLibrary.EnableRecording
struct UEngine_VisualLoggerKismetLibrary_EnableRecording_Params
{
	bool                                               bEnabled;                                                 // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.VOIPTalker.RegisterWithPlayerState
struct UEngine_VOIPTalker_RegisterWithPlayerState_Params
{
	class AEngine_PlayerState*                         OwningState;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.VOIPTalker.GetVoiceLevel
struct UEngine_VOIPTalker_GetVoiceLevel_Params
{
	float                                              ReturnValue;                                              // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)
};

// Function Engine.VOIPTalker.CreateTalkerForPlayer
struct UEngine_VOIPTalker_CreateTalkerForPlayer_Params
{
	class AEngine_PlayerState*                         OwningState;                                              // (Parm, ZeroConstructor, IsPlainOldData)
	class UEngine_VOIPTalker*                          ReturnValue;                                              // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)
};

// Function Engine.VOIPTalker.BPOnTalkingEnd
struct UEngine_VOIPTalker_BPOnTalkingEnd_Params
{
};

// Function Engine.VOIPTalker.BPOnTalkingBegin
struct UEngine_VOIPTalker_BPOnTalkingBegin_Params
{
	class UEngine_AudioComponent*                      AudioComponent;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// Function Engine.VOIPStatics.SetMicThreshold
struct UEngine_VOIPStatics_SetMicThreshold_Params
{
	float                                              InThreshold;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.WindDirectionalSourceComponent.SetWindType
struct UEngine_WindDirectionalSourceComponent_SetWindType_Params
{
	FEngine_Engine_EWindSourceType                     InNewType;                                                // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.WindDirectionalSourceComponent.SetStrength
struct UEngine_WindDirectionalSourceComponent_SetStrength_Params
{
	float                                              InNewStrength;                                            // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.WindDirectionalSourceComponent.SetSpeed
struct UEngine_WindDirectionalSourceComponent_SetSpeed_Params
{
	float                                              InNewSpeed;                                               // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.WindDirectionalSourceComponent.SetRadius
struct UEngine_WindDirectionalSourceComponent_SetRadius_Params
{
	float                                              InNewRadius;                                              // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.WindDirectionalSourceComponent.SetMinimumGustAmount
struct UEngine_WindDirectionalSourceComponent_SetMinimumGustAmount_Params
{
	float                                              InNewMinGust;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

// Function Engine.WindDirectionalSourceComponent.SetMaximumGustAmount
struct UEngine_WindDirectionalSourceComponent_SetMaximumGustAmount_Params
{
	float                                              InNewMaxGust;                                             // (Parm, ZeroConstructor, IsPlainOldData)
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
