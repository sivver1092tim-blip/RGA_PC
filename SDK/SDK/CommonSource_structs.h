#pragma once

// Name: , Version: 1.0.0

#ifdef _MSC_VER
	#pragma pack(push, 0x1)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Enums
//---------------------------------------------------------------------------

// Enum CommonSource.EAreaVolumType
enum class FCommonSource_CommonSource_EAreaVolumType : uint8_t
{
	EAreaVolumType__None           = 0,
	EAreaVolumType__Default        = 1,
	EAreaVolumType__Village        = 2,
	EAreaVolumType__Entrance       = 3,
	EAreaVolumType__FieldSafe      = 4,
	EAreaVolumType__FieldPk        = 5,
	EAreaVolumType__FieldBoss      = 6,
	EAreaVolumType__RealmWar       = 7,
	EAreaVolumType__Lava           = 8,
	EAreaVolumType__FieldPk_NoName = 9,
	EAreaVolumType__FieldPk_NoPenalty = 10,
	EAreaVolumType__FieldPk_NoNamePenalty = 11,
	EAreaVolumType__FieldBoss_NoName = 12,
	EAreaVolumType__FieldBoss_NoPenalty = 13,
	EAreaVolumType__FieldBoss_NoNamePenalty = 14,
	EAreaVolumType__DuelDungeon    = 15,
	EAreaVolumType__Portal         = 16,
	EAreaVolumType__FieldBoss_GroundVehicle = 17,
	EAreaVolumType__FieldBoss_AirVehicle = 18,
	EAreaVolumType__FieldBoss_NoVehicle = 19,
	EAreaVolumType__Holy           = 20,
	EAreaVolumType__FieldPk_NoNamePenalty_NoDisplayName = 21,
	EAreaVolumType__FieldSafe_NoNamePenalty_NoDisplayName = 22,
	EAreaVolumType__FieldSafe_NoVehicle = 23,
	EAreaVolumType__FieldBoss_NoPenalty_GroundVehicle = 24,
	EAreaVolumType__FieldBoss_NoPenalty_NoFixMonsterAttack = 25,
	EAreaVolumType__FieldPk_WaterDebuff = 26,
	EAreaVolumType__FieldBoss_Water = 27,
	EAreaVolumType__FieldSafe_Water = 28,
	EAreaVolumType__Entrance_Water = 29,
	EAreaVolumType__ServerInvasionCamp = 30,
	EAreaVolumType__Max            = 31
};


// Enum CommonSource.EExchangeSaleState
enum class FCommonSource_CommonSource_EExchangeSaleState : uint8_t
{
	EExchangeSaleState__Waiting    = 0,
	EExchangeSaleState__OnSale     = 1,
	EExchangeSaleState__Expired    = 2,
	EExchangeSaleState__Sold       = 3,
	EExchangeSaleState__Settled    = 4,
	EExchangeSaleState__DBUpdating = 5,
	EExchangeSaleState__BuyWaiting = 6,
	EExchangeSaleState__RegisterWaiting = 7,
	EExchangeSaleState__ReregisterWaiting = 8,
	EExchangeSaleState__CancelWaiting = 9,
	EExchangeSaleState__Max        = 10
};


// Enum CommonSource.ECharParam
enum class FCommonSource_CommonSource_ECharParam : uint8_t
{
	ECharParam__None               = 0,
	ECharParam__BattlePower        = 1,
	ECharParam__MaxHp              = 2,
	ECharParam__MaxMp              = 3,
	ECharParam__MaxHpPercent       = 4,
	ECharParam__MaxMpPercent       = 5,
	ECharParam__MoveSpeedAddPercent = 6,
	ECharParam__AttackSpeedAddPercent = 7,
	ECharParam__OtherParamEnd      = 8,
	ECharParam__Attack             = 9,
	ECharParam__HitAccuracy        = 10,
	ECharParam__CloseAccuracyAdd   = 11,
	ECharParam__RangeAccuracyAdd   = 12,
	ECharParam__MagicAccuracyAdd   = 13,
	ECharParam__CriticalChancePercent = 14,
	ECharParam__CriticalDamageAddPercent = 15,
	ECharParam__SkillDamageAddPercent = 16,
	ECharParam__DamageAddPercent   = 17,
	ECharParam__CloseDamageAddPercent = 18,
	ECharParam__RangeDamageAddPercent = 19,
	ECharParam__MagicDamageAddPercent = 20,
	ECharParam__SkillTimeReductionPercent = 21,
	ECharParam__CoolTimeReductionPercent = 22,
	ECharParam__AbnormalResistIgnorePercent = 23,
	ECharParam__PvPDamageAddPercent = 24,
	ECharParam__PvPDamageReductionPercent = 25,
	ECharParam__PvPCloseDamageAddPercent = 26,
	ECharParam__PvPRangeDamageAddPercent = 27,
	ECharParam__PvPMagicDamageAddPercent = 28,
	ECharParam__BossDamageAddPercent = 29,
	ECharParam__BrutalDamageAddPercent = 30,
	ECharParam__Defense            = 31,
	ECharParam__HitAvoidance       = 32,
	ECharParam__CloseAvoidanceAdd  = 33,
	ECharParam__RangeAvoidanceAdd  = 34,
	ECharParam__MagicAvoidanceAdd  = 35,
	ECharParam__CriticalChanceResistPercent = 36,
	ECharParam__SkillDamageReductionDecreasePercent = 37,
	ECharParam__SkillDamageReductionPercent = 38,
	ECharParam__DamageReductionDecreasePercent = 39,
	ECharParam__DamageReductionPercent = 40,
	ECharParam__CloseReductionDecreasePercent = 41,
	ECharParam__CloseReductionPercent = 42,
	ECharParam__RangeReductionDecreasePercent = 43,
	ECharParam__RangeReductionPercent = 44,
	ECharParam__MagicReductionDecreasePercent = 45,
	ECharParam__MagicReductionPercent = 46,
	ECharParam__AbnormalResistPercent = 47,
	ECharParam__PvPReductionDecreasePercent = 48,
	ECharParam__PvPReductionPercent = 49,
	ECharParam__PvPCloseReductionDecreasePercent = 50,
	ECharParam__PvPCloseReductionPercent = 51,
	ECharParam__PvPRangeReductionDecreasePercent = 52,
	ECharParam__PvPRangeReductionPercent = 53,
	ECharParam__PvPMagicReductionDecreasePercent = 54,
	ECharParam__PvPMagicReductionPercent = 55,
	ECharParam__BossReductionDecreasePercent = 56,
	ECharParam__BossReductionPercent = 57,
	ECharParam__BrutalReductionDecreasePercent = 58,
	ECharParam__BrutalReductionPercent = 59,
	ECharParam__HpAddPerTick       = 60,
	ECharParam__MpAddPerTick       = 61,
	ECharParam__PotionAddPercentPerTick = 62,
	ECharParam__PotionReductionPercentPerTick = 63,
	ECharParam__EarnMoreExpPercent = 64,
	ECharParam__EarnMoreGoldPercent = 65,
	ECharParam__EarnMoreItemPercent = 66,
	ECharParam__PotionRetainedQuantity = 67,
	ECharParam__SealedEssenceDurationTime = 68,
	ECharParam__MimirWisdomConsumptionDecreasePercent = 69,
	ECharParam__MimirWisdomEarnMorePercent = 70,
	ECharParam__MimirWisdomMaxAdd  = 71,
	ECharParam__HealAddPercent     = 72,
	ECharParam__AbnormalDurationReductionPercent = 73,
	ECharParam__ActionResistPercent = 74,
	ECharParam__StunResistPercent  = 75,
	ECharParam__FreezingResistPercent = 76,
	ECharParam__PetrifactionResistPercent = 77,
	ECharParam__AttackResistPercent = 78,
	ECharParam__PolymorphResistPercent = 79,
	ECharParam__SilenceResistPercent = 80,
	ECharParam__MoveResistPercent  = 81,
	ECharParam__ImmobilizedResistPercent = 82,
	ECharParam__SlowResistPercent  = 83,
	ECharParam__FrostbiteResistPercent = 84,
	ECharParam__KnockBackResistPercent = 85,
	ECharParam__KnockDownResistPercent = 86,
	ECharParam__ShockResistPercent = 87,
	ECharParam__StunDurationMinusPercent = 88,
	ECharParam__FreezingDurationMinusPercent = 89,
	ECharParam__PetrifactionDurationMinusPercent = 90,
	ECharParam__DamageAbsoluteReductionPercent = 91,
	ECharParam__NormalDamageAddPercent = 92,
	ECharParam__CoolTimeReductionSecond = 93,
	ECharParam__KnockBackAddPercent = 94,
	ECharParam__KnockDownAddPercent = 95,
	ECharParam__ShockAddPercent    = 96,
	ECharParam__CriticalDamageReductionPercent = 97,
	ECharParam__HealAbsoluteReductionPercent = 98,
	ECharParam__KnockDownDurationMinusPercent = 99,
	ECharParam__PolymorphDurationMinusPercent = 100,
	ECharParam__SilenceDurationMinusPercent = 101,
	ECharParam__ImmobilizedDurationMinusPercent = 102,
	ECharParam__SlowDurationMinusPercent = 103,
	ECharParam__FrostbiteDurationMinusPercent = 104,
	ECharParam__DarkResistPercent  = 105,
	ECharParam__AgingResistPercent = 106,
	ECharParam__DarkDurationMinusPercent = 107,
	ECharParam__AgingDurationMinusPercent = 108,
	ECharParam__AttackAbsoluteReduction = 109,
	ECharParam__NormalMonsterDamageAddPercent = 110,
	ECharParam__NormalMonsterDamageReductionPercent = 111,
	ECharParam__NormalMonsterDamageReductionMinusPercent = 112,
	ECharParam__DamageAbsoluteAddPercent = 113,
	ECharParam__NormalDamageReductionPercent = 114,
	ECharParam__NormalDamageReductionMinusPercent = 115,
	ECharParam__CloseDamageAbsoluteAddPercent = 116,
	ECharParam__RangeDamageAbsoluteAddPercent = 117,
	ECharParam__MagicDamageAbsoluteAddPercent = 118,
	ECharParam__CloseDamageAbsoluteReductionPercent = 119,
	ECharParam__RangeDamageAbsoluteReductionPercent = 120,
	ECharParam__MagicDamageAbsoluteReductionPercent = 121,
	ECharParam__MimirWisdomAutoUse = 122,
	ECharParam__IncreaseGreatSuccessProbPetCollect = 123,
	ECharParam__MonsterDamageAddPercent = 124,
	ECharParam__MonsterDamageReductionPercent = 125,
	ECharParam__MonsterDamageReductionMinusPercent = 126,
	ECharParam__DoubleAttackChancePercent = 127,
	ECharParam__DoubleAttackResistPercent = 128,
	ECharParam__FascinateResistPercent = 129,
	ECharParam__FascinateDurationMinusPercent = 130,
	ECharParam__CriticalChanceResistPercentAddMaxValue = 131,
	ECharParam__DoubleAttackDamageReductionPercent = 132,
	ECharParam__AbnormalDurationReductionOffsetPercent = 133,
	ECharParam__BlockAddPercent    = 134,
	ECharParam__CloseBlockAddPercent = 135,
	ECharParam__RangeBlockAddPercent = 136,
	ECharParam__MagicBlockAddPercent = 137,
	ECharParam__BlockReductionPercent = 138,
	ECharParam__CloseBlockReductionPercent = 139,
	ECharParam__RangeBlockReductionPercent = 140,
	ECharParam__MagicBlockReductionPercent = 141,
	ECharParam__MinBlockDamageReductionPercent = 142,
	ECharParam__MaxBlockDamageReductionPercent = 143,
	ECharParam__MoveSpeedAbsoluteReductionPercent = 144,
	ECharParam__PvPDamageAbsoluteAddPercent = 145,
	ECharParam__PvPCloseDamageAbsoluteAddPercent = 146,
	ECharParam__PvPRangeDamageAbsoluteAddPercent = 147,
	ECharParam__PvPMagicDamageAbsoluteAddPercent = 148,
	ECharParam__PvPAbsoluteReductionPercent = 149,
	ECharParam__PvPCloseAbsoluteReductionPercent = 150,
	ECharParam__PvPRangeAbsoluteReductionPercent = 151,
	ECharParam__PvPMagicAbsoluteReductionPercent = 152,
	ECharParam__DefenseAbsoluteReduction = 153,
	ECharParam__PvPCriticalDamageAddPercent = 154,
	ECharParam__PvPCriticalDamageReductionPercent = 155,
	ECharParam__ExhaustedResistPercent = 156,
	ECharParam__ExhaustedDurationMinusPercent = 157,
	ECharParam__TranscendNormalDamageReductionPercent = 158,
	ECharParam__TranscendSkillDamageReductionPercent = 159,
	ECharParam__TranscendDamageReductionPercent = 160,
	ECharParam__TranscendPvPReductionPercent = 161,
	ECharParam__PullAddPercent     = 162,
	ECharParam__PullResistPercent  = 163,
	ECharParam__ConcussionAddPercent = 164,
	ECharParam__ConcussionResistPercent = 165,
	ECharParam__PvPReductionOffsetPercent = 166,
	ECharParam__ConcussionDurationMinusPercent = 167,
	ECharParam__AbsoluteSlowResistPercent = 168,
	ECharParam__AbsoluteSlowDurationMinusPercent = 169,
	ECharParam__FearResistPercent  = 170,
	ECharParam__FearDurationMinusPercent = 171,
	ECharParam__DisPlayParamEnd    = 172,
	ECharParam__AggroAddPercent    = 173,
	ECharParam__CloseDamageAddPercentPerLostHp = 174,
	ECharParam__CloseReductionDecreasePerLostHp = 175,
	ECharParam__CloseReductionPerLostHp = 176,
	ECharParam__InstantDamageReduction = 177,
	ECharParam__RandomOption       = 178,
	ECharParam__MagicDamageAddPercentPerLostHp = 179,
	ECharParam__SkillConsumptionDecreasePercent = 180,
	ECharParam__AllDamageAddPercentPerLostHp = 181,
	ECharParam__CloseDamageAbsoluteAddPercentPerLostHp = 182,
	ECharParam__CloseAbsoluteReductionPerLostHp = 183,
	ECharParam__HitAvoidancePerLostHp = 184,
	ECharParam__Max                = 185
};


// Enum CommonSource.ERewardReason
enum class FCommonSource_CommonSource_ERewardReason : uint8_t
{
	ERewardReason__None            = 0,
	ERewardReason__ItemSale        = 1,
	ERewardReason__ItemEquip       = 2,
	ERewardReason__ItemMove        = 3,
	ERewardReason__ItemSlotExpand  = 4,
	ERewardReason__ItemEnchant     = 5,
	ERewardReason__ItemUse         = 6,
	ERewardReason__ItemDelete      = 7,
	ERewardReason__ItemLock        = 8,
	ERewardReason__ItemMake        = 9,
	ERewardReason__ItemDismantle   = 10,
	ERewardReason__ItemExpire      = 11,
	ERewardReason__ItemAlteration  = 12,
	ERewardReason__ItemOptionChange = 13,
	ERewardReason__ItemWorkmanship = 14,
	ERewardReason__ItemEvent       = 15,
	ERewardReason__ItemRuneEquip   = 16,
	ERewardReason__ItemRuneDel     = 17,
	ERewardReason__AvatarCompose   = 18,
	ERewardReason__AvatarRandomBox = 19,
	ERewardReason__AvatarDecide    = 20,
	ERewardReason__GemEquip        = 21,
	ERewardReason__GemExtract      = 22,
	ERewardReason__GemCompose      = 23,
	ERewardReason__RuneExtract     = 24,
	ERewardReason__RuneCompose     = 25,
	ERewardReason__RuneUpgrade     = 26,
	ERewardReason__RuneUnEquip     = 27,
	ERewardReason__Cheat           = 28,
	ERewardReason__MonsterDrop     = 29,
	ERewardReason__QuestReward     = 30,
	ERewardReason__DungeonReward   = 31,
	ERewardReason__SkillEnchant    = 32,
	ERewardReason__GuildCreate     = 33,
	ERewardReason__ShopItemBuy     = 34,
	ERewardReason__InteractReward  = 35,
	ERewardReason__PetInteractReward = 36,
	ERewardReason__AchievementReward = 37,
	ERewardReason__CashShopBuy     = 38,
	ERewardReason__CashShopExchangeBuy = 39,
	ERewardReason__Letter          = 40,
	ERewardReason__GuildDonate     = 41,
	ERewardReason__GuildContribution = 42,
	ERewardReason__GuildAttendance = 43,
	ERewardReason__Kill            = 44,
	ERewardReason__PkChase         = 45,
	ERewardReason__AttendanceReward = 46,
	ERewardReason__Collection      = 47,
	ERewardReason__Resurrection    = 48,
	ERewardReason__GuildRaidReward = 49,
	ERewardReason__RealmwarAttend  = 50,
	ERewardReason__RealmwarReward  = 51,
	ERewardReason__RealmwarSeasonReward = 52,
	ERewardReason__Exchange        = 53,
	ERewardReason__ExchangeFees    = 54,
	ERewardReason__VehicleCompose  = 55,
	ERewardReason__VehicleRandom   = 56,
	ERewardReason__PlayerCreate    = 57,
	ERewardReason__WorldBoss       = 58,
	ERewardReason__PartyDungeon    = 59,
	ERewardReason__RefreshRepeatQuest = 60,
	ERewardReason__WayPointMove    = 61,
	ERewardReason__AuctionBid      = 62,
	ERewardReason__ReturnBidFailCash = 63,
	ERewardReason__EventExchage    = 64,
	ERewardReason__SealedStoneActivate = 65,
	ERewardReason__SealedStoneEnchant = 66,
	ERewardReason__SealedEssence   = 67,
	ERewardReason__SavePointMove   = 68,
	ERewardReason__VoidSummoner    = 69,
	ERewardReason__EventMission    = 70,
	ERewardReason__CashShopLimitPackage = 71,
	ERewardReason__ExpRestore      = 72,
	ERewardReason__AvatarChange    = 73,
	ERewardReason__VehicleDecide   = 74,
	ERewardReason__VehicleChange   = 75,
	ERewardReason__Prologue        = 76,
	ERewardReason__DeathPenalty    = 77,
	ERewardReason__OdinPass        = 78,
	ERewardReason__EliteDungeon    = 79,
	ERewardReason__InstanceDungeon = 80,
	ERewardReason__GuildRaid       = 81,
	ERewardReason__RealmWar        = 82,
	ERewardReason__ItemEnchantFail = 83,
	ERewardReason__Imprint         = 84,
	ERewardReason__RelicGambleRefresh = 85,
	ERewardReason__RelicGamble     = 86,
	ERewardReason__KakaoLetter     = 87,
	ERewardReason__OdinCouponUse   = 88,
	ERewardReason__VehicleExpire   = 89,
	ERewardReason__VoidSummonsMonsterSummon = 90,
	ERewardReason__ExchangeExpire  = 91,
	ERewardReason__RelicEnchant    = 92,
	ERewardReason__EventBingo      = 93,
	ERewardReason__CostumeRandomBox = 94,
	ERewardReason__CostumeExpire   = 95,
	ERewardReason__TreasureMapBox  = 96,
	ERewardReason__VoidDungeon     = 97,
	ERewardReason__VoidDungeonPK   = 98,
	ERewardReason__WorldEliteDungeon = 99,
	ERewardReason__SealedStoneTranscendence = 100,
	ERewardReason__BlessingSlotOpen = 101,
	ERewardReason__BlessingRandomBox = 102,
	ERewardReason__BlessingCompose = 103,
	ERewardReason__BlessingTransform = 104,
	ERewardReason__SealedStoneTranscendenceEnchant = 105,
	ERewardReason__WeaponShapeCompose = 106,
	ERewardReason__WeaponShapeChange = 107,
	ERewardReason__WeaponShapeDecide = 108,
	ERewardReason__WeaponShapeRandomBox = 109,
	ERewardReason__EventDraw       = 110,
	ERewardReason__VoidDungeonSpecialMonster = 111,
	ERewardReason__BlessingStoneEquip = 112,
	ERewardReason__CastleWarBid    = 113,
	ERewardReason__RuneExchange    = 114,
	ERewardReason__BlessingSlotSymbolChange = 115,
	ERewardReason__CastleWar       = 116,
	ERewardReason__CastleWarMercenary = 117,
	ERewardReason__AvatarExpire    = 118,
	ERewardReason__GuildDefense    = 119,
	ERewardReason__GuildItemMake   = 120,
	ERewardReason__ShadowDungeonReward = 121,
	ERewardReason__ClassChange     = 122,
	ERewardReason__BlessingStoneUnEquip = 123,
	ERewardReason__EventRockPapperScissors = 124,
	ERewardReason__EventStepExchage = 125,
	ERewardReason__EventEnchantGame = 126,
	ERewardReason__BlessingSlotSymbolChangeLock = 127,
	ERewardReason__InteractStart   = 128,
	ERewardReason__ExchangeCoupon  = 129,
	ERewardReason__ItemPetOption   = 130,
	ERewardReason__EventRockPapperScissorsEx = 131,
	ERewardReason__EventLionRoulette = 132,
	ERewardReason__WorldDungeonBoss = 133,
	ERewardReason__SkillTranscend  = 134,
	ERewardReason__ImprintSpecial  = 135,
	ERewardReason__InfinityDungeon = 136,
	ERewardReason__Stronghold      = 137,
	ERewardReason__ClassChange_NoSelected = 138,
	ERewardReason__InfinityDungeon_AreaPass = 139,
	ERewardReason__SkillTranscendReset = 140,
	ERewardReason__SkillTranscendRestore = 141,
	ERewardReason__CostumeDelete   = 142,
	ERewardReason__ExchangeCashShopMileage = 143,
	ERewardReason__ExchangeCancel  = 144,
	ERewardReason__RuneSetEnchantReset = 145,
	ERewardReason__GuildExtractContribution = 146,
	ERewardReason__LinkSlotOpen    = 147,
	ERewardReason__RuneSetEnchant  = 148,
	ERewardReason__RuneAttributeChange = 149,
	ERewardReason__InfinityDungeon_Season = 150,
	ERewardReason__LinkSummonCountCharge = 151,
	ERewardReason__GuildBattleFieldWin = 152,
	ERewardReason__GuildBattleFieldEnter = 153,
	ERewardReason__LinkBoardReset  = 154,
	ERewardReason__GuildNameChange = 155,
	ERewardReason__AuctionFailItemReturn = 156,
	ERewardReason__Scheduler       = 157,
	ERewardReason__EventRoskvaDice = 158,
	ERewardReason__CostumeDyeing   = 159,
	ERewardReason__RandomGuarantee = 160,
	ERewardReason__Alchemy         = 161,
	ERewardReason__BlessingStoneExchange = 162,
	ERewardReason__PetCompose      = 163,
	ERewardReason__PetChange       = 164,
	ERewardReason__PetDecide       = 165,
	ERewardReason__PetRandomBox    = 166,
	ERewardReason__PetExpire       = 167,
	ERewardReason__PetSkillEnableTime = 168,
	ERewardReason__PetGuardianChangeBoardCondition = 169,
	ERewardReason__PetGuardianChangeBoardOption = 170,
	ERewardReason__BlessingSlotEnchantLock = 171,
	ERewardReason__BlessingSlotEnchant = 172,
	ERewardReason__RuneWordMatch   = 173,
	ERewardReason__AlchemyHeating  = 174,
	ERewardReason__ReplacementItem = 175,
	ERewardReason__ServerInvasionQuest = 176,
	ERewardReason__ServerInvasionEnter = 177,
	ERewardReason__ServerInvasionObject = 178,
	ERewardReason__ServerInvasionEnd = 179,
	ERewardReason__ServerInvasionPKRanking = 180,
	ERewardReason__ServerInvasionQuestRefresh = 181,
	ERewardReason__ServerInvasionShopBuy = 182,
	ERewardReason__Max             = 183
};


// Enum CommonSource.EBindType
enum class FCommonSource_CommonSource_EBindType : uint8_t
{
	EBindType__Account             = 0,
	EBindType__Player              = 1,
	EBindType__None                = 2,
	EBindType__Max                 = 3
};


// Enum CommonSource.ELanguage
enum class FCommonSource_CommonSource_ELanguage : uint8_t
{
	ELanguage__None                = 0,
	ELanguage__Korean              = 1,
	ELanguage__Japanese            = 2,
	ELanguage__TraditionalChinese  = 3,
	ELanguage__SimplifiedChinese   = 4,
	ELanguage__English             = 5,
	ELanguage__Thai                = 6,
	ELanguage__Spain               = 7,
	ELanguage__SimplifiedChinese_CN = 8,
	ELanguage__Max                 = 9
};


// Enum CommonSource.EContentsType
enum class FCommonSource_CommonSource_EContentsType : uint8_t
{
	EContentsType__None            = 0,
	EContentsType__CashShop        = 1,
	EContentsType__Attendance      = 2,
	EContentsType__Event           = 3,
	EContentsType__LimitPackage    = 4,
	EContentsType__SkillBook       = 5,
	EContentsType__Avatar          = 6,
	EContentsType__Vehicle         = 7,
	EContentsType__ItemCollection  = 8,
	EContentsType__Exchange        = 9,
	EContentsType__ItemMake        = 10,
	EContentsType__Quest           = 11,
	EContentsType__VillageRequest  = 12,
	EContentsType__Achievement     = 13,
	EContentsType__SealedStone     = 14,
	EContentsType__Rune            = 15,
	EContentsType__Guild           = 16,
	EContentsType__Dungeon         = 17,
	EContentsType__Realmwar        = 18,
	EContentsType__PK              = 19,
	EContentsType__LetterBox       = 20,
	EContentsType__ExchangeEventNpc = 21,
	EContentsType__ShopNpc         = 22,
	EContentsType__Warehouse       = 23,
	EContentsType__ItemDismantle   = 24,
	EContentsType__ItemWorkmanship = 25,
	EContentsType__ItemEnchant     = 26,
	EContentsType__Inventory       = 27,
	EContentsType__Alarm           = 28,
	EContentsType__Friend          = 29,
	EContentsType__SavePoint       = 30,
	EContentsType__GuildRaidDungeon = 31,
	EContentsType__RelicGamble     = 32,
	EContentsType__Imprint         = 33,
	EContentsType__Banword         = 34,
	EContentsType__Maintenance     = 35,
	EContentsType__WorldBoss       = 36,
	EContentsType__ConflictDungeon = 37,
	EContentsType__AvatarRandomBox = 38,
	EContentsType__AvatarCompose   = 39,
	EContentsType__VehicleRandomBox = 40,
	EContentsType__VehicleCompose  = 41,
	EContentsType__RuneRandomBox   = 42,
	EContentsType__RuneCompose     = 43,
	EContentsType__RuneUpgrade     = 44,
	EContentsType__GuildAuction    = 45,
	EContentsType__PartyDungeon    = 46,
	EContentsType__EliteDungeon    = 47,
	EContentsType__ExchangeBuy     = 48,
	EContentsType__ExchangeSell    = 49,
	EContentsType__WorldDungeon    = 50,
	EContentsType__Costume         = 51,
	EContentsType__Schedule        = 52,
	EContentsType__LeaveMode       = 53,
	EContentsType__WorldMap        = 54,
	EContentsType__VoidSummonsMonster = 55,
	EContentsType__VoidSummoner    = 56,
	EContentsType__Duel            = 57,
	EContentsType__Blessing        = 58,
	EContentsType__WorldEliteDungeon = 59,
	EContentsType__GuildStronghold = 60,
	EContentsType__Slayer          = 61,
	EContentsType__SealedStone_Second = 62,
	EContentsType__WeaponShape     = 63,
	EContentsType__WeaponShapeRandomBox = 64,
	EContentsType__WeaponShapeCompose = 65,
	EContentsType__BlessingStoneRandomBox = 66,
	EContentsType__BlessingStoneCompose = 67,
	EContentsType__BlessingStoneTranform = 68,
	EContentsType__CastleWar       = 69,
	EContentsType__BillingAosPc    = 70,
	EContentsType__RuneExchange    = 71,
	EContentsType__Battle          = 72,
	EContentsType__NameChangeItem  = 73,
	EContentsType__ServerMigration = 74,
	EContentsType__PresetShortCut  = 75,
	EContentsType__SkillPresetShortCut = 76,
	EContentsType__EquipPresetShortCut = 77,
	EContentsType__GuildDefenseDungeon = 78,
	EContentsType__Ranking         = 79,
	EContentsType__ShadowDungeon   = 80,
	EContentsType__GuildItemMake   = 81,
	EContentsType__AvatarCostume   = 82,
	EContentsType__WeaponShapeCostume = 83,
	EContentsType__CharacterInfo   = 84,
	EContentsType__SkillBookNPC    = 85,
	EContentsType__ClassChange     = 86,
	EContentsType__ChampionsDungeon = 87,
	EContentsType__WayPoint        = 88,
	EContentsType__VehicleCostume  = 89,
	EContentsType__Realmwar_Second = 90,
	EContentsType__AgeVerification = 91,
	EContentsType__SpecificCommercialLaw = 92,
	EContentsType__BuyFreeCashDivision = 93,
	EContentsType__ImprintSpecialize = 94,
	EContentsType__PetOption       = 95,
	EContentsType__InfinityDungeon = 96,
	EContentsType__AutoBattle      = 97,
	EContentsType__ItemAutoUse     = 98,
	EContentsType__SkillAutoUse    = 99,
	EContentsType__PotionAutoUse   = 100,
	EContentsType__SleepMode       = 101,
	EContentsType__DefaultMannerMode = 102,
	EContentsType__LanguageChangeOption = 103,
	EContentsType__SkillTranscend  = 104,
	EContentsType__ShowAddProductInfo = 105,
	EContentsType__ShowSetEffectInfo = 106,
	EContentsType__SealedStone_AutoEnchant = 107,
	EContentsType__SealedStone_AutoTranscendenceEnchant = 108,
	EContentsType__ThirdClass      = 109,
	EContentsType__StrongholdImprovement = 110,
	EContentsType__ClassChange_Renewal = 111,
	EContentsType__AutoTarget      = 112,
	EContentsType__CashMileage     = 113,
	EContentsType__AutoCounterAtkExtend = 114,
	EContentsType__RuneImprovement = 115,
	EContentsType__Link            = 116,
	EContentsType__GuildEXP_Extraction = 117,
	EContentsType__AutoMove        = 118,
	EContentsType__PopupMode       = 119,
	EContentsType__CastleWarTaxSafety = 120,
	EContentsType__CastleWarTaxDistribution = 121,
	EContentsType__CastlewarMercenaryTaxDistribution = 122,
	EContentsType__GuildBattlefield = 123,
	EContentsType__TargetEffectImprovement = 124,
	EContentsType__AutoScheduler   = 125,
	EContentsType__GuidePillar     = 126,
	EContentsType__QuickSlot_ToolTip_AutoModeClick = 127,
	EContentsType__SleepMode_ActiveButton = 128,
	EContentsType__RelicCollectionMinEnchant_Display = 129,
	EContentsType__Server_PacketDelayTime = 130,
	EContentsType__Costume_Dyeing  = 131,
	EContentsType__WorldShadowDungeon = 132,
	EContentsType__CashShopRandomGuarantee = 133,
	EContentsType__IntegratedPresetControl = 134,
	EContentsType__BlessingSlotEnchant = 135,
	EContentsType__BlessingStoneExchange = 136,
	EContentsType__Alchemy         = 137,
	EContentsType__Pet             = 138,
	EContentsType__PetRandomBox    = 139,
	EContentsType__PetCompose      = 140,
	EContentsType__ChainProduct    = 141,
	EContentsType__WorldEliteDungeon_MatchingExtension = 142,
	EContentsType__PetGuardian     = 143,
	EContentsType__WorldShadowEliteMonster = 144,
	EContentsType__ServerInvasion  = 145,
	EContentsType__BlessedWorldBoss = 146,
	EContentsType__Translate       = 147,
	EContentsType__GuildRaidDungeon_Second = 148,
	EContentsType__Max             = 149
};


// Enum CommonSource.EClassType
enum class FCommonSource_CommonSource_EClassType : uint8_t
{
	EClassType__None               = 0,
	EClassType__Warrior_Common     = 1,
	EClassType__Warrior_Warrior    = 2,
	EClassType__Warrior_Defender   = 3,
	EClassType__Warrior_Berserker  = 4,
	EClassType__Warrior_ThunderBringer = 5,
	EClassType__Warrior_Forth      = 6,
	EClassType__Sorceress_Common   = 7,
	EClassType__Sorceress_Sorceress = 8,
	EClassType__Sorceress_ArchMage = 9,
	EClassType__Sorceress_DarkMagician = 10,
	EClassType__Sorceress_Enchantress = 11,
	EClassType__Sorceress_Forth    = 12,
	EClassType__Rogue_Common       = 13,
	EClassType__Rogue_Rogue        = 14,
	EClassType__Rogue_Sniper       = 15,
	EClassType__Rogue_Assassin     = 16,
	EClassType__Rogue_Huntress     = 17,
	EClassType__Rogue_Forth        = 18,
	EClassType__Priest_Common      = 19,
	EClassType__Priest_Priest      = 20,
	EClassType__Priest_Saint       = 21,
	EClassType__Priest_Paladin     = 22,
	EClassType__Priest_Bard        = 23,
	EClassType__Priest_Sacrifice   = 24,
	EClassType__ShieldMaiden_Common = 25,
	EClassType__ShieldMaiden_ShieldMaiden = 26,
	EClassType__ShieldMaiden_Valkyrie = 27,
	EClassType__ShieldMaiden_Axler = 28,
	EClassType__ShieldMaiden_Destroyer = 29,
	EClassType__ShieldMaiden_Forth = 30,
	EClassType__Class_Common       = 31,
	EClassType__CastlewarClass_Tanker = 32,
	EClassType__CastlewarClass_Dealer = 33,
	EClassType__CastlewarClass_Healer = 34,
	EClassType__CastlewarClass_Healer2 = 35,
	EClassType__CastlewarClass_LongRange = 36,
	EClassType__Max                = 37
};


// Enum CommonSource.ERandomResultType
enum class FCommonSource_CommonSource_ERandomResultType : uint8_t
{
	ERandomResultType__Fail        = 0,
	ERandomResultType__Success     = 1,
	ERandomResultType__GreatSuccess = 2,
	ERandomResultType__CurseSuccess = 3,
	ERandomResultType__CurseFail   = 4,
	ERandomResultType__OdinFail    = 5,
	ERandomResultType__ThorFail    = 6,
	ERandomResultType__Max         = 7
};


// Enum CommonSource.EGameEventType
enum class FCommonSource_CommonSource_EGameEventType : uint8_t
{
	EGameEventType__None           = 0,
	EGameEventType__CollectionEvent = 1,
	EGameEventType__ExchangeEvent  = 2,
	EGameEventType__AttendanceEvent = 3,
	EGameEventType__MissionEvent   = 4,
	EGameEventType__ItemEnchantCost = 5,
	EGameEventType__ItemWorkmanshipCost = 6,
	EGameEventType__VehicleWayPointCost = 7,
	EGameEventType__RuneDisMountCost = 8,
	EGameEventType__SealedStoneEnchantCost = 9,
	EGameEventType__SealedEssenceCost = 10,
	EGameEventType__GoldDropPercent = 11,
	EGameEventType__ExpDropPercent = 12,
	EGameEventType__ItemDropPercent = 13,
	EGameEventType__GreatSuccessProb = 14,
	EGameEventType__PaymentPromotion = 15,
	EGameEventType__TotalPaymentPromotion = 16,
	EGameEventType__VoidSummoner   = 17,
	EGameEventType__OdinCoupon     = 18,
	EGameEventType__Bingo          = 19,
	EGameEventType__Draw           = 20,
	EGameEventType__EventItemMake  = 21,
	EGameEventType__VoidSummonerPortal = 22,
	EGameEventType__OfficialCafe   = 23,
	EGameEventType__ClassChange    = 24,
	EGameEventType__RockPapperScissors = 25,
	EGameEventType__StepExchangeEvent = 26,
	EGameEventType__EnchantGame    = 27,
	EGameEventType__ExchangeCoupon = 28,
	EGameEventType__RockPapperScissorsEx = 29,
	EGameEventType__LionRoulette   = 30,
	EGameEventType__RelicGambleCost = 31,
	EGameEventType__CashShopGachaDiscount = 32,
	EGameEventType__GuildAttendanceEvent = 33,
	EGameEventType__RoskvaDice     = 34,
	EGameEventType__EventQuest     = 35,
	EGameEventType__PaymentStackPromotion = 36,
	EGameEventType__RuneWordMatch  = 37,
	EGameEventType__BlessedWorldBoss = 38,
	EGameEventType__BlessedFieldBoss = 39,
	EGameEventType__Max            = 40
};


// Enum CommonSource.EGrade
enum class FCommonSource_CommonSource_EGrade : uint8_t
{
	EGrade__Normal                 = 0,
	EGrade__High                   = 1,
	EGrade__Rare                   = 2,
	EGrade__Hero                   = 3,
	EGrade__Legend                 = 4,
	EGrade__Myth                   = 5,
	EGrade__Not_Used               = 6,
	EGrade__Event                  = 7,
	EGrade__Ancient                = 8,
	EGrade__Origin                 = 9,
	EGrade__Genesis                = 10,
	EGrade__Max                    = 11
};


// Enum CommonSource.EResourceType
enum class FCommonSource_CommonSource_EResourceType : uint8_t
{
	EResourceType__None            = 0,
	EResourceType__Item            = 1,
	EResourceType__BuyCash         = 2,
	EResourceType__FreeCash        = 3,
	EResourceType__Gold            = 4,
	EResourceType__PlayerExp       = 5,
	EResourceType__RandomBox       = 6,
	EResourceType__RandomPackage   = 7,
	EResourceType__EventBuff       = 8,
	EResourceType__GuildCoin       = 9,
	EResourceType__GuildContribution = 10,
	EResourceType__RealmwarCoin    = 11,
	EResourceType__Vehicle         = 12,
	EResourceType__Avatar          = 13,
	EResourceType__Mileage         = 14,
	EResourceType__Badge           = 15,
	EResourceType__FreeDungeonEntranceCount = 16,
	EResourceType__SealedEssence   = 17,
	EResourceType__Rune            = 18,
	EResourceType__MimirWisdom     = 19,
	EResourceType__OdinPassPoint   = 20,
	EResourceType__AvatarExp       = 21,
	EResourceType__EventPoint      = 22,
	EResourceType__Costume         = 23,
	EResourceType__BlessingStone   = 24,
	EResourceType__WeaponShape     = 25,
	EResourceType__EventDrawPoint  = 26,
	EResourceType__ShadowCoin      = 27,
	EResourceType__CashMileage     = 28,
	EResourceType__RandomChoice    = 29,
	EResourceType__ShadowPoint     = 30,
	EResourceType__CastlewarCoin   = 31,
	EResourceType__GuardianCoin    = 32,
	EResourceType__EventLionRoulettePoint = 33,
	EResourceType__HellCoin        = 34,
	EResourceType__HellPoint       = 35,
	EResourceType__Pet             = 36,
	EResourceType__ServerInvasionCoin = 37,
	EResourceType__Max             = 38
};


// Enum CommonSource.ERuneSetOption
enum class FCommonSource_CommonSource_ERuneSetOption : uint8_t
{
	ERuneSetOption__None           = 0,
	ERuneSetOption__Brave          = 1,
	ERuneSetOption__Wise           = 2,
	ERuneSetOption__Concentration  = 3,
	ERuneSetOption__Hit            = 4,
	ERuneSetOption__Guardian       = 5,
	ERuneSetOption__Sharp          = 6,
	ERuneSetOption__Gale           = 7,
	ERuneSetOption__Growth         = 8,
	ERuneSetOption__Max            = 9
};


// Enum CommonSource.EAchievementShareType
enum class FCommonSource_CommonSource_EAchievementShareType : uint8_t
{
	EAchievementShareType__Character = 0,
	EAchievementShareType__Account = 1,
	EAchievementShareType__Max     = 2
};


// Enum CommonSource.EAchievementCategory
enum class FCommonSource_CommonSource_EAchievementCategory : uint8_t
{
	EAchievementCategory__Growth   = 0,
	EAchievementCategory__Adventure = 1,
	EAchievementCategory__Battle   = 2,
	EAchievementCategory__Item     = 3,
	EAchievementCategory__PVP      = 4,
	EAchievementCategory__Normal   = 5,
	EAchievementCategory__Communite = 6,
	EAchievementCategory__Max      = 7
};


// Enum CommonSource.EAchievementClearCountType
enum class FCommonSource_CommonSource_EAchievementClearCountType : uint8_t
{
	EAchievementClearCountType__Accumulation = 0,
	EAchievementClearCountType__CurrentValue = 1,
	EAchievementClearCountType__MaxValue = 2,
	EAchievementClearCountType__ExclusiveValue = 3,
	EAchievementClearCountType__CurrentValueUnder = 4,
	EAchievementClearCountType__Max = 5
};


// Enum CommonSource.EAchievementMissionType
enum class FCommonSource_CommonSource_EAchievementMissionType : uint8_t
{
	EAchievementMissionType__None  = 0,
	EAchievementMissionType__AvatarRandomBox = 1,
	EAchievementMissionType__AvatarCompose = 2,
	EAchievementMissionType__VehicleRandomBox = 3,
	EAchievementMissionType__VehicleCompose = 4,
	EAchievementMissionType__SkillEnchantSuccess = 5,
	EAchievementMissionType__SkillEnchantFail = 6,
	EAchievementMissionType__SpendGold = 7,
	EAchievementMissionType__SpendCash = 8,
	EAchievementMissionType__Dead  = 9,
	EAchievementMissionType__PlayerLevel = 10,
	EAchievementMissionType__BattlePower = 11,
	EAchievementMissionType__Attack = 12,
	EAchievementMissionType__Defense = 13,
	EAchievementMissionType__HitAccuracy = 14,
	EAchievementMissionType__HitAvoidance = 15,
	EAchievementMissionType__MainQuestClear = 16,
	EAchievementMissionType__RepeatQuestClear = 17,
	EAchievementMissionType__Gathering = 18,
	EAchievementMissionType__Mining = 19,
	EAchievementMissionType__Woodcutting = 20,
	EAchievementMissionType__FloatCollection = 21,
	EAchievementMissionType__GatheringGreatSuccess = 22,
	EAchievementMissionType__MiningGreatSuccess = 23,
	EAchievementMissionType__WoodcuttingGreatSuccess = 24,
	EAchievementMissionType__FloatCollectionGreatSuccess = 25,
	EAchievementMissionType__DestroyObject = 26,
	EAchievementMissionType__TreasureBoxOpen = 27,
	EAchievementMissionType__HiddenTreasureBoxOpen = 28,
	EAchievementMissionType__MonsterKill = 29,
	EAchievementMissionType__SpecificMonsterKill = 30,
	EAchievementMissionType__SpecificMapMonsterKill = 31,
	EAchievementMissionType__DungeonGroupMonsterKill = 32,
	EAchievementMissionType__PartyDungeonClear = 33,
	EAchievementMissionType__GuildRaidClear = 34,
	EAchievementMissionType__WorldBossClear = 35,
	EAchievementMissionType__GradeMonsterKill = 36,
	EAchievementMissionType__PartyDungeonSingleClear = 37,
	EAchievementMissionType__FieldBossClear = 38,
	EAchievementMissionType__RealmwarWin = 39,
	EAchievementMissionType__RealmwarPoint = 40,
	EAchievementMissionType__RealmwarKill = 41,
	EAchievementMissionType__PKCount = 42,
	EAchievementMissionType__EquipmentGet = 43,
	EAchievementMissionType__EquipmentOverGradeGet = 44,
	EAchievementMissionType__EquipmentMake = 45,
	EAchievementMissionType__GradeEquipmentMakeSuccess = 46,
	EAchievementMissionType__EquipmentMakeGreatSuccess = 47,
	EAchievementMissionType__EquipmentMakeFail = 48,
	EAchievementMissionType__EquipmentDismantle = 49,
	EAchievementMissionType__EquipmentWorkmanship = 50,
	EAchievementMissionType__EquipmentEnchant = 51,
	EAchievementMissionType__EquipmentEnchantFail = 52,
	EAchievementMissionType__EquipmentBlessEnchantSuccess = 53,
	EAchievementMissionType__WeaponEnchant = 54,
	EAchievementMissionType__ArmorEnchant = 55,
	EAchievementMissionType__AccessoryEnchant = 56,
	EAchievementMissionType__WeaponEnchantSuccess = 57,
	EAchievementMissionType__ArmorEnchantSuccess = 58,
	EAchievementMissionType__AccessoryEnchantSuccess = 59,
	EAchievementMissionType__EquipmentSale = 60,
	EAchievementMissionType__GuildEnter = 61,
	EAchievementMissionType__GuildDonate = 62,
	EAchievementMissionType__GuildAttend = 63,
	EAchievementMissionType__FriendCount = 64,
	EAchievementMissionType__MainWatchAdd = 65,
	EAchievementMissionType__ViewPoint = 66,
	EAchievementMissionType__CollectionComplete = 67,
	EAchievementMissionType__ExchangeComplete = 68,
	EAchievementMissionType__AchievementComplete = 69,
	EAchievementMissionType__SealedEnchant = 70,
	EAchievementMissionType__SealedEssence = 71,
	EAchievementMissionType__RuneGet = 72,
	EAchievementMissionType__RuneCompose = 73,
	EAchievementMissionType__RealmwarPlay = 74,
	EAchievementMissionType__PotionBuy = 75,
	EAchievementMissionType__ImprintItemUse = 76,
	EAchievementMissionType__ImprintOptionChange = 77,
	EAchievementMissionType__RelicItemEnchant = 78,
	EAchievementMissionType__RelicItemEnchantSuccess = 79,
	EAchievementMissionType__RelicItemEnchantFail = 80,
	EAchievementMissionType__AvatarGradeCompose = 81,
	EAchievementMissionType__VehicleGradeCompose = 82,
	EAchievementMissionType__SkillEnchant = 83,
	EAchievementMissionType__Imprint = 84,
	EAchievementMissionType__SpecificEquipmentMake = 85,
	EAchievementMissionType__SpecificEquipmentMakeSuccess = 86,
	EAchievementMissionType__GuildRaidJoin = 87,
	EAchievementMissionType__RelicGamble = 88,
	EAchievementMissionType__RelicItemEnchantGrade = 89,
	EAchievementMissionType__DuelClear = 90,
	EAchievementMissionType__WorldDungeonJoin = 91,
	EAchievementMissionType__WorldDungeonWIn = 92,
	EAchievementMissionType__OverGradeEquipmentMakeSuccess = 93,
	EAchievementMissionType__WeaponShapeGet = 94,
	EAchievementMissionType__WeaponShapeCompose = 95,
	EAchievementMissionType__WeaponShapeGradeCompose = 96,
	EAchievementMissionType__WeaponShapeTreasureBoxOpen = 97,
	EAchievementMissionType__BlessingStoneGet = 98,
	EAchievementMissionType__BlessingStoneCompose = 99,
	EAchievementMissionType__BlessingStoneTransform = 100,
	EAchievementMissionType__BlessingSymbolChange = 101,
	EAchievementMissionType__CashAccessoryEnchant = 102,
	EAchievementMissionType__CashAccessoryEnchantFail = 103,
	EAchievementMissionType__CashAccessoryEnchantSuccess = 104,
	EAchievementMissionType__GuildDefenseClear = 105,
	EAchievementMissionType__GuildDefenseJoin = 106,
	EAchievementMissionType__GradeGroupItemEnchantTry = 107,
	EAchievementMissionType__GradeGroupItemMoreEnchantTry = 108,
	EAchievementMissionType__ItemGet = 109,
	EAchievementMissionType__ImprintSpecial = 110,
	EAchievementMissionType__WorldDungeonChampionsWin = 111,
	EAchievementMissionType__InfinityDungeonFloorAreaClear = 112,
	EAchievementMissionType__InfintiyDungeonClear = 113,
	EAchievementMissionType__InfinityDungeonFloorClear = 114,
	EAchievementMissionType__InfinityDungeonBattleTypeClear = 115,
	EAchievementMissionType__RuneExchange = 116,
	EAchievementMissionType__GuildMemberAttendanceCount = 117,
	EAchievementMissionType__GuildMemberAttendanceAccu = 118,
	EAchievementMissionType__LinkSummonCount = 119,
	EAchievementMissionType__PaymentTotal = 120,
	EAchievementMissionType__BuyCountTotal = 121,
	EAchievementMissionType__PaymentAverage = 122,
	EAchievementMissionType__PaymentMonth = 123,
	EAchievementMissionType__BuyCountMonth = 124,
	EAchievementMissionType__PaymentAverageMonth = 125,
	EAchievementMissionType__PaymentWeek = 126,
	EAchievementMissionType__BuyCountWeek = 127,
	EAchievementMissionType__PaymentAverageWeek = 128,
	EAchievementMissionType__AvatarCollectionCount = 129,
	EAchievementMissionType__VehicleCollectionCount = 130,
	EAchievementMissionType__WeaponShapeCollectionCount = 131,
	EAchievementMissionType__ItemCollectionCount = 132,
	EAchievementMissionType__RelicGambleHigh = 133,
	EAchievementMissionType__ImprintSuccess = 134,
	EAchievementMissionType__ImprintSpecialDecide = 135,
	EAchievementMissionType__BlessingSymbolCount = 136,
	EAchievementMissionType__RuneSetEnchant = 137,
	EAchievementMissionType__RuneSetEnchantSuccess = 138,
	EAchievementMissionType__RuneSetEnchantFail = 139,
	EAchievementMissionType__RuneSetEnchantStep = 140,
	EAchievementMissionType__GuildBattlefieldParticipation = 141,
	EAchievementMissionType__BlessingBoardSlotEnchant = 142,
	EAchievementMissionType__InfinityDungeonClearCount = 143,
	EAchievementMissionType__PetRandomBox = 144,
	EAchievementMissionType__PetCompose = 145,
	EAchievementMissionType__PetGradeCompose = 146,
	EAchievementMissionType__PetCollectionCount = 147,
	EAchievementMissionType__PetGuardianConditionChangeCount = 148,
	EAchievementMissionType__PetGuardianOptionChangeCount = 149,
	EAchievementMissionType__PetGuardianActivate = 150,
	EAchievementMissionType__AlchemyMakingCount = 151,
	EAchievementMissionType__AlchemyHeatingCount = 152,
	EAchievementMissionType__BlessedWorldBossClear = 153,
	EAchievementMissionType__InvasionObjectKill = 154,
	EAchievementMissionType__InvasionDefenceKill = 155,
	EAchievementMissionType__InvasionAttackKill = 156,
	EAchievementMissionType__InvasionFieldSubBossLoot = 157,
	EAchievementMissionType__InvasionFieldBossLoot = 158,
	EAchievementMissionType__HighAlchemyMakingCount = 159,
	EAchievementMissionType__HighAlchemyHeatingCount = 160,
	EAchievementMissionType__RuneGradeCompose = 161,
	EAchievementMissionType__BlessingStoneGradeCompose = 162,
	EAchievementMissionType__Max   = 163
};


// Enum CommonSource.EAchievementState
enum class FCommonSource_CommonSource_EAchievementState : uint8_t
{
	EAchievementState__Doing       = 0,
	EAchievementState__Clear       = 1,
	EAchievementState__Finish      = 2,
	EAchievementState__Max         = 3
};


// Enum CommonSource.EAlchemyDeleteType
enum class FCommonSource_CommonSource_EAlchemyDeleteType : uint8_t
{
	EAlchemyDeleteType__None       = 0,
	EAlchemyDeleteType__ExpireDate = 1,
	EAlchemyDeleteType__HeatingFail = 2,
	EAlchemyDeleteType__AlchemyMaking = 3,
	EAlchemyDeleteType__Cheat      = 4,
	EAlchemyDeleteType__EAlchemyDeleteType_MAX = 5
};


// Enum CommonSource.EAlchemyType
enum class FCommonSource_CommonSource_EAlchemyType : uint8_t
{
	EAlchemyType__BaseOption       = 0,
	EAlchemyType__OptionValuePercent = 1,
	EAlchemyType__OptionCountPercent = 2,
	EAlchemyType__EAlchemyType_MAX = 3
};


// Enum CommonSource.EBuffTargetType
enum class FCommonSource_CommonSource_EBuffTargetType : uint8_t
{
	EBuffTargetType__All           = 0,
	EBuffTargetType__MonsterAll    = 1,
	EBuffTargetType__MonsterNormal = 2,
	EBuffTargetType__MonsterBoss   = 3,
	EBuffTargetType__Player        = 4,
	EBuffTargetType__Max           = 5
};


// Enum CommonSource.EInstinctType
enum class FCommonSource_CommonSource_EInstinctType : uint8_t
{
	EInstinctType__HuntInstinct    = 0,
	EInstinctType__DuelInstinct    = 1,
	EInstinctType__Max             = 2
};


// Enum CommonSource.ESkillEnchantType
enum class FCommonSource_CommonSource_ESkillEnchantType : uint8_t
{
	ESkillEnchantType__EnchantSkill = 0,
	ESkillEnchantType__TranscendSkill = 1,
	ESkillEnchantType__ESkillEnchantType_MAX = 2
};


// Enum CommonSource.EDoubleAttackType
enum class FCommonSource_CommonSource_EDoubleAttackType : uint8_t
{
	EDoubleAttackType__None        = 0,
	EDoubleAttackType__DoubleAttack = 1,
	EDoubleAttackType__Resist      = 2,
	EDoubleAttackType__Max         = 3
};


// Enum CommonSource.ESkillTranscendResultType
enum class FCommonSource_CommonSource_ESkillTranscendResultType : uint8_t
{
	ESkillTranscendResultType__Fail = 0,
	ESkillTranscendResultType__Success = 1,
	ESkillTranscendResultType__GreatSuccess = 2,
	ESkillTranscendResultType__Max = 3
};


// Enum CommonSource.ESkillTranscendType
enum class FCommonSource_CommonSource_ESkillTranscendType : uint8_t
{
	ESkillTranscendType__None      = 0,
	ESkillTranscendType__DamageAddPercent = 1,
	ESkillTranscendType__DamageAddPercent2 = 2,
	ESkillTranscendType__CoolTimeReductionPercent = 3,
	ESkillTranscendType__MpConsumptionDecreasePercent = 4,
	ESkillTranscendType__SkillTimeReductionPercent = 5,
	ESkillTranscendType__BuffAddDuration = 6,
	ESkillTranscendType__HitTargetCountAdd = 7,
	ESkillTranscendType__BuffReduceDuration = 8,
	ESkillTranscendType__HitAddProb = 9,
	ESkillTranscendType__SpecialCharParam = 10,
	ESkillTranscendType__SpecialBuff = 11,
	ESkillTranscendType__SpecialBuff2 = 12,
	ESkillTranscendType__SpecialBuff3 = 13,
	ESkillTranscendType__HpEffectAddValue = 14,
	ESkillTranscendType__AdditionalBuff = 15,
	ESkillTranscendType__SkillShootBuff = 16,
	ESkillTranscendType__Max       = 17
};


// Enum CommonSource.ECriticalType
enum class FCommonSource_CommonSource_ECriticalType : uint8_t
{
	ECriticalType__None            = 0,
	ECriticalType__Critical        = 1,
	ECriticalType__Resist          = 2,
	ECriticalType__Max             = 3
};


// Enum CommonSource.EBuffDivision
enum class FCommonSource_CommonSource_EBuffDivision : uint8_t
{
	EBuffDivision__Buff            = 0,
	EBuffDivision__Debuff          = 1,
	EBuffDivision__Etc             = 2,
	EBuffDivision__Max             = 3
};


// Enum CommonSource.EBuffUniqueIDType
enum class FCommonSource_CommonSource_EBuffUniqueIDType : uint8_t
{
	EBuffUniqueIDType__BuffType    = 0,
	EBuffUniqueIDType__BuffIndex   = 1,
	EBuffUniqueIDType__BuffGroup   = 2,
	EBuffUniqueIDType__Max         = 3
};


// Enum CommonSource.ESkillEnchantResult
enum class FCommonSource_CommonSource_ESkillEnchantResult : uint8_t
{
	ESkillEnchantResult__Success   = 0,
	ESkillEnchantResult__Failure   = 1,
	ESkillEnchantResult__GreatFailure = 2,
	ESkillEnchantResult__Max       = 3
};


// Enum CommonSource.EPKRuleType
enum class FCommonSource_CommonSource_EPKRuleType : uint8_t
{
	EPKRuleType__Normal            = 0,
	EPKRuleType__Shadow            = 1,
	EPKRuleType__WorldShadow       = 2,
	EPKRuleType__Max               = 3
};


// Enum CommonSource.EHitTargetCountConditionType
enum class FCommonSource_CommonSource_EHitTargetCountConditionType : uint8_t
{
	EHitTargetCountConditionType__None = 0,
	EHitTargetCountConditionType__NotShield = 1,
	EHitTargetCountConditionType__NotDamageReductionPercent = 2,
	EHitTargetCountConditionType__Debuff = 3,
	EHitTargetCountConditionType__AbnormalStatus = 4,
	EHitTargetCountConditionType__NotImmortality = 5,
	EHitTargetCountConditionType__NotMoveSpeed = 6,
	EHitTargetCountConditionType__NotMoraleBoost = 7,
	EHitTargetCountConditionType__NotConcentrationPerformance = 8,
	EHitTargetCountConditionType__NotAbsoluteAvoidance = 9,
	EHitTargetCountConditionType__Max = 10
};


// Enum CommonSource.EHitTargetCountOrderType
enum class FCommonSource_CommonSource_EHitTargetCountOrderType : uint8_t
{
	EHitTargetCountOrderType__Distance = 0,
	EHitTargetCountOrderType__LowHp = 1,
	EHitTargetCountOrderType__Player_Distance = 2,
	EHitTargetCountOrderType__LowHpAll = 3,
	EHitTargetCountOrderType__Max  = 4
};


// Enum CommonSource.EHitCondType
enum class FCommonSource_CommonSource_EHitCondType : uint8_t
{
	EHitCondType__None             = 0,
	EHitCondType__MyBuff           = 1,
	EHitCondType__TargetBuff       = 2,
	EHitCondType__MyHPOver         = 3,
	EHitCondType__MyHPLess         = 4,
	EHitCondType__TargetHPLess     = 5,
	EHitCondType__MyDebuff         = 6,
	EHitCondType__TargetDebuff     = 7,
	EHitCondType__MyAbnormalStatus = 8,
	EHitCondType__MyPartyAbnormalStatus = 9,
	EHitCondType__NotMyBuff        = 10,
	EHitCondType__MyBuffIndex      = 11,
	EHitCondType__MyMpOver         = 12,
	EHitCondType__Max              = 13
};


// Enum CommonSource.EPassiveTargetType
enum class FCommonSource_CommonSource_EPassiveTargetType : uint8_t
{
	EPassiveTargetType__MonsterAll = 0,
	EPassiveTargetType__MonsterNormal = 1,
	EPassiveTargetType__MonsterBoss = 2,
	EPassiveTargetType__Player     = 3,
	EPassiveTargetType__EnemyAll   = 4,
	EPassiveTargetType__Enemy      = 5,
	EPassiveTargetType__Max        = 6
};


// Enum CommonSource.EPassiveCondType
enum class FCommonSource_CommonSource_EPassiveCondType : uint8_t
{
	EPassiveCondType__None         = 0,
	EPassiveCondType__TargetType   = 1,
	EPassiveCondType__IsCritical   = 2,
	EPassiveCondType__MyBuffType   = 3,
	EPassiveCondType__TargetBuffType = 4,
	EPassiveCondType__Prob         = 5,
	EPassiveCondType__CondNCount   = 6,
	EPassiveCondType__HaveSeal     = 7,
	EPassiveCondType__AbnormalStatus = 8,
	EPassiveCondType__MyHpPercent  = 9,
	EPassiveCondType__TargetHpPercent = 10,
	EPassiveCondType__TargetDistance = 11,
	EPassiveCondType__MyMelodyPoint = 12,
	EPassiveCondType__CriticalResist = 13,
	EPassiveCondType__DoubleAttackResist = 14,
	EPassiveCondType__HaveMelodyPoint = 15,
	EPassiveCondType__Max          = 16
};


// Enum CommonSource.EPassiveApplyType
enum class FCommonSource_CommonSource_EPassiveApplyType : uint8_t
{
	EPassiveApplyType__None        = 0,
	EPassiveApplyType__Me          = 1,
	EPassiveApplyType__Target      = 2,
	EPassiveApplyType__Attacker    = 3,
	EPassiveApplyType__Max         = 4
};


// Enum CommonSource.EPassiveAttackType
enum class FCommonSource_CommonSource_EPassiveAttackType : uint8_t
{
	EPassiveAttackType__None       = 0,
	EPassiveAttackType__AttackAll  = 1,
	EPassiveAttackType__AttackNormal = 2,
	EPassiveAttackType__AttackSkill = 3,
	EPassiveAttackType__DamageHited = 4,
	EPassiveAttackType__Damaged    = 5,
	EPassiveAttackType__DamageHitAll = 6,
	EPassiveAttackType__DamageHitNormal = 7,
	EPassiveAttackType__DamageHitSkill = 8,
	EPassiveAttackType__DamageHitSkillOnce = 9,
	EPassiveAttackType__PlayerKill = 10,
	EPassiveAttackType__AggroSkill = 11,
	EPassiveAttackType__HealSkill  = 12,
	EPassiveAttackType__MonsterKill = 13,
	EPassiveAttackType__PreDamageHited = 14,
	EPassiveAttackType__AbnormalStatusHited = 15,
	EPassiveAttackType__BuffGet    = 16,
	EPassiveAttackType__BuffGive   = 17,
	EPassiveAttackType__SealConsumed = 18,
	EPassiveAttackType__SkillNotifyHitDamageAll = 19,
	EPassiveAttackType__SkillNotifyHitDamageNormal = 20,
	EPassiveAttackType__SkillNotifyHitDamageSkill = 21,
	EPassiveAttackType__ShockHited = 22,
	EPassiveAttackType__AbnormalOrShockHited = 23,
	EPassiveAttackType__ObjectKill = 24,
	EPassiveAttackType__Max        = 25
};


// Enum CommonSource.EWarModeType
enum class FCommonSource_CommonSource_EWarModeType : uint8_t
{
	EWarModeType__None             = 0,
	EWarModeType__War              = 1,
	EWarModeType__EWarModeType_MAX = 2
};


// Enum CommonSource.EPKModeType
enum class FCommonSource_CommonSource_EPKModeType : uint8_t
{
	EPKModeType__None              = 0,
	EPKModeType__PK                = 1,
	EPKModeType__EPKModeType_MAX   = 2
};


// Enum CommonSource.EAddRateMaxValue
enum class FCommonSource_CommonSource_EAddRateMaxValue : uint8_t
{
	EAddRateMaxValue__HpMp         = 0,
	EAddRateMaxValue__Damage       = 1,
	EAddRateMaxValue__Max          = 2
};


// Enum CommonSource.EBuffReason
enum class FCommonSource_CommonSource_EBuffReason : uint8_t
{
	EBuffReason__Skill             = 0,
	EBuffReason__Event             = 1,
	EBuffReason__Interact          = 2,
	EBuffReason__Item              = 3,
	EBuffReason__Pk                = 4,
	EBuffReason__Realmwar          = 5,
	EBuffReason__Quest             = 6,
	EBuffReason__Vehicle           = 7,
	EBuffReason__SealedEssence     = 8,
	EBuffReason__Rune              = 9,
	EBuffReason__Ranking           = 10,
	EBuffReason__MimirWell         = 11,
	EBuffReason__MapWarp           = 12,
	EBuffReason__Guild             = 13,
	EBuffReason__Resurrection      = 14,
	EBuffReason__Cheat             = 15,
	EBuffReason__DungeonComplete   = 16,
	EBuffReason__MapArea           = 17,
	EBuffReason__WorldDungeon      = 18,
	EBuffReason__DuelDungeon       = 19,
	EBuffReason__SecondPassword    = 20,
	EBuffReason__VoidDungeon       = 21,
	EBuffReason__SlayerPenalty     = 22,
	EBuffReason__WeaponShape       = 23,
	EBuffReason__GuildStronghold   = 24,
	EBuffReason__ServerMigration   = 25,
	EBuffReason__Castlewar         = 26,
	EBuffReason__ShadowDungeon     = 27,
	EBuffReason__GuildDefense      = 28,
	EBuffReason__Area              = 29,
	EBuffReason__ImprintSpecial    = 30,
	EBuffReason__InfinityDungeon   = 31,
	EBuffReason__GuildBattlefield  = 32,
	EBuffReason__GuildItemMake     = 33,
	EBuffReason__Alchemy           = 34,
	EBuffReason__ServerInvasion    = 35,
	EBuffReason__Max               = 36
};


// Enum CommonSource.EAniType
enum class FCommonSource_CommonSource_EAniType : uint8_t
{
	EAniType__None                 = 0,
	EAniType__Spawn                = 1,
	EAniType__Attack               = 2,
	EAniType__Skill                = 3,
	EAniType__Idle                 = 4,
	EAniType__Percept              = 5,
	EAniType__Casting              = 6,
	EAniType__Resurrect            = 7,
	EAniType__Interact             = 8,
	EAniType__Rewind               = 9,
	EAniType__KnockDown            = 10,
	EAniType__Max                  = 11
};


// Enum CommonSource.EBuffDurationType
enum class FCommonSource_CommonSource_EBuffDurationType : uint8_t
{
	EBuffDurationType__Online      = 0,
	EBuffDurationType__RealTime    = 1,
	EBuffDurationType__Max         = 2
};


// Enum CommonSource.EBuffOverlapType
enum class FCommonSource_CommonSource_EBuffOverlapType : uint8_t
{
	EBuffOverlapType__NonReplaceableNonOverlap = 0,
	EBuffOverlapType__ReplaceableNonOverlap = 1,
	EBuffOverlapType__ReplaceNonOverlap = 2,
	EBuffOverlapType__Overlap      = 3,
	EBuffOverlapType__OverlapTimeUpdate = 4,
	EBuffOverlapType__TimeExtension = 5,
	EBuffOverlapType__Max          = 6
};


// Enum CommonSource.EBuffApplyType
enum class FCommonSource_CommonSource_EBuffApplyType : uint8_t
{
	EBuffApplyType__None           = 0,
	EBuffApplyType__Normal         = 1,
	EBuffApplyType__End            = 2,
	EBuffApplyType__Critical       = 3,
	EBuffApplyType__End_Dead       = 4,
	EBuffApplyType__Dead           = 5,
	EBuffApplyType__Max            = 6
};


// Enum CommonSource.EParamBuffType
enum class FCommonSource_CommonSource_EParamBuffType : uint8_t
{
	EParamBuffType__None           = 0,
	EParamBuffType__BattlePower    = 1,
	EParamBuffType__MaxHp          = 2,
	EParamBuffType__MaxMp          = 3,
	EParamBuffType__MaxHpPercent   = 4,
	EParamBuffType__MaxMpPercent   = 5,
	EParamBuffType__MoveSpeedAddPercent = 6,
	EParamBuffType__AttackSpeedAddPercent = 7,
	EParamBuffType__Attack         = 8,
	EParamBuffType__HitAccuracy    = 9,
	EParamBuffType__CloseAccuracyAdd = 10,
	EParamBuffType__RangeAccuracyAdd = 11,
	EParamBuffType__MagicAccuracyAdd = 12,
	EParamBuffType__CriticalChancePercent = 13,
	EParamBuffType__CriticalDamageAddPercent = 14,
	EParamBuffType__SkillDamageAddPercent = 15,
	EParamBuffType__DamageAddPercent = 16,
	EParamBuffType__CloseDamageAddPercent = 17,
	EParamBuffType__RangeDamageAddPercent = 18,
	EParamBuffType__MagicDamageAddPercent = 19,
	EParamBuffType__SkillTimeReductionPercent = 20,
	EParamBuffType__CoolTimeReductionPercent = 21,
	EParamBuffType__AbnormalResistIgnorePercent = 22,
	EParamBuffType__PvPDamageAddPercent = 23,
	EParamBuffType__PvPCloseDamageAddPercent = 24,
	EParamBuffType__PvPRangeDamageAddPercent = 25,
	EParamBuffType__PvPMagicDamageAddPercent = 26,
	EParamBuffType__BossDamageAddPercent = 27,
	EParamBuffType__BrutalDamageAddPercent = 28,
	EParamBuffType__Defense        = 29,
	EParamBuffType__HitAvoidance   = 30,
	EParamBuffType__CloseAvoidanceAdd = 31,
	EParamBuffType__RangeAvoidanceAdd = 32,
	EParamBuffType__MagicAvoidanceAdd = 33,
	EParamBuffType__CriticalChanceResistPercent = 34,
	EParamBuffType__SkillDamageReductionDecreasePercent = 35,
	EParamBuffType__SkillDamageReductionPercent = 36,
	EParamBuffType__DamageReductionDecreasePercent = 37,
	EParamBuffType__DamageReductionPercent = 38,
	EParamBuffType__CloseReductionDecreasePercent = 39,
	EParamBuffType__CloseReductionPercent = 40,
	EParamBuffType__RangeReductionDecreasePercent = 41,
	EParamBuffType__RangeReductionPercent = 42,
	EParamBuffType__MagicReductionDecreasePercent = 43,
	EParamBuffType__MagicReductionPercent = 44,
	EParamBuffType__AbnormalResistPercent = 45,
	EParamBuffType__PvPReductionDecreasePercent = 46,
	EParamBuffType__PvPReductionPercent = 47,
	EParamBuffType__PvPCloseReductionDecreasePercent = 48,
	EParamBuffType__PvPCloseReductionPercent = 49,
	EParamBuffType__PvPRangeReductionDecreasePercent = 50,
	EParamBuffType__PvPRangeReductionPercent = 51,
	EParamBuffType__PvPMagicReductionDecreasePercent = 52,
	EParamBuffType__PvPMagicReductionPercent = 53,
	EParamBuffType__BossReductionDecreasePercent = 54,
	EParamBuffType__BossReductionPercent = 55,
	EParamBuffType__BrutalReductionDecreasePercent = 56,
	EParamBuffType__BrutalReductionPercent = 57,
	EParamBuffType__HpAddPerTick   = 58,
	EParamBuffType__MpAddPerTick   = 59,
	EParamBuffType__PotionAddPercentPerTick = 60,
	EParamBuffType__MimirWellConsumptionDecreasePercent = 61,
	EParamBuffType__MimirWellConsumptionEarnMorePercent = 62,
	EParamBuffType__MimirWellConsumptionMaxAdd = 63,
	EParamBuffType__AbnormalDurationReductionPercent = 64,
	EParamBuffType__StunResistPercent = 65,
	EParamBuffType__FreezingResistPercent = 66,
	EParamBuffType__PetrifactionResistPercent = 67,
	EParamBuffType__PolymorphResistPercent = 68,
	EParamBuffType__SilenceResistPercent = 69,
	EParamBuffType__ImmobilizedResistPercent = 70,
	EParamBuffType__SlowResistPercent = 71,
	EParamBuffType__FrostbiteResistPercent = 72,
	EParamBuffType__KnockBackAddPercent = 73,
	EParamBuffType__KnockBackResistPercent = 74,
	EParamBuffType__KnockDownAddPercent = 75,
	EParamBuffType__KnockDownResistPercent = 76,
	EParamBuffType__ShockAddPercent = 77,
	EParamBuffType__ShockResistPercent = 78,
	EParamBuffType__StunDurationMinusPercent = 79,
	EParamBuffType__FreezingDurationMinusPercent = 80,
	EParamBuffType__PetrifactionDurationMinusPercent = 81,
	EParamBuffType__AggroAddPercent = 82,
	EParamBuffType__CloseDamageAddHpPercent = 83,
	EParamBuffType__CloseReductionDecreaseHpPercent = 84,
	EParamBuffType__CloseReductionHpPercent = 85,
	EParamBuffType__HealAddPercent = 86,
	EParamBuffType__DamageAbsoluteReductionPercent = 87,
	EParamBuffType__NormalDamageAddPercent = 88,
	EParamBuffType__CriticalDamageReductionPercent = 89,
	EParamBuffType__HealAbsoluteReductionPercent = 90,
	EParamBuffType__KnockDownDurationReductionPercent = 91,
	EParamBuffType__PolymorphDurationReductionPercent = 92,
	EParamBuffType__SilenceDurationReductionPercent = 93,
	EParamBuffType__ImmobilizedDurationReductionPercent = 94,
	EParamBuffType__SlowDurationReductionPercent = 95,
	EParamBuffType__FrostbiteDurationReductionPercent = 96,
	EParamBuffType__DarkResistPercent = 97,
	EParamBuffType__AgingResistPercent = 98,
	EParamBuffType__DarkDurationMinusPercent = 99,
	EParamBuffType__AgingDurationMinusPercent = 100,
	EParamBuffType__AttackAbsoluteReduction = 101,
	EParamBuffType__NormalMonsterDamageAddPercent = 102,
	EParamBuffType__NormalMonsterDamageReductionPercent = 103,
	EParamBuffType__NormalMonsterDamageReductionMinusPercent = 104,
	EParamBuffType__DamageAbsoluteAddPercent = 105,
	EParamBuffType__NormalDamageReductionPercent = 106,
	EParamBuffType__NormalDamageReductionMinusPercent = 107,
	EParamBuffType__CloseDamageAbsoluteAddPercent = 108,
	EParamBuffType__RangeDamageAbsoluteAddPercent = 109,
	EParamBuffType__MagicDamageAbsoluteAddPercent = 110,
	EParamBuffType__CloseDamageAbsoluteReductionPercent = 111,
	EParamBuffType__RangeDamageAbsoluteReductionPercent = 112,
	EParamBuffType__MagicDamageAbsoluteReductionPercent = 113,
	EParamBuffType__MonsterDamageAddPercent = 114,
	EParamBuffType__MonsterDamageReductionPercent = 115,
	EParamBuffType__MonsterDamageReductionMinusPercent = 116,
	EParamBuffType__AllDamageAddPercentPerLostHp = 117,
	EParamBuffType__DoubleAttackChancePercent = 118,
	EParamBuffType__DoubleAttackResistPercent = 119,
	EParamBuffType__DoubleAttackDamageReductionPercent = 120,
	EParamBuffType__AbnormalDurationReductionOffsetPercent = 121,
	EParamBuffType__CloseDamageAbsoluteAddPercentPerLostHp = 122,
	EParamBuffType__CloseAbsoluteReductionPerLostHp = 123,
	EParamBuffType__BlockAddPercent = 124,
	EParamBuffType__PvPDamageAbsoluteAddPercent = 125,
	EParamBuffType__PvPCloseDamageAbsoluteAddPercent = 126,
	EParamBuffType__PvPRangeDamageAbsoluteAddPercent = 127,
	EParamBuffType__PvPMagicDamageAbsoluteAddPercent = 128,
	EParamBuffType__PvPAbsoluteReductionPercent = 129,
	EParamBuffType__PvPCloseAbsoluteReductionPercent = 130,
	EParamBuffType__PvPRangeAbsoluteReductionPercent = 131,
	EParamBuffType__PvPMagicAbsoluteReductionPercent = 132,
	EParamBuffType__DefenseAbsoluteReduction = 133,
	EParamBuffType__HitAvoidancePerLostHp = 134,
	EParamBuffType__PvPCriticalDamageAddPercent = 135,
	EParamBuffType__PvPCriticalDamageReductionPercent = 136,
	EParamBuffType__Max            = 137
};


// Enum CommonSource.EAttackResult
enum class FCommonSource_CommonSource_EAttackResult : uint8_t
{
	EAttackResult__Success         = 0,
	EAttackResult__Critical        = 1,
	EAttackResult__Dot             = 2,
	EAttackResult__DotCritical     = 3,
	EAttackResult__Avoid           = 4,
	EAttackResult__Immortality     = 5,
	EAttackResult__CriticalResist  = 6,
	EAttackResult__DotCriticalResist = 7,
	EAttackResult__Max             = 8
};


// Enum CommonSource.EEffectApplyType
enum class FCommonSource_CommonSource_EEffectApplyType : uint8_t
{
	EEffectApplyType__ActiveStart  = 0,
	EEffectApplyType__BuffStart    = 1,
	EEffectApplyType__BuffDot      = 2,
	EEffectApplyType__BuffEnd      = 3,
	EEffectApplyType__PassiveStart = 4,
	EEffectApplyType__PassiveMsg   = 5,
	EEffectApplyType__Max          = 6
};


// Enum CommonSource.EEffectType
enum class FCommonSource_CommonSource_EEffectType : uint8_t
{
	EEffectType__None              = 0,
	EEffectType__Damage            = 1,
	EEffectType__Buff              = 2,
	EEffectType__Param             = 3,
	EEffectType__HpMp              = 4,
	EEffectType__KnockBack         = 5,
	EEffectType__RemoveBuff        = 6,
	EEffectType__SkillObject       = 7,
	EEffectType__Pull              = 8,
	EEffectType__Shield            = 9,
	EEffectType__Hiding            = 10,
	EEffectType__ReflectDamage     = 11,
	EEffectType__CoolTimeReduction = 12,
	EEffectType__RemoveAbnormalStatus = 13,
	EEffectType__MonsterSpawnGroupAggro = 14,
	EEffectType__Summon            = 15,
	EEffectType__FactionChange     = 16,
	EEffectType__RealmwarStart     = 17,
	EEffectType__suicideBombing    = 18,
	EEffectType__Aggro             = 19,
	EEffectType__Teleteport        = 20,
	EEffectType__Absorb            = 21,
	EEffectType__ValkyriePride     = 22,
	EEffectType__AttackRange       = 23,
	EEffectType__Blindness         = 24,
	EEffectType__InstantDeath      = 25,
	EEffectType__Mark              = 26,
	EEffectType__ExtraDamage       = 27,
	EEffectType__TownReturn        = 28,
	EEffectType__Evasion           = 29,
	EEffectType__RandomBuff        = 30,
	EEffectType__MoveSpeedRate     = 31,
	EEffectType__Elevation         = 32,
	EEffectType__FieldBuffRange    = 33,
	EEffectType__AttackSkillBuff   = 34,
	EEffectType__MonsterDamageAddPercent = 35,
	EEffectType__PullWarp          = 36,
	EEffectType__Fascinate         = 37,
	EEffectType__HitAccuracyAddPercent = 38,
	EEffectType__Rhapsody          = 39,
	EEffectType__LookAtSummoner    = 40,
	EEffectType__MaxHpUsingCurHp   = 41,
	EEffectType__MpShield          = 42,
	EEffectType__LightIllusion     = 43,
	EEffectType__CheckAddBuff      = 44,
	EEffectType__AbsorbShield      = 45,
	EEffectType__ExtraSkill        = 46,
	EEffectType__RemoveBuffType    = 47,
	EEffectType__HpOnDamaged       = 48,
	EEffectType__AvoidProportion   = 49,
	EEffectType__LegendaryFighter  = 50,
	EEffectType__LookAtSummonObject = 51,
	EEffectType__Fear              = 52,
	EEffectType__SwapHpMp          = 53,
	EEffectType__SacrificeDamage   = 54,
	EEffectType__Max               = 55
};


// Enum CommonSource.EHitAreaType
enum class FCommonSource_CommonSource_EHitAreaType : uint8_t
{
	EHitAreaType__None             = 0,
	EHitAreaType__Circle           = 1,
	EHitAreaType__Arc              = 2,
	EHitAreaType__Rectangle        = 3,
	EHitAreaType__Doughnut         = 4,
	EHitAreaType__Max              = 5
};


// Enum CommonSource.EDotTargetFrom
enum class FCommonSource_CommonSource_EDotTargetFrom : uint8_t
{
	EDotTargetFrom__Owner          = 0,
	EDotTargetFrom__Attacker       = 1,
	EDotTargetFrom__Max            = 2
};


// Enum CommonSource.ETargetFrom
enum class FCommonSource_CommonSource_ETargetFrom : uint8_t
{
	ETargetFrom__Me                = 0,
	ETargetFrom__Target            = 1,
	ETargetFrom__Target_BodyRange  = 2,
	ETargetFrom__RandomTargetTargetMain = 3,
	ETargetFrom__RandomTargetTargetNotMain = 4,
	ETargetFrom__RandomTargetMeMain = 5,
	ETargetFrom__RandomTargetMeNotMain = 6,
	ETargetFrom__Friend            = 7,
	ETargetFrom__Friend_Me         = 8,
	ETargetFrom__Friend_Me_Select  = 9,
	ETargetFrom__Friend_Me_SelectCheck = 10,
	ETargetFrom__MySkillObject     = 11,
	ETargetFrom__Max               = 12
};


// Enum CommonSource.ETargetFactionType
enum class FCommonSource_CommonSource_ETargetFactionType : uint8_t
{
	ETargetFactionType__All        = 0,
	ETargetFactionType__Me_All     = 1,
	ETargetFactionType__Me         = 2,
	ETargetFactionType__Friend     = 3,
	ETargetFactionType__Me_Friend  = 4,
	ETargetFactionType__Friend_Me  = 5,
	ETargetFactionType__Enemy      = 6,
	ETargetFactionType__Max        = 7
};


// Enum CommonSource.ETargetMainType
enum class FCommonSource_CommonSource_ETargetMainType : uint8_t
{
	ETargetMainType__All           = 0,
	ETargetMainType__Main          = 1,
	ETargetMainType__Sub           = 2,
	ETargetMainType__Max           = 3
};


// Enum CommonSource.EBuffGroup
enum class FCommonSource_CommonSource_EBuffGroup : uint8_t
{
	EBuffGroup__Normal             = 0,
	EBuffGroup__Event              = 1,
	EBuffGroup__Guild              = 2,
	EBuffGroup__Reward             = 3,
	EBuffGroup__MimirWell          = 4,
	EBuffGroup__Food               = 5,
	EBuffGroup__Scroll             = 6,
	EBuffGroup__Brutal             = 7,
	EBuffGroup__Security           = 8,
	EBuffGroup__WorldDungeon_Buff_Top = 9,
	EBuffGroup__WorldDungeon_Buff_Bottom = 10,
	EBuffGroup__GuildStronghold    = 11,
	EBuffGroup__ShadowDungeon      = 12,
	EBuffGroup__ShadowDungeonTier  = 13,
	EBuffGroup__CastleWar          = 14,
	EBuffGroup__InfinityDungeon    = 15,
	EBuffGroup__WorldShadowDungeonTier = 16,
	EBuffGroup__GuildItemMake      = 17,
	EBuffGroup__Alchemy            = 18,
	EBuffGroup__ScrollPet          = 19,
	EBuffGroup__ServerInvasion     = 20,
	EBuffGroup__GuildRaidSeason2   = 21,
	EBuffGroup__Max                = 22
};


// Enum CommonSource.ETargetingType
enum class FCommonSource_CommonSource_ETargetingType : uint8_t
{
	ETargetingType__Target         = 0,
	ETargetingType__Ground         = 1,
	ETargetingType__Item           = 2,
	ETargetingType__Max            = 3
};


// Enum CommonSource.ESkillType
enum class FCommonSource_CommonSource_ESkillType : uint8_t
{
	ESkillType__Normal             = 0,
	ESkillType__Passive            = 1,
	ESkillType__Active             = 2,
	ESkillType__VehicleJump        = 3,
	ESkillType__RuneOption         = 4,
	ESkillType__WeaponShape        = 5,
	ESkillType__WeaponShapeActiveSkill = 6,
	ESkillType__VehiclePassive     = 7,
	ESkillType__VehicleActive      = 8,
	ESkillType__Blessing           = 9,
	ESkillType__AttackEffect       = 10,
	ESkillType__PetPassive         = 11,
	ESkillType__PetActive          = 12,
	ESkillType__Max                = 13
};


// Enum CommonSource.EAttendanceRewardUIType
enum class FCommonSource_CommonSource_EAttendanceRewardUIType : uint8_t
{
	EAttendanceRewardUIType__Single = 0,
	EAttendanceRewardUIType__Double = 1,
	EAttendanceRewardUIType__Multiple = 2,
	EAttendanceRewardUIType__Max   = 3
};


// Enum CommonSource.EAttendanceType
enum class FCommonSource_CommonSource_EAttendanceType : uint8_t
{
	EAttendanceType__Normal        = 0,
	EAttendanceType__Newbie        = 1,
	EAttendanceType__Comeback      = 2,
	EAttendanceType__Special       = 3,
	EAttendanceType__MissionEvent  = 4,
	EAttendanceType__Existing      = 5,
	EAttendanceType__Max           = 6
};


// Enum CommonSource.EBlessingSlotEnchantResult
enum class FCommonSource_CommonSource_EBlessingSlotEnchantResult : uint8_t
{
	EBlessingSlotEnchantResult__Success = 0,
	EBlessingSlotEnchantResult__GreatSuccess = 1,
	EBlessingSlotEnchantResult__Failure = 2,
	EBlessingSlotEnchantResult__GreatFailure = 3,
	EBlessingSlotEnchantResult__SuperGreatFailure = 4,
	EBlessingSlotEnchantResult__Max = 5
};


// Enum CommonSource.ETargetType
enum class FCommonSource_CommonSource_ETargetType : uint8_t
{
	ETargetType__Target            = 0,
	ETargetType__NonTarget         = 1,
	ETargetType__Max               = 2
};


// Enum CommonSource.EBlessingStoneType
enum class FCommonSource_CommonSource_EBlessingStoneType : uint8_t
{
	EBlessingStoneType__Normal     = 0,
	EBlessingStoneType__BossStone  = 1,
	EBlessingStoneType__Max        = 2
};


// Enum CommonSource.EBlessingStoneRotationType
enum class FCommonSource_CommonSource_EBlessingStoneRotationType : uint8_t
{
	EBlessingStoneRotationType__None = 0,
	EBlessingStoneRotationType__Rotate90Deg = 1,
	EBlessingStoneRotationType__Rotate180Deg = 2,
	EBlessingStoneRotationType__Rotate270Deg = 3,
	EBlessingStoneRotationType__EBlessingStoneRotationType_MAX = 4
};


// Enum CommonSource.EBlessingStoneBlockType
enum class FCommonSource_CommonSource_EBlessingStoneBlockType : uint8_t
{
	EBlessingStoneBlockType__TypeO = 0,
	EBlessingStoneBlockType__TypeI = 1,
	EBlessingStoneBlockType__TypeZ = 2,
	EBlessingStoneBlockType__TypeS = 3,
	EBlessingStoneBlockType__TypeL = 4,
	EBlessingStoneBlockType__TypeJ = 5,
	EBlessingStoneBlockType__TypeT = 6,
	EBlessingStoneBlockType__Max   = 7
};


// Enum CommonSource.EBlessingSymbolType
enum class FCommonSource_CommonSource_EBlessingSymbolType : uint8_t
{
	EBlessingSymbolType__None      = 0,
	EBlessingSymbolType__Fire      = 1,
	EBlessingSymbolType__Water     = 2,
	EBlessingSymbolType__Land      = 3,
	EBlessingSymbolType__Light     = 4,
	EBlessingSymbolType__Darkness  = 5,
	EBlessingSymbolType__Void      = 6,
	EBlessingSymbolType__All       = 7,
	EBlessingSymbolType__Max       = 8
};


// Enum CommonSource.EVoidSummonerPortalEnterState
enum class FCommonSource_CommonSource_EVoidSummonerPortalEnterState : uint8_t
{
	EVoidSummonerPortalEnterState__None = 0,
	EVoidSummonerPortalEnterState__Busy = 1,
	EVoidSummonerPortalEnterState__Full = 2,
	EVoidSummonerPortalEnterState__Close = 3,
	EVoidSummonerPortalEnterState__Max = 4
};


// Enum CommonSource.EVoidSummonerType
enum class FCommonSource_CommonSource_EVoidSummonerType : uint8_t
{
	EVoidSummonerType__LokiSeason1 = 0,
	EVoidSummonerType__LokiSeason2 = 1,
	EVoidSummonerType__LokiPortal  = 2,
	EVoidSummonerType__Max         = 3
};


// Enum CommonSource.EBlessingEnchantRowColmnType
enum class FCommonSource_CommonSource_EBlessingEnchantRowColmnType : uint8_t
{
	EBlessingEnchantRowColmnType__Rows = 0,
	EBlessingEnchantRowColmnType__Column = 1,
	EBlessingEnchantRowColmnType__Max = 2
};


// Enum CommonSource.EWorldBossState
enum class FCommonSource_CommonSource_EWorldBossState : uint8_t
{
	EWorldBossState__None          = 0,
	EWorldBossState__Ready         = 1,
	EWorldBossState__Create        = 2,
	EWorldBossState__Dead          = 3,
	EWorldBossState__Destroy       = 4,
	EWorldBossState__Max           = 5
};


// Enum CommonSource.EWorldBossRankType
enum class FCommonSource_CommonSource_EWorldBossRankType : uint8_t
{
	EWorldBossRankType__Damaged    = 0,
	EWorldBossRankType__Damage     = 1,
	EWorldBossRankType__Heal       = 2,
	EWorldBossRankType__Max        = 3
};


// Enum CommonSource.ECashShopBonusProductType
enum class FCommonSource_CommonSource_ECashShopBonusProductType : uint8_t
{
	ECashShopBonusProductType__None = 0,
	ECashShopBonusProductType__CashOnePlusOne = 1,
	ECashShopBonusProductType__Max = 2
};


// Enum CommonSource.ECashShopBonusCashCmdSendType
enum class FCommonSource_CommonSource_ECashShopBonusCashCmdSendType : uint8_t
{
	ECashShopBonusCashCmdSendType__None = 0,
	ECashShopBonusCashCmdSendType__Login = 1,
	ECashShopBonusCashCmdSendType__ResetTime = 2,
	ECashShopBonusCashCmdSendType__Buy = 3,
	ECashShopBonusCashCmdSendType__Coupon = 4,
	ECashShopBonusCashCmdSendType__Level = 5,
	ECashShopBonusCashCmdSendType__Max = 6
};


// Enum CommonSource.EImageUrlType
enum class FCommonSource_CommonSource_EImageUrlType : uint8_t
{
	EImageUrlType__Text            = 0,
	EImageUrlType__Background      = 1,
	EImageUrlType__Banner          = 2,
	EImageUrlType__Max             = 3
};


// Enum CommonSource.ERandomGuaranteeType
enum class FCommonSource_CommonSource_ERandomGuaranteeType : uint8_t
{
	ERandomGuaranteeType__None     = 0,
	ERandomGuaranteeType__Avatar   = 1,
	ERandomGuaranteeType__Vehicle  = 2,
	ERandomGuaranteeType__WeaponShape = 3,
	ERandomGuaranteeType__Rune     = 4,
	ERandomGuaranteeType__Pet      = 5,
	ERandomGuaranteeType__BlessingStone = 6,
	ERandomGuaranteeType__Max      = 7
};


// Enum CommonSource.ELimitPaymentAgeType
enum class FCommonSource_CommonSource_ELimitPaymentAgeType : uint8_t
{
	ELimitPaymentAgeType__None     = 0,
	ELimitPaymentAgeType__Childhood = 1,
	ELimitPaymentAgeType__Teenager = 2,
	ELimitPaymentAgeType__AllAge   = 3,
	ELimitPaymentAgeType__Max      = 4
};


// Enum CommonSource.ECashShopOdinPassType
enum class FCommonSource_CommonSource_ECashShopOdinPassType : uint8_t
{
	ECashShopOdinPassType__None    = 0,
	ECashShopOdinPassType__ExtraReward = 1,
	ECashShopOdinPassType__PaidRewardSuperior = 2,
	ECashShopOdinPassType__PaidRewardPlatinum = 3,
	ECashShopOdinPassType__Max     = 4
};


// Enum CommonSource.ECashShopExternalType
enum class FCommonSource_CommonSource_ECashShopExternalType : uint8_t
{
	ECashShopExternalType__None    = 0,
	ECashShopExternalType__ClassChange = 1,
	ECashShopExternalType__ECashShopExternalType_MAX = 2
};


// Enum CommonSource.ECashShopShowOSCode
enum class FCommonSource_CommonSource_ECashShopShowOSCode : uint8_t
{
	ECashShopShowOSCode__All       = 0,
	ECashShopShowOSCode__IOS       = 1,
	ECashShopShowOSCode__AOS       = 2,
	ECashShopShowOSCode__Max       = 3
};


// Enum CommonSource.ECashShopRandomChoiceGrade
enum class FCommonSource_CommonSource_ECashShopRandomChoiceGrade : uint8_t
{
	ECashShopRandomChoiceGrade__None = 0,
	ECashShopRandomChoiceGrade__Hero_Low = 1,
	ECashShopRandomChoiceGrade__Hero_Medium = 2,
	ECashShopRandomChoiceGrade__Hero_High = 3,
	ECashShopRandomChoiceGrade__Legend_Low = 4,
	ECashShopRandomChoiceGrade__Legend_Medium = 5,
	ECashShopRandomChoiceGrade__Legend_High = 6,
	ECashShopRandomChoiceGrade__Max = 7
};


// Enum CommonSource.ECashShopExclusiveProductType
enum class FCommonSource_CommonSource_ECashShopExclusiveProductType : uint8_t
{
	ECashShopExclusiveProductType__None = 0,
	ECashShopExclusiveProductType__Mycard_TW = 1,
	ECashShopExclusiveProductType__Max = 2
};


// Enum CommonSource.ECashShopMissionPeriodType
enum class FCommonSource_CommonSource_ECashShopMissionPeriodType : uint8_t
{
	ECashShopMissionPeriodType__None = 0,
	ECashShopMissionPeriodType__EveryDay = 1,
	ECashShopMissionPeriodType__Periopd = 2,
	ECashShopMissionPeriodType__Max = 3
};


// Enum CommonSource.ECashShopUIType
enum class FCommonSource_CommonSource_ECashShopUIType : uint8_t
{
	ECashShopUIType__None          = 0,
	ECashShopUIType__Normal        = 1,
	ECashShopUIType__Height        = 2,
	ECashShopUIType__HeightTwoBtn  = 3,
	ECashShopUIType__HeightPickup  = 4,
	ECashShopUIType__Max           = 5
};


// Enum CommonSource.ECashShopBuyLimitPeriodType
enum class FCommonSource_CommonSource_ECashShopBuyLimitPeriodType : uint8_t
{
	ECashShopBuyLimitPeriodType__None = 0,
	ECashShopBuyLimitPeriodType__Eternal = 1,
	ECashShopBuyLimitPeriodType__FirstBuy = 2,
	ECashShopBuyLimitPeriodType__Month = 3,
	ECashShopBuyLimitPeriodType__Week = 4,
	ECashShopBuyLimitPeriodType__Day = 5,
	ECashShopBuyLimitPeriodType__FirstCome = 6,
	ECashShopBuyLimitPeriodType__Max = 7
};


// Enum CommonSource.ECashShopRecommendType
enum class FCommonSource_CommonSource_ECashShopRecommendType : uint8_t
{
	ECashShopRecommendType__None   = 0,
	ECashShopRecommendType__Event  = 1,
	ECashShopRecommendType__New    = 2,
	ECashShopRecommendType__Best   = 3,
	ECashShopRecommendType__Max    = 4
};


// Enum CommonSource.ECashShopPriceType
enum class FCommonSource_CommonSource_ECashShopPriceType : uint8_t
{
	ECashShopPriceType__Money      = 0,
	ECashShopPriceType__Cash       = 1,
	ECashShopPriceType__Gold       = 2,
	ECashShopPriceType__Mileage    = 3,
	ECashShopPriceType__GPP        = 4,
	ECashShopPriceType__Max        = 5
};


// Enum CommonSource.ECashShopSubCategory
enum class FCommonSource_CommonSource_ECashShopSubCategory : uint8_t
{
	ECashShopSubCategory__None     = 0,
	ECashShopSubCategory__Package_Hot = 1,
	ECashShopSubCategory__Package_Event = 2,
	ECashShopSubCategory__Package_Limited = 3,
	ECashShopSubCategory__Gacha_Premium = 4,
	ECashShopSubCategory__Gacha_Gold = 5,
	ECashShopSubCategory__Gacha_Rune = 6,
	ECashShopSubCategory__Gacha_WeaponShape = 7,
	ECashShopSubCategory__Normal_CashGold = 8,
	ECashShopSubCategory__Normal_Equipment = 9,
	ECashShopSubCategory__Normal_Consume = 10,
	ECashShopSubCategory__Exchange_Gold = 11,
	ECashShopSubCategory__Exchange_Mileage = 12,
	ECashShopSubCategory__Exchange_Enchant = 13,
	ECashShopSubCategory__LimitPackage_Daily = 14,
	ECashShopSubCategory__LimitPackage_LevelMission = 15,
	ECashShopSubCategory__LimitPackage_ChapterMission = 16,
	ECashShopSubCategory__LimitPackage_OdinPass = 17,
	ECashShopSubCategory__Category_All = 18,
	ECashShopSubCategory__Package_Starter = 19,
	ECashShopSubCategory__Package_MonthlyWeekly = 20,
	ECashShopSubCategory__Package_NewReturn = 21,
	ECashShopSubCategory__Exchange_CashMileage = 22,
	ECashShopSubCategory__Package_Monthly = 23,
	ECashShopSubCategory__Package_Weekly = 24,
	ECashShopSubCategory__LimitPackage_OdinPassExtraPage = 25,
	ECashShopSubCategory__LimitPackage_OdinPassExtraReward = 26,
	ECashShopSubCategory__Avatar_Costume = 27,
	ECashShopSubCategory__Vehicle_Costume = 28,
	ECashShopSubCategory__WeaponShape_Costume = 29,
	ECashShopSubCategory__Payment_Stack = 30,
	ECashShopSubCategory__Max      = 31
};


// Enum CommonSource.ECashShopMainCategory
enum class FCommonSource_CommonSource_ECashShopMainCategory : uint8_t
{
	ECashShopMainCategory__Package = 0,
	ECashShopMainCategory__Gacha   = 1,
	ECashShopMainCategory__Normal  = 2,
	ECashShopMainCategory__Exchange = 3,
	ECashShopMainCategory__StorageBox = 4,
	ECashShopMainCategory__LimitPackage = 5,
	ECashShopMainCategory__MissionPackage = 6,
	ECashShopMainCategory__ServerMigration = 7,
	ECashShopMainCategory__Costume = 8,
	ECashShopMainCategory__ChainProduct = 9,
	ECashShopMainCategory__Max     = 10
};


// Enum CommonSource.ECashType
enum class FCommonSource_CommonSource_ECashType : uint8_t
{
	ECashType__Free                = 0,
	ECashType__Buy                 = 1,
	ECashType__Max                 = 2
};


// Enum CommonSource.ECashShopBuyLimitType
enum class FCommonSource_CommonSource_ECashShopBuyLimitType : uint8_t
{
	ECashShopBuyLimitType__None    = 0,
	ECashShopBuyLimitType__Account = 1,
	ECashShopBuyLimitType__Server  = 2,
	ECashShopBuyLimitType__Player  = 3,
	ECashShopBuyLimitType__Max     = 4
};


// Enum CommonSource.ECastlewarTaxDistTime
enum class FCommonSource_CommonSource_ECastlewarTaxDistTime : uint8_t
{
	ECastlewarTaxDistTime__None    = 0,
	ECastlewarTaxDistTime__Reserve = 1,
	ECastlewarTaxDistTime__ReRegister = 2,
	ECastlewarTaxDistTime__Max     = 3
};


// Enum CommonSource.ECastlewarTaxDistNotify
enum class FCommonSource_CommonSource_ECastlewarTaxDistNotify : uint8_t
{
	ECastlewarTaxDistNotify__None  = 0,
	ECastlewarTaxDistNotify__Start = 1,
	ECastlewarTaxDistNotify__Cancel = 2,
	ECastlewarTaxDistNotify__Max   = 3
};


// Enum CommonSource.ECastlewarObjectModify
enum class FCommonSource_CommonSource_ECastlewarObjectModify : uint8_t
{
	ECastlewarObjectModify__DamagePercent = 0,
	ECastlewarObjectModify__MaxHpPercent = 1,
	ECastlewarObjectModify__Level  = 2,
	ECastlewarObjectModify__CloseDamageAbsoluteReductionPercent = 3,
	ECastlewarObjectModify__RangeDamageAbsoluteReductionPercent = 4,
	ECastlewarObjectModify__MagicDamageAbsoluteReductionPercent = 5,
	ECastlewarObjectModify__HitAccuracy = 6,
	ECastlewarObjectModify__HitAvoidance = 7,
	ECastlewarObjectModify__Max    = 8
};


// Enum CommonSource.EBuyCastlewarAttackType
enum class FCommonSource_CommonSource_EBuyCastlewarAttackType : uint8_t
{
	EBuyCastlewarAttackType__None  = 0,
	EBuyCastlewarAttackType__Attack = 1,
	EBuyCastlewarAttackType__Defense = 2,
	EBuyCastlewarAttackType__Defense01 = 3,
	EBuyCastlewarAttackType__Defense02 = 4,
	EBuyCastlewarAttackType__Defense03 = 5,
	EBuyCastlewarAttackType__EBuyCastlewarAttackType_MAX = 6
};


// Enum CommonSource.EResurrectionType
enum class FCommonSource_CommonSource_EResurrectionType : uint8_t
{
	EResurrectionType__Town        = 0,
	EResurrectionType__Cash        = 1,
	EResurrectionType__Max         = 2
};


// Enum CommonSource.ECastlewarRewardHistoryStatus
enum class FCommonSource_CommonSource_ECastlewarRewardHistoryStatus : uint8_t
{
	ECastlewarRewardHistoryStatus__Reserve = 0,
	ECastlewarRewardHistoryStatus__Complete = 1,
	ECastlewarRewardHistoryStatus__Cancel = 2,
	ECastlewarRewardHistoryStatus__GuildWithdraw = 3,
	ECastlewarRewardHistoryStatus__Max = 4
};


// Enum CommonSource.EQualifierMatchState
enum class FCommonSource_CommonSource_EQualifierMatchState : uint8_t
{
	EQualifierMatchState__None     = 0,
	EQualifierMatchState__Ready    = 1,
	EQualifierMatchState__Start    = 2,
	EQualifierMatchState__Max      = 3
};


// Enum CommonSource.EQualifierSide
enum class FCommonSource_CommonSource_EQualifierSide : uint8_t
{
	EQualifierSide__None           = 0,
	EQualifierSide__Red            = 1,
	EQualifierSide__Blue           = 2,
	EQualifierSide__Purple         = 3,
	EQualifierSide__Max            = 4
};


// Enum CommonSource.ECastlewarQualifierState
enum class FCommonSource_CommonSource_ECastlewarQualifierState : uint8_t
{
	ECastlewarQualifierState__PlayerWaiting = 0,
	ECastlewarQualifierState__WarWaiting = 1,
	ECastlewarQualifierState__War  = 2,
	ECastlewarQualifierState__EndStart = 3,
	ECastlewarQualifierState__End  = 4,
	ECastlewarQualifierState__Max  = 5
};


// Enum CommonSource.ECastlewarInteractState
enum class FCommonSource_CommonSource_ECastlewarInteractState : uint8_t
{
	ECastlewarInteractState__None  = 0,
	ECastlewarInteractState__Start = 1,
	ECastlewarInteractState__Cancel = 2,
	ECastlewarInteractState__Done  = 3,
	ECastlewarInteractState__Max   = 4
};


// Enum CommonSource.ECastleEntryState
enum class FCommonSource_CommonSource_ECastleEntryState : uint8_t
{
	ECastleEntryState__None        = 0,
	ECastleEntryState__Defense     = 1,
	ECastleEntryState__StartPoint  = 2,
	ECastleEntryState__BridgePoint = 3,
	ECastleEntryState__CastlePoint = 4,
	ECastleEntryState__Max         = 5
};


// Enum CommonSource.ECastlewarNoticeState
enum class FCommonSource_CommonSource_ECastlewarNoticeState : uint8_t
{
	ECastlewarNoticeState__None    = 0,
	ECastlewarNoticeState__BeforeBidEndNotice = 1,
	ECastlewarNoticeState__Max     = 2
};


// Enum CommonSource.ECastlewaritemClassConditionClassType
enum class FCommonSource_CommonSource_ECastlewaritemClassConditionClassType : uint8_t
{
	ECastlewaritemClassConditionClassType__None = 0,
	ECastlewaritemClassConditionClassType__CastlewarClass_Tanker = 1,
	ECastlewaritemClassConditionClassType__CastlewarClass_Dealer = 2,
	ECastlewaritemClassConditionClassType__CastlewarClass_Healer = 3,
	ECastlewaritemClassConditionClassType__CastlewarClass_Healer2 = 4,
	ECastlewaritemClassConditionClassType__CastlewarClass_LongRange = 5,
	ECastlewaritemClassConditionClassType__ECastlewaritemClassConditionClassType_MAX = 6
};


// Enum CommonSource.ECastlewarState
enum class FCommonSource_CommonSource_ECastlewarState : uint8_t
{
	ECastlewarState__None          = 0,
	ECastlewarState__BidStart      = 1,
	ECastlewarState__BidEnd        = 2,
	ECastlewarState__WorldSelectReady = 3,
	ECastlewarState__WorldSelectStart = 4,
	ECastlewarState__WorldSelectEnd = 5,
	ECastlewarState__CastlewarReady = 6,
	ECastlewarState__CastlewarEnter = 7,
	ECastlewarState__CastlewarStart = 8,
	ECastlewarState__CastlewarEnd  = 9,
	ECastlewarState__ForceRewardDistribution = 10,
	ECastlewarState__CastlewarTargetSettingStart = 11,
	ECastlewarState__CastlewarTargetSettingEnd = 12,
	ECastlewarState__BidStarting   = 13,
	ECastlewarState__BidEnding     = 14,
	ECastlewarState__QualifierParticipationSelection = 15,
	ECastlewarState__QualifierReady = 16,
	ECastlewarState__QualifierStart = 17,
	ECastlewarState__QualifierEnd  = 18,
	ECastlewarState__CastlewarMatchingTime = 19,
	ECastlewarState__CastlewarMatchingLoding = 20,
	ECastlewarState__Max           = 21
};


// Enum CommonSource.ECastlewarRankType
enum class FCommonSource_CommonSource_ECastlewarRankType : uint8_t
{
	ECastlewarRankType__None       = 0,
	ECastlewarRankType__Kill       = 1,
	ECastlewarRankType__Damaged    = 2,
	ECastlewarRankType__Damage     = 3,
	ECastlewarRankType__Heal       = 4,
	ECastlewarRankType__Max        = 5
};


// Enum CommonSource.ECastlewarResultType
enum class FCommonSource_CommonSource_ECastlewarResultType : uint8_t
{
	ECastlewarResultType__None     = 0,
	ECastlewarResultType__Lose     = 1,
	ECastlewarResultType__Win      = 2,
	ECastlewarResultType__Refund   = 3,
	ECastlewarResultType__Max      = 4
};


// Enum CommonSource.ECastlewarAttackType
enum class FCommonSource_CommonSource_ECastlewarAttackType : uint8_t
{
	ECastlewarAttackType__None     = 0,
	ECastlewarAttackType__Attack   = 1,
	ECastlewarAttackType__Defense  = 2,
	ECastlewarAttackType__Max      = 3
};


// Enum CommonSource.EGuildChatType
enum class FCommonSource_CommonSource_EGuildChatType : uint8_t
{
	EGuildChatType__Chatting       = 0,
	EGuildChatType__ItemGet        = 1,
	EGuildChatType__AuctionStart   = 2,
	EGuildChatType__AuctionEnd     = 3,
	EGuildChatType__AuctionItemGet = 4,
	EGuildChatType__GuildJoin      = 5,
	EGuildChatType__GuildWithdraw  = 6,
	EGuildChatType__GuildExpel     = 7,
	EGuildChatType__ItemEnchantSuccess = 8,
	EGuildChatType__PKDead         = 9,
	EGuildChatType__PKKill         = 10,
	EGuildChatType__AllianceAccept = 11,
	EGuildChatType__AllianceAccepted = 12,
	EGuildChatType__AllianceRemove = 13,
	EGuildChatType__AllianceRemoved = 14,
	EGuildChatType__HostileAdd     = 15,
	EGuildChatType__HostileRemove  = 16,
	EGuildChatType__HostileRemoveAccept = 17,
	EGuildChatType__HostileRemoveAccepted = 18,
	EGuildChatType__GuildStronghold = 19,
	EGuildChatType__AllianceApplyReject = 20,
	EGuildChatType__AllianceApplyRejected = 21,
	EGuildChatType__HostileRemoveApplyReject = 22,
	EGuildChatType__HostileRemoveApplyRejected = 23,
	EGuildChatType__AllianceApply  = 24,
	EGuildChatType__GuildMasterDelegate = 25,
	EGuildChatType__AllianceChattingChannelOfficial = 26,
	EGuildChatType__AllianceChattingChannelEnter = 27,
	EGuildChatType__AllianceChattingChannelAccepted = 28,
	EGuildChatType__AllianceChattingChannelApplyReject = 29,
	EGuildChatType__AllianceChattingChannelWithdraw = 30,
	EGuildChatType__AllianceChattingChannelWithdrawn = 31,
	EGuildChatType__AllianceChattingChannelExpel = 32,
	EGuildChatType__AllianceChattingChannelExpelled = 33,
	EGuildChatType__AllianceChattingChannelDisband = 34,
	EGuildChatType__AllianceChattingChannelMasterDelegate = 35,
	EGuildChatType__AllianceChattingChannelApply = 36,
	EGuildChatType__AllianceChattingChannelApplied = 37,
	EGuildChatType__GuildItemMakeRegister = 38,
	EGuildChatType__GuildItemMakeComplete = 39,
	EGuildChatType__GuildItemMakeReward = 40,
	EGuildChatType__CastlewarBeforeBidEndNotice = 41,
	EGuildChatType__CastlewarQualifierNoUser = 42,
	EGuildChatType__GuildNameChanged = 43,
	EGuildChatType__CastlewarTaxDistributionStart = 44,
	EGuildChatType__CastlewarTaxDistributionCancel = 45,
	EGuildChatType__GuildBattlefieldRewardWin = 46,
	EGuildChatType__GuildItemMakeRegister2 = 47,
	EGuildChatType__GuildItemMakeComplete2 = 48,
	EGuildChatType__GuildItemMakeReward2 = 49,
	EGuildChatType__GuildItemMakeRewardBuffEnd = 50,
	EGuildChatType__Max            = 51
};


// Enum CommonSource.EChattingBanType
enum class FCommonSource_CommonSource_EChattingBanType : uint8_t
{
	EChattingBanType__Normal       = 0,
	EChattingBanType__ServerInvasionAttackUser = 1,
	EChattingBanType__Max          = 2
};


// Enum CommonSource.EAuctionMsgType
enum class FCommonSource_CommonSource_EAuctionMsgType : uint8_t
{
	EAuctionMsgType__AuctionStart  = 0,
	EAuctionMsgType__AuctionEnd    = 1,
	EAuctionMsgType__AuctionItemGet = 2,
	EAuctionMsgType__Max           = 3
};


// Enum CommonSource.EBroadcastType
enum class FCommonSource_CommonSource_EBroadcastType : uint8_t
{
	EBroadcastType__None           = 0,
	EBroadcastType__CashShop       = 1,
	EBroadcastType__DropItem       = 2,
	EBroadcastType__CashShopLimitPackage = 3,
	EBroadcastType__PackageItem    = 4,
	EBroadcastType__Event          = 5,
	EBroadcastType__Dungeon        = 6,
	EBroadcastType__GuildAuction   = 7,
	EBroadcastType__Quest          = 8,
	EBroadcastType__ItemMake       = 9,
	EBroadcastType__Avatar         = 10,
	EBroadcastType__Vehicle        = 11,
	EBroadcastType__Rune           = 12,
	EBroadcastType__System         = 13,
	EBroadcastType__ItemEnchantSuccess = 14,
	EBroadcastType__VillageQuest   = 15,
	EBroadcastType__RelicGamble    = 16,
	EBroadcastType__TreasureBox    = 17,
	EBroadcastType__BlessingStone  = 18,
	EBroadcastType__WeaponShape    = 19,
	EBroadcastType__Pet            = 20,
	EBroadcastType__Max            = 21
};


// Enum CommonSource.ECastlewarMercenaryState
enum class FCommonSource_CommonSource_ECastlewarMercenaryState : uint8_t
{
	ECastlewarMercenaryState__Apply = 0,
	ECastlewarMercenaryState__Cancel = 1,
	ECastlewarMercenaryState__Withdraw = 2,
	ECastlewarMercenaryState__Accept = 3,
	ECastlewarMercenaryState__Reject = 4,
	ECastlewarMercenaryState__Expel = 5,
	ECastlewarMercenaryState__Max  = 6
};


// Enum CommonSource.EChatType
enum class FCommonSource_CommonSource_EChatType : uint8_t
{
	EChatType__Normal              = 0,
	EChatType__Party               = 1,
	EChatType__Guild               = 2,
	EChatType__Server              = 3,
	EChatType__Whisper             = 4,
	EChatType__Mockery             = 5,
	EChatType__WorldDungeon        = 6,
	EChatType__EliteDungeon        = 7,
	EChatType__GuildAlliance       = 8,
	EChatType__Castlewar           = 9,
	EChatType__WorldPartyDungeon   = 10,
	EChatType__WorldShadowDungeon  = 11,
	EChatType__ServerInvasion      = 12,
	EChatType__Max                 = 13
};


// Enum CommonSource.EClassChangeKeepSkillType
enum class FCommonSource_CommonSource_EClassChangeKeepSkillType : uint8_t
{
	EClassChangeKeepSkillType__None = 0,
	EClassChangeKeepSkillType__EnchantLevel = 1,
	EClassChangeKeepSkillType__EnchantLevel_Init = 2,
	EClassChangeKeepSkillType__TranscendSkill = 3,
	EClassChangeKeepSkillType__TranscendSkill_Init = 4,
	EClassChangeKeepSkillType__EnchantLevel_TranscendSkill = 5,
	EClassChangeKeepSkillType__EnchantLevel_TranscendSkill_Init = 6,
	EClassChangeKeepSkillType__Max = 7
};


// Enum CommonSource.EClassChangeItemGroup
enum class FCommonSource_CommonSource_EClassChangeItemGroup : uint8_t
{
	EClassChangeItemGroup__Weapon  = 0,
	EClassChangeItemGroup__Armor   = 1,
	EClassChangeItemGroup__Accessory = 2,
	EClassChangeItemGroup__Accessory_Cash = 3,
	EClassChangeItemGroup__Max     = 4
};


// Enum CommonSource.EClassChangeType
enum class FCommonSource_CommonSource_EClassChangeType : uint8_t
{
	EClassChangeType__Avatar       = 0,
	EClassChangeType__WeaponShape  = 1,
	EClassChangeType__Item         = 2,
	EClassChangeType__ActiveSkill  = 3,
	EClassChangeType__PassiveSkill = 4,
	EClassChangeType__Costume_Skin = 5,
	EClassChangeType__Costume_Weapon = 6,
	EClassChangeType__SubWeapon    = 7,
	EClassChangeType__Max          = 8
};


// Enum CommonSource.EClassChangeActionType
enum class FCommonSource_CommonSource_EClassChangeActionType : uint8_t
{
	EClassChangeActionType__Fixed  = 0,
	EClassChangeActionType__Selected = 1,
	EClassChangeActionType__ExchangeItem = 2,
	EClassChangeActionType__Max    = 3
};


// Enum CommonSource.ECollectionCategory
enum class FCommonSource_CommonSource_ECollectionCategory : uint8_t
{
	ECollectionCategory__Normal    = 0,
	ECollectionCategory__Event     = 1,
	ECollectionCategory__Contents  = 2,
	ECollectionCategory__Max       = 3
};


// Enum CommonSource.EItemCollectionTab
enum class FCommonSource_CommonSource_EItemCollectionTab : uint8_t
{
	EItemCollectionTab__Attack     = 0,
	EItemCollectionTab__defense    = 1,
	EItemCollectionTab__Collect    = 2,
	EItemCollectionTab__Event      = 3,
	EItemCollectionTab__Contents   = 4,
	EItemCollectionTab__Attention  = 5,
	EItemCollectionTab__Max        = 6
};


// Enum CommonSource.EHaveItem
enum class FCommonSource_CommonSource_EHaveItem : uint8_t
{
	EHaveItem__InventoryIn         = 0,
	EHaveItem__Noitem              = 1,
	EHaveItem__Complete            = 2,
	EHaveItem__Max                 = 3
};


// Enum CommonSource.ECollectionPeriod
enum class FCommonSource_CommonSource_ECollectionPeriod : uint8_t
{
	ECollectionPeriod__Always      = 0,
	ECollectionPeriod__Rotation    = 1,
	ECollectionPeriod__Event       = 2,
	ECollectionPeriod__Event_Period = 3,
	ECollectionPeriod__WorldDungeon = 4,
	ECollectionPeriod__ChampionsDungeon = 5,
	ECollectionPeriod__GuildBattlefield = 6,
	ECollectionPeriod__Max         = 7
};


// Enum CommonSource.ECollectionAvatarTab
enum class FCommonSource_CommonSource_ECollectionAvatarTab : uint8_t
{
	ECollectionAvatarTab__Set      = 0,
	ECollectionAvatarTab__Deco     = 1,
	ECollectionAvatarTab__Max      = 2
};


// Enum CommonSource.EConflictDungeonMonsterState
enum class FCommonSource_CommonSource_EConflictDungeonMonsterState : uint8_t
{
	EConflictDungeonMonsterState__None = 0,
	EConflictDungeonMonsterState__Spawn = 1,
	EConflictDungeonMonsterState__Dead = 2,
	EConflictDungeonMonsterState__Max = 3
};


// Enum CommonSource.ECoolTimeType
enum class FCommonSource_CommonSource_ECoolTimeType : uint8_t
{
	ECoolTimeType__None            = 0,
	ECoolTimeType__CONTENT_USE_COOLTIME_RELICGAMEBLE = 1,
	ECoolTimeType__CONTENT_USE_COOLTIME_IMPRINT = 2,
	ECoolTimeType__CONTENT_USE_COOLTIME_ITEMWORKMANSHIP = 3,
	ECoolTimeType__CONTENT_USE_COOLTIME_SKILLENCHANT = 4,
	ECoolTimeType__CONTENT_USE_COOLTIME_SUMMON = 5,
	ECoolTimeType__CONTENT_USE_COOLTIME_COMPOSE = 6,
	ECoolTimeType__CONTENT_USE_COOLTIME_BLESSINGFORMCHANGE = 7,
	ECoolTimeType__CONTENT_USE_COOLTIME_PETOPTION = 8,
	ECoolTimeType__CONTENT_USE_COOLTIME_RANKING = 9,
	ECoolTimeType__CONTENT_USE_COOLTIME_LINK_SUMMON = 10,
	ECoolTimeType__CASTLEWAR_TAX_DISTRIBUTION = 11,
	ECoolTimeType__CONTENT_USE_COOLTIME_RUNE_ENCHANT = 12,
	ECoolTimeType__CONTENT_USE_COOLTIME_RUNE_ATTRIBUTE = 13,
	ECoolTimeType__GUILD_REQUEST   = 14,
	ECoolTimeType__DEBUG_LOG_COOLTIME = 15,
	ECoolTimeType__CONTENT_USE_COOLTIME_PRESET = 16,
	ECoolTimeType__CONTENT_USE_COOLTIME_PRESET_APPLY = 17,
	ECoolTimeType__CONTENT_USE_COOLTIME_CASTLEWAR_TARGETSELECT = 18,
	ECoolTimeType__CONTENT_USE_COOLTIME_PARTYDUNGEON = 19,
	ECoolTimeType__Max             = 20
};


// Enum CommonSource.ECostumeShowingType
enum class FCommonSource_CommonSource_ECostumeShowingType : uint8_t
{
	ECostumeShowingType__None      = 0,
	ECostumeShowingType__ShadowDungeon = 1,
	ECostumeShowingType__WorldShadowDungeon = 2,
	ECostumeShowingType__Max       = 3
};


// Enum CommonSource.ECostumeResourceType
enum class FCommonSource_CommonSource_ECostumeResourceType : uint8_t
{
	ECostumeResourceType__Avatar   = 0,
	ECostumeResourceType__Costume  = 1,
	ECostumeResourceType__WeaponShape = 2,
	ECostumeResourceType__Vehicle  = 3,
	ECostumeResourceType__Max      = 4
};


// Enum CommonSource.ECostumeSkinType
enum class FCommonSource_CommonSource_ECostumeSkinType : uint8_t
{
	ECostumeSkinType__Body         = 0,
	ECostumeSkinType__Helmet       = 1,
	ECostumeSkinType__Weapon       = 2,
	ECostumeSkinType__VehicleGround = 3,
	ECostumeSkinType__VehicleAir   = 4,
	ECostumeSkinType__Max          = 5
};


// Enum CommonSource.ECostumeType
enum class FCommonSource_CommonSource_ECostumeType : uint8_t
{
	ECostumeType__Skin             = 0,
	ECostumeType__Weapon           = 1,
	ECostumeType__VehicleGround    = 2,
	ECostumeType__VehicleAir       = 3,
	ECostumeType__Max              = 4
};


// Enum CommonSource.EDuelMatchState
enum class FCommonSource_CommonSource_EDuelMatchState : uint8_t
{
	EDuelMatchState__None          = 0,
	EDuelMatchState__Ready         = 1,
	EDuelMatchState__Start         = 2,
	EDuelMatchState__Max           = 3
};


// Enum CommonSource.EDuelSide
enum class FCommonSource_CommonSource_EDuelSide : uint8_t
{
	EDuelSide__None                = 0,
	EDuelSide__Red                 = 1,
	EDuelSide__Blue                = 2,
	EDuelSide__Purple              = 3,
	EDuelSide__Yellow              = 4,
	EDuelSide__Max                 = 5
};


// Enum CommonSource.EWorldEliteDungeonManageState
enum class FCommonSource_CommonSource_EWorldEliteDungeonManageState : uint8_t
{
	EWorldEliteDungeonManageState__None = 0,
	EWorldEliteDungeonManageState__Matching = 1,
	EWorldEliteDungeonManageState__MatchingCompleteWaiting = 2,
	EWorldEliteDungeonManageState__MatchingComplete = 3,
	EWorldEliteDungeonManageState__Max = 4
};


// Enum CommonSource.EWorldEliteDungeonMatchState
enum class FCommonSource_CommonSource_EWorldEliteDungeonMatchState : uint8_t
{
	EWorldEliteDungeonMatchState__Matching = 0,
	EWorldEliteDungeonMatchState__MatchingComplete = 1,
	EWorldEliteDungeonMatchState__Max = 2
};


// Enum CommonSource.EEmotionType
enum class FCommonSource_CommonSource_EEmotionType : uint8_t
{
	EEmotionType__LightGreeting    = 0,
	EEmotionType__Knee             = 1,
	EEmotionType__Laughter         = 2,
	EEmotionType__Clap             = 3,
	EEmotionType__Angry            = 4,
	EEmotionType__Shame            = 5,
	EEmotionType__Sad              = 6,
	EEmotionType__Surprise         = 7,
	EEmotionType__ThumbsUp         = 8,
	EEmotionType__Reject           = 9,
	EEmotionType__Apology          = 10,
	EEmotionType__Lie              = 11,
	EEmotionType__Provoke          = 12,
	EEmotionType__Sit              = 13,
	EEmotionType__Dance1           = 14,
	EEmotionType__Dance2           = 15,
	EEmotionType__Dance3           = 16,
	EEmotionType__Castellan        = 17,
	EEmotionType__CastellanKnee    = 18,
	EEmotionType__BattleIdle       = 19,
	EEmotionType__Max              = 20
};


// Enum CommonSource.EExchangeConditionCheckType
enum class FCommonSource_CommonSource_EExchangeConditionCheckType : uint8_t
{
	EExchangeConditionCheckType__SHOP_ONLY_DIA_GOODS = 0,
	EExchangeConditionCheckType__SHOP_PACKAGE_GOODS_COUNT = 1,
	EExchangeConditionCheckType__SHOP_GOLD_GACHA_BUY_HISTORY = 2,
	EExchangeConditionCheckType__EXCHANGE_DAILY_ALERTPRICE_BUY_COUNT = 3,
	EExchangeConditionCheckType__EXCHANGE_ONLY_BUY_HISTORY = 4,
	EExchangeConditionCheckType__EXCHANGE_NORMALPRICE_BUY_HISTORY = 5,
	EExchangeConditionCheckType__GROWTH_PLAYER_LEVEL = 6,
	EExchangeConditionCheckType__GROWTH_EQUIPITEM = 7,
	EExchangeConditionCheckType__GROWTH_SKILL_ENCHANT_HISTORY = 8,
	EExchangeConditionCheckType__GROWTH_ITEM_COLLECTION = 9,
	EExchangeConditionCheckType__GROWTH_ACHIEVEMENT_POINT = 10,
	EExchangeConditionCheckType__REWARD_LAST_ATTENDANCE_REWARD = 11,
	EExchangeConditionCheckType__REWARD_BADGE = 12,
	EExchangeConditionCheckType__REWARD_REALMWARCOIN = 13,
	EExchangeConditionCheckType__REWARD_GUILDCOIN = 14,
	EExchangeConditionCheckType__PLAY_ITEM_QUICKSLOT = 15,
	EExchangeConditionCheckType__ACCOUNT_SECOND_PASSWORD = 16,
	EExchangeConditionCheckType__ACCOUNT_PLAYER_CREATE_PERIOD = 17,
	EExchangeConditionCheckType__ACCOUNT_ONLY_ONE_PLAYER = 18,
	EExchangeConditionCheckType__Max = 19
};


// Enum CommonSource.EExchangeOrderType
enum class FCommonSource_CommonSource_EExchangeOrderType : uint8_t
{
	EExchangeOrderType__EnchantPriceAsc = 0,
	EExchangeOrderType__EnchantDesc = 1,
	EExchangeOrderType__PriceAsc   = 2,
	EExchangeOrderType__PriceDesc  = 3,
	EExchangeOrderType__EachPriceAsc = 4,
	EExchangeOrderType__EachPriceDesc = 5,
	EExchangeOrderType__Max        = 6
};


// Enum CommonSource.EExchangeTradeType
enum class FCommonSource_CommonSource_EExchangeTradeType : uint8_t
{
	EExchangeTradeType__Buy        = 0,
	EExchangeTradeType__Settled    = 1,
	EExchangeTradeType__Cancel     = 2,
	EExchangeTradeType__Expire     = 3,
	EExchangeTradeType__Max        = 4
};


// Enum CommonSource.EFriendState
enum class FCommonSource_CommonSource_EFriendState : uint8_t
{
	EFriendState__None             = 0,
	EFriendState__Apply            = 1,
	EFriendState__Friend           = 2,
	EFriendState__Requested        = 3,
	EFriendState__Max              = 4
};


// Enum CommonSource.EGameEventRuneWordTextRange
enum class FCommonSource_CommonSource_EGameEventRuneWordTextRange : uint8_t
{
	EGameEventRuneWordTextRange__None = 0,
	EGameEventRuneWordTextRange__RuneWord_Text_A = 1,
	EGameEventRuneWordTextRange__RuneWord_Text_B = 2,
	EGameEventRuneWordTextRange__RuneWord_Text_C = 3,
	EGameEventRuneWordTextRange__RuneWord_Text_D = 4,
	EGameEventRuneWordTextRange__RuneWord_Text_E = 5,
	EGameEventRuneWordTextRange__RuneWord_Text_F = 6,
	EGameEventRuneWordTextRange__RuneWord_Text_G = 7,
	EGameEventRuneWordTextRange__RuneWord_Text_H = 8,
	EGameEventRuneWordTextRange__RuneWord_Text_I = 9,
	EGameEventRuneWordTextRange__RuneWord_Text_J = 10,
	EGameEventRuneWordTextRange__RuneWord_Text_K = 11,
	EGameEventRuneWordTextRange__RuneWord_Text_L = 12,
	EGameEventRuneWordTextRange__RuneWord_Text_M = 13,
	EGameEventRuneWordTextRange__RuneWord_Text_N = 14,
	EGameEventRuneWordTextRange__RuneWord_Text_O = 15,
	EGameEventRuneWordTextRange__RuneWord_Text_P = 16,
	EGameEventRuneWordTextRange__RuneWord_Text_Q = 17,
	EGameEventRuneWordTextRange__RuneWord_Text_R = 18,
	EGameEventRuneWordTextRange__RuneWord_Text_S = 19,
	EGameEventRuneWordTextRange__RuneWord_Text_T = 20,
	EGameEventRuneWordTextRange__RuneWord_Text_U = 21,
	EGameEventRuneWordTextRange__RuneWord_Text_V = 22,
	EGameEventRuneWordTextRange__RuneWord_Text_W = 23,
	EGameEventRuneWordTextRange__RuneWord_Text_X = 24,
	EGameEventRuneWordTextRange__RuneWord_Text_Y = 25,
	EGameEventRuneWordTextRange__RuneWord_Text_Z = 26,
	EGameEventRuneWordTextRange__RuneWord_Text = 27,
	EGameEventRuneWordTextRange__RuneWord_Text01 = 28,
	EGameEventRuneWordTextRange__RuneWord_Text02 = 29,
	EGameEventRuneWordTextRange__RuneWord_Text03 = 30,
	EGameEventRuneWordTextRange__RuneWord_Text04 = 31,
	EGameEventRuneWordTextRange__RuneWord_Text05 = 32,
	EGameEventRuneWordTextRange__RuneWord_Text06 = 33,
	EGameEventRuneWordTextRange__RuneWord_Text07 = 34,
	EGameEventRuneWordTextRange__RuneWord_Text08 = 35,
	EGameEventRuneWordTextRange__RuneWord_Text09 = 36,
	EGameEventRuneWordTextRange__RuneWord_Text_ALL = 37,
	EGameEventRuneWordTextRange__EGameEventRuneWordTextRange_MAX = 38
};


// Enum CommonSource.EGameEventRuneWordMatchEventType
enum class FCommonSource_CommonSource_EGameEventRuneWordMatchEventType : uint8_t
{
	EGameEventRuneWordMatchEventType__RuneWord = 0,
	EGameEventRuneWordMatchEventType__Alphabet_Puzzle = 1,
	EGameEventRuneWordMatchEventType__EGameEventRuneWordMatchEventType_MAX = 2
};


// Enum CommonSource.EGradeRuneWord
enum class FCommonSource_CommonSource_EGradeRuneWord : uint8_t
{
	EGradeRuneWord__None           = 0,
	EGradeRuneWord__Normal         = 1,
	EGradeRuneWord__High           = 2,
	EGradeRuneWord__Rare           = 3,
	EGradeRuneWord__Hero           = 4,
	EGradeRuneWord__Legend         = 5,
	EGradeRuneWord__Myth           = 6,
	EGradeRuneWord__Total          = 7,
	EGradeRuneWord__EGradeRuneWord_MAX = 8
};


// Enum CommonSource.EGameEventRoskvaDiceType
enum class FCommonSource_CommonSource_EGameEventRoskvaDiceType : uint8_t
{
	EGameEventRoskvaDiceType__Normal = 0,
	EGameEventRoskvaDiceType__SpecialOdd = 1,
	EGameEventRoskvaDiceType__SpecialEven = 2,
	EGameEventRoskvaDiceType__Max  = 3
};


// Enum CommonSource.EGameEventRoskvaDiceActionType
enum class FCommonSource_CommonSource_EGameEventRoskvaDiceActionType : uint8_t
{
	EGameEventRoskvaDiceActionType__None = 0,
	EGameEventRoskvaDiceActionType__Roll = 1,
	EGameEventRoskvaDiceActionType__Reward = 2,
	EGameEventRoskvaDiceActionType__Max = 3
};


// Enum CommonSource.EGameEventTarget
enum class FCommonSource_CommonSource_EGameEventTarget : uint8_t
{
	EGameEventTarget__None         = 0,
	EGameEventTarget__Newbie       = 1,
	EGameEventTarget__Comeback     = 2,
	EGameEventTarget__Existing     = 3,
	EGameEventTarget__Max          = 4
};


// Enum CommonSource.EGameEventLionRoulettePointType
enum class FCommonSource_CommonSource_EGameEventLionRoulettePointType : uint8_t
{
	EGameEventLionRoulettePointType__RecourcePoint = 0,
	EGameEventLionRoulettePointType__RewardPoint = 1,
	EGameEventLionRoulettePointType__Max = 2
};


// Enum CommonSource.EGameEventRPSExCardType
enum class FCommonSource_CommonSource_EGameEventRPSExCardType : uint8_t
{
	EGameEventRPSExCardType__Rock  = 0,
	EGameEventRPSExCardType__Papper = 1,
	EGameEventRPSExCardType__Scissors = 2,
	EGameEventRPSExCardType__Max   = 3
};


// Enum CommonSource.EGameEventRPSExStateType
enum class FCommonSource_CommonSource_EGameEventRPSExStateType : uint8_t
{
	EGameEventRPSExStateType__None = 0,
	EGameEventRPSExStateType__Select = 1,
	EGameEventRPSExStateType__ReSelect = 2,
	EGameEventRPSExStateType__ShuffleEnd = 3,
	EGameEventRPSExStateType__Max  = 4
};


// Enum CommonSource.EGameEventRPSExResultType
enum class FCommonSource_CommonSource_EGameEventRPSExResultType : uint8_t
{
	EGameEventRPSExResultType__Lose = 0,
	EGameEventRPSExResultType__Win = 1,
	EGameEventRPSExResultType__Draw = 2,
	EGameEventRPSExResultType__Max = 3
};


// Enum CommonSource.EGameEventEnchantStateType
enum class FCommonSource_CommonSource_EGameEventEnchantStateType : uint8_t
{
	EGameEventEnchantStateType__None = 0,
	EGameEventEnchantStateType__Doing = 1,
	EGameEventEnchantStateType__Max = 2
};


// Enum CommonSource.EGameEventRPSStateType
enum class FCommonSource_CommonSource_EGameEventRPSStateType : uint8_t
{
	EGameEventRPSStateType__None   = 0,
	EGameEventRPSStateType__Doing  = 1,
	EGameEventRPSStateType__Max    = 2
};


// Enum CommonSource.EGameEventLionRouletteResultType
enum class FCommonSource_CommonSource_EGameEventLionRouletteResultType : uint8_t
{
	EGameEventLionRouletteResultType__Success = 0,
	EGameEventLionRouletteResultType__Fail = 1,
	EGameEventLionRouletteResultType__Max = 2
};


// Enum CommonSource.EGameEventRPSResultType
enum class FCommonSource_CommonSource_EGameEventRPSResultType : uint8_t
{
	EGameEventRPSResultType__Lose  = 0,
	EGameEventRPSResultType__Win   = 1,
	EGameEventRPSResultType__Draw  = 2,
	EGameEventRPSResultType__Max   = 3
};


// Enum CommonSource.EGameEventItemMakePeriodType
enum class FCommonSource_CommonSource_EGameEventItemMakePeriodType : uint8_t
{
	EGameEventItemMakePeriodType__None = 0,
	EGameEventItemMakePeriodType__Monthly = 1,
	EGameEventItemMakePeriodType__Weekly = 2,
	EGameEventItemMakePeriodType__Daily = 3,
	EGameEventItemMakePeriodType__Limited = 4,
	EGameEventItemMakePeriodType__Max = 5
};


// Enum CommonSource.EGameEventItemMakeLimitType
enum class FCommonSource_CommonSource_EGameEventItemMakeLimitType : uint8_t
{
	EGameEventItemMakeLimitType__None = 0,
	EGameEventItemMakeLimitType__Player = 1,
	EGameEventItemMakeLimitType__Server = 2,
	EGameEventItemMakeLimitType__World = 3,
	EGameEventItemMakeLimitType__Max = 4
};


// Enum CommonSource.EMissionPeriodType
enum class FCommonSource_CommonSource_EMissionPeriodType : uint8_t
{
	EMissionPeriodType__None       = 0,
	EMissionPeriodType__EveryDay   = 1,
	EMissionPeriodType__Periopd    = 2,
	EMissionPeriodType__Max        = 3
};


// Enum CommonSource.EMissionState
enum class FCommonSource_CommonSource_EMissionState : uint8_t
{
	EMissionState__Doing           = 0,
	EMissionState__Clear           = 1,
	EMissionState__Finish          = 2,
	EMissionState__Ready           = 3,
	EMissionState__Max             = 4
};


// Enum CommonSource.EGameEventRoskvaDiceBonusBlockType
enum class FCommonSource_CommonSource_EGameEventRoskvaDiceBonusBlockType : uint8_t
{
	EGameEventRoskvaDiceBonusBlockType__None = 0,
	EGameEventRoskvaDiceBonusBlockType__Opportunity = 1,
	EGameEventRoskvaDiceBonusBlockType__Move = 2,
	EGameEventRoskvaDiceBonusBlockType__Max = 3
};


// Enum CommonSource.EEventProgress
enum class FCommonSource_CommonSource_EEventProgress : uint8_t
{
	EEventProgress__None           = 0,
	EEventProgress__Doing          = 1,
	EEventProgress__Finish         = 2,
	EEventProgress__Max            = 3
};


// Enum CommonSource.EInfinityDungeonBuffOption
enum class FCommonSource_CommonSource_EInfinityDungeonBuffOption : uint8_t
{
	EInfinityDungeonBuffOption__ManualSelectBuff = 0,
	EInfinityDungeonBuffOption__AutoSelectBuff = 1,
	EInfinityDungeonBuffOption__EInfinityDungeonBuffOption_MAX = 2
};


// Enum CommonSource.EGameOptionPropertyType
enum class FCommonSource_CommonSource_EGameOptionPropertyType : uint8_t
{
	EGameOptionPropertyType__None  = 0,
	EGameOptionPropertyType__TurnOffAll = 1,
	EGameOptionPropertyType__OnlyOther = 2,
	EGameOptionPropertyType__OnlyMe = 3,
	EGameOptionPropertyType__TurnOnAll = 4,
	EGameOptionPropertyType__TurnOff = 5,
	EGameOptionPropertyType__TurnOn5Min = 6,
	EGameOptionPropertyType__TurnOn10Min = 7,
	EGameOptionPropertyType__TurnOn30Min = 8,
	EGameOptionPropertyType__UserDefineMode = 9,
	EGameOptionPropertyType__LowMode = 10,
	EGameOptionPropertyType__NormalMode = 11,
	EGameOptionPropertyType__HighMode = 12,
	EGameOptionPropertyType__HighestMode = 13,
	EGameOptionPropertyType__MinimumEffectAll = 14,
	EGameOptionPropertyType__MinimumEffectOther = 15,
	EGameOptionPropertyType__MaximumEffectAll = 16,
	EGameOptionPropertyType__MultipleZeroPointEight = 17,
	EGameOptionPropertyType__MultipleZeroPointNine = 18,
	EGameOptionPropertyType__MultipleOnePointZero = 19,
	EGameOptionPropertyType__NoneFilter = 20,
	EGameOptionPropertyType__TaleFilter = 21,
	EGameOptionPropertyType__ClassicFilter = 22,
	EGameOptionPropertyType__CinematicFilter = 23,
	EGameOptionPropertyType__MonoFilter = 24,
	EGameOptionPropertyType__MultipleOnePointOne = 25,
	EGameOptionPropertyType__MultipleOnePointTwo = 26,
	EGameOptionPropertyType__Max   = 27
};


// Enum CommonSource.EGameEventBuyLimitType
enum class FCommonSource_CommonSource_EGameEventBuyLimitType : uint8_t
{
	EGameEventBuyLimitType__None   = 0,
	EGameEventBuyLimitType__Daily  = 1,
	EGameEventBuyLimitType__Monthly = 2,
	EGameEventBuyLimitType__Player = 3,
	EGameEventBuyLimitType__Server = 4,
	EGameEventBuyLimitType__Server_Week = 5,
	EGameEventBuyLimitType__Max    = 6
};


// Enum CommonSource.EConfirmPkPreventType
enum class FCommonSource_CommonSource_EConfirmPkPreventType : uint8_t
{
	EConfirmPkPreventType__Off     = 0,
	EConfirmPkPreventType__OnlyEnermy = 1,
	EConfirmPkPreventType__On      = 2,
	EConfirmPkPreventType__EConfirmPkPreventType_MAX = 3
};


// Enum CommonSource.EQuickSlotPotionSortType
enum class FCommonSource_CommonSource_EQuickSlotPotionSortType : uint8_t
{
	EQuickSlotPotionSortType__Down = 0,
	EQuickSlotPotionSortType__Up   = 1,
	EQuickSlotPotionSortType__Off  = 2,
	EQuickSlotPotionSortType__EQuickSlotPotionSortType_MAX = 3
};


// Enum CommonSource.EPartyInvitationReceiveType
enum class FCommonSource_CommonSource_EPartyInvitationReceiveType : uint8_t
{
	EPartyInvitationReceiveType__Hide = 0,
	EPartyInvitationReceiveType__ShowFriendAndGuild = 1,
	EPartyInvitationReceiveType__Show = 2,
	EPartyInvitationReceiveType__Max = 3
};


// Enum CommonSource.EDayOfWeekType
enum class FCommonSource_CommonSource_EDayOfWeekType : uint8_t
{
	EDayOfWeekType__MonDay         = 0,
	EDayOfWeekType__Tuesday        = 1,
	EDayOfWeekType__Wednesday      = 2,
	EDayOfWeekType__Thursday       = 3,
	EDayOfWeekType__Friday         = 4,
	EDayOfWeekType__Saturday       = 5,
	EDayOfWeekType__Sunday         = 6,
	EDayOfWeekType__EDayOfWeekType_MAX = 7
};


// Enum CommonSource.ECollectionReplaceType
enum class FCommonSource_CommonSource_ECollectionReplaceType : uint8_t
{
	ECollectionReplaceType__Fixed  = 0,
	ECollectionReplaceType__Ramdom = 1,
	ECollectionReplaceType__ECollectionReplaceType_MAX = 2
};


// Enum CommonSource.EGMCheatParamType
enum class FCommonSource_CommonSource_EGMCheatParamType : uint8_t
{
	EGMCheatParamType__None        = 0,
	EGMCheatParamType__PlayerName  = 1,
	EGMCheatParamType__Max         = 2
};


// Enum CommonSource.EPlayState
enum class FCommonSource_CommonSource_EPlayState : uint8_t
{
	EPlayState__Logout             = 0,
	EPlayState__Lobby              = 1,
	EPlayState__Playing            = 2,
	EPlayState__OfflineHunting     = 3,
	EPlayState__Max                = 4
};


// Enum CommonSource.EEquipmentAcquireGradeType
enum class FCommonSource_CommonSource_EEquipmentAcquireGradeType : uint8_t
{
	EEquipmentAcquireGradeType__AllGrade = 0,
	EEquipmentAcquireGradeType__HighOrHigherGrade = 1,
	EEquipmentAcquireGradeType__RareOrHigherGrade = 2,
	EEquipmentAcquireGradeType__HeroOrHigherGrade = 3,
	EEquipmentAcquireGradeType__Max = 4
};


// Enum CommonSource.EDeathPenaltyRestoreType
enum class FCommonSource_CommonSource_EDeathPenaltyRestoreType : uint8_t
{
	EDeathPenaltyRestoreType__None = 0,
	EDeathPenaltyRestoreType__NotTry = 1,
	EDeathPenaltyRestoreType__FreeRestore = 2,
	EDeathPenaltyRestoreType__GoldRestore = 3,
	EDeathPenaltyRestoreType__CashRestore = 4,
	EDeathPenaltyRestoreType__Max  = 5
};


// Enum CommonSource.EDeathPenaltyFreeMode
enum class FCommonSource_CommonSource_EDeathPenaltyFreeMode : uint8_t
{
	EDeathPenaltyFreeMode__None    = 0,
	EDeathPenaltyFreeMode__GuildStronghold = 1,
	EDeathPenaltyFreeMode__Max     = 2
};


// Enum CommonSource.EInputType
enum class FCommonSource_CommonSource_EInputType : uint8_t
{
	EInputType__CharName           = 0,
	EInputType__GuildName          = 1,
	EInputType__GuildComment       = 2,
	EInputType__GuildOpenChattingUrl = 3,
	EInputType__GuildNotice        = 4,
	EInputType__ItemName           = 5,
	EInputType__Chatting           = 6,
	EInputType__PointSave          = 7,
	EInputType__LetterTitle        = 8,
	EInputType__LetterContents     = 9,
	EInputType__PKTauntComment     = 10,
	EInputType__DuelName           = 11,
	EInputType__GuildRankingIntroduction = 12,
	EInputType__GuildAllianceChannel = 13,
	EInputType__Max                = 14
};


// Enum CommonSource.EPkBrutalState
enum class FCommonSource_CommonSource_EPkBrutalState : uint8_t
{
	EPkBrutalState__None           = 0,
	EPkBrutalState__BrutalReady    = 1,
	EPkBrutalState__Brutal         = 2,
	EPkBrutalState__Max            = 3
};


// Enum CommonSource.EExpireNotifyStatus
enum class FCommonSource_CommonSource_EExpireNotifyStatus : uint8_t
{
	EExpireNotifyStatus__NONE      = 0,
	EExpireNotifyStatus__EXPIRED   = 1,
	EExpireNotifyStatus__EXPIRED_NOTIFY = 2,
	EExpireNotifyStatus__EExpireNotifyStatus_MAX = 3
};


// Enum CommonSource.ECollectionApplyType
enum class FCommonSource_CommonSource_ECollectionApplyType : uint8_t
{
	ECollectionApplyType__CollectionCount = 0,
	ECollectionApplyType__CompleteOption = 1,
	ECollectionApplyType__Max      = 2
};


// Enum CommonSource.ECollectionType
enum class FCommonSource_CommonSource_ECollectionType : uint8_t
{
	ECollectionType__EquipItem     = 0,
	ECollectionType__Avatar        = 1,
	ECollectionType__AvatarAccessory = 2,
	ECollectionType__Vehicle       = 3,
	ECollectionType__Monster       = 4,
	ECollectionType__Relic         = 5,
	ECollectionType__WeaponShape   = 6,
	ECollectionType__Pet           = 7,
	ECollectionType__Max           = 8
};


// Enum CommonSource.ESkillGrade
enum class FCommonSource_CommonSource_ESkillGrade : uint8_t
{
	ESkillGrade__None              = 0,
	ESkillGrade__Normal            = 1,
	ESkillGrade__High              = 2,
	ESkillGrade__Rare              = 3,
	ESkillGrade__Hero              = 4,
	ESkillGrade__Legend            = 5,
	ESkillGrade__Max               = 6
};


// Enum CommonSource.ELHCompareType
enum class FCommonSource_CommonSource_ELHCompareType : uint8_t
{
	ELHCompareType__None           = 0,
	ELHCompareType__Equal          = 1,
	ELHCompareType__GreaterEqual   = 2,
	ELHCompareType__LessEqual      = 3,
	ELHCompareType__GroupEqual     = 4,
	ELHCompareType__Less           = 5,
	ELHCompareType__Max            = 6
};


// Enum CommonSource.EGuildAllianceChattingExpiredCheckResult
enum class FCommonSource_CommonSource_EGuildAllianceChattingExpiredCheckResult : uint8_t
{
	EGuildAllianceChattingExpiredCheckResult__Success = 0,
	EGuildAllianceChattingExpiredCheckResult__Not_Exist_Channel = 1,
	EGuildAllianceChattingExpiredCheckResult__Not_Expire = 2,
	EGuildAllianceChattingExpiredCheckResult__Max = 3
};


// Enum CommonSource.EGuildAllianceChattingExpelledResult
enum class FCommonSource_CommonSource_EGuildAllianceChattingExpelledResult : uint8_t
{
	EGuildAllianceChattingExpelledResult__Success = 0,
	EGuildAllianceChattingExpelledResult__Not_Channel_Member = 1,
	EGuildAllianceChattingExpelledResult__Max = 2
};


// Enum CommonSource.EGuildAllianceChattingAcceptResult
enum class FCommonSource_CommonSource_EGuildAllianceChattingAcceptResult : uint8_t
{
	EGuildAllianceChattingAcceptResult__Success = 0,
	EGuildAllianceChattingAcceptResult__Not_Exist_Channel = 1,
	EGuildAllianceChattingAcceptResult__Accept_Channel_Member_Count_Over = 2,
	EGuildAllianceChattingAcceptResult__Channel_Count_Max = 3,
	EGuildAllianceChattingAcceptResult__Max = 4
};


// Enum CommonSource.EGuildAllianceChattingCreateResult
enum class FCommonSource_CommonSource_EGuildAllianceChattingCreateResult : uint8_t
{
	EGuildAllianceChattingCreateResult__Success = 0,
	EGuildAllianceChattingCreateResult__Channel_Count_Max = 1,
	EGuildAllianceChattingCreateResult__Max = 2
};


// Enum CommonSource.EGuildAllianceChattingApplyState
enum class FCommonSource_CommonSource_EGuildAllianceChattingApplyState : uint8_t
{
	EGuildAllianceChattingApplyState__Success = 0,
	EGuildAllianceChattingApplyState__Already_Apply = 1,
	EGuildAllianceChattingApplyState__Already_Channel_Member = 2,
	EGuildAllianceChattingApplyState__Channel_Member_Count_Max = 3,
	EGuildAllianceChattingApplyState__Guild_Level_Not_Enough = 4,
	EGuildAllianceChattingApplyState__Max = 5
};


// Enum CommonSource.EGuildAllianceChattingNotifyState
enum class FCommonSource_CommonSource_EGuildAllianceChattingNotifyState : uint8_t
{
	EGuildAllianceChattingNotifyState__None = 0,
	EGuildAllianceChattingNotifyState__Created = 1,
	EGuildAllianceChattingNotifyState__Enter = 2,
	EGuildAllianceChattingNotifyState__Accept = 3,
	EGuildAllianceChattingNotifyState__Expelled = 4,
	EGuildAllianceChattingNotifyState__Withdraw = 5,
	EGuildAllianceChattingNotifyState__MasterChange = 6,
	EGuildAllianceChattingNotifyState__NameChange = 7,
	EGuildAllianceChattingNotifyState__Disband = 8,
	EGuildAllianceChattingNotifyState__OfficialChannel = 9,
	EGuildAllianceChattingNotifyState__ApplyReject = 10,
	EGuildAllianceChattingNotifyState__Apply = 11,
	EGuildAllianceChattingNotifyState__GuildMasterChange = 12,
	EGuildAllianceChattingNotifyState__Max = 13
};


// Enum CommonSource.EGuildAllianceChattingSequenceType
enum class FCommonSource_CommonSource_EGuildAllianceChattingSequenceType : uint8_t
{
	EGuildAllianceChattingSequenceType__ReceiveApply = 0,
	EGuildAllianceChattingSequenceType__SendApply = 1,
	EGuildAllianceChattingSequenceType__Max = 2
};


// Enum CommonSource.EGuildAuctionRewardReason
enum class FCommonSource_CommonSource_EGuildAuctionRewardReason : uint8_t
{
	EGuildAuctionRewardReason__AllotReward = 0,
	EGuildAuctionRewardReason__AllotLeft = 1,
	EGuildAuctionRewardReason__BidFailReward = 2,
	EGuildAuctionRewardReason__BidSuccess = 3,
	EGuildAuctionRewardReason__TimeOutReturn = 4,
	EGuildAuctionRewardReason__Max = 5
};


// Enum CommonSource.EGuildAuctionSaleState
enum class FCommonSource_CommonSource_EGuildAuctionSaleState : uint8_t
{
	EGuildAuctionSaleState__OnSale = 0,
	EGuildAuctionSaleState__Waiting = 1,
	EGuildAuctionSaleState__Expired = 2,
	EGuildAuctionSaleState__Sold   = 3,
	EGuildAuctionSaleState__DBUpdating = 4,
	EGuildAuctionSaleState__AuctionFailure = 5,
	EGuildAuctionSaleState__Max    = 6
};


// Enum CommonSource.EBuffMonsterSpawnType
enum class FCommonSource_CommonSource_EBuffMonsterSpawnType : uint8_t
{
	EBuffMonsterSpawnType__None    = 0,
	EBuffMonsterSpawnType__Red     = 1,
	EBuffMonsterSpawnType__Blue    = 2,
	EBuffMonsterSpawnType__Gold    = 3,
	EBuffMonsterSpawnType__Max     = 4
};


// Enum CommonSource.EGuildBattlefieldBoxGrade
enum class FCommonSource_CommonSource_EGuildBattlefieldBoxGrade : uint8_t
{
	EGuildBattlefieldBoxGrade__None = 0,
	EGuildBattlefieldBoxGrade__Normal = 1,
	EGuildBattlefieldBoxGrade__Rare = 2,
	EGuildBattlefieldBoxGrade__Max = 3
};


// Enum CommonSource.EGuildBattlefieldBoxState
enum class FCommonSource_CommonSource_EGuildBattlefieldBoxState : uint8_t
{
	EGuildBattlefieldBoxState__None = 0,
	EGuildBattlefieldBoxState__First = 1,
	EGuildBattlefieldBoxState__Last = 2,
	EGuildBattlefieldBoxState__Inertaction = 3,
	EGuildBattlefieldBoxState__Dropped = 4,
	EGuildBattlefieldBoxState__Max = 5
};


// Enum CommonSource.EGuildBattlefieldWarSide
enum class FCommonSource_CommonSource_EGuildBattlefieldWarSide : uint8_t
{
	EGuildBattlefieldWarSide__None = 0,
	EGuildBattlefieldWarSide__Side_A = 1,
	EGuildBattlefieldWarSide__Side_B = 2,
	EGuildBattlefieldWarSide__Side_C = 3,
	EGuildBattlefieldWarSide__Max  = 4
};


// Enum CommonSource.EGuildBattlefieldBattleState
enum class FCommonSource_CommonSource_EGuildBattlefieldBattleState : uint8_t
{
	EGuildBattlefieldBattleState__None = 0,
	EGuildBattlefieldBattleState__BattleReady = 1,
	EGuildBattlefieldBattleState__Battle = 2,
	EGuildBattlefieldBattleState__BattleEnd = 3,
	EGuildBattlefieldBattleState__Finish = 4,
	EGuildBattlefieldBattleState__Max = 5
};


// Enum CommonSource.EGMLevel
enum class FCommonSource_CommonSource_EGMLevel : uint8_t
{
	EGMLevel__None                 = 0,
	EGMLevel__Builder              = 1,
	EGMLevel__GM                   = 2,
	EGMLevel__Max                  = 3
};


// Enum CommonSource.EGuildBattlefieldRoomType
enum class FCommonSource_CommonSource_EGuildBattlefieldRoomType : uint8_t
{
	EGuildBattlefieldRoomType__Guild_Count = 0,
	EGuildBattlefieldRoomType__Guild_Count01 = 1,
	EGuildBattlefieldRoomType__Max = 2
};


// Enum CommonSource.EGuildBattlefieldState
enum class FCommonSource_CommonSource_EGuildBattlefieldState : uint8_t
{
	EGuildBattlefieldState__None   = 0,
	EGuildBattlefieldState__ParticipationRegister = 1,
	EGuildBattlefieldState__ParticipationRegisterEnd = 2,
	EGuildBattlefieldState__Matching = 3,
	EGuildBattlefieldState__GuildBattlefieldWaiting = 4,
	EGuildBattlefieldState__GuildBattlefieldWaitingEnd = 5,
	EGuildBattlefieldState__BattleReady = 6,
	EGuildBattlefieldState__Battle = 7,
	EGuildBattlefieldState__BattleEnd = 8,
	EGuildBattlefieldState__Finish = 9,
	EGuildBattlefieldState__Max    = 10
};


// Enum CommonSource.EGuildBattlefieldMatchingResultType
enum class FCommonSource_CommonSource_EGuildBattlefieldMatchingResultType : uint8_t
{
	EGuildBattlefieldMatchingResultType__None = 0,
	EGuildBattlefieldMatchingResultType__Success = 1,
	EGuildBattlefieldMatchingResultType__No_Battle_MinGuildCount = 2,
	EGuildBattlefieldMatchingResultType__Not_Matching = 3,
	EGuildBattlefieldMatchingResultType__Not_Matching_No_Participation = 4,
	EGuildBattlefieldMatchingResultType__Not_Exist_Guild = 5,
	EGuildBattlefieldMatchingResultType__Server_Restart = 6,
	EGuildBattlefieldMatchingResultType__Max = 7
};


// Enum CommonSource.EGuildItemMakeSlotState
enum class FCommonSource_CommonSource_EGuildItemMakeSlotState : uint8_t
{
	EGuildItemMakeSlotState__None  = 0,
	EGuildItemMakeSlotState__Wait  = 1,
	EGuildItemMakeSlotState__Make  = 2,
	EGuildItemMakeSlotState__Complete = 3,
	EGuildItemMakeSlotState__Max   = 4
};


// Enum CommonSource.EGuildStrongholdDestructionModeState
enum class FCommonSource_CommonSource_EGuildStrongholdDestructionModeState : uint8_t
{
	EGuildStrongholdDestructionModeState__None = 0,
	EGuildStrongholdDestructionModeState__Destruction = 1,
	EGuildStrongholdDestructionModeState__Move = 2,
	EGuildStrongholdDestructionModeState__Max = 3
};


// Enum CommonSource.EGuildStrongholdDisableState
enum class FCommonSource_CommonSource_EGuildStrongholdDisableState : uint8_t
{
	EGuildStrongholdDisableState__None = 0,
	EGuildStrongholdDisableState__DisableStart = 1,
	EGuildStrongholdDisableState__DisableEnd = 2,
	EGuildStrongholdDisableState__Max = 3
};


// Enum CommonSource.EGuildStrongholdSeasonState
enum class FCommonSource_CommonSource_EGuildStrongholdSeasonState : uint8_t
{
	EGuildStrongholdSeasonState__SeasonStart = 0,
	EGuildStrongholdSeasonState__SeasonEnd = 1,
	EGuildStrongholdSeasonState__Max = 2
};


// Enum CommonSource.EGuildStrongholdNotiType
enum class FCommonSource_CommonSource_EGuildStrongholdNotiType : uint8_t
{
	EGuildStrongholdNotiType__None = 0,
	EGuildStrongholdNotiType__GiveUp = 1,
	EGuildStrongholdNotiType__DefenceProclaim = 2,
	EGuildStrongholdNotiType__AttackProclaim = 3,
	EGuildStrongholdNotiType__Ready = 4,
	EGuildStrongholdNotiType__Start = 5,
	EGuildStrongholdNotiType__DefenceSuccess = 6,
	EGuildStrongholdNotiType__DefenceFail = 7,
	EGuildStrongholdNotiType__AttackSuccess = 8,
	EGuildStrongholdNotiType__AttackFail = 9,
	EGuildStrongholdNotiType__ProtectEnd = 10,
	EGuildStrongholdNotiType__FlagDestory = 11,
	EGuildStrongholdNotiType__GuardDead = 12,
	EGuildStrongholdNotiType__ContentsBlock = 13,
	EGuildStrongholdNotiType__InteractStart = 14,
	EGuildStrongholdNotiType__InteractEnd = 15,
	EGuildStrongholdNotiType__AirliftShiftDefence = 16,
	EGuildStrongholdNotiType__AirliftShiftAttack = 17,
	EGuildStrongholdNotiType__DestructionSucceess = 18,
	EGuildStrongholdNotiType__DestructionMove = 19,
	EGuildStrongholdNotiType__ForceSeasonReset = 20,
	EGuildStrongholdNotiType__Surrnder = 21,
	EGuildStrongholdNotiType__Max  = 22
};


// Enum CommonSource.EGuildStrongholdState
enum class FCommonSource_CommonSource_EGuildStrongholdState : uint8_t
{
	EGuildStrongholdState__None    = 0,
	EGuildStrongholdState__Occupation = 1,
	EGuildStrongholdState__Waiting = 2,
	EGuildStrongholdState__Battle  = 3,
	EGuildStrongholdState__Protecting = 4,
	EGuildStrongholdState__FreeForAllWaiting = 5,
	EGuildStrongholdState__Max     = 6
};


// Enum CommonSource.EGuildDefenseUpdateState
enum class FCommonSource_CommonSource_EGuildDefenseUpdateState : uint8_t
{
	EGuildDefenseUpdateState__None = 0,
	EGuildDefenseUpdateState__NormalLevelClear = 1,
	EGuildDefenseUpdateState__FinalLevelClear = 2,
	EGuildDefenseUpdateState__EGuildDefenseUpdateState_MAX = 3
};


// Enum CommonSource.EGuildRaidUpdateState
enum class FCommonSource_CommonSource_EGuildRaidUpdateState : uint8_t
{
	EGuildRaidUpdateState__None    = 0,
	EGuildRaidUpdateState__NormalLevelClear = 1,
	EGuildRaidUpdateState__FinalLevelClear = 2,
	EGuildRaidUpdateState__EGuildRaidUpdateState_MAX = 3
};


// Enum CommonSource.EGuildItemMakeHistoryType
enum class FCommonSource_CommonSource_EGuildItemMakeHistoryType : uint8_t
{
	EGuildItemMakeHistoryType__None = 0,
	EGuildItemMakeHistoryType__Register = 1,
	EGuildItemMakeHistoryType__Cancel = 2,
	EGuildItemMakeHistoryType__Complete = 3,
	EGuildItemMakeHistoryType__Reward = 4,
	EGuildItemMakeHistoryType__RewardBuffEnd = 5,
	EGuildItemMakeHistoryType__Max = 6
};


// Enum CommonSource.EGuildContentState
enum class FCommonSource_CommonSource_EGuildContentState : uint8_t
{
	EGuildContentState__None       = 0,
	EGuildContentState__Elite      = 1,
	EGuildContentState__CastleWar  = 2,
	EGuildContentState__WorldDungeon = 3,
	EGuildContentState__ChampionsDungeon = 4,
	EGuildContentState__BattleField = 5,
	EGuildContentState__Max        = 6
};


// Enum CommonSource.EGuildRaidSkipState
enum class FCommonSource_CommonSource_EGuildRaidSkipState : uint8_t
{
	EGuildRaidSkipState__None      = 0,
	EGuildRaidSkipState__Move      = 1,
	EGuildRaidSkipState__Skip      = 2,
	EGuildRaidSkipState__EGuildRaidSkipState_MAX = 3
};


// Enum CommonSource.EGuildDisbandType
enum class FCommonSource_CommonSource_EGuildDisbandType : uint8_t
{
	EGuildDisbandType__None        = 0,
	EGuildDisbandType__Manual      = 1,
	EGuildDisbandType__Auto        = 2,
	EGuildDisbandType__Extraction  = 3,
	EGuildDisbandType__DBErrorRollBack = 4,
	EGuildDisbandType__EGuildDisbandType_MAX = 5
};


// Enum CommonSource.EGuildNameChangePriceType
enum class FCommonSource_CommonSource_EGuildNameChangePriceType : uint8_t
{
	EGuildNameChangePriceType__None = 0,
	EGuildNameChangePriceType__Cash = 1,
	EGuildNameChangePriceType__Gold = 2,
	EGuildNameChangePriceType__EGuildNameChangePriceType_MAX = 3
};


// Enum CommonSource.EGuildDefenseSkipState
enum class FCommonSource_CommonSource_EGuildDefenseSkipState : uint8_t
{
	EGuildDefenseSkipState__None   = 0,
	EGuildDefenseSkipState__Move   = 1,
	EGuildDefenseSkipState__Skip   = 2,
	EGuildDefenseSkipState__EGuildDefenseSkipState_MAX = 3
};


// Enum CommonSource.EGuildRaidState
enum class FCommonSource_CommonSource_EGuildRaidState : uint8_t
{
	EGuildRaidState__Doing         = 0,
	EGuildRaidState__Voting        = 1,
	EGuildRaidState__EndStart      = 2,
	EGuildRaidState__EndCompleted  = 3,
	EGuildRaidState__EndTimeOut    = 4,
	EGuildRaidState__Max           = 5
};


// Enum CommonSource.ERaiderChangeReason
enum class FCommonSource_CommonSource_ERaiderChangeReason : uint8_t
{
	ERaiderChangeReason__None      = 0,
	ERaiderChangeReason__RaiderCreate = 1,
	ERaiderChangeReason__RaiderDestroy = 2,
	ERaiderChangeReason__RaiderWithdraw = 3,
	ERaiderChangeReason__RaiderAccept = 4,
	ERaiderChangeReason__RaiderExpel = 5,
	ERaiderChangeReason__MasterChange = 6,
	ERaiderChangeReason__MAX       = 7
};


// Enum CommonSource.EGuildCSLetterStatus
enum class FCommonSource_CommonSource_EGuildCSLetterStatus : uint8_t
{
	EGuildCSLetterStatus__StoreCSLetter = 0,
	EGuildCSLetterStatus__DBUpdate = 1,
	EGuildCSLetterStatus__RecvCSLetter = 2,
	EGuildCSLetterStatus__Expired  = 3,
	EGuildCSLetterStatus__Deleted  = 4,
	EGuildCSLetterStatus__Max      = 5
};


// Enum CommonSource.EGuildAllianceHostileCmdType
enum class FCommonSource_CommonSource_EGuildAllianceHostileCmdType : uint8_t
{
	EGuildAllianceHostileCmdType__AllianceApply = 0,
	EGuildAllianceHostileCmdType__AllianceApplyCancel = 1,
	EGuildAllianceHostileCmdType__AllianceApplyAccept = 2,
	EGuildAllianceHostileCmdType__AllianceRemove = 3,
	EGuildAllianceHostileCmdType__HostileAdd = 4,
	EGuildAllianceHostileCmdType__HostileRemove = 5,
	EGuildAllianceHostileCmdType__MAX = 6
};


// Enum CommonSource.EGuildRaiderDestroyType
enum class FCommonSource_CommonSource_EGuildRaiderDestroyType : uint8_t
{
	EGuildRaiderDestroyType__Start = 0,
	EGuildRaiderDestroyType__Cancel = 1,
	EGuildRaiderDestroyType__Finish = 2,
	EGuildRaiderDestroyType__MAX   = 3
};


// Enum CommonSource.EGuildDefenseState
enum class FCommonSource_CommonSource_EGuildDefenseState : uint8_t
{
	EGuildDefenseState__Waiting    = 0,
	EGuildDefenseState__Ready      = 1,
	EGuildDefenseState__Defense    = 2,
	EGuildDefenseState__DefenseEnd = 3,
	EGuildDefenseState__EndStart   = 4,
	EGuildDefenseState__EndCompleted = 5,
	EGuildDefenseState__EndTimeOut = 6,
	EGuildDefenseState__Lose       = 7,
	EGuildDefenseState__Max        = 8
};


// Enum CommonSource.EGuildAllianceAcceptState
enum class FCommonSource_CommonSource_EGuildAllianceAcceptState : uint8_t
{
	EGuildAllianceAcceptState__Success = 0,
	EGuildAllianceAcceptState__NotFoundApplyGuild = 1,
	EGuildAllianceAcceptState__HostileGuild = 2,
	EGuildAllianceAcceptState__AlreadyAllianceGuild = 3,
	EGuildAllianceAcceptState__MaxAlliance = 4,
	EGuildAllianceAcceptState__TargetMaxAlliance = 5,
	EGuildAllianceAcceptState__AllianceGuild = 6,
	EGuildAllianceAcceptState__NotHostileGuild = 7,
	EGuildAllianceAcceptState__ApplyReject = 8,
	EGuildAllianceAcceptState__MAX = 9
};


// Enum CommonSource.EGuildAllianceHostileAddState
enum class FCommonSource_CommonSource_EGuildAllianceHostileAddState : uint8_t
{
	EGuildAllianceHostileAddState__Success = 0,
	EGuildAllianceHostileAddState__AllianceGuild = 1,
	EGuildAllianceHostileAddState__HostileGuild = 2,
	EGuildAllianceHostileAddState__AllianceApplyGuild = 3,
	EGuildAllianceHostileAddState__MAX = 4
};


// Enum CommonSource.EGuildAllianceState
enum class FCommonSource_CommonSource_EGuildAllianceState : uint8_t
{
	EGuildAllianceState__None      = 0,
	EGuildAllianceState__Apply     = 1,
	EGuildAllianceState__Alliance  = 2,
	EGuildAllianceState__Requested = 3,
	EGuildAllianceState__Hostile   = 4,
	EGuildAllianceState__BothHostile = 5,
	EGuildAllianceState__HostileRemoveApply = 6,
	EGuildAllianceState__HostileRemoveRequested = 7,
	EGuildAllianceState__AllianceAccept = 8,
	EGuildAllianceState__AllianceAccepted = 9,
	EGuildAllianceState__AllianceRemove = 10,
	EGuildAllianceState__AllianceRemoved = 11,
	EGuildAllianceState__HostileRemove = 12,
	EGuildAllianceState__HostileRemoveAccept = 13,
	EGuildAllianceState__HostileRemoveAccepted = 14,
	EGuildAllianceState__AllianceApplyReject = 15,
	EGuildAllianceState__AllianceApplyRejected = 16,
	EGuildAllianceState__HostileRemoveApplyReject = 17,
	EGuildAllianceState__HostileRemoveApplyRejected = 18,
	EGuildAllianceState__AllianceApply = 19,
	EGuildAllianceState__Max       = 20
};


// Enum CommonSource.EDonateLock
enum class FCommonSource_CommonSource_EDonateLock : uint8_t
{
	EDonateLock__None              = 0,
	EDonateLock__Cash              = 1,
	EDonateLock__Premium           = 2,
	EDonateLock__Both              = 3,
	EDonateLock__Max               = 4
};


// Enum CommonSource.EDonateType
enum class FCommonSource_CommonSource_EDonateType : uint8_t
{
	EDonateType__Gold              = 0,
	EDonateType__Cash              = 1,
	EDonateType__Premium           = 2,
	EDonateType__Max               = 3
};


// Enum CommonSource.EGuildAllianceType
enum class FCommonSource_CommonSource_EGuildAllianceType : uint8_t
{
	EGuildAllianceType__Hostile    = 0,
	EGuildAllianceType__Alliance   = 1,
	EGuildAllianceType__MAX        = 2
};


// Enum CommonSource.EGuildAllianceApplyState
enum class FCommonSource_CommonSource_EGuildAllianceApplyState : uint8_t
{
	EGuildAllianceApplyState__Success = 0,
	EGuildAllianceApplyState__AlreadyApplyGuild = 1,
	EGuildAllianceApplyState__AlreadyAllianceGuild = 2,
	EGuildAllianceApplyState__HostileGuild = 3,
	EGuildAllianceApplyState__MaxAllianceApplied = 4,
	EGuildAllianceApplyState__MaxAllianceApply = 5,
	EGuildAllianceApplyState__MaxAlliance = 6,
	EGuildAllianceApplyState__GuildNotFound = 7,
	EGuildAllianceApplyState__NotHostileGuild = 8,
	EGuildAllianceApplyState__AlreadyRemoveApplyGuild = 9,
	EGuildAllianceApplyState__MAX  = 10
};


// Enum CommonSource.EGuildJobState
enum class FCommonSource_CommonSource_EGuildJobState : uint8_t
{
	EGuildJobState__None           = 0,
	EGuildJobState__Change         = 1,
	EGuildJobState__NoConnection   = 2,
	EGuildJobState__Max            = 3
};


// Enum CommonSource.EGuildJob
enum class FCommonSource_CommonSource_EGuildJob : uint8_t
{
	EGuildJob__None                = 0,
	EGuildJob__Master              = 1,
	EGuildJob__SubMaster           = 2,
	EGuildJob__Elite               = 3,
	EGuildJob__Normal              = 4,
	EGuildJob__Mercenary           = 5,
	EGuildJob__Max                 = 6
};


// Enum CommonSource.EGuildMemberSortType
enum class FCommonSource_CommonSource_EGuildMemberSortType : uint8_t
{
	EGuildMemberSortType__Job      = 0,
	EGuildMemberSortType__BattlePower = 1,
	EGuildMemberSortType__TotalContribution = 2,
	EGuildMemberSortType__WeeklyContribution = 3,
	EGuildMemberSortType__LastConnect = 4,
	EGuildMemberSortType__Raider   = 5,
	EGuildMemberSortType__QualifierBattleJob = 6,
	EGuildMemberSortType__QualifierBattleBattlePower = 7,
	EGuildMemberSortType__Max      = 8
};


// Enum CommonSource.EGuildJoinType
enum class FCommonSource_CommonSource_EGuildJoinType : uint8_t
{
	EGuildJoinType__Accept         = 0,
	EGuildJoinType__AtOnce         = 1,
	EGuildJoinType__Max            = 2
};


// Enum CommonSource.EImprintProbType
enum class FCommonSource_CommonSource_EImprintProbType : uint8_t
{
	EImprintProbType__OptionParamType = 0,
	EImprintProbType__OptionGrade  = 1,
	EImprintProbType__BuffType     = 2,
	EImprintProbType__Target       = 3,
	EImprintProbType__Success      = 4,
	EImprintProbType__Max          = 5
};


// Enum CommonSource.EGuildApplyState
enum class FCommonSource_CommonSource_EGuildApplyState : uint8_t
{
	EGuildApplyState__Apply        = 0,
	EGuildApplyState__Reject       = 1,
	EGuildApplyState__Max          = 2
};


// Enum CommonSource.ESpecializeBuffType
enum class FCommonSource_CommonSource_ESpecializeBuffType : uint8_t
{
	ESpecializeBuffType__Positive  = 0,
	ESpecializeBuffType__Negative  = 1,
	ESpecializeBuffType__Max       = 2
};


// Enum CommonSource.EImprintOptionGrade
enum class FCommonSource_CommonSource_EImprintOptionGrade : uint8_t
{
	EImprintOptionGrade__None      = 0,
	EImprintOptionGrade__Normal    = 1,
	EImprintOptionGrade__Hero      = 2,
	EImprintOptionGrade__Legend    = 3,
	EImprintOptionGrade__Max       = 4
};


// Enum CommonSource.EImprintSpecializeTarget
enum class FCommonSource_CommonSource_EImprintSpecializeTarget : uint8_t
{
	EImprintSpecializeTarget__Monster = 0,
	EImprintSpecializeTarget__NormalMonster = 1,
	EImprintSpecializeTarget__BossMonster = 2,
	EImprintSpecializeTarget__Player = 3,
	EImprintSpecializeTarget__All  = 4,
	EImprintSpecializeTarget__Max  = 5
};


// Enum CommonSource.EInfinityDungeonMonsterType
enum class FCommonSource_CommonSource_EInfinityDungeonMonsterType : uint8_t
{
	EInfinityDungeonMonsterType__None = 0,
	EInfinityDungeonMonsterType__Magic = 1,
	EInfinityDungeonMonsterType__Clsoed = 2,
	EInfinityDungeonMonsterType__Ranged = 3,
	EInfinityDungeonMonsterType__Fixed = 4,
	EInfinityDungeonMonsterType__Elite = 5,
	EInfinityDungeonMonsterType__Summon = 6,
	EInfinityDungeonMonsterType__Weaken = 7,
	EInfinityDungeonMonsterType__Boss = 8,
	EInfinityDungeonMonsterType__Hide = 9,
	EInfinityDungeonMonsterType__Max = 10
};


// Enum CommonSource.EInfinityDungeonBuffGrade
enum class FCommonSource_CommonSource_EInfinityDungeonBuffGrade : uint8_t
{
	EInfinityDungeonBuffGrade__Basic = 0,
	EInfinityDungeonBuffGrade__Advanced = 1,
	EInfinityDungeonBuffGrade__Superlatives = 2,
	EInfinityDungeonBuffGrade__Max = 3
};


// Enum CommonSource.EInfinityDungeonEnterReason
enum class FCommonSource_CommonSource_EInfinityDungeonEnterReason : uint8_t
{
	EInfinityDungeonEnterReason__None = 0,
	EInfinityDungeonEnterReason__SeasonReset = 1,
	EInfinityDungeonEnterReason__CreationLimit = 2,
	EInfinityDungeonEnterReason__EInfinityDungeonEnterReason_MAX = 3
};


// Enum CommonSource.EInfinityDungeonPlayerState
enum class FCommonSource_CommonSource_EInfinityDungeonPlayerState : uint8_t
{
	EInfinityDungeonPlayerState__None = 0,
	EInfinityDungeonPlayerState__Enter = 1,
	EInfinityDungeonPlayerState__Leave = 2,
	EInfinityDungeonPlayerState__Ready = 3,
	EInfinityDungeonPlayerState__Deffered = 4,
	EInfinityDungeonPlayerState__Win = 5,
	EInfinityDungeonPlayerState__Lose = 6,
	EInfinityDungeonPlayerState__Max = 7
};


// Enum CommonSource.EInfinityDungeonSpawnReason
enum class FCommonSource_CommonSource_EInfinityDungeonSpawnReason : uint8_t
{
	EInfinityDungeonSpawnReason__None = 0,
	EInfinityDungeonSpawnReason__Condition = 1,
	EInfinityDungeonSpawnReason__Spawn = 2,
	EInfinityDungeonSpawnReason__Max = 3
};


// Enum CommonSource.EInfinityDungeonObjectiveType
enum class FCommonSource_CommonSource_EInfinityDungeonObjectiveType : uint8_t
{
	EInfinityDungeonObjectiveType__Survival = 0,
	EInfinityDungeonObjectiveType__Monster = 1,
	EInfinityDungeonObjectiveType__Boss = 2,
	EInfinityDungeonObjectiveType__Hide = 3,
	EInfinityDungeonObjectiveType__EInfinityDungeonObjectiveType_MAX = 4
};


// Enum CommonSource.EInfinityDungeonDoingPlayerState
enum class FCommonSource_CommonSource_EInfinityDungeonDoingPlayerState : uint8_t
{
	EInfinityDungeonDoingPlayerState__None = 0,
	EInfinityDungeonDoingPlayerState__Availiable = 1,
	EInfinityDungeonDoingPlayerState__Doing = 2,
	EInfinityDungeonDoingPlayerState__CanNotDoing = 3,
	EInfinityDungeonDoingPlayerState__CanNotAreaPass = 4,
	EInfinityDungeonDoingPlayerState__Max = 5
};


// Enum CommonSource.EInfinityDungeonPartyReason
enum class FCommonSource_CommonSource_EInfinityDungeonPartyReason : uint8_t
{
	EInfinityDungeonPartyReason__Success = 0,
	EInfinityDungeonPartyReason__TableNotFound = 1,
	EInfinityDungeonPartyReason__PartyNotFound = 2,
	EInfinityDungeonPartyReason__PartyFull = 3,
	EInfinityDungeonPartyReason__CanNotJoin = 4,
	EInfinityDungeonPartyReason__CanNotRetry = 5,
	EInfinityDungeonPartyReason__CanNotCount = 6,
	EInfinityDungeonPartyReason__NotReady = 7,
	EInfinityDungeonPartyReason__Slayer = 8,
	EInfinityDungeonPartyReason__Brutal = 9,
	EInfinityDungeonPartyReason__NeedQuest = 10,
	EInfinityDungeonPartyReason__Max = 11
};


// Enum CommonSource.EInfinityDungeonPartyCondition
enum class FCommonSource_CommonSource_EInfinityDungeonPartyCondition : uint8_t
{
	EInfinityDungeonPartyCondition__UpFloor = 0,
	EInfinityDungeonPartyCondition__CurrentFloor = 1,
	EInfinityDungeonPartyCondition__DownFloor = 2,
	EInfinityDungeonPartyCondition__All = 3,
	EInfinityDungeonPartyCondition__Max = 4
};


// Enum CommonSource.EInfinityDungeonResetReason
enum class FCommonSource_CommonSource_EInfinityDungeonResetReason : uint8_t
{
	EInfinityDungeonResetReason__None = 0,
	EInfinityDungeonResetReason__Success = 1,
	EInfinityDungeonResetReason__Unknown = 2,
	EInfinityDungeonResetReason__NotEnoughCount = 3,
	EInfinityDungeonResetReason__NotEnoughItem = 4,
	EInfinityDungeonResetReason__NotEnoughCash = 5,
	EInfinityDungeonResetReason__NotEnoughGold = 6,
	EInfinityDungeonResetReason__Slayer = 7,
	EInfinityDungeonResetReason__Brutal = 8,
	EInfinityDungeonResetReason__AreaPass = 9,
	EInfinityDungeonResetReason__Max = 10
};


// Enum CommonSource.EInfinityDungeonRewardType
enum class FCommonSource_CommonSource_EInfinityDungeonRewardType : uint8_t
{
	EInfinityDungeonRewardType__None = 0,
	EInfinityDungeonRewardType__Clear = 1,
	EInfinityDungeonRewardType__AreaPass = 2,
	EInfinityDungeonRewardType__Season = 3,
	EInfinityDungeonRewardType__Max = 4
};


// Enum CommonSource.EInfinityDungeonState
enum class FCommonSource_CommonSource_EInfinityDungeonState : uint8_t
{
	EInfinityDungeonState__None    = 0,
	EInfinityDungeonState__Wating  = 1,
	EInfinityDungeonState__PreSpawn = 2,
	EInfinityDungeonState__Ready   = 3,
	EInfinityDungeonState__Startup = 4,
	EInfinityDungeonState__Doing   = 5,
	EInfinityDungeonState__Selection = 6,
	EInfinityDungeonState__DefferedFailure = 7,
	EInfinityDungeonState__Failure = 8,
	EInfinityDungeonState__Result  = 9,
	EInfinityDungeonState__DestroyWait = 10,
	EInfinityDungeonState__Destroy = 11,
	EInfinityDungeonState__Max     = 12
};


// Enum CommonSource.EInfinityDungeonAreaPassState
enum class FCommonSource_CommonSource_EInfinityDungeonAreaPassState : uint8_t
{
	EInfinityDungeonAreaPassState__None = 0,
	EInfinityDungeonAreaPassState__Availiable = 1,
	EInfinityDungeonAreaPassState__Doing = 2,
	EInfinityDungeonAreaPassState__Selection = 3,
	EInfinityDungeonAreaPassState__Done = 4,
	EInfinityDungeonAreaPassState__Reset = 5,
	EInfinityDungeonAreaPassState__Max = 6
};


// Enum CommonSource.EBattleType
enum class FCommonSource_CommonSource_EBattleType : uint8_t
{
	EBattleType__Annihilation      = 0,
	EBattleType__Boss              = 1,
	EBattleType__Survival          = 2,
	EBattleType__Pvp               = 3,
	EBattleType__Weaken            = 4,
	EBattleType__HideAndSeek       = 5,
	EBattleType__Max               = 6
};


// Enum CommonSource.EPartyChallengeType
enum class FCommonSource_CommonSource_EPartyChallengeType : uint8_t
{
	EPartyChallengeType__All       = 0,
	EPartyChallengeType__Area      = 1,
	EPartyChallengeType__Floor     = 2,
	EPartyChallengeType__Max       = 3
};


// Enum CommonSource.ESeasonSettingType
enum class FCommonSource_CommonSource_ESeasonSettingType : uint8_t
{
	ESeasonSettingType__Sequential = 0,
	ESeasonSettingType__Random     = 1,
	ESeasonSettingType__Max        = 2
};


// Enum CommonSource.EIntegratedPreset
enum class FCommonSource_CommonSource_EIntegratedPreset : uint8_t
{
	EIntegratedPreset__Preset0     = 0,
	EIntegratedPreset__Preset1     = 1,
	EIntegratedPreset__Preset2     = 2,
	EIntegratedPreset__Preset3     = 3,
	EIntegratedPreset__Preset4     = 4,
	EIntegratedPreset__Max         = 5
};


// Enum CommonSource.ESummonIntervalType
enum class FCommonSource_CommonSource_ESummonIntervalType : uint8_t
{
	ESummonIntervalType__None      = 0,
	ESummonIntervalType__Prespawn  = 1,
	ESummonIntervalType__Postspawn = 2,
	ESummonIntervalType__Max       = 3
};


// Enum CommonSource.EInteractActionState
enum class FCommonSource_CommonSource_EInteractActionState : uint8_t
{
	EInteractActionState__None     = 0,
	EInteractActionState__Start    = 1,
	EInteractActionState__Cancel   = 2,
	EInteractActionState__Done     = 3,
	EInteractActionState__Max      = 4
};


// Enum CommonSource.EInteractType
enum class FCommonSource_CommonSource_EInteractType : uint8_t
{
	EInteractType__None            = 0,
	EInteractType__Grass           = 1,
	EInteractType__Seaweeds        = 2,
	EInteractType__Tree            = 3,
	EInteractType__Ore             = 4,
	EInteractType__Transport       = 5,
	EInteractType__TreasureBox     = 6,
	EInteractType__AniSound        = 7,
	EInteractType__ViewPoint       = 8,
	EInteractType__Quest           = 9,
	EInteractType__RealmwarBuff    = 10,
	EInteractType__TreasureMapBox  = 11,
	EInteractType__Portal          = 12,
	EInteractType__GuildStrongholdFlag = 13,
	EInteractType__WeaponShapeTreasureBox = 14,
	EInteractType__CastleAttack    = 15,
	EInteractType__CastleDefense   = 16,
	EInteractType__BattleVehicle   = 17,
	EInteractType__StaticBattleVehicle = 18,
	EInteractType__WaveStart       = 19,
	EInteractType__CastleAttackLadder = 20,
	EInteractType__CastleDefenseLadder = 21,
	EInteractType__CapturedFlag    = 22,
	EInteractType__RegisterFlag    = 23,
	EInteractType__CastleDefenseBarricade = 24,
	EInteractType__RegisterFlagOtherTeam = 25,
	EInteractType__Normal          = 26,
	EInteractType__EventBox        = 27,
	EInteractType__GuildBattlefield_Box = 28,
	EInteractType__GuildBattlefield_Altar = 29,
	EInteractType__AnniversaryEventBox = 30,
	EInteractType__Max             = 31
};


// Enum CommonSource.ERewardSubReason
enum class FCommonSource_CommonSource_ERewardSubReason : uint8_t
{
	ERewardSubReason__None         = 0,
	ERewardSubReason__UseBox       = 1,
	ERewardSubReason__Max          = 2
};


// Enum CommonSource.EItemSoulType
enum class FCommonSource_CommonSource_EItemSoulType : uint8_t
{
	EItemSoulType__None            = 0,
	EItemSoulType__Soul            = 1,
	EItemSoulType__Soul01          = 2,
	EItemSoulType__Soul02          = 3,
	EItemSoulType__Soul03          = 4,
	EItemSoulType__Max             = 5
};


// Enum CommonSource.EPackageBindType
enum class FCommonSource_CommonSource_EPackageBindType : uint8_t
{
	EPackageBindType__None         = 0,
	EPackageBindType__Account      = 1,
	EPackageBindType__Player       = 2,
	EPackageBindType__Max          = 3
};


// Enum CommonSource.ETabGroupType
enum class FCommonSource_CommonSource_ETabGroupType : uint8_t
{
	ETabGroupType__None            = 0,
	ETabGroupType__Weapon          = 1,
	ETabGroupType__SubWeapon       = 2,
	ETabGroupType__Armor           = 3,
	ETabGroupType__Accessory       = 4,
	ETabGroupType__Material        = 5,
	ETabGroupType__SkillBook       = 6,
	ETabGroupType__Consume         = 7,
	ETabGroupType__Pet             = 8,
	ETabGroupType__Event           = 9,
	ETabGroupType__Favorite        = 10,
	ETabGroupType__Max             = 11
};


// Enum CommonSource.EAvailableFactionType
enum class FCommonSource_CommonSource_EAvailableFactionType : uint8_t
{
	EAvailableFactionType__None    = 0,
	EAvailableFactionType__CastleAttack = 1,
	EAvailableFactionType__CastleDefense = 2,
	EAvailableFactionType__Max     = 3
};


// Enum CommonSource.EParentsItemType
enum class FCommonSource_CommonSource_EParentsItemType : uint8_t
{
	EParentsItemType__None         = 0,
	EParentsItemType__Consume_SkillBook = 1,
	EParentsItemType__Consume_Potion = 2,
	EParentsItemType__Consume_Food = 3,
	EParentsItemType__Consume_Elixir = 4,
	EParentsItemType__Consume_Exp  = 5,
	EParentsItemType__Consume_Scroll = 6,
	EParentsItemType__Consume_RandomBox = 7,
	EParentsItemType__Consume_Package = 8,
	EParentsItemType__Consume_RandomTeleport = 9,
	EParentsItemType__Consume_Egg  = 10,
	EParentsItemType__Consume_Replace = 11,
	EParentsItemType__Consume_MimirWell = 12,
	EParentsItemType__Consume_EliteDungeonTimeCharge = 13,
	EParentsItemType__Consume_MoveScroll = 14,
	EParentsItemType__Consume_OfflineHuntingTimeCharge = 15,
	EParentsItemType__Consume_ChangeTicket = 16,
	EParentsItemType__Consume_ExtendTicket = 17,
	EParentsItemType__Consume_CoolTimElixire = 18,
	EParentsItemType__Consume_RepeatQuest = 19,
	EParentsItemType__Consume_RandomBoxEffect = 20,
	EParentsItemType__Consume_SelectBox = 21,
	EParentsItemType__Consume_AvatarExp = 22,
	EParentsItemType__Consume_SelectBoxEffect = 23,
	EParentsItemType__Consume_TreasureMap = 24,
	EParentsItemType__Consume_SkillUse = 25,
	EParentsItemType__Consume_ShadowProtect = 26,
	EParentsItemType__Consume_Scroll_Shadow = 27,
	EParentsItemType__Consume_RandomTeleport_Shadow = 28,
	EParentsItemType__Max          = 29
};


// Enum CommonSource.ERewardTargetType
enum class FCommonSource_CommonSource_ERewardTargetType : uint8_t
{
	ERewardTargetType__None        = 0,
	ERewardTargetType__IndividualContribute = 1,
	ERewardTargetType__GuildContribute = 2,
	ERewardTargetType__Max         = 3
};


// Enum CommonSource.EItemDestroyType
enum class FCommonSource_CommonSource_EItemDestroyType : uint8_t
{
	EItemDestroyType__None         = 0,
	EItemDestroyType__Dismantle    = 1,
	EItemDestroyType__Destroy      = 2,
	EItemDestroyType__UnableEnchant = 3,
	EItemDestroyType__DestroyUnableEnchant = 4,
	EItemDestroyType__EItemDestroyType_MAX = 5
};


// Enum CommonSource.EItemEnchantMaterialType
enum class FCommonSource_CommonSource_EItemEnchantMaterialType : uint8_t
{
	EItemEnchantMaterialType__None = 0,
	EItemEnchantMaterialType__Plus = 1,
	EItemEnchantMaterialType__Minus = 2,
	EItemEnchantMaterialType__Max  = 3
};


// Enum CommonSource.EBindCategory
enum class FCommonSource_CommonSource_EBindCategory : uint8_t
{
	EBindCategory__EquipStandard   = 0,
	EBindCategory__EquipNotExchange = 1,
	EBindCategory__MaterialStandard = 2,
	EBindCategory__MaterialExchange = 3,
	EBindCategory__ConsumeStandard = 4,
	EBindCategory__ConsumeNotExchange = 5,
	EBindCategory__EquipMakeExchange = 6,
	EBindCategory__PotionNotExchange = 7,
	EBindCategory__EventAccount    = 8,
	EBindCategory__EventPlayer     = 9,
	EBindCategory__CashAccount     = 10,
	EBindCategory__CashPlayer      = 11,
	EBindCategory__ExceptionMoveScroll = 12,
	EBindCategory__ExceptionMimirWell = 13,
	EBindCategory__TestUnreleased  = 14,
	EBindCategory__Max             = 15
};


// Enum CommonSource.EChangeTicketType
enum class FCommonSource_CommonSource_EChangeTicketType : uint8_t
{
	EChangeTicketType__None        = 0,
	EChangeTicketType__Customizing = 1,
	EChangeTicketType__PlayerName  = 2,
	EChangeTicketType__GuildName   = 3,
	EChangeTicketType__ServerMigration = 4,
	EChangeTicketType__ClassChange = 5,
	EChangeTicketType__EnchantChange = 6,
	EChangeTicketType__Max         = 7
};


// Enum CommonSource.EMakeBindType
enum class FCommonSource_CommonSource_EMakeBindType : uint8_t
{
	EMakeBindType__None            = 0,
	EMakeBindType__Account         = 1,
	EMakeBindType__Player          = 2,
	EMakeBindType__Trade           = 3,
	EMakeBindType__Max             = 4
};


// Enum CommonSource.EBlessType
enum class FCommonSource_CommonSource_EBlessType : uint8_t
{
	EBlessType__Trade              = 0,
	EBlessType__Double             = 1,
	EBlessType__HighRankItem       = 2,
	EBlessType__Max                = 3
};


// Enum CommonSource.EItemGetMode
enum class FCommonSource_CommonSource_EItemGetMode : uint8_t
{
	EItemGetMode__Monster          = 0,
	EItemGetMode__Dungeon          = 1,
	EItemGetMode__Event            = 2,
	EItemGetMode__Shop             = 3,
	EItemGetMode__CashShop         = 4,
	EItemGetMode__Achievement      = 5,
	EItemGetMode__Make             = 6,
	EItemGetMode__Cheat            = 7,
	EItemGetMode__Dismantle        = 8,
	EItemGetMode__WorldBoss        = 9,
	EItemGetMode__Quest            = 10,
	EItemGetMode__Attendance       = 11,
	EItemGetMode__InteractPlayer   = 12,
	EItemGetMode__InteractPet      = 13,
	EItemGetMode__Realmwar         = 14,
	EItemGetMode__RelicGamble      = 15,
	EItemGetMode__Imprint          = 16,
	EItemGetMode__Letter           = 17,
	EItemGetMode__GuildRaid        = 18,
	EItemGetMode__ProductFail      = 19,
	EItemGetMode__EventMonster     = 20,
	EItemGetMode__Costume          = 21,
	EItemGetMode__SpecialMonster   = 22,
	EItemGetMode__GuildDefense     = 23,
	EItemGetMode__GuildItemMake    = 24,
	EItemGetMode__ClassChange      = 25,
	EItemGetMode__Castlewar        = 26,
	EItemGetMode__Stronghold       = 27,
	EItemGetMode__InfinityDungeon  = 28,
	EItemGetMode__ClassChange_NoSelected = 29,
	EItemGetMode__GuildContributionExtract = 30,
	EItemGetMode__GuildBattlefield = 31,
	EItemGetMode__ServerInvasion   = 32,
	EItemGetMode__Max              = 33
};


// Enum CommonSource.ERuneSetType
enum class FCommonSource_CommonSource_ERuneSetType : uint8_t
{
	ERuneSetType__None             = 0,
	ERuneSetType__Strength         = 1,
	ERuneSetType__Intellect        = 2,
	ERuneSetType__Dexterity        = 3,
	ERuneSetType__Vitality         = 4,
	ERuneSetType__Max              = 5
};


// Enum CommonSource.EItemSeasonType
enum class FCommonSource_CommonSource_EItemSeasonType : uint8_t
{
	EItemSeasonType__None          = 0,
	EItemSeasonType__Max           = 1
};


// Enum CommonSource.ERewardEffectEmphasisType
enum class FCommonSource_CommonSource_ERewardEffectEmphasisType : uint8_t
{
	ERewardEffectEmphasisType__None = 0,
	ERewardEffectEmphasisType__Emphasis = 1,
	ERewardEffectEmphasisType__VeryEmphasis = 2,
	ERewardEffectEmphasisType__Max = 3
};


// Enum CommonSource.EDropType
enum class FCommonSource_CommonSource_EDropType : uint8_t
{
	EDropType__None                = 0,
	EDropType__Exp                 = 1,
	EDropType__Gold                = 2,
	EDropType__Max                 = 3
};


// Enum CommonSource.EEquipPreset
enum class FCommonSource_CommonSource_EEquipPreset : uint8_t
{
	EEquipPreset__Preset0          = 0,
	EEquipPreset__Preset1          = 1,
	EEquipPreset__Preset2          = 2,
	EEquipPreset__Max              = 3
};


// Enum CommonSource.EItemDropOwnerType
enum class FCommonSource_CommonSource_EItemDropOwnerType : uint8_t
{
	EItemDropOwnerType__First      = 0,
	EItemDropOwnerType__Last       = 1,
	EItemDropOwnerType__Random     = 2,
	EItemDropOwnerType__FirstAndNoDeath = 3,
	EItemDropOwnerType__Max        = 4
};


// Enum CommonSource.EItemOptionGrade
enum class FCommonSource_CommonSource_EItemOptionGrade : uint8_t
{
	EItemOptionGrade__Normal       = 0,
	EItemOptionGrade__Rare         = 1,
	EItemOptionGrade__Hero         = 2,
	EItemOptionGrade__Legend       = 3,
	EItemOptionGrade__Max          = 4
};


// Enum CommonSource.EItemGrade
enum class FCommonSource_CommonSource_EItemGrade : uint8_t
{
	EItemGrade__Normal             = 0,
	EItemGrade__High               = 1,
	EItemGrade__Rare               = 2,
	EItemGrade__Hero               = 3,
	EItemGrade__Legend             = 4,
	EItemGrade__Myth               = 5,
	EItemGrade__Cash               = 6,
	EItemGrade__Event              = 7,
	EItemGrade__Ancient            = 8,
	EItemGrade__Origin             = 9,
	EItemGrade__Genesis            = 10,
	EItemGrade__Max                = 11
};


// Enum CommonSource.EItemType
enum class FCommonSource_CommonSource_EItemType : uint8_t
{
	EItemType__None                = 0,
	EItemType__Equip_Weapon        = 1,
	EItemType__Equip_Helmet        = 2,
	EItemType__Equip_Armor         = 3,
	EItemType__Equip_Gloves        = 4,
	EItemType__Equip_Boots         = 5,
	EItemType__Equip_Cloak         = 6,
	EItemType__Equip_Necklace      = 7,
	EItemType__Equip_Earring       = 8,
	EItemType__Equip_Bracelet      = 9,
	EItemType__Equip_Ring          = 10,
	EItemType__Equip_Belt          = 11,
	EItemType__Equip_Horn          = 12,
	EItemType__Equip_Horn_Cash     = 13,
	EItemType__Equip_Pet           = 14,
	EItemType__Equip_Emblem        = 15,
	EItemType__Equip_Emblem_Cash   = 16,
	EItemType__Equip_Armband       = 17,
	EItemType__Equip_Armband_Cash  = 18,
	EItemType__Equip_ShoulderMark  = 19,
	EItemType__Equip_ShoulderMark_Cash = 20,
	EItemType__Equip_Charm         = 21,
	EItemType__Equip_Charm_Cash    = 22,
	EItemType__Equip_Gaiters       = 23,
	EItemType__Equip_Pendant       = 24,
	EItemType__Equip_Pendant_Cash  = 25,
	EItemType__Equip_Brooch        = 26,
	EItemType__Equip_Brooch_Cash   = 27,
	EItemType__Equip_SubWeapon     = 28,
	EItemType__Gem_Ruby            = 29,
	EItemType__Gem_Emerald         = 30,
	EItemType__Gem_Sapphire        = 31,
	EItemType__Gem_Topaz           = 32,
	EItemType__Gem_Diamond         = 33,
	EItemType__Rune_Slot1          = 34,
	EItemType__Rune_Slot2          = 35,
	EItemType__Rune_Slot3          = 36,
	EItemType__Material_Growth     = 37,
	EItemType__Material_Make       = 38,
	EItemType__Material_SkillBookPiece = 39,
	EItemType__Material_EnterTicket = 40,
	EItemType__Material_Event      = 41,
	EItemType__Consume_OdinCoupon_Avatar = 42,
	EItemType__Consume_OdinCoupon_Vehicle = 43,
	EItemType__Consume_OdinCoupon_Weapon = 44,
	EItemType__Consume_OdinCoupon_Armor = 45,
	EItemType__Consume_OdinCoupon_Accessory = 46,
	EItemType__Consume_OdinCoupon_WeaponShape = 47,
	EItemType__Consume_OdinCoupon_CashAccessory = 48,
	EItemType__Consume_Replace     = 49,
	EItemType__Consume_SkillBook   = 50,
	EItemType__Consume_Potion      = 51,
	EItemType__Consume_Food        = 52,
	EItemType__Consume_Elixir      = 53,
	EItemType__Consume_Exp         = 54,
	EItemType__Consume_MimirWell   = 55,
	EItemType__Consume_Scroll      = 56,
	EItemType__Consume_EliteDungeonTimeCharge = 57,
	EItemType__Consume_MoveScroll  = 58,
	EItemType__Consume_OfflineHuntingTimeCharge = 59,
	EItemType__Consume_ChangeTicket = 60,
	EItemType__Consume_ExtendTicket = 61,
	EItemType__Consume_AvatarExp   = 62,
	EItemType__Consume_CoolTimElixire = 63,
	EItemType__Consume_Summoner    = 64,
	EItemType__Consume_TreasureMap = 65,
	EItemType__Consume_ShadowProtect = 66,
	EItemType__Consume_Scroll_Shadow = 67,
	EItemType__Consume_RandomTeleport_Shadow = 68,
	EItemType__Consume_RandomBox   = 69,
	EItemType__Consume_Package     = 70,
	EItemType__Consume_RandomTeleport = 71,
	EItemType__Consume_Egg         = 72,
	EItemType__Consume_RepeatQuest = 73,
	EItemType__Consume_RandomBoxEffect = 74,
	EItemType__Consume_SelectBox   = 75,
	EItemType__Consume_SelectBoxEffect = 76,
	EItemType__Consume_BattleVehicle = 77,
	EItemType__Consume_BattleVehicle2 = 78,
	EItemType__Waste_Waste         = 79,
	EItemType__Consume_SkillUse    = 80,
	EItemType__Consume_CastlewarMap_SkillUse1 = 81,
	EItemType__Consume_CastlewarMap_SkillUse2 = 82,
	EItemType__Consume_CastlewarMap_SkillUse3 = 83,
	EItemType__Consume_CastlewarMap_SkillUse4 = 84,
	EItemType__Consume_CastlewarMap_SkillUse5 = 85,
	EItemType__Consume_CastlewarMap_SkillUse6 = 86,
	EItemType__Consume_CastlewarMap_SkillUse7 = 87,
	EItemType__Consume_CastlewarMap_SkillUse8 = 88,
	EItemType__Relic               = 89,
	EItemType__Collection_Mark     = 90,
	EItemType__Universal_Collection = 91,
	EItemType__Consume_CastlewarMap_SkillUse9 = 92,
	EItemType__Consume_Exchange_Avatar = 93,
	EItemType__Consume_Exchange_Vehicle = 94,
	EItemType__Consume_Exchange_WeaponShape = 95,
	EItemType__Consume_CastlewarMap_SkillUse10 = 96,
	EItemType__Consume_RepeatQuest_Count = 97,
	EItemType__Consume_InfinityDungeon_PartyCount = 98,
	EItemType__Consume_GuildContributionExtract = 99,
	EItemType__Consume_OdinCoupon_Rune = 100,
	EItemType__Consume_OdinCoupon_BlessingStone = 101,
	EItemType__Consume_GuildAuctionAutoRegist = 102,
	EItemType__Consume_EliteDungeonTimeFixedCharge = 103,
	EItemType__Consume_Bonus_CashGold_Coupon = 104,
	EItemType__Collection_Mark_Rotation = 105,
	EItemType__Consume_Scroll_World_Shadow = 106,
	EItemType__Consume_RandomTeleport_World_Shadow = 107,
	EItemType__Consume_Exchange_Pet = 108,
	EItemType__Consume_OdinCoupon_Pet = 109,
	EItemType__Consume_Scroll_Pet  = 110,
	EItemType__Consume_Scroll_Convenience = 111,
	EItemType__Consume_Charge_GuildDungeon_Ticket = 112,
	EItemType__Max                 = 113
};


// Enum CommonSource.EItemCategory
enum class FCommonSource_CommonSource_EItemCategory : uint8_t
{
	EItemCategory__All             = 0,
	EItemCategory__Weapon          = 1,
	EItemCategory__Armor           = 2,
	EItemCategory__Accessory       = 3,
	EItemCategory__Gem             = 4,
	EItemCategory__Rune            = 5,
	EItemCategory__Material        = 6,
	EItemCategory__Waste           = 7,
	EItemCategory__Consume         = 8,
	EItemCategory__Pet             = 9,
	EItemCategory__Collection      = 10,
	EItemCategory__Max             = 11
};


// Enum CommonSource.EStorageType
enum class FCommonSource_CommonSource_EStorageType : uint8_t
{
	EStorageType__Inventory        = 0,
	EStorageType__Warehouse        = 1,
	EStorageType__Exchange         = 2,
	EStorageType__Letter           = 3,
	EStorageType__NFT              = 4,
	EStorageType__Max              = 5
};


// Enum CommonSource.EEquipState
enum class FCommonSource_CommonSource_EEquipState : uint8_t
{
	EEquipState__UnEquip           = 0,
	EEquipState__Equip             = 1,
	EEquipState__Max               = 2
};


// Enum CommonSource.ECSRewardTargetType
enum class FCommonSource_CommonSource_ECSRewardTargetType : uint8_t
{
	ECSRewardTargetType__All       = 0,
	ECSRewardTargetType__Exists    = 1,
	ECSRewardTargetType__Newbie    = 2,
	ECSRewardTargetType__Comeback  = 3,
	ECSRewardTargetType__Max       = 4
};


// Enum CommonSource.ECSRewardType
enum class FCommonSource_CommonSource_ECSRewardType : uint8_t
{
	ECSRewardType__CSEvent         = 0,
	ECSRewardType__Coupon          = 1,
	ECSRewardType__CSTool          = 2,
	ECSRewardType__CSPrivateMessage = 3,
	ECSRewardType__CSGuildMessage  = 4,
	ECSRewardType__Max             = 5
};


// Enum CommonSource.ELetterType
enum class FCommonSource_CommonSource_ELetterType : uint8_t
{
	ELetterType__PlayerLetter      = 0,
	ELetterType__EventReward       = 1,
	ELetterType__CashShop          = 2,
	ELetterType__FixedItemDelete   = 3,
	ELetterType__Exchange          = 4,
	ELetterType__RewardItem        = 5,
	ELetterType__GuildAuctionBidReward = 6,
	ELetterType__GuildAuctionBidFailReward = 7,
	ELetterType__GuildAuctionLeftCash = 8,
	ELetterType__GuildAuctionAllotReward = 9,
	ELetterType__GuildAuctionTimeoutReward = 10,
	ELetterType__KakaoPromotion    = 11,
	ELetterType__PrivateMessage    = 12,
	ELetterType__GuildMessage      = 13,
	ELetterType__Cheat             = 14,
	ELetterType__RealmwarReward    = 15,
	ELetterType__FixedVehicleDelete = 16,
	ELetterType__ExpReward         = 17,
	ELetterType__TreasureMapBoxDelete = 18,
	ELetterType__ExchangeExpire    = 19,
	ELetterType__CostumeExpire     = 20,
	ELetterType__RealmwarSeasonReward = 21,
	ELetterType__GuildStrongholdGiveUp = 22,
	ELetterType__DungeonReward     = 23,
	ELetterType__CastlewarReward   = 24,
	ELetterType__CastlewarRefund   = 25,
	ELetterType__FixedAvatarDelete = 26,
	ELetterType__GuildItemMake     = 27,
	ELetterType__ShadowDungeonReward = 28,
	ELetterType__CastlewarGoldRefund = 29,
	ELetterType__CastlewarMercenaryReward = 30,
	ELetterType__CastlewarUnOpposed = 31,
	ELetterType__WorldDungeonReward = 32,
	ELetterType__InfinityDungeonReward = 33,
	ELetterType__GuildBattlefieldWinReward = 34,
	ELetterType__GuildBattlefieldEnterReward = 35,
	ELetterType__GuildCSLetter     = 36,
	ELetterType__ExpireReplaceItem = 37,
	ELetterType__WorldShadowDungeonReward = 38,
	ELetterType__GuildBattlefieldMinimumWinReward = 39,
	ELetterType__FixedPetDelete    = 40,
	ELetterType__ServerInvasion    = 41,
	ELetterType__Max               = 42
};


// Enum CommonSource.ELinkBoardForm
enum class FCommonSource_CommonSource_ELinkBoardForm : uint8_t
{
	ELinkBoardForm__None           = 0,
	ELinkBoardForm__Triangle       = 1,
	ELinkBoardForm__InverseTriangle = 2,
	ELinkBoardForm__Max            = 3
};


// Enum CommonSource.ELinkEmblemGrade
enum class FCommonSource_CommonSource_ELinkEmblemGrade : uint8_t
{
	ELinkEmblemGrade__None         = 0,
	ELinkEmblemGrade__Normal       = 1,
	ELinkEmblemGrade__Hero         = 2,
	ELinkEmblemGrade__Legend       = 3,
	ELinkEmblemGrade__Max          = 4
};


// Enum CommonSource.ELinkEmblemType
enum class FCommonSource_CommonSource_ELinkEmblemType : uint8_t
{
	ELinkEmblemType__None          = 0,
	ELinkEmblemType__EmblemType1   = 1,
	ELinkEmblemType__EmblemType2   = 2,
	ELinkEmblemType__EmblemType3   = 3,
	ELinkEmblemType__EmblemType4   = 4,
	ELinkEmblemType__EmblemType5   = 5,
	ELinkEmblemType__EmblemType6   = 6,
	ELinkEmblemType__Common1       = 7,
	ELinkEmblemType__Common2       = 8,
	ELinkEmblemType__Common3       = 9,
	ELinkEmblemType__Common4       = 10,
	ELinkEmblemType__EmblemType7   = 11,
	ELinkEmblemType__EmblemType8   = 12,
	ELinkEmblemType__EmblemType9   = 13,
	ELinkEmblemType__EmblemType10  = 14,
	ELinkEmblemType__EmblemType11  = 15,
	ELinkEmblemType__EmblemType12  = 16,
	ELinkEmblemType__Max           = 17
};


// Enum CommonSource.EDeviceGrade
enum class FCommonSource_CommonSource_EDeviceGrade : uint8_t
{
	EDeviceGrade__LowLow           = 0,
	EDeviceGrade__Low              = 1,
	EDeviceGrade__Mid              = 2,
	EDeviceGrade__High             = 3,
	EDeviceGrade__Epic             = 4,
	EDeviceGrade__Max              = 5
};


// Enum CommonSource.ELoginRecommandType
enum class FCommonSource_CommonSource_ELoginRecommandType : uint8_t
{
	ELoginRecommandType__None      = 0,
	ELoginRecommandType__Recommand = 1,
	ELoginRecommandType__New       = 2,
	ELoginRecommandType__NewAndRecommand = 3,
	ELoginRecommandType__ELoginRecommandType_MAX = 4
};


// Enum CommonSource.EServiceState
enum class FCommonSource_CommonSource_EServiceState : uint8_t
{
	EServiceState__Closed          = 0,
	EServiceState__Normal          = 1,
	EServiceState__Busy            = 2,
	EServiceState__Full            = 3,
	EServiceState__NotReady        = 4,
	EServiceState__EServiceState_MAX = 5
};


// Enum CommonSource.EServiceType
enum class FCommonSource_CommonSource_EServiceType : uint8_t
{
	EServiceType__Dev              = 0,
	EServiceType__QA               = 1,
	EServiceType__Review           = 2,
	EServiceType__Live             = 3,
	EServiceType__ESports          = 4,
	EServiceType__EServiceType_MAX = 5
};


// Enum CommonSource.EGemSocket
enum class FCommonSource_CommonSource_EGemSocket : uint8_t
{
	EGemSocket__Socket1            = 0,
	EGemSocket__Socket2            = 1,
	EGemSocket__Max                = 2
};


// Enum CommonSource.ENation
enum class FCommonSource_CommonSource_ENation : uint8_t
{
	ENation__Korea                 = 0,
	ENation__Japan                 = 1,
	ENation__China                 = 2,
	ENation__Taiwan                = 3,
	ENation__Global                = 4,
	ENation__Max                   = 5
};


// Enum CommonSource.EPriceType
enum class FCommonSource_CommonSource_EPriceType : uint8_t
{
	EPriceType__NONE               = 0,
	EPriceType__USD                = 1,
	EPriceType__KRW                = 2,
	EPriceType__JPY                = 3,
	EPriceType__CNY                = 4,
	EPriceType__Max                = 5
};


// Enum CommonSource.EUserCountry
enum class FCommonSource_CommonSource_EUserCountry : uint8_t
{
	EUserCountry__Basic            = 0,
	EUserCountry__America          = 1,
	EUserCountry__Taiwan           = 2,
	EUserCountry__Japan            = 3,
	EUserCountry__Spanish          = 4,
	EUserCountry__Thailand         = 5,
	EUserCountry__Max              = 6
};


// Enum CommonSource.EGamePublisher
enum class FCommonSource_CommonSource_EGamePublisher : uint8_t
{
	EGamePublisher__LionHeart      = 0,
	EGamePublisher__KaKao          = 1,
	EGamePublisher__Max            = 2
};


// Enum CommonSource.EAccountType
enum class FCommonSource_CommonSource_EAccountType : uint8_t
{
	EAccountType__None             = 0,
	EAccountType__Guest            = 1,
	EAccountType__Google           = 2,
	EAccountType__Apple            = 3,
	EAccountType__Facebook         = 4,
	EAccountType__Kakao            = 5,
	EAccountType__KakaoGuest       = 6,
	EAccountType__KakaoGoogle      = 7,
	EAccountType__KakaoApple       = 8,
	EAccountType__KakaoFacebook    = 9,
	EAccountType__KakaoTwitter     = 10,
	EAccountType__Zilong           = 11,
	EAccountType__Max              = 12
};


// Enum CommonSource.EMarketType
enum class FCommonSource_CommonSource_EMarketType : uint8_t
{
	EMarketType__None              = 0,
	EMarketType__AppStore          = 1,
	EMarketType__GoogleStore       = 2,
	EMarketType__KakaoPC           = 3,
	EMarketType__GameWeb           = 4,
	EMarketType__Zilong            = 5,
	EMarketType__Max               = 6
};


// Enum CommonSource.EPlatformType
enum class FCommonSource_CommonSource_EPlatformType : uint8_t
{
	EPlatformType__None            = 0,
	EPlatformType__Guest           = 1,
	EPlatformType__Google          = 2,
	EPlatformType__SigninWithApple = 3,
	EPlatformType__Facebook        = 4,
	EPlatformType__Kakao           = 5,
	EPlatformType__KakaoGuest      = 6,
	EPlatformType__KakaoGoogle     = 7,
	EPlatformType__KakaoApple      = 8,
	EPlatformType__KakaoFacebook   = 9,
	EPlatformType__KakaoTwitter    = 10,
	EPlatformType__Zilong          = 11,
	EPlatformType__Max             = 12
};


// Enum CommonSource.EBlockStatus
enum class FCommonSource_CommonSource_EBlockStatus : uint8_t
{
	EBlockStatus__None             = 0,
	EBlockStatus__EternalBlock     = 1,
	EBlockStatus__PeriodBlock      = 2,
	EBlockStatus__TempBlock        = 3,
	EBlockStatus__ChattingBlock    = 4,
	EBlockStatus__RankingBlock     = 5,
	EBlockStatus__Max              = 6
};


// Enum CommonSource.EForceKick
enum class FCommonSource_CommonSource_EForceKick : uint8_t
{
	EForceKick__NormalLogout       = 0,
	EForceKick__UserDBLoadFail     = 1,
	EForceKick__Duplication        = 2,
	EForceKick__GM                 = 3,
	EForceKick__ServerTrouble      = 4,
	EForceKick__WithdrawLogout     = 5,
	EForceKick__HeartBeatLogout    = 6,
	EForceKick__ReconnectFail      = 7,
	EForceKick__WorldWide          = 8,
	EForceKick__XignCode           = 9,
	EForceKick__InvalidParameter   = 10,
	EForceKick__ServerMigration    = 11,
	EForceKick__EliteDungeon       = 12,
	EForceKick__ServerInvasion     = 13,
	EForceKick__AFK                = 14,
	EForceKick__Max                = 15
};


// Enum CommonSource.EOSCode
enum class FCommonSource_CommonSource_EOSCode : uint8_t
{
	EOSCode__None                  = 0,
	EOSCode__Windows               = 1,
	EOSCode__IOS                   = 2,
	EOSCode__AOS                   = 3,
	EOSCode__Max                   = 4
};


// Enum CommonSource.EVoidDungeonState
enum class FCommonSource_CommonSource_EVoidDungeonState : uint8_t
{
	EVoidDungeonState__None        = 0,
	EVoidDungeonState__WaitBattle  = 1,
	EVoidDungeonState__Battle      = 2,
	EVoidDungeonState__WaitEnd     = 3,
	EVoidDungeonState__End         = 4,
	EVoidDungeonState__Max         = 5
};


// Enum CommonSource.EPortalOwnerType
enum class FCommonSource_CommonSource_EPortalOwnerType : uint8_t
{
	EPortalOwnerType__None         = 0,
	EPortalOwnerType__Alone        = 1,
	EPortalOwnerType__Party        = 2,
	EPortalOwnerType__Guild        = 3,
	EPortalOwnerType__Max          = 4
};


// Enum CommonSource.EEnterTicketType
enum class FCommonSource_CommonSource_EEnterTicketType : uint8_t
{
	EEnterTicketType__Free         = 0,
	EEnterTicketType__Item         = 1,
	EEnterTicketType__Gold         = 2,
	EEnterTicketType__Cash         = 3,
	EEnterTicketType__NoPortalMove = 4,
	EEnterTicketType__Max          = 5
};


// Enum CommonSource.EMapMoveState
enum class FCommonSource_CommonSource_EMapMoveState : uint8_t
{
	EMapMoveState__None            = 0,
	EMapMoveState__MapEnterRequest = 1,
	EMapMoveState__EnterRestrictions = 2,
	EMapMoveState__MoveRequest     = 3,
	EMapMoveState__WarpRequest     = 4,
	EMapMoveState__Max             = 5
};


// Enum CommonSource.EServerMergeFixResult
enum class FCommonSource_CommonSource_EServerMergeFixResult : uint8_t
{
	EServerMergeFixResult__Success = 0,
	EServerMergeFixResult__FixServerIDError = 1,
	EServerMergeFixResult__FixTimeOver = 2,
	EServerMergeFixResult__FixCoolTimeRemain = 3,
	EServerMergeFixResult__Max     = 4
};


// Enum CommonSource.EAreaPkType
enum class FCommonSource_CommonSource_EAreaPkType : uint8_t
{
	EAreaPkType__None              = 0,
	EAreaPkType__Safe              = 1,
	EAreaPkType__Normal            = 2,
	EAreaPkType__NoPenalty         = 3,
	EAreaPkType__BattleGround      = 4,
	EAreaPkType__Max               = 5
};


// Enum CommonSource.EGameCameraMode
enum class FCommonSource_CommonSource_EGameCameraMode : uint8_t
{
	EGameCameraMode__None          = 0,
	EGameCameraMode__Normal        = 1,
	EGameCameraMode__Quarter       = 2,
	EGameCameraMode__Mode          = 3,
	EGameCameraMode__MAX           = 4
};


// Enum CommonSource.EPatrolType
enum class FCommonSource_CommonSource_EPatrolType : uint8_t
{
	EPatrolType__None              = 0,
	EPatrolType__Front             = 1,
	EPatrolType__Back              = 2,
	EPatrolType__EPatrolType_MAX   = 3
};


// Enum CommonSource.EPortalType
enum class FCommonSource_CommonSource_EPortalType : uint8_t
{
	EPortalType__TownReturn        = 0,
	EPortalType__Portal            = 1,
	EPortalType__PartyDungeon      = 2,
	EPortalType__Cheat             = 3,
	EPortalType__WorldMap          = 4,
	EPortalType__DuelDungeon       = 5,
	EPortalType__PortalRevive      = 6,
	EPortalType__Max               = 7
};


// Enum CommonSource.EAreaType
enum class FCommonSource_CommonSource_EAreaType : uint8_t
{
	EAreaType__None                = 0,
	EAreaType__Normal              = 1,
	EAreaType__PortalMove          = 2,
	EAreaType__TriggerEnter        = 3,
	EAreaType__TriggerPortal       = 4,
	EAreaType__BuffArea            = 5,
	EAreaType__Max                 = 6
};


// Enum CommonSource.EScoreType
enum class FCommonSource_CommonSource_EScoreType : uint8_t
{
	EScoreType__ClearTime          = 0,
	EScoreType__Dead               = 1,
	EScoreType__Monster            = 2,
	EScoreType__Max                = 3
};


// Enum CommonSource.EClearRank
enum class FCommonSource_CommonSource_EClearRank : uint8_t
{
	EClearRank__None               = 0,
	EClearRank__RankD              = 1,
	EClearRank__RankC              = 2,
	EClearRank__RankB              = 3,
	EClearRank__RankA              = 4,
	EClearRank__RankS              = 5,
	EClearRank__Max                = 6
};


// Enum CommonSource.EMapType
enum class FCommonSource_CommonSource_EMapType : uint8_t
{
	EMapType__None                 = 0,
	EMapType__Field                = 1,
	EMapType__Channel              = 2,
	EMapType__Instance             = 3,
	EMapType__PartyDungeon         = 4,
	EMapType__AloneQuestDungeon    = 5,
	EMapType__GuildRaid            = 6,
	EMapType__Prologue             = 7,
	EMapType__RealmWar             = 8,
	EMapType__EliteDungeon         = 9,
	EMapType__ConflictDungeon      = 10,
	EMapType__WorldDungeon         = 11,
	EMapType__CastleWar            = 12,
	EMapType__DuelDungeon          = 13,
	EMapType__VoidDungeon          = 14,
	EMapType__WorldEliteDungeon    = 15,
	EMapType__Castle               = 16,
	EMapType__GuildDefense         = 17,
	EMapType__ShadowDungeon        = 18,
	EMapType__CastlewarQualifier   = 19,
	EMapType__WorldChampionsDungeon = 20,
	EMapType__InfinityDungeon      = 21,
	EMapType__GuildBattlefield     = 22,
	EMapType__WorldShadowDungeon   = 23,
	EMapType__Max                  = 24
};


// Enum CommonSource.EMarkType
enum class FCommonSource_CommonSource_EMarkType : uint8_t
{
	EMarkType__None                = 0,
	EMarkType__SkillSlotExpend     = 1,
	EMarkType__SkillLearn          = 2,
	EMarkType__SkillEnchantLevelUp = 3,
	EMarkType__QuestComplete       = 4,
	EMarkType__PartyDungeonOpen    = 5,
	EMarkType__VehicleAcquire      = 6,
	EMarkType__FriendAdd           = 7,
	EMarkType__FriendRequest       = 8,
	EMarkType__PKRecordAdd         = 9,
	EMarkType__ExchangeSold        = 10,
	EMarkType__ExchangeItemBuy     = 11,
	EMarkType__PlayerLevelup       = 12,
	EMarkType__GuildJoin           = 13,
	EMarkType__GuildMemberJoin     = 14,
	EMarkType__GuildApply          = 15,
	EMarkType__CashShopNew         = 16,
	EMarkType__CashShopStorage     = 17,
	EMarkType__EventNew            = 18,
	EMarkType__AttendanceReward    = 19,
	EMarkType__EventReward         = 20,
	EMarkType__PKBrutalAdd         = 21,
	EMarkType__LetterReceive       = 22,
	EMarkType__LetterKakaoPromotionReceive = 23,
	EMarkType__LetterMessageReceive = 24,
	EMarkType__SavePointNew        = 25,
	EMarkType__RealmwarReward      = 26,
	EMarkType__GuildAuctionRegist  = 27,
	EMarkType__GuildAuctionFailReward = 28,
	EMarkType__SealedStoneActive   = 29,
	EMarkType__FirstDead           = 30,
	EMarkType__ExchangeSellActive  = 31,
	EMarkType__GuildRaiderRequest  = 32,
	EMarkType__GuildRaidEntranceCount = 33,
	EMarkType__GuildDefenseEntranceCount = 34,
	EMarkType__AcceptQuestCount    = 35,
	EMarkType__SubQuestNew         = 36,
	EMarkType__GuildAllaince       = 37,
	EMarkType__GuildHostile        = 38,
	EMarkType__GuildAllainceApply  = 39,
	EMarkType__GuildHostileRemoveApply = 40,
	EMarkType__GuildLevel          = 41,
	EMarkType__GuildDonate         = 42,
	EMarkType__VehicleConfirm      = 43,
	EMarkType__AvatarConfirm       = 44,
	EMarkType__VehicleCollection   = 45,
	EMarkType__AvatarCollection    = 46,
	EMarkType__ImprintEnable       = 47,
	EMarkType__LimitPackageReward  = 48,
	EMarkType__RankingNew          = 49,
	EMarkType__RuneOpenLevel       = 50,
	EMarkType__GuildRaidReset      = 51,
	EMarkType__WorldDungeonGuildAllaince = 52,
	EMarkType__WorldDungeonGuildHostile = 53,
	EMarkType__WorldDungeonGuildAllainceApply = 54,
	EMarkType__WorldDungeonEnterGuild = 55,
	EMarkType__WeaponShapeConfirm  = 56,
	EMarkType__WeaponShapeCollection = 57,
	EMarkType__BlessingBoardActive = 58,
	EMarkType__BlessingCollection  = 59,
	EMarkType__GuildStrongholdBuff = 60,
	EMarkType__GuildStrongholdBuffNew = 61,
	EMarkType__LetterMissing       = 62,
	EMarkType__ServerMigration     = 63,
	EMarkType__GuildAllianceChattingApplied = 64,
	EMarkType__GuildItemMake       = 65,
	EMarkType__CastlewarTaxDistribution = 66,
	EMarkType__CastlewarMercenaryDistribution = 67,
	EMarkType__CastlewarMercenaryApply = 68,
	EMarkType__CastlewarMercenaryCanApply = 69,
	EMarkType__CastlewarMercenaryJoin = 70,
	EMarkType__CastlewarMercenaryAccepted = 71,
	EMarkType__GuildItemMakeOpenCastleWarOwner = 72,
	EMarkType__GuildItemMakeWait   = 73,
	EMarkType__GuildEmotionOpenCastleWarOwner = 74,
	EMarkType__SealedStoneEnchantDiscount = 75,
	EMarkType__RelicGambleCostDiscount = 76,
	EMarkType__CashShopGoodsOpen   = 77,
	EMarkType__LinkBoardActive     = 78,
	EMarkType__OdinPassOpen        = 79,
	EMarkType__GuildBattlefield    = 80,
	EMarkType__GuildAuctionFailure = 81,
	EMarkType__GuildCSLetter       = 82,
	EMarkType__Pet                 = 83,
	EMarkType__PetConfirm          = 84,
	EMarkType__PetGuardian         = 85,
	EMarkType__PetCollection       = 86,
	EMarkType__AlchemyBoardActive  = 87,
	EMarkType__AlchemyBoardInactive = 88,
	EMarkType__ChainProductGoodsOpen = 89,
	EMarkType__LimitPackageNew     = 90,
	EMarkType__PaymentStackReward  = 91,
	EMarkType__ServerInvasion      = 92,
	EMarkType__EventGroup          = 93,
	EMarkType__Max                 = 94
};


// Enum CommonSource.EMessageVisualType
enum class FCommonSource_CommonSource_EMessageVisualType : uint8_t
{
	EMessageVisualType__None       = 0,
	EMessageVisualType__DestroyObject = 1,
	EMessageVisualType__AddBuff    = 2,
	EMessageVisualType__Max        = 3
};


// Enum CommonSource.ENoticeType
enum class FCommonSource_CommonSource_ENoticeType : uint8_t
{
	ENoticeType__None              = 0,
	ENoticeType__SkillLearn        = 1,
	ENoticeType__SkillLevelUp      = 2,
	ENoticeType__QuestClear        = 3,
	ENoticeType__PartyDungeonOpen  = 4,
	ENoticeType__VehicleAcquire    = 5,
	ENoticeType__FriendRequest     = 6,
	ENoticeType__LetterReceive     = 7,
	ENoticeType__GuildRaidOpen     = 8,
	ENoticeType__GuildRaidClear    = 9,
	ENoticeType__GuildRaidTimeout  = 10,
	ENoticeType__GuildApplyReject  = 11,
	ENoticeType__ExchangeSold      = 12,
	ENoticeType__GuildMemberLogin  = 13,
	ENoticeType__FriendLogin       = 14,
	ENoticeType__QuestFail         = 15,
	ENoticeType__PenaltyLimit      = 16,
	ENoticeType__VehicleTypeDisallow = 17,
	ENoticeType__GuildDefenseClear = 18,
	ENoticeType__GuildDefenseStart = 19,
	ENoticeType__Max               = 20
};


// Enum CommonSource.ENoticeLevel
enum class FCommonSource_CommonSource_ENoticeLevel : uint8_t
{
	ENoticeLevel__None             = 0,
	ENoticeLevel__Level            = 1,
	ENoticeLevel__Level01          = 2,
	ENoticeLevel__Level02          = 3,
	ENoticeLevel__Max              = 4
};


// Enum CommonSource.EEventMonsterType
enum class FCommonSource_CommonSource_EEventMonsterType : uint8_t
{
	EEventMonsterType__None        = 0,
	EEventMonsterType__BlessedFieldBoss = 1,
	EEventMonsterType__EEventMonsterType_MAX = 2
};


// Enum CommonSource.EFaction
enum class FCommonSource_CommonSource_EFaction : uint8_t
{
	EFaction__None                 = 0,
	EFaction__Neutral              = 1,
	EFaction__Player               = 2,
	EFaction__FNpc                 = 3,
	EFaction__ENpc                 = 4,
	EFaction__ETower               = 5,
	EFaction__Max                  = 6
};


// Enum CommonSource.EWarpType
enum class FCommonSource_CommonSource_EWarpType : uint8_t
{
	EWarpType__None                = 0,
	EWarpType__TownRebirth         = 1,
	EWarpType__Fly                 = 2,
	EWarpType__Quest               = 3,
	EWarpType__CastleWarForce      = 4,
	EWarpType__PullWarp            = 5,
	EWarpType__PortalRebirth       = 6,
	EWarpType__Max                 = 7
};


// Enum CommonSource.EDeadSubType
enum class FCommonSource_CommonSource_EDeadSubType : uint8_t
{
	EDeadSubType__None             = 0,
	EDeadSubType__ServerInvasionReturnServer = 1,
	EDeadSubType__Max              = 2
};


// Enum CommonSource.EColliderType
enum class FCommonSource_CommonSource_EColliderType : uint8_t
{
	EColliderType__Side            = 0,
	EColliderType__Cuboid          = 1,
	EColliderType__Sphere          = 2,
	EColliderType__Capsule         = 3,
	EColliderType__Max             = 4
};


// Enum CommonSource.ERideType
enum class FCommonSource_CommonSource_ERideType : uint8_t
{
	ERideType__None                = 0,
	ERideType__Interact            = 1,
	ERideType__ItemUse             = 2,
	ERideType__Max                 = 3
};


// Enum CommonSource.EDeadType
enum class FCommonSource_CommonSource_EDeadType : uint8_t
{
	EDeadType__Kill                = 0,
	EDeadType__Falling             = 1,
	EDeadType__Lava                = 2,
	EDeadType__Suicide             = 3,
	EDeadType__Unknown             = 4,
	EDeadType__EDeadType_MAX       = 5
};


// Enum CommonSource.EPhaseType
enum class FCommonSource_CommonSource_EPhaseType : uint8_t
{
	EPhaseType__None               = 0,
	EPhaseType__Phase              = 1,
	EPhaseType__Phase01            = 2,
	EPhaseType__Phase02            = 3,
	EPhaseType__Phase03            = 4,
	EPhaseType__Max                = 5
};


// Enum CommonSource.EAggroIconType
enum class FCommonSource_CommonSource_EAggroIconType : uint8_t
{
	EAggroIconType__None           = 0,
	EAggroIconType__Main           = 1,
	EAggroIconType__Next           = 2,
	EAggroIconType__EAggroIconType_MAX = 3
};


// Enum CommonSource.EInfinityDungeonResetType
enum class FCommonSource_CommonSource_EInfinityDungeonResetType : uint8_t
{
	EInfinityDungeonResetType__None = 0,
	EInfinityDungeonResetType__DungeonReset = 1,
	EInfinityDungeonResetType__DungeonCashReset = 2,
	EInfinityDungeonResetType__BuffReset = 3,
	EInfinityDungeonResetType__Max = 4
};


// Enum CommonSource.EObjectState
enum class FCommonSource_CommonSource_EObjectState : uint8_t
{
	EObjectState__Idle             = 0,
	EObjectState__Percept          = 1,
	EObjectState__Rewind           = 2,
	EObjectState__Max              = 3
};


// Enum CommonSource.EMoveState
enum class FCommonSource_CommonSource_EMoveState : uint8_t
{
	EMoveState__Stop               = 0,
	EMoveState__Walk               = 1,
	EMoveState__Run                = 2,
	EMoveState__Rewind             = 3,
	EMoveState__Max                = 4
};


// Enum CommonSource.EMoveType
enum class FCommonSource_CommonSource_EMoveType : uint8_t
{
	EMoveType__Ground              = 0,
	EMoveType__Fly                 = 1,
	EMoveType__Swimming            = 2,
	EMoveType__Climbing            = 3,
	EMoveType__Interact            = 4,
	EMoveType__FlyWarpStart        = 5,
	EMoveType__FlyWarpDone         = 6,
	EMoveType__Jump                = 7,
	EMoveType__Falling             = 8,
	EMoveType__Max                 = 9
};


// Enum CommonSource.EInteractCountType
enum class FCommonSource_CommonSource_EInteractCountType : uint8_t
{
	EInteractCountType__None       = 0,
	EInteractCountType__BySelf     = 1,
	EInteractCountType__ByPlayer   = 2,
	EInteractCountType__ByGuild    = 3,
	EInteractCountType__Max        = 4
};


// Enum CommonSource.EInteractState
enum class FCommonSource_CommonSource_EInteractState : uint8_t
{
	EInteractState__None           = 0,
	EInteractState__IdleDeActive   = 1,
	EInteractState__IdleActive     = 2,
	EInteractState__InteractDone   = 3,
	EInteractState__Max            = 4
};


// Enum CommonSource.EAttackType
enum class FCommonSource_CommonSource_EAttackType : uint8_t
{
	EAttackType__Close             = 0,
	EAttackType__Range             = 1,
	EAttackType__Magic             = 2,
	EAttackType__Max               = 3
};


// Enum CommonSource.ENpcFuncType
enum class FCommonSource_CommonSource_ENpcFuncType : uint8_t
{
	ENpcFuncType__None             = 0,
	ENpcFuncType__Shop             = 1,
	ENpcFuncType__Storage          = 2,
	ENpcFuncType__Portal           = 3,
	ENpcFuncType__Statue           = 4,
	ENpcFuncType__GuildCoinShop    = 5,
	ENpcFuncType__Realmwar         = 6,
	ENpcFuncType__RealmwarCoinShop = 7,
	ENpcFuncType__SkillInstructor  = 8,
	ENpcFuncType__CastleWarShop    = 9,
	ENpcFuncType__ShadowDungeonShop = 10,
	ENpcFuncType__WorldShadowDungeonShop = 11,
	ENpcFuncType__ServerInvasionShop = 12,
	ENpcFuncType__ServerInvasionQuest = 13,
	ENpcFuncType__Max              = 14
};


// Enum CommonSource.EMonsterType
enum class FCommonSource_CommonSource_EMonsterType : uint8_t
{
	EMonsterType__None             = 0,
	EMonsterType__Normal           = 1,
	EMonsterType__Boss             = 2,
	EMonsterType__Max              = 3
};


// Enum CommonSource.EMonsterGrade
enum class FCommonSource_CommonSource_EMonsterGrade : uint8_t
{
	EMonsterGrade__None            = 0,
	EMonsterGrade__Summon          = 1,
	EMonsterGrade__Normal          = 2,
	EMonsterGrade__Elite           = 3,
	EMonsterGrade__FixMonster      = 4,
	EMonsterGrade__MonsterGuardian = 5,
	EMonsterGrade__DefenseStatue   = 6,
	EMonsterGrade__ShadpwNormal    = 7,
	EMonsterGrade__ShadowFix       = 8,
	EMonsterGrade__CastlewarNormal = 9,
	EMonsterGrade__CastlewarSummon = 10,
	EMonsterGrade__CastlewarFix    = 11,
	EMonsterGrade__InstanceSubBoss = 12,
	EMonsterGrade__FieldSubBoss    = 13,
	EMonsterGrade__FieldBoss       = 14,
	EMonsterGrade__VoidSummoner    = 15,
	EMonsterGrade__InstanceBoss    = 16,
	EMonsterGrade__WorldBoss       = 17,
	EMonsterGrade__ConflictSubBoss = 18,
	EMonsterGrade__ConflictBoss    = 19,
	EMonsterGrade__WorldDungeonSubBoss1 = 20,
	EMonsterGrade__WorldDungeonSubBoss2 = 21,
	EMonsterGrade__WorldDungeonBoss = 22,
	EMonsterGrade__ShadowBoss      = 23,
	EMonsterGrade__CastlewarBoss   = 24,
	EMonsterGrade__InfinityDungeonNormal = 25,
	EMonsterGrade__InfinityDungeonFixed = 26,
	EMonsterGrade__InfinityDungeonBoss = 27,
	EMonsterGrade__HideMonster     = 28,
	EMonsterGrade__BlessedFieldBoss = 29,
	EMonsterGrade__BackGroundMonster = 30,
	EMonsterGrade__WorldShadowNormal1 = 31,
	EMonsterGrade__WorldShadowNormal2 = 32,
	EMonsterGrade__WorldShadowNormal3 = 33,
	EMonsterGrade__WorldShadowNormal4 = 34,
	EMonsterGrade__WorldShadowElite = 35,
	EMonsterGrade__WorldShadowSubBoss1 = 36,
	EMonsterGrade__WorldShadowSubBoss2 = 37,
	EMonsterGrade__WorldShadowBoss = 38,
	EMonsterGrade__BlessedWorldBoss = 39,
	EMonsterGrade__ServerInvasionObject = 40,
	EMonsterGrade__Max             = 41
};


// Enum CommonSource.EObjectType
enum class FCommonSource_CommonSource_EObjectType : uint8_t
{
	EObjectType__Player            = 0,
	EObjectType__Npc               = 1,
	EObjectType__Monster           = 2,
	EObjectType__InteractObject    = 3,
	EObjectType__SkillObject       = 4,
	EObjectType__BuffObject        = 5,
	EObjectType__AIPlayer          = 6,
	EObjectType__ActiveNpc         = 7,
	EObjectType__Collider          = 8,
	EObjectType__Max               = 9
};


// Enum CommonSource.EOdinCouponType
enum class FCommonSource_CommonSource_EOdinCouponType : uint8_t
{
	EOdinCouponType__Avatar        = 0,
	EOdinCouponType__Vehicle       = 1,
	EOdinCouponType__Weapon        = 2,
	EOdinCouponType__Armor         = 3,
	EOdinCouponType__Accessory     = 4,
	EOdinCouponType__WeaponShape   = 5,
	EOdinCouponType__CashAccessory = 6,
	EOdinCouponType__Rune          = 7,
	EOdinCouponType__BlessingStone = 8,
	EOdinCouponType__Pet           = 9,
	EOdinCouponType__Armor2        = 10,
	EOdinCouponType__Max           = 11
};


// Enum CommonSource.EBattlePowerCalcType
enum class FCommonSource_CommonSource_EBattlePowerCalcType : uint8_t
{
	EBattlePowerCalcType__CharParam = 0,
	EBattlePowerCalcType__PlayerLevel = 1,
	EBattlePowerCalcType__SkillGrade = 2,
	EBattlePowerCalcType__SealedStoneLevel = 3,
	EBattlePowerCalcType__SkillTranscend = 4,
	EBattlePowerCalcType__Max      = 5
};


// Enum CommonSource.EInstantReason
enum class FCommonSource_CommonSource_EInstantReason : uint8_t
{
	EInstantReason__None           = 0,
	EInstantReason__Attack         = 1,
	EInstantReason__DamageHit      = 2,
	EInstantReason__HitApply       = 3,
	EInstantReason__Max            = 4
};


// Enum CommonSource.ESkillParam
enum class FCommonSource_CommonSource_ESkillParam : uint8_t
{
	ESkillParam__None              = 0,
	ESkillParam__SkillConsumptionDecreasePercent = 1,
	ESkillParam__ActiveSkillLevel  = 2,
	ESkillParam__PassiveSkillLevel = 3,
	ESkillParam__Max               = 4
};


// Enum CommonSource.EParamReason
enum class FCommonSource_CommonSource_EParamReason : uint8_t
{
	EParamReason__Base             = 0,
	EParamReason__Item             = 1,
	EParamReason__Avatar           = 2,
	EParamReason__Collection       = 3,
	EParamReason__Vehicle          = 4,
	EParamReason__PassiveSkill     = 5,
	EParamReason__Buff             = 6,
	EParamReason__Guild            = 7,
	EParamReason__PlayerLevelRanking = 8,
	EParamReason__PlayerBattlePowerRanking = 9,
	EParamReason__PkRanking        = 10,
	EParamReason__GuildLevel       = 11,
	EParamReason__SealedStone      = 12,
	EParamReason__Rune             = 13,
	EParamReason__ItemBuff         = 14,
	EParamReason__Etc              = 15,
	EParamReason__Imprint          = 16,
	EParamReason__SkillEnchant     = 17,
	EParamReason__SecondPassword   = 18,
	EParamReason__Costume          = 19,
	EParamReason__Blessing         = 20,
	EParamReason__WeaponShape      = 21,
	EParamReason__GuildStronghold  = 22,
	EParamReason__ShadowDungeon    = 23,
	EParamReason__Castlewar        = 24,
	EParamReason__BalanceChange    = 25,
	EParamReason__SkillTranscend   = 26,
	EParamReason__InfinityDungeon  = 27,
	EParamReason__Link             = 28,
	EParamReason__WorldShadowDungeon = 29,
	EParamReason__GuildBuff        = 30,
	EParamReason__Alchemy          = 31,
	EParamReason__Pet              = 32,
	EParamReason__ServerInvasion   = 33,
	EParamReason__GuildRaidBuff    = 34,
	EParamReason__Max              = 35
};


// Enum CommonSource.EPartyDestroyReason
enum class FCommonSource_CommonSource_EPartyDestroyReason : uint8_t
{
	EPartyDestroyReason__MemberLeave = 0,
	EPartyDestroyReason__MapMove   = 1,
	EPartyDestroyReason__Merger    = 2,
	EPartyDestroyReason__UnRegisterDungeon = 3,
	EPartyDestroyReason__AutoDestroyTimeOut = 4,
	EPartyDestroyReason__InvalidParty = 5,
	EPartyDestroyReason__Max       = 6
};


// Enum CommonSource.EReadyStateChangeReason
enum class FCommonSource_CommonSource_EReadyStateChangeReason : uint8_t
{
	EReadyStateChangeReason__Attack = 0,
	EReadyStateChangeReason__Attacked = 1,
	EReadyStateChangeReason__DungeonRegist = 2,
	EReadyStateChangeReason__DungeonCancel = 3,
	EReadyStateChangeReason__PartyLeave = 4,
	EReadyStateChangeReason__MasterChange = 5,
	EReadyStateChangeReason__PartyMerge = 6,
	EReadyStateChangeReason__PlayerRequest = 7,
	EReadyStateChangeReason__MasterAutoChange = 8,
	EReadyStateChangeReason__PlayerDead = 9,
	EReadyStateChangeReason__Max   = 10
};


// Enum CommonSource.EAutoMachingCancelReason
enum class FCommonSource_CommonSource_EAutoMachingCancelReason : uint8_t
{
	EAutoMachingCancelReason__SelfLeave = 0,
	EAutoMachingCancelReason__PartyLeave = 1,
	EAutoMachingCancelReason__DestroyParty = 2,
	EAutoMachingCancelReason__TimeoutAutoMatching = 3,
	EAutoMachingCancelReason__JoinParty = 4,
	EAutoMachingCancelReason__Realmwar_Attend = 5,
	EAutoMachingCancelReason__Max  = 6
};


// Enum CommonSource.EPartyInviteTab
enum class FCommonSource_CommonSource_EPartyInviteTab : uint8_t
{
	EPartyInviteTab__Search        = 0,
	EPartyInviteTab__Recommend     = 1,
	EPartyInviteTab__Friend        = 2,
	EPartyInviteTab__Guild         = 3,
	EPartyInviteTab__Max           = 4
};


// Enum CommonSource.EPartyKick
enum class FCommonSource_CommonSource_EPartyKick : uint8_t
{
	EPartyKick__SelfLeave          = 0,
	EPartyKick__MasterForceKick    = 1,
	EPartyKick__DisconnectTimeOut  = 2,
	EPartyKick__ReadyTimeOut       = 3,
	EPartyKick__EntranceCount_Not_Enough = 4,
	EPartyKick__DungeonPlayTime_Over = 5,
	EPartyKick__DungeonRegister_Cancel = 6,
	EPartyKick__Realmwar_Attend    = 7,
	EPartyKick__DungeonMove        = 8,
	EPartyKick__QuestMapMove       = 9,
	EPartyKick__Quest_Not_Finish   = 10,
	EPartyKick__GuildDungeonMove   = 11,
	EPartyKick__Slayer             = 12,
	EPartyKick__DuelMove           = 13,
	EPartyKick__VoidDungeonMove    = 14,
	EPartyKick__GuildDefenseMove   = 15,
	EPartyKick__Brutal             = 16,
	EPartyKick__InfinityDungeonMove = 17,
	EPartyKick__WorldWideMove      = 18,
	EPartyKick__Master_MapMove     = 19,
	EPartyKick__MemberFull         = 20,
	EPartyKick__Max                = 21
};


// Enum CommonSource.EAbuseType
enum class FCommonSource_CommonSource_EAbuseType : uint8_t
{
	EAbuseType__Abuse              = 0,
	EAbuseType__CashTransaction    = 1,
	EAbuseType__Spam               = 2,
	EAbuseType__Obscene            = 3,
	EAbuseType__Max                = 4
};


// Enum CommonSource.EPartyRole
enum class FCommonSource_CommonSource_EPartyRole : uint8_t
{
	EPartyRole__Healer             = 0,
	EPartyRole__Defender           = 1,
	EPartyRole__Attacker           = 2,
	EPartyRole__Max                = 3
};


// Enum CommonSource.EAbuseReportType
enum class FCommonSource_CommonSource_EAbuseReportType : uint8_t
{
	EAbuseReportType__Chatting     = 0,
	EAbuseReportType__LetterMessge = 1,
	EAbuseReportType__Max          = 2
};


// Enum CommonSource.EPetGuardianBoardOptionGrade
enum class FCommonSource_CommonSource_EPetGuardianBoardOptionGrade : uint8_t
{
	EPetGuardianBoardOptionGrade__Normal = 0,
	EPetGuardianBoardOptionGrade__Hero = 1,
	EPetGuardianBoardOptionGrade__Legend = 2,
	EPetGuardianBoardOptionGrade__Max = 3
};


// Enum CommonSource.EPetGuardianBoardResetType
enum class FCommonSource_CommonSource_EPetGuardianBoardResetType : uint8_t
{
	EPetGuardianBoardResetType__None = 0,
	EPetGuardianBoardResetType__Condition = 1,
	EPetGuardianBoardResetType__Option = 2,
	EPetGuardianBoardResetType__Both = 3,
	EPetGuardianBoardResetType__Max = 4
};


// Enum CommonSource.EPetGuardianBoardGrade
enum class FCommonSource_CommonSource_EPetGuardianBoardGrade : uint8_t
{
	EPetGuardianBoardGrade__None   = 0,
	EPetGuardianBoardGrade__Normal = 1,
	EPetGuardianBoardGrade__Hero   = 2,
	EPetGuardianBoardGrade__Legend = 3,
	EPetGuardianBoardGrade__Max    = 4
};


// Enum CommonSource.EPetType
enum class FCommonSource_CommonSource_EPetType : uint8_t
{
	EPetType__None                 = 0,
	EPetType__Beast                = 1,
	EPetType__Warrior              = 2,
	EPetType__Wizard               = 3,
	EPetType__Max                  = 4
};


// Enum CommonSource.EPetEquipParts
enum class FCommonSource_CommonSource_EPetEquipParts : uint8_t
{
	EPetEquipParts__None           = 0,
	EPetEquipParts__Main           = 1,
	EPetEquipParts__Sub1           = 2,
	EPetEquipParts__Sub2           = 3,
	EPetEquipParts__Max            = 4
};


// Enum CommonSource.EAbyssPkType
enum class FCommonSource_CommonSource_EAbyssPkType : uint8_t
{
	EAbyssPkType__Normal           = 0,
	EAbyssPkType__Take             = 1,
	EAbyssPkType__Appear           = 2,
	EAbyssPkType__Max              = 3
};


// Enum CommonSource.EPkStateType
enum class FCommonSource_CommonSource_EPkStateType : uint8_t
{
	EPkStateType__Brutal           = 0,
	EPkStateType__Slayer           = 1,
	EPkStateType__Max              = 2
};


// Enum CommonSource.EPkResultType
enum class FCommonSource_CommonSource_EPkResultType : uint8_t
{
	EPkResultType__Dead            = 0,
	EPkResultType__Kill            = 1,
	EPkResultType__Assist          = 2,
	EPkResultType__Max             = 3
};


// Enum CommonSource.ECameraView
enum class FCommonSource_CommonSource_ECameraView : uint8_t
{
	ECameraView__None              = 0,
	ECameraView__Normal            = 1,
	ECameraView__Quarter           = 2,
	ECameraView__Dynamic           = 3,
	ECameraView__Max               = 4
};


// Enum CommonSource.ESecurityLogType
enum class FCommonSource_CommonSource_ESecurityLogType : uint8_t
{
	ESecurityLogType__None         = 0,
	ESecurityLogType__Vehicle      = 1,
	ESecurityLogType__Avatar       = 2,
	ESecurityLogType__Fly          = 3,
	ESecurityLogType__JumpMovement = 4,
	ESecurityLogType__CharacterParam = 5,
	ESecurityLogType__GuildWindowSize = 6,
	ESecurityLogType__LetterWindowSize = 7,
	ESecurityLogType__Gxshield     = 8,
	ESecurityLogType__XigncodeServer = 9,
	ESecurityLogType__WindowProcessName = 10,
	ESecurityLogType__XigncodeClient = 11,
	ESecurityLogType__AndroidAPILevel = 12,
	ESecurityLogType__IxShield     = 13,
	ESecurityLogType__WindowsMultiConnectPort = 14,
	ESecurityLogType__WindowProcessCount = 15,
	ESecurityLogType__LoopbackConnect = 16,
	ESecurityLogType__ViewPoint    = 17,
	ESecurityLogType__Max          = 18
};


// Enum CommonSource.EPlayerRelation
enum class FCommonSource_CommonSource_EPlayerRelation : uint8_t
{
	EPlayerRelation__FavoriteFriend = 0,
	EPlayerRelation__PkChase       = 1,
	EPlayerRelation__Max           = 2
};


// Enum CommonSource.ECustomizingGauge
enum class FCommonSource_CommonSource_ECustomizingGauge : uint8_t
{
	ECustomizingGauge__Makeup      = 0,
	ECustomizingGauge__Decoration  = 1,
	ECustomizingGauge__Body        = 2,
	ECustomizingGauge__Height      = 3,
	ECustomizingGauge__HeadSize    = 4,
	ECustomizingGauge__BreastSize  = 5,
	ECustomizingGauge__WaistThickness = 6,
	ECustomizingGauge__HipSize     = 7,
	ECustomizingGauge__Max         = 8
};


// Enum CommonSource.ECustomizingColor
enum class FCommonSource_CommonSource_ECustomizingColor : uint8_t
{
	ECustomizingColor__Skin        = 0,
	ECustomizingColor__HairMain    = 1,
	ECustomizingColor__Decoration  = 2,
	ECustomizingColor__Max         = 3
};


// Enum CommonSource.ECustomizingType
enum class FCommonSource_CommonSource_ECustomizingType : uint8_t
{
	ECustomizingType__Face         = 0,
	ECustomizingType__Hair         = 1,
	ECustomizingType__Decoration   = 2,
	ECustomizingType__Max          = 3
};


// Enum CommonSource.EAchievementNetResult
enum class FCommonSource_CommonSource_EAchievementNetResult : uint8_t
{
	EAchievementNetResult__Success = 0,
	EAchievementNetResult__Server_Error = 1,
	EAchievementNetResult__Reserved_Error = 2,
	EAchievementNetResult__DB_Not_Found = 3,
	EAchievementNetResult__Table_Not_Found = 4,
	EAchievementNetResult__Not_Clear = 5,
	EAchievementNetResult__ItemSlot_Not_Enough = 6,
	EAchievementNetResult__CanNot_Find_Clear = 7,
	EAchievementNetResult__Contents_Block = 8,
	EAchievementNetResult__CanNot_Reward_CoolTime = 9,
	EAchievementNetResult__Max     = 10
};


// Enum CommonSource.EAlchemyNetResult
enum class FCommonSource_CommonSource_EAlchemyNetResult : uint8_t
{
	EAlchemyNetResult__Success     = 0,
	EAlchemyNetResult__Server_Error = 1,
	EAlchemyNetResult__Reserved_Error = 2,
	EAlchemyNetResult__DB_Not_Found = 3,
	EAlchemyNetResult__Table_Not_Found = 4,
	EAlchemyNetResult__MeterialCount_Not_Enough = 5,
	EAlchemyNetResult__Contents_Block = 6,
	EAlchemyNetResult__RequestFast = 7,
	EAlchemyNetResult__PrevBoard_Not_Open = 8,
	EAlchemyNetResult__ItemSlot_Not_Enough = 9,
	EAlchemyNetResult__Max         = 10
};


// Enum CommonSource.EAttackNetResult
enum class FCommonSource_CommonSource_EAttackNetResult : uint8_t
{
	EAttackNetResult__Success      = 0,
	EAttackNetResult__Server_Error = 1,
	EAttackNetResult__Reserved_Error = 2,
	EAttackNetResult__Table_Not_Found = 3,
	EAttackNetResult__CheckMe_Not_InMap = 4,
	EAttackNetResult__CheckMe_CurPos_Invalid = 5,
	EAttackNetResult__CheckMe_State_Dead = 6,
	EAttackNetResult__CheckMe_State_Stun = 7,
	EAttackNetResult__CheckMe_Doing_Attack = 8,
	EAttackNetResult__CheckMe_Hp_Not_Enough = 9,
	EAttackNetResult__CheckMe_Mp_Not_Enough = 10,
	EAttackNetResult__CheckMe_Need_Prev_Combo_Skill = 11,
	EAttackNetResult__CheckMe_CastingTime_Zero = 12,
	EAttackNetResult__CheckMe_Invalid_Condition = 13,
	EAttackNetResult__CheckMe_InVillage = 14,
	EAttackNetResult__Targeting_Not_SameMap = 15,
	EAttackNetResult__Targeting_AliveState = 16,
	EAttackNetResult__Targeting_DeadState = 17,
	EAttackNetResult__Targeting_Faction_Invalid = 18,
	EAttackNetResult__Targeting_OutOfRange = 19,
	EAttackNetResult__Targeting_Not_Found = 20,
	EAttackNetResult__Targeting_Cannot_Attack = 21,
	EAttackNetResult__Targeting_BlockingVolume = 22,
	EAttackNetResult__Targeting_Path_Not_Found = 23,
	EAttackNetResult__Targeting_InVillage = 24,
	EAttackNetResult__Targeting_Hiding_State = 25,
	EAttackNetResult__Targeting_Not_PKZone = 26,
	EAttackNetResult__Targeting_InBaseCamp = 27,
	EAttackNetResult__Targeting_Not_Attack_Party_Member = 28,
	EAttackNetResult__Targeting_Not_Attack_Guild_Member = 29,
	EAttackNetResult__Targeting_Swimming = 30,
	EAttackNetResult__Targeting_FlyClimbing = 31,
	EAttackNetResult__Targeting_Attacker_Not_Found = 32,
	EAttackNetResult__CoolTime_Waiting = 33,
	EAttackNetResult__Casting_Not_Doing = 34,
	EAttackNetResult__Casting_Doing = 35,
	EAttackNetResult__Not_LearnedSkill = 36,
	EAttackNetResult__Cannot_Move  = 37,
	EAttackNetResult__Not_MyClassSkill = 38,
	EAttackNetResult__Alreay_Activated_Skill = 39,
	EAttackNetResult__Cannot_Use_In_Instance_Dungeon = 40,
	EAttackNetResult__Not_DeadState = 41,
	EAttackNetResult__Cash_Not_Enough = 42,
	EAttackNetResult__Seal_Not_Enough = 43,
	EAttackNetResult__Hiding_State = 44,
	EAttackNetResult__SkillObject_Owner_Not_Exist = 45,
	EAttackNetResult__Resurrection_Waiting = 46,
	EAttackNetResult__CashResurrection_Count_Exceed = 47,
	EAttackNetResult__Cannot_User_CashResurrection = 48,
	EAttackNetResult__CashResurrection_Over_LimitTime = 49,
	EAttackNetResult__Cannot_CastlewarQualifierState = 50,
	EAttackNetResult__MelodyPoint_Not_Enough = 51,
	EAttackNetResult__SwapBuffIndex_Is_Exist = 52,
	EAttackNetResult__SwapBuffIndex_Not_Exist = 53,
	EAttackNetResult__Cannot_GuildBattlefieldWarState = 54,
	EAttackNetResult__Cannot_GuildBattlefieldPossessBox = 55,
	EAttackNetResult__Invalid_ClassType = 56,
	EAttackNetResult__InstinctCoolTime_Waiting = 57,
	EAttackNetResult__SacrificePointOnOffCoolTime_Waiting = 58,
	EAttackNetResult__Cannot_SacrificePointOnOff_Buff_Doing = 59,
	EAttackNetResult__Max          = 60
};


// Enum CommonSource.EAttendanceNetResult
enum class FCommonSource_CommonSource_EAttendanceNetResult : uint8_t
{
	EAttendanceNetResult__Success  = 0,
	EAttendanceNetResult__Server_Error = 1,
	EAttendanceNetResult__Reserved_Error = 2,
	EAttendanceNetResult__DB_Not_Found = 3,
	EAttendanceNetResult__Already_Attended = 4,
	EAttendanceNetResult__ItemSlot_Not_Enough = 5,
	EAttendanceNetResult__Attendance_Invalid = 6,
	EAttendanceNetResult__AttendanceReward_Invalid = 7,
	EAttendanceNetResult__User_Not_Found = 8,
	EAttendanceNetResult__Potion_Max_Count = 9,
	EAttendanceNetResult__Contents_Block = 10,
	EAttendanceNetResult__Max      = 11
};


// Enum CommonSource.EAvatarNetResult
enum class FCommonSource_CommonSource_EAvatarNetResult : uint8_t
{
	EAvatarNetResult__Success      = 0,
	EAvatarNetResult__Server_Error = 1,
	EAvatarNetResult__Reserved_Error = 2,
	EAvatarNetResult__DB_Not_Found = 3,
	EAvatarNetResult__Table_Not_Found = 4,
	EAvatarNetResult__Item_Not_Found = 5,
	EAvatarNetResult__EquipItem_Not_Delete = 6,
	EAvatarNetResult__ItemCount_Not_Enough = 7,
	EAvatarNetResult__Invalid_Storage = 8,
	EAvatarNetResult__Cash_Not_Enough = 9,
	EAvatarNetResult__EquipItem_Not_Move = 10,
	EAvatarNetResult__EquipItem_Not_Sale = 11,
	EAvatarNetResult__SlotExpand_MaxOver = 12,
	EAvatarNetResult__BindType_PlayerGet = 13,
	EAvatarNetResult__Not_Avatar_Item = 14,
	EAvatarNetResult__Not_Material_Item = 15,
	EAvatarNetResult__Gold_Not_Enough = 16,
	EAvatarNetResult__ItemExp_Not_Enough = 17,
	EAvatarNetResult__EnchantStep_Max = 18,
	EAvatarNetResult__ItemLevel_Not_Enough = 19,
	EAvatarNetResult__Not_Levelup_Material_Item = 20,
	EAvatarNetResult__EquipItem_Not_Compose = 21,
	EAvatarNetResult__BreakThroughStep_Max = 22,
	EAvatarNetResult__Get_Random_Error = 23,
	EAvatarNetResult__ItemExp_Max  = 24,
	EAvatarNetResult__ItemLevel_Max = 25,
	EAvatarNetResult__Item_Lock    = 26,
	EAvatarNetResult__Rune_Exist   = 27,
	EAvatarNetResult__Not_Avatar_ItemGrade = 28,
	EAvatarNetResult__DecoItem_Not_Compose = 29,
	EAvatarNetResult__Max_Level    = 30,
	EAvatarNetResult__Not_Equip_On_War_Mode = 31,
	EAvatarNetResult__Not_Class_Type = 32,
	EAvatarNetResult__AvatarCount_Not_Enough = 33,
	EAvatarNetResult__Avatar_Not_Found = 34,
	EAvatarNetResult__AvatarCount_Not = 35,
	EAvatarNetResult__AvatarCompose_MaxOver = 36,
	EAvatarNetResult__Avatar_Decide_MaxOver = 37,
	EAvatarNetResult__Contents_Block = 38,
	EAvatarNetResult__Already_Get_Reward = 39,
	EAvatarNetResult__Condition_Not_Reached = 40,
	EAvatarNetResult__MaterialCount_Not_Enough = 41,
	EAvatarNetResult__FixedAvatar_Not_Compose = 42,
	EAvatarNetResult__Invalid_AvatarClass = 43,
	EAvatarNetResult__RequestFast  = 44,
	EAvatarNetResult__Not_Select_Exclusion_Class_Type = 45,
	EAvatarNetResult__Max          = 46
};


// Enum CommonSource.EBlessingNetResult
enum class FCommonSource_CommonSource_EBlessingNetResult : uint8_t
{
	EBlessingNetResult__Success    = 0,
	EBlessingNetResult__Server_Error = 1,
	EBlessingNetResult__Reserved_Error = 2,
	EBlessingNetResult__DB_Not_Found = 3,
	EBlessingNetResult__Table_Not_Found = 4,
	EBlessingNetResult__Gold_Not_Enough = 5,
	EBlessingNetResult__Slot_Not_Open = 6,
	EBlessingNetResult__Contents_Block = 7,
	EBlessingNetResult__Slot_Already_Open = 8,
	EBlessingNetResult__Slot_Already_Use = 9,
	EBlessingNetResult__MeterialCount_Not_Enough = 10,
	EBlessingNetResult__Invalid_Grade = 11,
	EBlessingNetResult__Stone_Already_Equipped = 12,
	EBlessingNetResult__Stone_Not_Equipped = 13,
	EBlessingNetResult__SlotChange_Count_Limit = 14,
	EBlessingNetResult__BossStone_Already_Equipped = 15,
	EBlessingNetResult__BlessingSlot_Locked = 16,
	EBlessingNetResult__BossStone_Transform_Unabled = 17,
	EBlessingNetResult__Equipped_Stone_Cannot_Use = 18,
	EBlessingNetResult__Same_BossStone_Already_Equipped = 19,
	EBlessingNetResult__SymbolChangeLock_Count_LImit = 20,
	EBlessingNetResult__RequestFast = 21,
	EBlessingNetResult__BlessingStone_Locked = 22,
	EBlessingNetResult__Cash_Not_Enough = 23,
	EBlessingNetResult__Max        = 24
};


// Enum CommonSource.EBossNetResult
enum class FCommonSource_CommonSource_EBossNetResult : uint8_t
{
	EBossNetResult__Success        = 0,
	EBossNetResult__Server_Error   = 1,
	EBossNetResult__Reserved_Error = 2,
	EBossNetResult__DB_Not_Found   = 3,
	EBossNetResult__Table_Not_Found = 4,
	EBossNetResult__CanNot_Move    = 5,
	EBossNetResult__Fail_PortalMove = 6,
	EBossNetResult__WorldBoss_Not_Exist = 7,
	EBossNetResult__SpawnTime_Not_Enough = 8,
	EBossNetResult__WorldBoss_Dead = 9,
	EBossNetResult__Quest_Not_Doing = 10,
	EBossNetResult__Quest_Not_Finish = 11,
	EBossNetResult__Map_Not_Exist  = 12,
	EBossNetResult__Invalid_Spawn_Pos = 13,
	EBossNetResult__Fail_Summon    = 14,
	EBossNetResult__VoidSummonerPortal_Not_Exist = 15,
	EBossNetResult__Invalid_Field  = 16,
	EBossNetResult__Cannot_Move_Dungeon_In_Slayer = 17,
	EBossNetResult__Contents_Block = 18,
	EBossNetResult__CanNot_Enter_ServerInvasion_Server = 19,
	EBossNetResult__Max            = 20
};


// Enum CommonSource.ECastlewarNetResult
enum class FCommonSource_CommonSource_ECastlewarNetResult : uint8_t
{
	ECastlewarNetResult__Success   = 0,
	ECastlewarNetResult__Server_Error = 1,
	ECastlewarNetResult__Reserved_Error = 2,
	ECastlewarNetResult__DB_Not_Found = 3,
	ECastlewarNetResult__Table_Not_Found = 4,
	ECastlewarNetResult__No_User   = 5,
	ECastlewarNetResult__Clear_Quest = 6,
	ECastlewarNetResult__No_Guild  = 7,
	ECastlewarNetResult__Guild_Not_Found = 8,
	ECastlewarNetResult__Not_Join  = 9,
	ECastlewarNetResult__Not_Member = 10,
	ECastlewarNetResult__Has_Not_Permission = 11,
	ECastlewarNetResult__Gold_Not_Enough = 12,
	ECastlewarNetResult__Less_Then_Min_Price = 13,
	ECastlewarNetResult__Less_Then_First_Price = 14,
	ECastlewarNetResult__Not_Bid_Time = 15,
	ECastlewarNetResult__Not_Bid_Guild = 16,
	ECastlewarNetResult__CanNot_Set_Tax_Guild = 17,
	ECastlewarNetResult__CanNot_Set_SameTaxRate = 18,
	ECastlewarNetResult__TaxRate_RangeOver = 19,
	ECastlewarNetResult__Distribution_RangeOver = 20,
	ECastlewarNetResult__Already_Doing = 21,
	ECastlewarNetResult__Not_State_Enter = 22,
	ECastlewarNetResult__Not_Enter_Guild = 23,
	ECastlewarNetResult__Cannot_Doing_GuildJoin_Period = 24,
	ECastlewarNetResult__Player_Level_Not_Enough = 25,
	ECastlewarNetResult__Wrong_Parameter = 26,
	ECastlewarNetResult__Contents_Block = 27,
	ECastlewarNetResult__Already_Bid_Same_User = 28,
	ECastlewarNetResult__Cannot_Bid_WinGuild_User = 29,
	ECastlewarNetResult__Only_GameServer_Can_Distribution = 30,
	ECastlewarNetResult__TaxDistribution_Already_Process = 31,
	ECastlewarNetResult__TaxDistribution_Already_Exist = 32,
	ECastlewarNetResult__TaxDistribution_Cancel_Not_Exist = 33,
	ECastlewarNetResult__TaxDistribution_Cancel_Forbidden_Time = 34,
	ECastlewarNetResult__TaxDistribution_Force_Dist_Time = 35,
	ECastlewarNetResult__TaxDistribution_CoolTime = 36,
	ECastlewarNetResult__TaxDistribution_Max_Request = 37,
	ECastlewarNetResult__TaxDistribution_Min_Limit = 38,
	ECastlewarNetResult__RequestFast = 39,
	ECastlewarNetResult__CanNot_Select_World_Anymore = 40,
	ECastlewarNetResult__Closed_World_Select_Time = 41,
	ECastlewarNetResult__Not_Open_CastleWar_Contents = 42,
	ECastlewarNetResult__Full_Guild_Target_Castle = 43,
	ECastlewarNetResult__Max       = 44
};


// Enum CommonSource.ECastlewarMercenaryNotice
enum class FCommonSource_CommonSource_ECastlewarMercenaryNotice : uint8_t
{
	ECastlewarMercenaryNotice__Join_Reject_Mercenary = 0,
	ECastlewarMercenaryNotice__Join_Reject_CastlewarGuild = 1,
	ECastlewarMercenaryNotice__Join_Accept_Mercenary = 2,
	ECastlewarMercenaryNotice__Join_Accept_CastlewarGuild = 3,
	ECastlewarMercenaryNotice__Withdraw_Mercenary = 4,
	ECastlewarMercenaryNotice__Withdraw_CastlewarGuild = 5,
	ECastlewarMercenaryNotice__Expel_Mercenary = 6,
	ECastlewarMercenaryNotice__Expel_CastlewarGuild = 7,
	ECastlewarMercenaryNotice__Join_Apply_Mercenary = 8,
	ECastlewarMercenaryNotice__Join_Apply_CastlewarGuild = 9,
	ECastlewarMercenaryNotice__MAX = 10
};


// Enum CommonSource.ECastlewarMercenaryNetResult
enum class FCommonSource_CommonSource_ECastlewarMercenaryNetResult : uint8_t
{
	ECastlewarMercenaryNetResult__Success = 0,
	ECastlewarMercenaryNetResult__Server_Error = 1,
	ECastlewarMercenaryNetResult__Reserved_Error = 2,
	ECastlewarMercenaryNetResult__DB_Not_Found = 3,
	ECastlewarMercenaryNetResult__Table_Not_Found = 4,
	ECastlewarMercenaryNetResult__Player_Not_Found = 5,
	ECastlewarMercenaryNetResult__Guild_Not_Found = 6,
	ECastlewarMercenaryNetResult__Has_Not_Permission = 7,
	ECastlewarMercenaryNetResult__Not_Prep_Time = 8,
	ECastlewarMercenaryNetResult__Not_Castlewar_Guild = 9,
	ECastlewarMercenaryNetResult__Bounty_Input_Error = 10,
	ECastlewarMercenaryNetResult__Bounty_Not_Enough = 11,
	ECastlewarMercenaryNetResult__Bounty_Return_Fail = 12,
	ECastlewarMercenaryNetResult__Mercenary_Recruit_Already_Exist = 13,
	ECastlewarMercenaryNetResult__Mercenary_Recruit_Not_Found = 14,
	ECastlewarMercenaryNetResult__Accept_Mercenary_Exist = 15,
	ECastlewarMercenaryNetResult__PlayerLevel_Not_Enough = 16,
	ECastlewarMercenaryNetResult__Cannot_Mercenary_Join_Hostile_Guild = 17,
	ECastlewarMercenaryNetResult__Mercenary_Join_Count_Max = 18,
	ECastlewarMercenaryNetResult__Mercenary_Guild_Apply_Count_Max = 19,
	ECastlewarMercenaryNetResult__Mercenary_Player_Apply_Count_Max = 20,
	ECastlewarMercenaryNetResult__Mercenary_Already_Join = 21,
	ECastlewarMercenaryNetResult__Mercenary_Not_Applied = 22,
	ECastlewarMercenaryNetResult__Mercenary_Not_Accepted = 23,
	ECastlewarMercenaryNetResult__Cannot_Mercenary_Join_Castlewar_Guild = 24,
	ECastlewarMercenaryNetResult__Already_Doing = 25,
	ECastlewarMercenaryNetResult__Distribution_RangeOver = 26,
	ECastlewarMercenaryNetResult__Not_Bounty_Distribution_Time = 27,
	ECastlewarMercenaryNetResult__Only_GameServer_Can_Distribution = 28,
	ECastlewarMercenaryNetResult__Wrong_Parameter = 29,
	ECastlewarMercenaryNetResult__Contents_Block = 30,
	ECastlewarMercenaryNetResult__GuildInfo_Not_Found = 31,
	ECastlewarMercenaryNetResult__Already_Distribution = 32,
	ECastlewarMercenaryNetResult__Not_Open_CastleWar_Contents = 33,
	ECastlewarMercenaryNetResult__Max = 34
};


// Enum CommonSource.ECastlewarQualifierNetResult
enum class FCommonSource_CommonSource_ECastlewarQualifierNetResult : uint8_t
{
	ECastlewarQualifierNetResult__Success = 0,
	ECastlewarQualifierNetResult__Server_Error = 1,
	ECastlewarQualifierNetResult__Reserved_Error = 2,
	ECastlewarQualifierNetResult__DB_Not_Found = 3,
	ECastlewarQualifierNetResult__Table_Not_Found = 4,
	ECastlewarQualifierNetResult__No_Guild = 5,
	ECastlewarQualifierNetResult__Not_Member = 6,
	ECastlewarQualifierNetResult__Has_Not_Permission = 7,
	ECastlewarQualifierNetResult__Not_State_Enter = 8,
	ECastlewarQualifierNetResult__Not_Enter_Guild = 9,
	ECastlewarQualifierNetResult__Enter_Member_Full = 10,
	ECastlewarQualifierNetResult__UserDBKey_Duplicate = 11,
	ECastlewarQualifierNetResult__Cannot_Enter_GuildJoin_Period = 12,
	ECastlewarQualifierNetResult__Player_Level_Not_Enough = 13,
	ECastlewarQualifierNetResult__Cannot_Another_Map = 14,
	ECastlewarQualifierNetResult__Contents_Block = 15,
	ECastlewarQualifierNetResult__Not_QualifierMember = 16,
	ECastlewarQualifierNetResult__Invalid_State = 17,
	ECastlewarQualifierNetResult__Max = 18
};


// Enum CommonSource.EChampionsDungeonNetResult
enum class FCommonSource_CommonSource_EChampionsDungeonNetResult : uint8_t
{
	EChampionsDungeonNetResult__Success = 0,
	EChampionsDungeonNetResult__Server_Error = 1,
	EChampionsDungeonNetResult__Reserved_Error = 2,
	EChampionsDungeonNetResult__DB_Not_Found = 3,
	EChampionsDungeonNetResult__Table_Not_Found = 4,
	EChampionsDungeonNetResult__Contents_Block = 5,
	EChampionsDungeonNetResult__Max = 6
};


// Enum CommonSource.ECashShopNetResult
enum class FCommonSource_CommonSource_ECashShopNetResult : uint8_t
{
	ECashShopNetResult__Success    = 0,
	ECashShopNetResult__Server_Error = 1,
	ECashShopNetResult__Reserved_Error = 2,
	ECashShopNetResult__DB_Not_Found = 3,
	ECashShopNetResult__Table_Not_Found = 4,
	ECashShopNetResult__Not_Sale   = 5,
	ECashShopNetResult__BuyCount_Limit = 6,
	ECashShopNetResult__Level_Limit = 7,
	ECashShopNetResult__UserCash_Not_Enough = 8,
	ECashShopNetResult__UserGold_Not_Enough = 9,
	ECashShopNetResult__Mileage_Not_Enough = 10,
	ECashShopNetResult__ItemSlot_Not_Enough = 11,
	ECashShopNetResult__Billing_Purchase_Doing = 12,
	ECashShopNetResult__Billing_Receipt_Invalid = 13,
	ECashShopNetResult__Billing_UserDBKey_Invalid = 14,
	ECashShopNetResult__Billing_Item_Completed = 15,
	ECashShopNetResult__Billing_Receipt_Cancel = 16,
	ECashShopNetResult__Billing_Receipt_Duplicate = 17,
	ECashShopNetResult__Billing_Known_DBError = 18,
	ECashShopNetResult__Billing_ProductID_Invalid = 19,
	ECashShopNetResult__Billing_Aos_Invalid_Receipt = 20,
	ECashShopNetResult__Billing_Ios_Server_Not_Connect = 21,
	ECashShopNetResult__Billing_Ios_Invalid_Receipt = 22,
	ECashShopNetResult__Billing_Aos_GetAccessToken_Fail = 23,
	ECashShopNetResult__Billing_Aos_Invalid_Verify = 24,
	ECashShopNetResult__Billing_Aos_Server_Not_Connect = 25,
	ECashShopNetResult__Billing_Guest_Not_Aos_Available = 26,
	ECashShopNetResult__Billing_Already_Consumed_Receipt = 27,
	ECashShopNetResult__Potion_Max_Count = 28,
	ECashShopNetResult__Not_Buy    = 29,
	ECashShopNetResult__Not_Clear_DailyMission = 30,
	ECashShopNetResult__Not_Clear_ChapterMission = 31,
	ECashShopNetResult__Already_Rewarded = 32,
	ECashShopNetResult__BuyCount_Zero = 33,
	ECashShopNetResult__Contents_Block = 34,
	ECashShopNetResult__Billing_Token_Invalid = 35,
	ECashShopNetResult__Billing_Token_Already_Purchase = 36,
	ECashShopNetResult__Billing_Token_TimeOver = 37,
	ECashShopNetResult__No_User    = 38,
	ECashShopNetResult__OdinPassPoint_Not_Enough = 39,
	ECashShopNetResult__Billing_MyCard_Invalid_Verify = 40,
	ECashShopNetResult__Billing_MyCard_Server_Not_Connect = 41,
	ECashShopNetResult__Billing_MyCard_VerifyRequest_Fail = 42,
	ECashShopNetResult__BuyBatchCashShopItem_Duplicate_Error = 43,
	ECashShopNetResult__BuyBatchCashShopItem_PriceType_Error = 44,
	ECashShopNetResult__Billing_MyCard_Different_ServerID = 45,
	ECashShopNetResult__Billing_Aos_PC_CoolTime_Waiting = 46,
	ECashShopNetResult__Billing_Aos_PC_Block = 47,
	ECashShopNetResult__CashMileage_Not_Enough = 48,
	ECashShopNetResult__Not_RandomChoice = 49,
	ECashShopNetResult__Not_Set_RandomChoice = 50,
	ECashShopNetResult__Already_Set_RandomChoice = 51,
	ECashShopNetResult__RandomChoiceCount_Invalid = 52,
	ECashShopNetResult__RandomChoiceGrade_Invalid = 53,
	ECashShopNetResult__Invalid_ClassType = 54,
	ECashShopNetResult__Invalid_Os = 55,
	ECashShopNetResult__Invalid_Currency = 56,
	ECashShopNetResult__Invalid_GuildJob = 57,
	ECashShopNetResult__Billing_Ios_Invalid_PlayerID = 58,
	ECashShopNetResult__RequestFast = 59,
	ECashShopNetResult__Cannot_Buy_Costume = 60,
	ECashShopNetResult__Cannot_Buy_Replace_Product = 61,
	ECashShopNetResult__BuyBatchCashShopItem_Replace_Product = 62,
	ECashShopNetResult__RandomGuaranteeCount_Not_Enough = 63,
	ECashShopNetResult__Billing_CN_Receipt_Delay = 64,
	ECashShopNetResult__Billing_CN_Different_User = 65,
	ECashShopNetResult__Not_Select_Exclusion_Class_Type = 66,
	ECashShopNetResult__Max        = 67
};


// Enum CommonSource.EChattingNetResult
enum class FCommonSource_CommonSource_EChattingNetResult : uint8_t
{
	EChattingNetResult__Success    = 0,
	EChattingNetResult__Server_Error = 1,
	EChattingNetResult__Reserved_Error = 2,
	EChattingNetResult__Table_Not_Found = 3,
	EChattingNetResult__Message_Size_Over = 4,
	EChattingNetResult__Chatting_Frequency_Not = 5,
	EChattingNetResult__User_Full  = 6,
	EChattingNetResult__Guild_Not_Join = 7,
	EChattingNetResult__Party_Not_Join = 8,
	EChattingNetResult__Already_Banned = 9,
	EChattingNetResult__Not_Banned_Player = 10,
	EChattingNetResult__Whisper_Player_Name_Empty = 11,
	EChattingNetResult__Player_Not_Found = 12,
	EChattingNetResult__Whisper_Cannot_Send_Yourself = 13,
	EChattingNetResult__Chatting_Ban = 14,
	EChattingNetResult__ServerChatType_CoolTime = 15,
	EChattingNetResult__Chatting_Block = 16,
	EChattingNetResult__Unusable_Characters = 17,
	EChattingNetResult__WorldDungeon_Player_Not_Found = 18,
	EChattingNetResult__EliteDungeon_Player_Not_Found = 19,
	EChattingNetResult__PlayerLevel_Not_Enough = 20,
	EChattingNetResult__Not_Allow_GuildAlliance_Chatting = 21,
	EChattingNetResult__CastleWar_Player_Not_Found = 22,
	EChattingNetResult__ChampionsDungeon_Player_Not_Found = 23,
	EChattingNetResult__GuildBattlefield_Player_Not_Found = 24,
	EChattingNetResult__Translate_Not_Support = 25,
	EChattingNetResult__Translate_Same_Language = 26,
	EChattingNetResult__Translate_Count_Over = 27,
	EChattingNetResult__Translate_Block = 28,
	EChattingNetResult__Only_ServerInvasion_Defence_User = 29,
	EChattingNetResult__Not_Doing_ServerInvasion = 30,
	EChattingNetResult__Max        = 31
};


// Enum CommonSource.EClassChangeStructNetResult
enum class FCommonSource_CommonSource_EClassChangeStructNetResult : uint8_t
{
	EClassChangeStructNetResult__Success = 0,
	EClassChangeStructNetResult__Server_Error = 1,
	EClassChangeStructNetResult__Reserved_Error = 2,
	EClassChangeStructNetResult__DB_Not_Found = 3,
	EClassChangeStructNetResult__Table_Not_Found = 4,
	EClassChangeStructNetResult__Contents_Block = 5,
	EClassChangeStructNetResult__Invalid_Map = 6,
	EClassChangeStructNetResult__Invalid_WarMode = 7,
	EClassChangeStructNetResult__Invalid_Village = 8,
	EClassChangeStructNetResult__Cannot_Use_Brutal_Or_Slayer = 9,
	EClassChangeStructNetResult__Quest_Not_Finish = 10,
	EClassChangeStructNetResult__Item_Not_Found = 11,
	EClassChangeStructNetResult__Not_ChangeTicket_Type = 12,
	EClassChangeStructNetResult__Not_Enough_Level = 13,
	EClassChangeStructNetResult__Invalid_Target_ClassType = 14,
	EClassChangeStructNetResult__Class_Change_Count_Over = 15,
	EClassChangeStructNetResult__Not_ClassChange_Common_ClassType = 16,
	EClassChangeStructNetResult__Not_Enough_ChangePrice = 17,
	EClassChangeStructNetResult__CustomizeValue_Invalid = 18,
	EClassChangeStructNetResult__Avatar_Decide_Exist = 19,
	EClassChangeStructNetResult__WeaponShape_Decide_Exist = 20,
	EClassChangeStructNetResult__Invalid_Date = 21,
	EClassChangeStructNetResult__AvatarChange_Disabled = 22,
	EClassChangeStructNetResult__WeaponShapeChange_Disabled = 23,
	EClassChangeStructNetResult__ItemChange_Disabled = 24,
	EClassChangeStructNetResult__SkillChange_Disabled = 25,
	EClassChangeStructNetResult__Avatar_Not_Found = 26,
	EClassChangeStructNetResult__AvatarGrade_Change_Count_Over = 27,
	EClassChangeStructNetResult__Invalid_AvatarGrade_Count = 28,
	EClassChangeStructNetResult__Invalid_ChangeAvatar = 29,
	EClassChangeStructNetResult__Duplicated_Avatar = 30,
	EClassChangeStructNetResult__WeaponShape_Not_Found = 31,
	EClassChangeStructNetResult__WeaponShapeGrade_Change_Count_Over = 32,
	EClassChangeStructNetResult__Invalid_WeaponShapeGrade_Count = 33,
	EClassChangeStructNetResult__Invalid_ChangeWeaponShape = 34,
	EClassChangeStructNetResult__Duplicated_WeaponShape = 35,
	EClassChangeStructNetResult__ItemGrade_Change_Count_Over = 36,
	EClassChangeStructNetResult__Invalid_ItemGrade_Count = 37,
	EClassChangeStructNetResult__Invalid_ChangeItem = 38,
	EClassChangeStructNetResult__Not_Equiped_Item = 39,
	EClassChangeStructNetResult__Duplicated_EquipedItem = 40,
	EClassChangeStructNetResult__SkillGrade_Change_Count_Over = 41,
	EClassChangeStructNetResult__Invalid_Skill_Count = 42,
	EClassChangeStructNetResult__Invalid_Skill = 43,
	EClassChangeStructNetResult__Not_Passive_Skill = 44,
	EClassChangeStructNetResult__Duplicated_Skill = 45,
	EClassChangeStructNetResult__Already_Owned_TargetClass_Avatar = 46,
	EClassChangeStructNetResult__Already_Owned_TargetClass_WeaponShape = 47,
	EClassChangeStructNetResult__ItemSlot_Not_Enough = 48,
	EClassChangeStructNetResult__Cannot_ItemChange_Expired = 49,
	EClassChangeStructNetResult__CostumeChange_Disabled = 50,
	EClassChangeStructNetResult__Costume_Not_Found = 51,
	EClassChangeStructNetResult__CostumeSkin_Grade_Change_Count_Over = 52,
	EClassChangeStructNetResult__CostumeWeapon_Grade_Change_Count_Over = 53,
	EClassChangeStructNetResult__Duplicated_Costume = 54,
	EClassChangeStructNetResult__Not_Found_TranscendSkill = 55,
	EClassChangeStructNetResult__Invalid_SkillKeepType = 56,
	EClassChangeStructNetResult__Can_Not_Keep_EnchantLevel = 57,
	EClassChangeStructNetResult__Can_Not_Keep_TranscendSkill = 58,
	EClassChangeStructNetResult__Can_Not_CostumeChange_FixTerm_Purchase = 59,
	EClassChangeStructNetResult__Can_Not_ClassChange_From_FirstClass = 60,
	EClassChangeStructNetResult__Max = 61
};


// Enum CommonSource.ECollectionNetResult
enum class FCommonSource_CommonSource_ECollectionNetResult : uint8_t
{
	ECollectionNetResult__Success  = 0,
	ECollectionNetResult__Server_Error = 1,
	ECollectionNetResult__Reserved_Error = 2,
	ECollectionNetResult__DB_Not_Found = 3,
	ECollectionNetResult__Table_Not_Found = 4,
	ECollectionNetResult__Cannot_Get_Reward = 5,
	ECollectionNetResult__Already_Get_Reward = 6,
	ECollectionNetResult__Not_Collection_Member = 7,
	ECollectionNetResult__Item_Not_Found = 8,
	ECollectionNetResult__Unusable_Item = 9,
	ECollectionNetResult__Already_Added = 10,
	ECollectionNetResult__Contents_Block = 11,
	ECollectionNetResult__Favorite_Full = 12,
	ECollectionNetResult__ItemCount_Not_Enough = 13,
	ECollectionNetResult__RegistPlayer_Diff = 14,
	ECollectionNetResult__EventCollection_End = 15,
	ECollectionNetResult__Max      = 16
};


// Enum CommonSource.EConflictDungeonNetResult
enum class FCommonSource_CommonSource_EConflictDungeonNetResult : uint8_t
{
	EConflictDungeonNetResult__Success = 0,
	EConflictDungeonNetResult__Server_Error = 1,
	EConflictDungeonNetResult__Reserved_Error = 2,
	EConflictDungeonNetResult__Table_Not_Found = 3,
	EConflictDungeonNetResult__Contents_Block = 4,
	EConflictDungeonNetResult__Max = 5
};


// Enum CommonSource.ECostumeNetResult
enum class FCommonSource_CommonSource_ECostumeNetResult : uint8_t
{
	ECostumeNetResult__Success     = 0,
	ECostumeNetResult__Server_Error = 1,
	ECostumeNetResult__Reserved_Error = 2,
	ECostumeNetResult__DB_Not_Found = 3,
	ECostumeNetResult__Table_Not_Found = 4,
	ECostumeNetResult__Not_Found_Costume = 5,
	ECostumeNetResult__CostumeCount_Not_Enough = 6,
	ECostumeNetResult__Not_Equip_On_War_Mode = 7,
	ECostumeNetResult__Not_Class_Type = 8,
	ECostumeNetResult__Not_Costume_Type = 9,
	ECostumeNetResult__Not_Equip_Costume = 10,
	ECostumeNetResult__Already_Equiped_Costume = 11,
	ECostumeNetResult__Contents_Block = 12,
	ECostumeNetResult__Not_Grade   = 13,
	ECostumeNetResult__CanNot_Dyeing_SkinType = 14,
	ECostumeNetResult__CanNot_Dyeing_Costume = 15,
	ECostumeNetResult__CanNot_Dyeing_FixedTermCostume = 16,
	ECostumeNetResult__CanNot_Dyeing_Resource = 17,
	ECostumeNetResult__Max         = 18
};


// Enum CommonSource.EErrorCouponNetResult
enum class FCommonSource_CommonSource_EErrorCouponNetResult : uint8_t
{
	EErrorCouponNetResult__Success = 0,
	EErrorCouponNetResult__Server_Error = 1,
	EErrorCouponNetResult__Reserved_Error = 2,
	EErrorCouponNetResult__DB_Not_Found = 3,
	EErrorCouponNetResult__Table_Not_Found = 4,
	EErrorCouponNetResult__Item_Not_Found = 5,
	EErrorCouponNetResult__Unknown_Coupon_Code = 6,
	EErrorCouponNetResult__Already_Used = 7,
	EErrorCouponNetResult__Invalid_Date = 8,
	EErrorCouponNetResult__Invalid_ServerID = 9,
	EErrorCouponNetResult__Unknown_OdinCoupon_Type = 10,
	EErrorCouponNetResult__Not_Consume_Item = 11,
	EErrorCouponNetResult__Item_Lock = 12,
	EErrorCouponNetResult__Invalid_Storage = 13,
	EErrorCouponNetResult__ItemCount_Not_Enough = 14,
	EErrorCouponNetResult__Unusable_Item = 15,
	EErrorCouponNetResult__Reward_Changed = 16,
	EErrorCouponNetResult__ItemSlot_Not_Enough = 17,
	EErrorCouponNetResult__Duplicate_FixedAvatar = 18,
	EErrorCouponNetResult__GradeCount_Not_Enough = 19,
	EErrorCouponNetResult__Not_Select_Exclusion_Class_Type = 20,
	EErrorCouponNetResult__Max     = 21
};


// Enum CommonSource.EDuelNetResult
enum class FCommonSource_CommonSource_EDuelNetResult : uint8_t
{
	EDuelNetResult__Success        = 0,
	EDuelNetResult__Server_Error   = 1,
	EDuelNetResult__Reserved_Error = 2,
	EDuelNetResult__DB_Not_Found   = 3,
	EDuelNetResult__Table_Not_Found = 4,
	EDuelNetResult__Duel_Dungeon_Not = 5,
	EDuelNetResult__I_AM_Not_Master = 6,
	EDuelNetResult__Member_Full    = 7,
	EDuelNetResult__I_AM_Master    = 8,
	EDuelNetResult__Distance_Not_Enough = 9,
	EDuelNetResult__Cannot_Join_Duel = 10,
	EDuelNetResult__CanNot_Enter   = 11,
	EDuelNetResult__CanNot_Enter_InPK = 12,
	EDuelNetResult__EnterMap_Not_Exist = 13,
	EDuelNetResult__Contents_Block = 14,
	EDuelNetResult__Player_Dead    = 15,
	EDuelNetResult__Portal_Not_InArea = 16,
	EDuelNetResult__Already_MoveReady = 17,
	EDuelNetResult__CanNot_Enter_BattlePower = 18,
	EDuelNetResult__CanNot_Enter_WrongPassword = 19,
	EDuelNetResult__DungeonName_Not_Invalid = 20,
	EDuelNetResult__DungeonName_Invalid_Length = 21,
	EDuelNetResult__CanNot_OnStartDuel = 22,
	EDuelNetResult__Map_Not        = 23,
	EDuelNetResult__TeamSelection_Error = 24,
	EDuelNetResult__LimitUser_Error = 25,
	EDuelNetResult__Dungeon_Count_Over = 26,
	EDuelNetResult__Target_Duel_Dungeon_Not = 27,
	EDuelNetResult__CanNot_OnStart_Condition = 28,
	EDuelNetResult__DuelStart_Not  = 29,
	EDuelNetResult__CanNot_OnStart_Already = 30,
	EDuelNetResult__CanNot_OnStart_EnoughTeam = 31,
	EDuelNetResult__CanNot_OnStart_EnoughUserCount = 32,
	EDuelNetResult__CanNot_ChangeSide_OnStart = 33,
	EDuelNetResult__CanNot_Edit_OnStart = 34,
	EDuelNetResult__CanNot_KickOut_OnStart = 35,
	EDuelNetResult__CanNot_Enter_Brutal_State = 36,
	EDuelNetResult__CanNot_Edit_LimitUserCountError = 37,
	EDuelNetResult__CanNot_Cancel_Match = 38,
	EDuelNetResult__Audience_Full  = 39,
	EDuelNetResult__Max            = 40
};


// Enum CommonSource.EEmotionNetResult
enum class FCommonSource_CommonSource_EEmotionNetResult : uint8_t
{
	EEmotionNetResult__Success     = 0,
	EEmotionNetResult__Server_Error = 1,
	EEmotionNetResult__Reserved_Error = 2,
	EEmotionNetResult__Table_Not_Found = 3,
	EEmotionNetResult__Waiting_Cool_Time = 4,
	EEmotionNetResult__Not_Win_Guild = 5,
	EEmotionNetResult__Max         = 6
};


// Enum CommonSource.EEliteDungeonNetResult
enum class FCommonSource_CommonSource_EEliteDungeonNetResult : uint8_t
{
	EEliteDungeonNetResult__Success = 0,
	EEliteDungeonNetResult__Server_Error = 1,
	EEliteDungeonNetResult__Reserved_Error = 2,
	EEliteDungeonNetResult__DB_Not_Found = 3,
	EEliteDungeonNetResult__Table_Not_Found = 4,
	EEliteDungeonNetResult__Instance_Dungeon_Not = 5,
	EEliteDungeonNetResult__EntranceCount_Not_Enough = 6,
	EEliteDungeonNetResult__I_AM_Not_Master = 7,
	EEliteDungeonNetResult__AllReadyState_Not = 8,
	EEliteDungeonNetResult__EnterMap_Not_Exist = 9,
	EEliteDungeonNetResult__Not_PortalMove_On_War_Mode = 10,
	EEliteDungeonNetResult__Quest_Not_Finish = 11,
	EEliteDungeonNetResult__Portal_Not_InArea = 12,
	EEliteDungeonNetResult__Player_Dead = 13,
	EEliteDungeonNetResult__BattleEnd_Not_Enter = 14,
	EEliteDungeonNetResult__Contents_Block = 15,
	EEliteDungeonNetResult__PkList_Error = 16,
	EEliteDungeonNetResult__Max    = 17
};


// Enum CommonSource.EExchangeNetResult
enum class FCommonSource_CommonSource_EExchangeNetResult : uint8_t
{
	EExchangeNetResult__Success    = 0,
	EExchangeNetResult__Server_Error = 1,
	EExchangeNetResult__Reserved_Error = 2,
	EExchangeNetResult__DB_Not_Found = 3,
	EExchangeNetResult__Table_Not_Found = 4,
	EExchangeNetResult__Private_Server = 5,
	EExchangeNetResult__Item_Not_Found = 6,
	EExchangeNetResult__Invalid_Storage = 7,
	EExchangeNetResult__Trade_Impossible = 8,
	EExchangeNetResult__Item_EquipState = 9,
	EExchangeNetResult__Item_Lock  = 10,
	EExchangeNetResult__ItemCount_Not_Enough = 11,
	EExchangeNetResult__SellingPrice_Small = 12,
	EExchangeNetResult__RegisterCount_Max = 13,
	EExchangeNetResult__Cash_Not_Enough = 14,
	EExchangeNetResult__Gold_Not_Enough = 15,
	EExchangeNetResult__Expired    = 16,
	EExchangeNetResult__Item_Not_Mine = 17,
	EExchangeNetResult__Item_Not_Sold = 18,
	EExchangeNetResult__Cannot_Buy_MyItem = 19,
	EExchangeNetResult__Cannot_Reregiser_Not_Expired = 20,
	EExchangeNetResult__Cannot_Reregiser_SoldItem_Count = 21,
	EExchangeNetResult__SellingPrice_Big = 22,
	EExchangeNetResult__BindType_PlayerGet = 23,
	EExchangeNetResult__ItemSlot_Not_Enough = 24,
	EExchangeNetResult__Contents_Block = 25,
	EExchangeNetResult__Lack_Of_Level = 26,
	EExchangeNetResult__Quest_Not_Finish = 27,
	EExchangeNetResult__Guest_Account_Not_Available = 28,
	EExchangeNetResult__FavoritesCount_Max = 29,
	EExchangeNetResult__Already_Doing = 30,
	EExchangeNetResult__SellingItemCount_MaxOver = 31,
	EExchangeNetResult__MultiBuyItemCount_MaxOver = 32,
	EExchangeNetResult__Cannot_Use_Exechange_In_Slayer = 33,
	EExchangeNetResult__Level_Price_Limit = 34,
	EExchangeNetResult__Invalid_Favorites_Count = 35,
	EExchangeNetResult__Invalid_Favorites_Order = 36,
	EExchangeNetResult__Favorite_Already_Add = 37,
	EExchangeNetResult__Cannot_Buy_BlockPriceItem = 38,
	EExchangeNetResult__Cannot_Buy_CloseTime = 39,
	EExchangeNetResult__Cannot_Buy_Same_Account = 40,
	EExchangeNetResult__Cannot_Invasion_User = 41,
	EExchangeNetResult__Max        = 42
};


// Enum CommonSource.EGameEventNetResult
enum class FCommonSource_CommonSource_EGameEventNetResult : uint8_t
{
	EGameEventNetResult__Success   = 0,
	EGameEventNetResult__Server_Error = 1,
	EGameEventNetResult__Reserved_Error = 2,
	EGameEventNetResult__DB_Not_Found = 3,
	EGameEventNetResult__Table_Not_Found = 4,
	EGameEventNetResult__Cannot_Get_Reward = 5,
	EGameEventNetResult__Already_Get_Reward = 6,
	EGameEventNetResult__Item_Not_Found = 7,
	EGameEventNetResult__ItemCount_Not_Enough = 8,
	EGameEventNetResult__BuyCount_Limit = 9,
	EGameEventNetResult__PlayerLevel_Low = 10,
	EGameEventNetResult__User_Not_Found = 11,
	EGameEventNetResult__ItemSlot_Not_Enough = 12,
	EGameEventNetResult__Potion_Max_Count = 13,
	EGameEventNetResult__Contents_Block = 14,
	EGameEventNetResult__Not_Clear_DailyMission = 15,
	EGameEventNetResult__EventPoint_Not_Enough = 16,
	EGameEventNetResult__RefreshCount_Not_Enough = 17,
	EGameEventNetResult__Reward_Not_Complete = 18,
	EGameEventNetResult__Wrong_Range_Parameter = 19,
	EGameEventNetResult__ItemAdd_Fail = 20,
	EGameEventNetResult__Cash_Not_Enough = 21,
	EGameEventNetResult__Incorrect_Timing = 22,
	EGameEventNetResult__Not_Matched_Event = 23,
	EGameEventNetResult__Invalid_State = 24,
	EGameEventNetResult__Invalid_Select = 25,
	EGameEventNetResult__Exceed_Daily_LimitCount = 26,
	EGameEventNetResult__Not_Start_Event = 27,
	EGameEventNetResult__Already_Start_Event = 28,
	EGameEventNetResult__Invalid_Attempt_Count = 29,
	EGameEventNetResult__Already_Stab_Slot = 30,
	EGameEventNetResult__Invalid_Event_Target = 31,
	EGameEventNetResult__Please_Try_Again_Later = 32,
	EGameEventNetResult__Already_Complted_Target_GameEvent = 33,
	EGameEventNetResult__Expire_Event_Reward_Letter = 34,
	EGameEventNetResult__Max       = 35
};


// Enum CommonSource.EGameOptionNetResult
enum class FCommonSource_CommonSource_EGameOptionNetResult : uint8_t
{
	EGameOptionNetResult__Success  = 0,
	EGameOptionNetResult__Server_Error = 1,
	EGameOptionNetResult__Reserved_Error = 2,
	EGameOptionNetResult__DB_Not_Found = 3,
	EGameOptionNetResult__Max      = 4
};


// Enum CommonSource.EGuideNetResult
enum class FCommonSource_CommonSource_EGuideNetResult : uint8_t
{
	EGuideNetResult__Success       = 0,
	EGuideNetResult__Server_Error  = 1,
	EGuideNetResult__Reserved_Error = 2,
	EGuideNetResult__DB_Not_Found  = 3,
	EGuideNetResult__Table_Not_Found = 4,
	EGuideNetResult__Max           = 5
};


// Enum CommonSource.EGuildNetResult
enum class FCommonSource_CommonSource_EGuildNetResult : uint8_t
{
	EGuildNetResult__Success       = 0,
	EGuildNetResult__Server_Error  = 1,
	EGuildNetResult__Reserved_Error = 2,
	EGuildNetResult__DB_Not_Found  = 3,
	EGuildNetResult__Table_Not_Found = 4,
	EGuildNetResult__Private_Server = 5,
	EGuildNetResult__Guild_Name_Size_Too_Short = 6,
	EGuildNetResult__Guild_Name_Size_Too_Long = 7,
	EGuildNetResult__Guild_Name_Invalid = 8,
	EGuildNetResult__Guild_Name_Duplicate = 9,
	EGuildNetResult__User_Not_Found = 10,
	EGuildNetResult__Player_Not_Found = 11,
	EGuildNetResult__Check_Duplicated_GuildName = 12,
	EGuildNetResult__Already_Joined = 13,
	EGuildNetResult__Not_Join      = 14,
	EGuildNetResult__Gold_Not_Enough = 15,
	EGuildNetResult__Cash_Not_Enough = 16,
	EGuildNetResult__Failed_Creat_Guild = 17,
	EGuildNetResult__Not_Guild_Master = 18,
	EGuildNetResult__Guild_Not_Found = 19,
	EGuildNetResult__Guild_Member_Not_Found = 20,
	EGuildNetResult__PlayerLevel_Low = 21,
	EGuildNetResult__Guild_Member_Full = 22,
	EGuildNetResult__Already_Join_Apply = 23,
	EGuildNetResult__Join_Apply_Count_Exceed = 24,
	EGuildNetResult__Join_Apply_Waiting_Line_Full = 25,
	EGuildNetResult__Not_Same_Guild = 26,
	EGuildNetResult__Not_SubMaster = 27,
	EGuildNetResult__Guild_Job_Member_Full = 28,
	EGuildNetResult__Has_Not_Permission = 29,
	EGuildNetResult__Not_Auto_Joinable_Guild = 30,
	EGuildNetResult__Guild_Member_Not_Empty = 31,
	EGuildNetResult__Can_Not_Join_Because_Of_Withdraw = 32,
	EGuildNetResult__Donate_Count_Exceed = 33,
	EGuildNetResult__Tendency_Count_Exceed = 34,
	EGuildNetResult__Not_Select_Tendency = 35,
	EGuildNetResult__Guild_Member_Only_One = 36,
	EGuildNetResult__Expelled      = 37,
	EGuildNetResult__Same_GuildJob = 38,
	EGuildNetResult__GuildLevel_Low = 39,
	EGuildNetResult__Can_Not_Change_Raider_By_TimeLimit = 40,
	EGuildNetResult__Can_Not_WithdrawInBid = 41,
	EGuildNetResult__Has_BidFailCash = 42,
	EGuildNetResult__Table_Not_Found_GuildMark = 43,
	EGuildNetResult__GuildLevel_Not_Enough = 44,
	EGuildNetResult__Input_Limit_Exceed = 45,
	EGuildNetResult__Cannot_Disband_RaidDoing = 46,
	EGuildNetResult__Cannot_Withdraw_Expel_RaidDoing = 47,
	EGuildNetResult__GuildApplyInfo_Not_Found = 48,
	EGuildNetResult__Invalid_Parameter = 49,
	EGuildNetResult__Already_Created_Raider = 50,
	EGuildNetResult__Raider_IsNotCreated = 51,
	EGuildNetResult__IsNotInRaider = 52,
	EGuildNetResult__Not_Requested_Raider = 53,
	EGuildNetResult__Already_InRaider = 54,
	EGuildNetResult__Already_Requested_Raider = 55,
	EGuildNetResult__Can_Not_Withdraw_Raider_GuildMaster = 56,
	EGuildNetResult__Cannot_Delegated_LongTerm_Inactive_Player = 57,
	EGuildNetResult__Only_Can_Input_OpenChattingUrl = 58,
	EGuildNetResult__Contents_Block = 59,
	EGuildNetResult__Guild_Comment_Invalid = 60,
	EGuildNetResult__Guild_Notice_Invalid = 61,
	EGuildNetResult__Guild_RankingIntroduction_Invalid = 62,
	EGuildNetResult__WorldDungeonDoing_Cannot_Use = 63,
	EGuildNetResult__GuildStornghold_Cannot_Use = 64,
	EGuildNetResult__GuildStorngholdDoing_Cannot_Use = 65,
	EGuildNetResult__Can_Not_Do_This_CurrentMap = 66,
	EGuildNetResult__Cannot_Withdraw_Expel_DefenseDoing = 67,
	EGuildNetResult__CastlewarDoing_Cannot_Use = 68,
	EGuildNetResult__Cannot_Join_Guild_Mercenary_Reqeust = 69,
	EGuildNetResult__Cannot_Join_Guild_Mercenary_Accept = 70,
	EGuildNetResult__Cannot_Use_In_CurrentMap = 71,
	EGuildNetResult__Guild_Name_Currnet_Use = 72,
	EGuildNetResult__Guild_Name_CoolTime_Not_Yet = 73,
	EGuildNetResult__Cannot_Mercenary_Guild_Accept = 74,
	EGuildNetResult__RequestFast   = 75,
	EGuildNetResult__Not_Time_For_Server_Migration = 76,
	EGuildNetResult__Extracted_Once_During_Migration_Period = 77,
	EGuildNetResult__Not_Possible_Due_To_Low_Guild_Level = 78,
	EGuildNetResult__Cannot_Extract_After_Join_TimeLimit = 79,
	EGuildNetResult__Cannot_Insert_Contribution_Same_ServerID = 80,
	EGuildNetResult__Not_Find_Item_Contributeion_Item = 81,
	EGuildNetResult__Not_Insert_Contribution_Due_To_ExpireTime = 82,
	EGuildNetResult__Invalid_Contribution_Item = 83,
	EGuildNetResult__TaxDistribution_Reserved_Player = 84,
	EGuildNetResult__Cannot_use_GuildMark = 85,
	EGuildNetResult__Guild_Request_CoolTime = 86,
	EGuildNetResult__GuildLetter_Only_Recv_by_GuildLeaders = 87,
	EGuildNetResult__Cannot_Withdraw_GuildBattlefieldEnter = 88,
	EGuildNetResult__Cannot_Use_GuildBattlefieldDoing = 89,
	EGuildNetResult__Cannot_Donate_Lock = 90,
	EGuildNetResult__ServerInvasionDoing_Cannot_Use = 91,
	EGuildNetResult__Max           = 92
};


// Enum CommonSource.EFriendNetResult
enum class FCommonSource_CommonSource_EFriendNetResult : uint8_t
{
	EFriendNetResult__Success      = 0,
	EFriendNetResult__Server_Error = 1,
	EFriendNetResult__Reserved_Error = 2,
	EFriendNetResult__Table_Not_Found = 3,
	EFriendNetResult__Player_Not_Found = 4,
	EFriendNetResult__User_Not_Found = 5,
	EFriendNetResult__Not_Same_Map = 6,
	EFriendNetResult__Favorite_Full = 7,
	EFriendNetResult__SearchName_Too_Short = 8,
	EFriendNetResult__NotAssignGuild = 9,
	EFriendNetResult__AlreadyFriend = 10,
	EFriendNetResult__AlreadyApply = 11,
	EFriendNetResult__AlreadyCaution = 12,
	EFriendNetResult__NotApply     = 13,
	EFriendNetResult__FriendSlot_Not_Enough = 14,
	EFriendNetResult__Cannot_Be_Invited = 15,
	EFriendNetResult__Opponent_FriendSlot_Not_Enough = 16,
	EFriendNetResult__Cannot_Party_With_User_In_Dungeon = 17,
	EFriendNetResult__Cannot_Party_With_User_In_Field = 18,
	EFriendNetResult__Cannot_Friend_In_Map = 19,
	EFriendNetResult__Contents_Block = 20,
	EFriendNetResult__Cannot_Party_With_User_In_CastleWar = 21,
	EFriendNetResult__Cannot_Party_Different_AttackType_Castlewar = 22,
	EFriendNetResult__Max          = 23
};


// Enum CommonSource.EGuildAllianceNetResult
enum class FCommonSource_CommonSource_EGuildAllianceNetResult : uint8_t
{
	EGuildAllianceNetResult__Success = 0,
	EGuildAllianceNetResult__Server_Error = 1,
	EGuildAllianceNetResult__Reserved_Error = 2,
	EGuildAllianceNetResult__DB_Not_Found = 3,
	EGuildAllianceNetResult__Table_Not_Found = 4,
	EGuildAllianceNetResult__Guild_Not_Found = 5,
	EGuildAllianceNetResult__Not_Join = 6,
	EGuildAllianceNetResult__Has_Not_Permission = 7,
	EGuildAllianceNetResult__SearchName_Too_Short = 8,
	EGuildAllianceNetResult__AlreadyAlliance = 9,
	EGuildAllianceNetResult__AlreadyApply = 10,
	EGuildAllianceNetResult__AlreadyHostile = 11,
	EGuildAllianceNetResult__NotApply = 12,
	EGuildAllianceNetResult__AllianceMaxCount_Over = 13,
	EGuildAllianceNetResult__TargetAllianceMaxCount_Over = 14,
	EGuildAllianceNetResult__AllianceApplyGuild = 15,
	EGuildAllianceNetResult__HostileMaxCount_Over = 16,
	EGuildAllianceNetResult__CannotApplyMyself = 17,
	EGuildAllianceNetResult__Contents_Block = 18,
	EGuildAllianceNetResult__AllianceApplyMaxCount_Over = 19,
	EGuildAllianceNetResult__AllianceAppliedMaxCount_Over = 20,
	EGuildAllianceNetResult__AlreadyHostileRemoveApply = 21,
	EGuildAllianceNetResult__NotHostile = 22,
	EGuildAllianceNetResult__Private_Server = 23,
	EGuildAllianceNetResult__WorldWideType_Not_Found = 24,
	EGuildAllianceNetResult__GuildStorngholdDoing_Cannot_Use = 25,
	EGuildAllianceNetResult__CastleWarDoing_Cannot_Use = 26,
	EGuildAllianceNetResult__AllianceReApply_Waiting = 27,
	EGuildAllianceNetResult__CanNotAllianceOrHostileInChampions = 28,
	EGuildAllianceNetResult__Guild_Request_CoolTime = 29,
	EGuildAllianceNetResult__GuildRelationCoolTime = 30,
	EGuildAllianceNetResult__Not_Exist_Alliance_Permission_Member = 31,
	EGuildAllianceNetResult__Cannot_Invasion_User = 32,
	EGuildAllianceNetResult__Max   = 33
};


// Enum CommonSource.EGuildAllianceChattingNetResult
enum class FCommonSource_CommonSource_EGuildAllianceChattingNetResult : uint8_t
{
	EGuildAllianceChattingNetResult__Success = 0,
	EGuildAllianceChattingNetResult__Server_Error = 1,
	EGuildAllianceChattingNetResult__Reserved_Error = 2,
	EGuildAllianceChattingNetResult__DB_Not_Found = 3,
	EGuildAllianceChattingNetResult__Table_Not_Found = 4,
	EGuildAllianceChattingNetResult__Contents_Block = 5,
	EGuildAllianceChattingNetResult__Not_Join = 6,
	EGuildAllianceChattingNetResult__Accept_Channel_Member_Count_Over = 7,
	EGuildAllianceChattingNetResult__Already_Apply = 8,
	EGuildAllianceChattingNetResult__Already_Channel_Member = 9,
	EGuildAllianceChattingNetResult__Cannot_Apply_Myself = 10,
	EGuildAllianceChattingNetResult__Channel_Count_Max = 11,
	EGuildAllianceChattingNetResult__Channel_Member_Count_Max = 12,
	EGuildAllianceChattingNetResult__Channel_Name_Invalid = 13,
	EGuildAllianceChattingNetResult__Channel_Name_Invalid_Length = 14,
	EGuildAllianceChattingNetResult__Guild_Level_Not_Enough = 15,
	EGuildAllianceChattingNetResult__Guild_Not_Found = 16,
	EGuildAllianceChattingNetResult__Has_Not_Permission = 17,
	EGuildAllianceChattingNetResult__Not_Allowed_World_Type = 18,
	EGuildAllianceChattingNetResult__Not_Apply = 19,
	EGuildAllianceChattingNetResult__Not_Channel_Master = 20,
	EGuildAllianceChattingNetResult__Not_Channel_Member = 21,
	EGuildAllianceChattingNetResult__Not_Exist_Apply = 22,
	EGuildAllianceChattingNetResult__Not_Exist_Channel = 23,
	EGuildAllianceChattingNetResult__Previous_Work_Not_Complete = 24,
	EGuildAllianceChattingNetResult__Channel_Apply_Count_Max = 25,
	EGuildAllianceChattingNetResult__Max = 26
};


// Enum CommonSource.EGuildBattlefieldNetResult
enum class FCommonSource_CommonSource_EGuildBattlefieldNetResult : uint8_t
{
	EGuildBattlefieldNetResult__Success = 0,
	EGuildBattlefieldNetResult__Server_Error = 1,
	EGuildBattlefieldNetResult__Reserved_Error = 2,
	EGuildBattlefieldNetResult__DB_Not_Found = 3,
	EGuildBattlefieldNetResult__Table_Not_Found = 4,
	EGuildBattlefieldNetResult__Contents_Block = 5,
	EGuildBattlefieldNetResult__Not_Participation_State = 6,
	EGuildBattlefieldNetResult__Not_Exist_Guild = 7,
	EGuildBattlefieldNetResult__Not_Allow_ParticipationRegister = 8,
	EGuildBattlefieldNetResult__Not_Enough_GuildLevel = 9,
	EGuildBattlefieldNetResult__Not_Enough_JoinTime = 10,
	EGuildBattlefieldNetResult__Already_ParticipationRegister = 11,
	EGuildBattlefieldNetResult__Max_ParticipationRegister = 12,
	EGuildBattlefieldNetResult__Not_ParticipationRegister = 13,
	EGuildBattlefieldNetResult__Not_Equip_Air_Vehicle = 14,
	EGuildBattlefieldNetResult__Cannot_Map_Move = 15,
	EGuildBattlefieldNetResult__Cannot_Vehicle_WayPoint = 16,
	EGuildBattlefieldNetResult__Gold_Not_Enough = 17,
	EGuildBattlefieldNetResult__Cannot_Warp_InPK = 18,
	EGuildBattlefieldNetResult__Teleport_Cool_Time = 19,
	EGuildBattlefieldNetResult__Max = 20
};


// Enum CommonSource.EGuildDefenseNetResult
enum class FCommonSource_CommonSource_EGuildDefenseNetResult : uint8_t
{
	EGuildDefenseNetResult__Success = 0,
	EGuildDefenseNetResult__Server_Error = 1,
	EGuildDefenseNetResult__Reserved_Error = 2,
	EGuildDefenseNetResult__DB_Not_Found = 3,
	EGuildDefenseNetResult__Table_Not_Found = 4,
	EGuildDefenseNetResult__Instance_Dungeon_Not = 5,
	EGuildDefenseNetResult__EntranceCount_Not_Enough = 6,
	EGuildDefenseNetResult__DoingDefense_Not_Exist = 7,
	EGuildDefenseNetResult__EnterMap_Not_Exist = 8,
	EGuildDefenseNetResult__Not_PortalMove_On_War_Mode = 9,
	EGuildDefenseNetResult__Player_Dead = 10,
	EGuildDefenseNetResult__Has_Not_Permission = 11,
	EGuildDefenseNetResult__Already_Doing = 12,
	EGuildDefenseNetResult__Invalid_MapType = 13,
	EGuildDefenseNetResult__OpenCount_Not_Enough = 14,
	EGuildDefenseNetResult__Difficulty_Not_Enough = 15,
	EGuildDefenseNetResult__Not_Joined_Guild = 16,
	EGuildDefenseNetResult__BattleEnd_Not_Enter = 17,
	EGuildDefenseNetResult__Contents_Block = 18,
	EGuildDefenseNetResult__GuildLevel_Not_Enough = 19,
	EGuildDefenseNetResult__Cannot_Enter_InPK = 20,
	EGuildDefenseNetResult__Cannot_Enter_GuildDefense_For_Certain_Period = 21,
	EGuildDefenseNetResult__DungeonPlayTime_Over = 22,
	EGuildDefenseNetResult__Already_MoveReady = 23,
	EGuildDefenseNetResult__Cannot_Enter_GuildDefense_In_Slayer = 24,
	EGuildDefenseNetResult__Cannot_Find_Prev_GuildDefense = 25,
	EGuildDefenseNetResult__GuardianCoin_Not_Enough = 26,
	EGuildDefenseNetResult__Cannot_Buy_Bless_Anymore = 27,
	EGuildDefenseNetResult__Already_Summoned_Vehicle_This_Place = 28,
	EGuildDefenseNetResult__Invalid_Number = 29,
	EGuildDefenseNetResult__CurrentWave_FinalWave = 30,
	EGuildDefenseNetResult__Cannot_Start_NextWave = 31,
	EGuildDefenseNetResult__Already_Occupy_EnterMap_Player = 32,
	EGuildDefenseNetResult__Invalid_Difficulty = 33,
	EGuildDefenseNetResult__Enter_GuildDefense_Member = 34,
	EGuildDefenseNetResult__Doing_Difficulty = 35,
	EGuildDefenseNetResult__Skip_Difficulty = 36,
	EGuildDefenseNetResult__Max    = 37
};


// Enum CommonSource.EGuildItemMakeNetResult
enum class FCommonSource_CommonSource_EGuildItemMakeNetResult : uint8_t
{
	EGuildItemMakeNetResult__Success = 0,
	EGuildItemMakeNetResult__Server_Error = 1,
	EGuildItemMakeNetResult__Reserved_Error = 2,
	EGuildItemMakeNetResult__DB_Not_Found = 3,
	EGuildItemMakeNetResult__Table_Not_Found = 4,
	EGuildItemMakeNetResult__Contents_Block = 5,
	EGuildItemMakeNetResult__Not_Join_Guild = 6,
	EGuildItemMakeNetResult__GuildJob_Not_Enough = 7,
	EGuildItemMakeNetResult__Invalid_Slot = 8,
	EGuildItemMakeNetResult__Invalid_GuildItemMakeIndex = 9,
	EGuildItemMakeNetResult__Invalid_State = 10,
	EGuildItemMakeNetResult__Invalid_Item = 11,
	EGuildItemMakeNetResult__ItemCount_Not_Enough = 12,
	EGuildItemMakeNetResult__ItemCount_Over = 13,
	EGuildItemMakeNetResult__Invalid_MaterialSlot = 14,
	EGuildItemMakeNetResult__Already_Exist_Favorit = 15,
	EGuildItemMakeNetResult__Not_Exist_Favorit = 16,
	EGuildItemMakeNetResult__DailyCount_Over = 17,
	EGuildItemMakeNetResult__WeeklyCount_Over = 18,
	EGuildItemMakeNetResult__GuildLevel_Not_Enough = 19,
	EGuildItemMakeNetResult__Cash_Not_Enough = 20,
	EGuildItemMakeNetResult__Not_GuildMember = 21,
	EGuildItemMakeNetResult__Invalid_RewardCount = 22,
	EGuildItemMakeNetResult__Not_CastleWarAttack = 23,
	EGuildItemMakeNetResult__Not_CastleWarDefense = 24,
	EGuildItemMakeNetResult__CastleWarContinueDefenseWinCount_Not_Enough = 25,
	EGuildItemMakeNetResult__CastleWarSeasonCount_Over = 26,
	EGuildItemMakeNetResult__Max   = 27
};


// Enum CommonSource.EGuildAuctionNetResult
enum class FCommonSource_CommonSource_EGuildAuctionNetResult : uint8_t
{
	EGuildAuctionNetResult__Success = 0,
	EGuildAuctionNetResult__Server_Error = 1,
	EGuildAuctionNetResult__Reserved_Error = 2,
	EGuildAuctionNetResult__DB_Not_Found = 3,
	EGuildAuctionNetResult__Table_Not_Found = 4,
	EGuildAuctionNetResult__Guild_Not_Found = 5,
	EGuildAuctionNetResult__Guild_Member_Not_Found = 6,
	EGuildAuctionNetResult__Cash_Not_Enough = 7,
	EGuildAuctionNetResult__Not_Auction_Object = 8,
	EGuildAuctionNetResult__Low_BidPrice = 9,
	EGuildAuctionNetResult__Low_MinBidPrice = 10,
	EGuildAuctionNetResult__High_MaxBidPrice = 11,
	EGuildAuctionNetResult__Already_Auction_Bid = 12,
	EGuildAuctionNetResult__BidTimeOut = 13,
	EGuildAuctionNetResult__Has_Not_Permission = 14,
	EGuildAuctionNetResult__StartTimeOut = 15,
	EGuildAuctionNetResult__Waiting_Object = 16,
	EGuildAuctionNetResult__Sold_Object = 17,
	EGuildAuctionNetResult__Expired_Object = 18,
	EGuildAuctionNetResult__Cannot_Find_BidFailCash = 19,
	EGuildAuctionNetResult__Cannot_Start_Auction = 20,
	EGuildAuctionNetResult__Cannot_Bid_Auction_By_TimeLimit = 21,
	EGuildAuctionNetResult__Contents_Block = 22,
	EGuildAuctionNetResult__Already_Appointed_Player = 23,
	EGuildAuctionNetResult__Already_OnSale = 24,
	EGuildAuctionNetResult__Not_Appointed_Player = 25,
	EGuildAuctionNetResult__Lower_Appointed_Price = 26,
	EGuildAuctionNetResult__Cannot_Appoint_Player = 27,
	EGuildAuctionNetResult__Cannot_Return_Failed_Item = 28,
	EGuildAuctionNetResult__Item_Retrieval_Time_Passed = 29,
	EGuildAuctionNetResult__ItemSlot_Not_Enough = 30,
	EGuildAuctionNetResult__Max    = 31
};


// Enum CommonSource.EGuildRaidNetResult
enum class FCommonSource_CommonSource_EGuildRaidNetResult : uint8_t
{
	EGuildRaidNetResult__Success   = 0,
	EGuildRaidNetResult__Server_Error = 1,
	EGuildRaidNetResult__Reserved_Error = 2,
	EGuildRaidNetResult__DB_Not_Found = 3,
	EGuildRaidNetResult__Table_Not_Found = 4,
	EGuildRaidNetResult__Instance_Dungeon_Not = 5,
	EGuildRaidNetResult__EntranceCount_Not_Enough = 6,
	EGuildRaidNetResult__DoingRaid_Not_Exist = 7,
	EGuildRaidNetResult__EnterMap_Not_Exist = 8,
	EGuildRaidNetResult__Not_PortalMove_On_War_Mode = 9,
	EGuildRaidNetResult__Player_Dead = 10,
	EGuildRaidNetResult__Has_Not_CreatePermission = 11,
	EGuildRaidNetResult__Already_Doing = 12,
	EGuildRaidNetResult__Invalid_MapType = 13,
	EGuildRaidNetResult__OpenCount_Not_Enough = 14,
	EGuildRaidNetResult__Difficulty_Not_Enough = 15,
	EGuildRaidNetResult__Not_Joined_Guild = 16,
	EGuildRaidNetResult__BattleEnd_Not_Enter = 17,
	EGuildRaidNetResult__Contents_Block = 18,
	EGuildRaidNetResult__GuildLevel_Not_Enough = 19,
	EGuildRaidNetResult__Cannot_Enter_InPK = 20,
	EGuildRaidNetResult__Cannot_Enter_GuildRaid_For_Certain_Period = 21,
	EGuildRaidNetResult__DungeonPlayTime_Over = 22,
	EGuildRaidNetResult__Already_MoveReady = 23,
	EGuildRaidNetResult__Cannot_Enter_GuildRaid_In_Slayer = 24,
	EGuildRaidNetResult__Cannot_Move_In_DungeonReady = 25,
	EGuildRaidNetResult__Cannot_Find_Prev_GuildRaid = 26,
	EGuildRaidNetResult__Invalid_Difficulty = 27,
	EGuildRaidNetResult__Enter_GuildRaid_Member = 28,
	EGuildRaidNetResult__Doing_Difficulty = 29,
	EGuildRaidNetResult__Skip_Difficulty = 30,
	EGuildRaidNetResult__Already_Occupy_EnterMap_Player = 31,
	EGuildRaidNetResult__Vote_Not_Found = 32,
	EGuildRaidNetResult__Vote_ChangeCount_Not_Enough = 33,
	EGuildRaidNetResult__Has_Not_Permission = 34,
	EGuildRaidNetResult__Max       = 35
};


// Enum CommonSource.EGuildStrongholdNetResult
enum class FCommonSource_CommonSource_EGuildStrongholdNetResult : uint8_t
{
	EGuildStrongholdNetResult__Success = 0,
	EGuildStrongholdNetResult__Server_Error = 1,
	EGuildStrongholdNetResult__Reserved_Error = 2,
	EGuildStrongholdNetResult__DB_Not_Found = 3,
	EGuildStrongholdNetResult__Table_Not_Found = 4,
	EGuildStrongholdNetResult__Contents_Block = 5,
	EGuildStrongholdNetResult__Not_Join = 6,
	EGuildStrongholdNetResult__Not_Occupy = 7,
	EGuildStrongholdNetResult__Already_Occupy = 8,
	EGuildStrongholdNetResult__Already_Battle = 9,
	EGuildStrongholdNetResult__GuildStronghold_Not_Found = 10,
	EGuildStrongholdNetResult__Guild_Not_Found = 11,
	EGuildStrongholdNetResult__GuildJob_Not_Enough = 12,
	EGuildStrongholdNetResult__ProclaimCount_Not_Enough = 13,
	EGuildStrongholdNetResult__Point_Not_Enough = 14,
	EGuildStrongholdNetResult__Invalid_Alliance = 15,
	EGuildStrongholdNetResult__Invalid_ProclaimTime = 16,
	EGuildStrongholdNetResult__GuildLevel_Not_Enough = 17,
	EGuildStrongholdNetResult__Protecting = 18,
	EGuildStrongholdNetResult__Invalid_SeasonMode = 19,
	EGuildStrongholdNetResult__Invalid_DestructionMode = 20,
	EGuildStrongholdNetResult__Maximum_Proclaim_Guild = 21,
	EGuildStrongholdNetResult__Season_End = 22,
	EGuildStrongholdNetResult__Invalid_Alliance_FreeForAll = 23,
	EGuildStrongholdNetResult__Battle_Not_Progress = 24,
	EGuildStrongholdNetResult__Max = 25
};


// Enum CommonSource.EImprintNetResult
enum class FCommonSource_CommonSource_EImprintNetResult : uint8_t
{
	EImprintNetResult__Success     = 0,
	EImprintNetResult__Server_Error = 1,
	EImprintNetResult__Reserved_Error = 2,
	EImprintNetResult__DB_Not_Found = 3,
	EImprintNetResult__Table_Not_Found = 4,
	EImprintNetResult__Item_Not_Found = 5,
	EImprintNetResult__MeterialCount_Not_Enough = 6,
	EImprintNetResult__Not_Material_Item = 7,
	EImprintNetResult__Contents_Block = 8,
	EImprintNetResult__Imprint_Lock = 9,
	EImprintNetResult__Lock_Unable = 10,
	EImprintNetResult__RequestFast = 11,
	EImprintNetResult__SlotGroup_Lock = 12,
	EImprintNetResult__Max         = 13
};


// Enum CommonSource.EInfinityDungeonNetResult
enum class FCommonSource_CommonSource_EInfinityDungeonNetResult : uint8_t
{
	EInfinityDungeonNetResult__Success = 0,
	EInfinityDungeonNetResult__Server_Error = 1,
	EInfinityDungeonNetResult__DB_Error = 2,
	EInfinityDungeonNetResult__PartyNotFound = 3,
	EInfinityDungeonNetResult__PartyNotMaster = 4,
	EInfinityDungeonNetResult__PartyNotReady = 5,
	EInfinityDungeonNetResult__PartyNotRetry = 6,
	EInfinityDungeonNetResult__PartyNotCount = 7,
	EInfinityDungeonNetResult__Reserved_Error = 8,
	EInfinityDungeonNetResult__Table_Not_Found = 9,
	EInfinityDungeonNetResult__Contents_Block = 10,
	EInfinityDungeonNetResult__NeedQuest = 11,
	EInfinityDungeonNetResult__Party_Not_Found = 12,
	EInfinityDungeonNetResult__CanNot_AreaPass = 13,
	EInfinityDungeonNetResult__CanNot_In_Map = 14,
	EInfinityDungeonNetResult__CanNot_In_Dungeon = 15,
	EInfinityDungeonNetResult__CanNot_Doing = 16,
	EInfinityDungeonNetResult__CanNot_Reset = 17,
	EInfinityDungeonNetResult__Buff_Not_Found = 18,
	EInfinityDungeonNetResult__NotEnough_Reset = 19,
	EInfinityDungeonNetResult__NotEnough_Item = 20,
	EInfinityDungeonNetResult__NotEnough_Cash = 21,
	EInfinityDungeonNetResult__NotEnough_Gold = 22,
	EInfinityDungeonNetResult__CanNot_BuffChange = 23,
	EInfinityDungeonNetResult__CanNot_BuffConfirm = 24,
	EInfinityDungeonNetResult__NotEnough_BuffChange = 25,
	EInfinityDungeonNetResult__CanNot_Enter = 26,
	EInfinityDungeonNetResult__CanNot_Enter_Slayer = 27,
	EInfinityDungeonNetResult__CanNot_Enter_Brutal = 28,
	EInfinityDungeonNetResult__CanNot_Enter_Floor = 29,
	EInfinityDungeonNetResult__CanNot_Enter_LowFloor = 30,
	EInfinityDungeonNetResult__CanNot_Enter_HighFloor = 31,
	EInfinityDungeonNetResult__Uninvitable_Map = 32,
	EInfinityDungeonNetResult__CanNot_Enter_AreaPass = 33,
	EInfinityDungeonNetResult__CanNot_Enter_SeasonReward = 34,
	EInfinityDungeonNetResult__CanNot_Enter_InvalidResetTime = 35,
	EInfinityDungeonNetResult__CanNot_Enter_InvalidFloor = 36,
	EInfinityDungeonNetResult__CanNot_Enter_DoingPlayer = 37,
	EInfinityDungeonNetResult__CanNot_Enter_HideMap = 38,
	EInfinityDungeonNetResult__Max = 39
};


// Enum CommonSource.EIntegratedPresetNetResult
enum class FCommonSource_CommonSource_EIntegratedPresetNetResult : uint8_t
{
	EIntegratedPresetNetResult__Success = 0,
	EIntegratedPresetNetResult__Server_Error = 1,
	EIntegratedPresetNetResult__Reserved_Error = 2,
	EIntegratedPresetNetResult__DB_Not_Found = 3,
	EIntegratedPresetNetResult__Table_Not_Found = 4,
	EIntegratedPresetNetResult__Request_Fast = 5,
	EIntegratedPresetNetResult__Invalid_Data = 6,
	EIntegratedPresetNetResult__Invalid_Preset = 7,
	EIntegratedPresetNetResult__Not_Found_Preset = 8,
	EIntegratedPresetNetResult__Not_Equip_On_War_Mode = 9,
	EIntegratedPresetNetResult__Invalid_ClassType = 10,
	EIntegratedPresetNetResult__Max = 11
};


// Enum CommonSource.EInteractNetResult
enum class FCommonSource_CommonSource_EInteractNetResult : uint8_t
{
	EInteractNetResult__Success    = 0,
	EInteractNetResult__Server_Error = 1,
	EInteractNetResult__Reserved_Error = 2,
	EInteractNetResult__Table_Not_Found = 3,
	EInteractNetResult__Targeting_Not_Found = 4,
	EInteractNetResult__Not_War_Mode = 5,
	EInteractNetResult__Not_Quest_Doing = 6,
	EInteractNetResult__Not_Quest_Finish = 7,
	EInteractNetResult__Already_Quest = 8,
	EInteractNetResult__Reward_Resource_Fail = 9,
	EInteractNetResult__Reward_Portal_Fail = 10,
	EInteractNetResult__Reward_Quest_Fail = 11,
	EInteractNetResult__Player_Not_Found = 12,
	EInteractNetResult__Invalid_InteractState = 13,
	EInteractNetResult__User_Limit = 14,
	EInteractNetResult__Player_Limit = 15,
	EInteractNetResult__Target_Is_Too_Far = 16,
	EInteractNetResult__Cannot_Interact_Pet = 17,
	EInteractNetResult__Not_Equip_Pet = 18,
	EInteractNetResult__Cannot_Doing_State = 19,
	EInteractNetResult__Doing_Interact = 20,
	EInteractNetResult__Not_Finish_CoolTime = 21,
	EInteractNetResult__Invalid_Spawn_Pos = 22,
	EInteractNetResult__Spawn_MaxCountOver = 23,
	EInteractNetResult__ItemSlot_Not_Enough = 24,
	EInteractNetResult__Portal_Not_Found = 25,
	EInteractNetResult__Invalid_PortalState = 26,
	EInteractNetResult__Not_GuildStronghold = 27,
	EInteractNetResult__Cannot_Move_In_Slayer = 28,
	EInteractNetResult__Not_Castlewar_Attack = 29,
	EInteractNetResult__Not_Castlewar_Defense = 30,
	EInteractNetResult__Not_GuildMaster = 31,
	EInteractNetResult__Cannot_Guild_Alliance = 32,
	EInteractNetResult__Cannot_Mercenary = 33,
	EInteractNetResult__Cannot_RegisterHaveFlag = 34,
	EInteractNetResult__Not_Have_NeedBuff = 35,
	EInteractNetResult__Not_Have_Box = 36,
	EInteractNetResult__Not_Found_Map = 37,
	EInteractNetResult__Enough_Box_Count = 38,
	EInteractNetResult__Cannot_Use_GuildDefense_Permission = 39,
	EInteractNetResult__Doing_Ohter_Player = 40,
	EInteractNetResult__Not_Trained_Main_Pet_Skill = 41,
	EInteractNetResult__CanNot_Enter_ServerInvasion_Server = 42,
	EInteractNetResult__Max        = 43
};


// Enum CommonSource.EItemNetResult
enum class FCommonSource_CommonSource_EItemNetResult : uint8_t
{
	EItemNetResult__Success        = 0,
	EItemNetResult__Server_Error   = 1,
	EItemNetResult__Reserved_Error = 2,
	EItemNetResult__DB_Not_Found   = 3,
	EItemNetResult__Table_Not_Found = 4,
	EItemNetResult__Item_Not_Found = 5,
	EItemNetResult__ItemCount_Not_Enough = 6,
	EItemNetResult__ItemSlot_Not_Enough = 7,
	EItemNetResult__EquipItem_Not_Delete = 8,
	EItemNetResult__Invalid_Storage = 9,
	EItemNetResult__EquipItem_Not_Move = 10,
	EItemNetResult__EquipItem_Not_Sale = 11,
	EItemNetResult__SlotExpand_MaxOver = 12,
	EItemNetResult__Cash_Not_Enough = 13,
	EItemNetResult__BindType_PlayerGet = 14,
	EItemNetResult__EnchantStep_Max = 15,
	EItemNetResult__EnchantStep_Min = 16,
	EItemNetResult__Gold_Not_Enough = 17,
	EItemNetResult__MimirWisdom_Not_Enough = 18,
	EItemNetResult__ReqLevel_Not_Enough = 19,
	EItemNetResult__ReqClass_Invalid = 20,
	EItemNetResult__User_Not_Found = 21,
	EItemNetResult__Unusable_Item  = 22,
	EItemNetResult__Cannot_Use_Item = 23,
	EItemNetResult__Cannot_Use_Item_OnDead = 24,
	EItemNetResult__Cannot_Use_Item_OnBuff = 25,
	EItemNetResult__CoolTime_Waiting = 26,
	EItemNetResult__Player_Not_Found = 27,
	EItemNetResult__Item_Lock      = 28,
	EItemNetResult__Material_Item_Not_Enough = 29,
	EItemNetResult__SelectPreset_Invalid = 30,
	EItemNetResult__Cannot_Change_Preset_OnDead = 31,
	EItemNetResult__EquipMemo_Invalid_Length = 32,
	EItemNetResult__EnchantBless_Item_Not_Enough = 33,
	EItemNetResult__ItemCount_Invalid = 34,
	EItemNetResult__ItemCategory_Invalid = 35,
	EItemNetResult__OptionSlot_Invalid = 36,
	EItemNetResult__OptionValue_Invalid = 37,
	EItemNetResult__OptionOverlap_Invalid = 38,
	EItemNetResult__Same_Item      = 39,
	EItemNetResult__Not_Available_Sale_Item = 40,
	EItemNetResult__Cannot_Dismantle_Item = 41,
	EItemNetResult__Already_LearnedSkill = 42,
	EItemNetResult__Class_Unlearnable_Skill = 43,
	EItemNetResult__Level_Not_Enough_SkillBook = 44,
	EItemNetResult__Need_Learn_PrevSkill = 45,
	EItemNetResult__BattleTime_MaxOver = 46,
	EItemNetResult__MimirWisdom_Max = 47,
	EItemNetResult__ChargeCount_Max = 48,
	EItemNetResult__Map_Not_Exist  = 49,
	EItemNetResult__Invalid_Spawn_Pos = 50,
	EItemNetResult__Fail_Summon    = 51,
	EItemNetResult__ItemGrade_Not_Enough = 52,
	EItemNetResult__Material_Item_Not = 53,
	EItemNetResult__Already_MakeFavorite_Exist = 54,
	EItemNetResult__MakeFavoriteCount_Max = 55,
	EItemNetResult__MakeCount_MaxOver = 56,
	EItemNetResult__Portal_Not_InArea = 57,
	EItemNetResult__Brutal_State   = 58,
	EItemNetResult__Not_PortalMove_On_War_Mode = 59,
	EItemNetResult__Quest_Not_Doing = 60,
	EItemNetResult__Quest_Not_Finish = 61,
	EItemNetResult__Cannot_Item_Get_Notice = 62,
	EItemNetResult__Level_Not_Enough = 63,
	EItemNetResult__Not_RandomTeleportMap = 64,
	EItemNetResult__Not_EquipAirVehicle = 65,
	EItemNetResult__Cannot_Move_RandomTeleport = 66,
	EItemNetResult__Not_ChangeTicket_Type = 67,
	EItemNetResult__Not_Customizing_Type = 68,
	EItemNetResult__Not_PlayerName_Type = 69,
	EItemNetResult__Cannot_Remove_ItemType = 70,
	EItemNetResult__Potion_Max_Count = 71,
	EItemNetResult__Cannot_Doing_State = 72,
	EItemNetResult__Contents_Block = 73,
	EItemNetResult__Item_Not_Abandon = 74,
	EItemNetResult__Invalid_Grade  = 75,
	EItemNetResult__Invalid_Value  = 76,
	EItemNetResult__RepeatQuest_MaxCountOver = 77,
	EItemNetResult__PlayerSlot_ExtendMaxCountOver = 78,
	EItemNetResult__Cannot_Use_RandomTeleport = 79,
	EItemNetResult__CannotUse_RandomTeleport_In_Slayer = 80,
	EItemNetResult__Invalid_TargetEnchantStep = 81,
	EItemNetResult__Different_MaterialItemIndex = 82,
	EItemNetResult__Cannot_Found_EnchantItem = 83,
	EItemNetResult__Unable_Enchant_Item = 84,
	EItemNetResult__Cannot_EnchantGrade_Item = 85,
	EItemNetResult__Cannot_Use_Material = 86,
	EItemNetResult__EquipMemo_Invalid = 87,
	EItemNetResult__AvatarExp_Max  = 88,
	EItemNetResult__PlayerName_Invalid_Length = 89,
	EItemNetResult__PlayerName_Invalid = 90,
	EItemNetResult__CurrentName    = 91,
	EItemNetResult__DuplicateName  = 92,
	EItemNetResult__Not_Join_Guild = 93,
	EItemNetResult__Has_Not_Permission = 94,
	EItemNetResult__GuildName_Invalid_Length = 95,
	EItemNetResult__GuildName_Invalid = 96,
	EItemNetResult__Duplicate_FixedVehicle = 97,
	EItemNetResult__Cannot_Move_In_DungeonReady = 98,
	EItemNetResult__Cannot_OdinEnchant_Item = 99,
	EItemNetResult__Cannot_Use_In_CurrentMap = 100,
	EItemNetResult__Not_Clear_ChapterMission = 101,
	EItemNetResult__Treasurebox_Max = 102,
	EItemNetResult__Cannot_lock_TimeLimit_Item = 103,
	EItemNetResult__Already_ItemCollectionHide_Exist = 104,
	EItemNetResult__Duplicate_FixedAvatar = 105,
	EItemNetResult__No_Event_ItemMake = 106,
	EItemNetResult__No_ItemMake_Event = 107,
	EItemNetResult__No_ItemMakeIndex_Event = 108,
	EItemNetResult__Over_Count_ItemMakeLimit = 109,
	EItemNetResult__Only_Availabe_To_Castlewar_Attack = 110,
	EItemNetResult__Only_Availabe_To_Castlewar_Defense = 111,
	EItemNetResult__Cannot_Use_Class_Invalid = 112,
	EItemNetResult__Cannot_Use_In_CurrentAreaType = 113,
	EItemNetResult__CastlewarGuildVehicleCount_Not_Enough = 114,
	EItemNetResult__GuildName_CoolTime_Not_Yet = 115,
	EItemNetResult__Cannot_Training_Item_Type = 116,
	EItemNetResult__Cannot_Training_Item_Grade = 117,
	EItemNetResult__Cannot_Use_Material_Type = 118,
	EItemNetResult__Cannot_Use_Doning_Channeling_Skill = 119,
	EItemNetResult__RequestFast    = 120,
	EItemNetResult__Cannot_Repeat_Extend_Count = 121,
	EItemNetResult__Cannot_Lock_Item = 122,
	EItemNetResult__ThorEnchantCount_Max = 123,
	EItemNetResult__ThorEnchantStep_Max = 124,
	EItemNetResult__Cannot_Use_During_DungeonFreeTime = 125,
	EItemNetResult__Cannot_Use_During_ChargeTime = 126,
	EItemNetResult__Cannot_Use_BonusCash_Coupon = 127,
	EItemNetResult__Cannot_Use_Schedule_EliteDungeon = 128,
	EItemNetResult__Need_Quest_Finish_No_ItemUse = 129,
	EItemNetResult__Not_EnchantChange_Type = 130,
	EItemNetResult__Not_EnchantChange_Count = 131,
	EItemNetResult__Not_Exclusion_Class_Type = 132,
	EItemNetResult__Max            = 133
};


// Enum CommonSource.ELetterNetResult
enum class FCommonSource_CommonSource_ELetterNetResult : uint8_t
{
	ELetterNetResult__Success      = 0,
	ELetterNetResult__Server_Error = 1,
	ELetterNetResult__Reserved_Error = 2,
	ELetterNetResult__DB_Not_Found = 3,
	ELetterNetResult__Table_Not_Found = 4,
	ELetterNetResult__Expired      = 5,
	ELetterNetResult__ItemSlot_Not_Enough = 6,
	ELetterNetResult__User_Not_Found = 7,
	ELetterNetResult__Duplicate_Request = 8,
	ELetterNetResult__Kakao_Unauthenticated = 9,
	ELetterNetResult__Guild_Not_Found = 10,
	ELetterNetResult__Cannot_More_Send_Letter = 11,
	ELetterNetResult__Gold_Not_Enough = 12,
	ELetterNetResult__Max_Title_Size_Exceed = 13,
	ELetterNetResult__Max_Contents_Size_Exceed = 14,
	ELetterNetResult__Already_Ban_Player = 15,
	ELetterNetResult__Already_Lock_Message = 16,
	ELetterNetResult__Already_UnLock_Message = 17,
	ELetterNetResult__Ban_Player   = 18,
	ELetterNetResult__Contents_Block = 19,
	ELetterNetResult__Already_Reported = 20,
	ELetterNetResult__Max_Lock_Letter_Exceed = 21,
	ELetterNetResult__Already_Received = 22,
	ELetterNetResult__MimirWell_Max = 23,
	ELetterNetResult__Invalid_Title = 24,
	ELetterNetResult__Invalid_Contents = 25,
	ELetterNetResult__Invalid_PlayerName = 26,
	ELetterNetResult__Invalid_GuildName = 27,
	ELetterNetResult__Cannot_Find_Letter = 28,
	ELetterNetResult__Cannot_Delete_NotReceived = 29,
	ELetterNetResult__Max          = 30
};


// Enum CommonSource.ELinkNetResult
enum class FCommonSource_CommonSource_ELinkNetResult : uint8_t
{
	ELinkNetResult__Success        = 0,
	ELinkNetResult__Server_Error   = 1,
	ELinkNetResult__Reserved_Error = 2,
	ELinkNetResult__DB_Not_Found   = 3,
	ELinkNetResult__Table_Not_Found = 4,
	ELinkNetResult__Item_Not_Found = 5,
	ELinkNetResult__MeterialCount_Not_Enough = 6,
	ELinkNetResult__Not_Material_Item = 7,
	ELinkNetResult__Contents_Block = 8,
	ELinkNetResult__Link_Lock      = 9,
	ELinkNetResult__RequestFast    = 10,
	ELinkNetResult__SummonCount_Not_Enough = 11,
	ELinkNetResult__PrevSlot_Not_Open = 12,
	ELinkNetResult__Invalid_Param_Request = 13,
	ELinkNetResult__SummonChargeCount_Not_Enough = 14,
	ELinkNetResult__Board_Lock     = 15,
	ELinkNetResult__Max            = 16
};


// Enum CommonSource.ELobbyNetResult
enum class FCommonSource_CommonSource_ELobbyNetResult : uint8_t
{
	ELobbyNetResult__Success       = 0,
	ELobbyNetResult__Server_Error  = 1,
	ELobbyNetResult__Reserved_Error = 2,
	ELobbyNetResult__DB_Not_Found  = 3,
	ELobbyNetResult__Table_Not_Found = 4,
	ELobbyNetResult__Not_Lobby     = 5,
	ELobbyNetResult__MaxCountOver  = 6,
	ELobbyNetResult__DuplicateName = 7,
	ELobbyNetResult__CustomizeValue_Invalid = 8,
	ELobbyNetResult__PlayerName_Invalid_Length = 9,
	ELobbyNetResult__PlayerName_Include_Space = 10,
	ELobbyNetResult__PlayerName_Include_SpecialSymbols = 11,
	ELobbyNetResult__PlayerName_Invalid = 12,
	ELobbyNetResult__PlayerCreate_Fail = 13,
	ELobbyNetResult__MapIndex_Invalid = 14,
	ELobbyNetResult__PlayerIndex_Invalid = 15,
	ELobbyNetResult__PlayerDBKey_Invalid = 16,
	ELobbyNetResult__Impossible_Delete_Level = 17,
	ELobbyNetResult__Cannot_Delete_Joined_Guild = 18,
	ELobbyNetResult__Cannot_Delete_Left_Letter = 19,
	ELobbyNetResult__Waiting_Delete = 20,
	ELobbyNetResult__Not_Waiting_Delete = 21,
	ELobbyNetResult__Cannot_Refund_User = 22,
	ELobbyNetResult__Cannot_OfflineHunting_User = 23,
	ELobbyNetResult__Already_Login_Doing_Playing = 24,
	ELobbyNetResult__Cannot_Do_In_Current_State = 25,
	ELobbyNetResult__Server_State_Full = 26,
	ELobbyNetResult__Cannot_Enter_Map_In_Slayer = 27,
	ELobbyNetResult__Cannot_Create_Character_In_Slayer = 28,
	ELobbyNetResult__Cannot_Delete_Left_CashshopBox = 29,
	ELobbyNetResult__Contents_Block = 30,
	ELobbyNetResult__CanNot_Find_Party = 31,
	ELobbyNetResult__Cannot_Delete_Slayer = 32,
	ELobbyNetResult__Cannot_Delete_Applied_Guild_Join = 33,
	ELobbyNetResult__Max           = 34
};


// Enum CommonSource.ELoginNetResult
enum class FCommonSource_CommonSource_ELoginNetResult : uint8_t
{
	ELoginNetResult__Success       = 0,
	ELoginNetResult__Server_Error  = 1,
	ELoginNetResult__Reserved_Error = 2,
	ELoginNetResult__Invalid_Sequence = 3,
	ELoginNetResult__DBError       = 4,
	ELoginNetResult__GameServer_Full = 5,
	ELoginNetResult__Already_Login_Doing = 6,
	ELoginNetResult__Already_Login_Doing_Playing = 7,
	ELoginNetResult__Already_Login_Doing_TransactionTime = 8,
	ELoginNetResult__Invalid_GameAuthSerial = 9,
	ELoginNetResult__AccountID_Empty = 10,
	ELoginNetResult__ForceKick_Wating = 11,
	ELoginNetResult__Cannot_Guest_Login = 12,
	ELoginNetResult__Google_Server_Not_Connect = 13,
	ELoginNetResult__Google_ServerAuthCode_Invalid = 14,
	ELoginNetResult__Google_Verify_Error = 15,
	ELoginNetResult__Apple_Certificate_Error = 16,
	ELoginNetResult__Apple_Verify_Error = 17,
	ELoginNetResult__LinkFail_Already = 18,
	ELoginNetResult__LinkFail_DBError = 19,
	ELoginNetResult__LinkFail_Withdraw = 20,
	ELoginNetResult__Withdraw      = 21,
	ELoginNetResult__Withdraw_Already = 22,
	ELoginNetResult__WithdrawCancel_Fail = 23,
	ELoginNetResult__EternalBlock  = 24,
	ELoginNetResult__PeriodBlock   = 25,
	ELoginNetResult__TempBlock     = 26,
	ELoginNetResult__LongTimeBlock = 27,
	ELoginNetResult__Facebook_AppAccessToken_Error = 28,
	ELoginNetResult__Facebook_AccessToken_Error = 29,
	ELoginNetResult__Facebook_AccessToken_Invalid = 30,
	ELoginNetResult__Facebook_Link_UserID_Error = 31,
	ELoginNetResult__Facebook_UnLink_Not_Link = 32,
	ELoginNetResult__AGM_Service_Stop = 33,
	ELoginNetResult__ServerID_Not_Registerd = 34,
	ELoginNetResult__Already_Login_OtherServer = 35,
	ELoginNetResult__Offline_Hunting_Invalid_Map = 36,
	ELoginNetResult__Offline_Hunting_Time_Not_Enough = 37,
	ELoginNetResult__Kakao_Unauthenticated = 38,
	ELoginNetResult__Cannot_Login_Guest = 39,
	ELoginNetResult__Login_Attempt_Exceeded = 40,
	ELoginNetResult__Limit_Account_Create = 41,
	ELoginNetResult__Kakao_AdvanceReservation_Find_Fail = 42,
	ELoginNetResult__Already_Created_AdvanceReservation = 43,
	ELoginNetResult__Offline_Hunting_Not_InMap = 44,
	ELoginNetResult__WorldWide_Not_GUser = 45,
	ELoginNetResult__SecondPassword_Invalid = 46,
	ELoginNetResult__SecondPassword_Not_Use = 47,
	ELoginNetResult__SecondPassword_Not_Auth = 48,
	ELoginNetResult__SecondPassword_Same_Password = 49,
	ELoginNetResult__SecondPassword_Auth_Failed = 50,
	ELoginNetResult__SecondPassword_Already_Create = 51,
	ELoginNetResult__SecondPassword_Already_Auth = 52,
	ELoginNetResult__SecondPassword_Duplicated = 53,
	ELoginNetResult__SecondPassword_Fail_Limited = 54,
	ELoginNetResult__SecondPassword_Not_Kakao_Auth = 55,
	ELoginNetResult__SecondPassword_Invalid_Kakao_Code = 56,
	ELoginNetResult__SecondPassword_Expire_Kakao_Code = 57,
	ELoginNetResult__SecondPassword_Kakao_Code_Syn_Failed = 58,
	ELoginNetResult__SecondPassword_Kakao_Auth_Fail_Limited = 59,
	ELoginNetResult__SecondPassword_Not_AgreePrivateInfo = 60,
	ELoginNetResult__SecondPassword_Already_AgreePrivateInfo = 61,
	ELoginNetResult__ServerMigration_Doing = 62,
	ELoginNetResult__DeviceAuthenticationVerify_Failed = 63,
	ELoginNetResult__FixServerIDError = 64,
	ELoginNetResult__FixTimeOver   = 65,
	ELoginNetResult__FixCoolTimeRemain = 66,
	ELoginNetResult__Kakao_PlatformBlock = 67,
	ELoginNetResult__Zilong_Unauthenticated = 68,
	ELoginNetResult__Zilong_Verify_Error = 69,
	ELoginNetResult__Zilong_Data_Error = 70,
	ELoginNetResult__Invalid_Server_Select_Time = 71,
	ELoginNetResult__Max           = 72
};


// Enum CommonSource.EMapNetResult
enum class FCommonSource_CommonSource_EMapNetResult : uint8_t
{
	EMapNetResult__Success         = 0,
	EMapNetResult__Server_Error    = 1,
	EMapNetResult__Reserved_Error  = 2,
	EMapNetResult__DB_Not_Found    = 3,
	EMapNetResult__Table_Not_Found = 4,
	EMapNetResult__Not_InMap       = 5,
	EMapNetResult__Already_InMap   = 6,
	EMapNetResult__EnterMap_Not_Exist = 7,
	EMapNetResult__Portal_Not_InArea = 8,
	EMapNetResult__Quest_Not_Doing = 9,
	EMapNetResult__Quest_Not_Finish = 10,
	EMapNetResult__Party_Not_Exist = 11,
	EMapNetResult__Instance_Dungeon_Not = 12,
	EMapNetResult__Member_Full     = 13,
	EMapNetResult__LogOut_TimeOut  = 14,
	EMapNetResult__BattleEnd_Not_Enter = 15,
	EMapNetResult__PortalIndex_Invalid = 16,
	EMapNetResult__Not_PortalMove_On_War_Mode = 17,
	EMapNetResult__Portal_Not_Village = 18,
	EMapNetResult__Player_Dead     = 19,
	EMapNetResult__PhasingQuest_Not_Exist = 20,
	EMapNetResult__Brutal_State    = 21,
	EMapNetResult__BattleTime_Not_Enough = 22,
	EMapNetResult__BattleTime_MaxOver = 23,
	EMapNetResult__Warp_Pos_Invalid = 24,
	EMapNetResult__Cannot_Enter_From_Lobby = 25,
	EMapNetResult__Cannot_Move_Portal = 26,
	EMapNetResult__Not_Equip_Air_Vehicle = 27,
	EMapNetResult__Can_Not_Area_Move = 28,
	EMapNetResult__Not_PortalMove_On_Buff = 29,
	EMapNetResult__Favorite_Full   = 30,
	EMapNetResult__Favorite_Already_Add = 31,
	EMapNetResult__Invalid_Favorites_Count = 32,
	EMapNetResult__Invalid_Favorites_Order = 33,
	EMapNetResult__Contents_Block  = 34,
	EMapNetResult__Already_WarpState = 35,
	EMapNetResult__Not_Enough_EscapeCount = 36,
	EMapNetResult__Already_MoveReady = 37,
	EMapNetResult__Different_Party = 38,
	EMapNetResult__CanNot_Enter    = 39,
	EMapNetResult__ExitPlayer_CanNot_Enter = 40,
	EMapNetResult__Cannot_Enter_Vehicle_WayPointh = 41,
	EMapNetResult__Enter_Item_Not_Enough = 42,
	EMapNetResult__Enter_Gold_Not_Enough = 43,
	EMapNetResult__Enter_Cash_Not_Enough = 44,
	EMapNetResult__Cannot_Be_Done_In_PK = 45,
	EMapNetResult__Area_Pos_Invalid = 46,
	EMapNetResult__BattlePower_Not_Enough = 47,
	EMapNetResult__PlayerLevel_Not_Enough = 48,
	EMapNetResult__PlayerLevel_MaxOver = 49,
	EMapNetResult__Cannot_Move_SafeZone_In_Slayer = 50,
	EMapNetResult__Cannot_Do_In_Current_State = 51,
	EMapNetResult__Cannot_Move_In_DungeonReady = 52,
	EMapNetResult__Not_PortalOwner = 53,
	EMapNetResult__CanNot_Enter_BattlePower = 54,
	EMapNetResult__Cannot_Be_Done_NormalUser = 55,
	EMapNetResult__Audience_Full   = 56,
	EMapNetResult__Cannot_Move_Dungeon_In_Slayer = 57,
	EMapNetResult__Resurrection_Waiting = 58,
	EMapNetResult__CashResurrection_Count_Exceed = 59,
	EMapNetResult__Player_Not_Dead = 60,
	EMapNetResult__CanNot_Enter_PartyMember_Yet = 61,
	EMapNetResult__CanNot_Enter_PartyMaster_Yet = 62,
	EMapNetResult__CanNot_Enter_InfinityDungeon_OpenTime = 63,
	EMapNetResult__CanNot_Enter_InfinityDungeon_ResetWaitTime = 64,
	EMapNetResult__Cannot_Enter_CreationLimit = 65,
	EMapNetResult__Cannot_Enter_In_Slayer = 66,
	EMapNetResult__Cannot_Enter_In_Brutal = 67,
	EMapNetResult__Cannot_Enter_AreaPass = 68,
	EMapNetResult__CanNot_Enter_InvalidFloor = 69,
	EMapNetResult__CanNot_Enter_InvalidResetTime = 70,
	EMapNetResult__CanNot_Enter_ServerInvasion_Server = 71,
	EMapNetResult__Max             = 72
};


// Enum CommonSource.EMoveNetResult
enum class FCommonSource_CommonSource_EMoveNetResult : uint8_t
{
	EMoveNetResult__Success        = 0,
	EMoveNetResult__Server_Error   = 1,
	EMoveNetResult__Reserved_Error = 2,
	EMoveNetResult__Table_Not_Found = 3,
	EMoveNetResult__Not_InMap      = 4,
	EMoveNetResult__Not_MovableState = 5,
	EMoveNetResult__Invalid_CurPos = 6,
	EMoveNetResult__Invalid_DestPos = 7,
	EMoveNetResult__Jump_Height_Over = 8,
	EMoveNetResult__Already_Take_Vehicle = 9,
	EMoveNetResult__Not_Take_Vehicle = 10,
	EMoveNetResult__Invalid_Vehicle = 11,
	EMoveNetResult__Not_Spot_Pos   = 12,
	EMoveNetResult__Auto_FlyState  = 13,
	EMoveNetResult__SkillObject_Not_Exist = 14,
	EMoveNetResult__Invalid_MoveState = 15,
	EMoveNetResult__CoolTime_Waiting = 16,
	EMoveNetResult__Cannot_In_Buff = 17,
	EMoveNetResult__Cannot_Move_Obstacle = 18,
	EMoveNetResult__CastlewarGuildVehicleCount_Not_Enough = 19,
	EMoveNetResult__Max            = 20
};


// Enum CommonSource.EObjectNetResult
enum class FCommonSource_CommonSource_EObjectNetResult : uint8_t
{
	EObjectNetResult__Success      = 0,
	EObjectNetResult__Server_Error = 1,
	EObjectNetResult__Reserved_Error = 2,
	EObjectNetResult__Table_Not_Found = 3,
	EObjectNetResult__Final_Class  = 4,
	EObjectNetResult__PlayerLevel_Not_Enough = 5,
	EObjectNetResult__Target_Not_Found = 6,
	EObjectNetResult__Select_Me    = 7,
	EObjectNetResult__Max          = 8
};


// Enum CommonSource.EPartyNetResult
enum class FCommonSource_CommonSource_EPartyNetResult : uint8_t
{
	EPartyNetResult__Success       = 0,
	EPartyNetResult__Server_Error  = 1,
	EPartyNetResult__Reserved_Error = 2,
	EPartyNetResult__DB_Not_Found  = 3,
	EPartyNetResult__Table_Not_Found = 4,
	EPartyNetResult__Already_Member = 5,
	EPartyNetResult__Party_Not_Exist = 6,
	EPartyNetResult__I_AM_Not_Master = 7,
	EPartyNetResult__I_Am_Not_Member = 8,
	EPartyNetResult__You_Are_Not_Member = 9,
	EPartyNetResult__Member_Full   = 10,
	EPartyNetResult__Responder_Not_Exist = 11,
	EPartyNetResult__Requester_Not_Exist = 12,
	EPartyNetResult__Already_AutoMatching = 13,
	EPartyNetResult__Not_AutoMatching = 14,
	EPartyNetResult__ReadyState_Not_DungeonKey = 15,
	EPartyNetResult__ReadyState_Not_Finish_Quest = 16,
	EPartyNetResult__ReadyState_Not_Enough_EntranceCount = 17,
	EPartyNetResult__ReadyState_Dead_Player = 18,
	EPartyNetResult__Register_Not_Instance_Dungeon = 19,
	EPartyNetResult__ForceKick_Impossible_Dungeon = 20,
	EPartyNetResult__Destroy_Impossible_Dungeon = 21,
	EPartyNetResult__AutoMatching_Impossible_Dungeon = 22,
	EPartyNetResult__Not_MoveTo_Dungeon = 23,
	EPartyNetResult__Invite_Not_Entrance_Condition = 24,
	EPartyNetResult__I_AM_Master   = 25,
	EPartyNetResult__Master_Not_Exist = 26,
	EPartyNetResult__Distance_Not_Enough = 27,
	EPartyNetResult__MapMove_Fail  = 28,
	EPartyNetResult__Not_PortalMove_On_War_Mode = 29,
	EPartyNetResult__Guild_Different = 30,
	EPartyNetResult__Uninvitable_Map = 31,
	EPartyNetResult__Invitation_RecieveType_Off = 32,
	EPartyNetResult__Invitation_RecieveType_FriendAndGuild = 33,
	EPartyNetResult__OfflineHunting_Doing = 34,
	EPartyNetResult__MasterChange_Impossible_Dungeon = 35,
	EPartyNetResult__CanNot_Ready_InPK = 36,
	EPartyNetResult__Cannot_Join_PartyDungeon_In_Slayer = 37,
	EPartyNetResult__PartyDungeonMove_Doing = 38,
	EPartyNetResult__Cannot_Join_Party = 39,
	EPartyNetResult__Cannot_Party_With_User_In_Dungeon = 40,
	EPartyNetResult__Cannot_Party_With_User_In_Field = 41,
	EPartyNetResult__Cannot_Party_Join_Auto_Maintain = 42,
	EPartyNetResult__Cannot_Party_Invite_Auto_Maintain = 43,
	EPartyNetResult__Other_PlayerName_Find_Waiting = 44,
	EPartyNetResult__Cannot_Party_With_User_In_CastleWar = 45,
	EPartyNetResult__Cannot_Change_Master_In_Map = 46,
	EPartyNetResult__Cannot_Join_InfinityDungeon_In_Slayer = 47,
	EPartyNetResult__Cannot_Join_InfinityDungeon_In_Brutal = 48,
	EPartyNetResult__Cannot_Leave_InfinityDungeon = 49,
	EPartyNetResult__Cannot_Join_InfinityDungeon_Need_Quest = 50,
	EPartyNetResult__Cannot_Join_InfinityDungeon_Floor = 51,
	EPartyNetResult__Cannot_Party_Different_AttackType_Castlewar = 52,
	EPartyNetResult__WorldParty_LimitCount = 53,
	EPartyNetResult__Cannot_Register_Dungeon = 54,
	EPartyNetResult__Contents_Block = 55,
	EPartyNetResult__RequestFast   = 56,
	EPartyNetResult__Max           = 57
};


// Enum CommonSource.EPartyDungeonNetResult
enum class FCommonSource_CommonSource_EPartyDungeonNetResult : uint8_t
{
	EPartyDungeonNetResult__Success = 0,
	EPartyDungeonNetResult__Server_Error = 1,
	EPartyDungeonNetResult__Reserved_Error = 2,
	EPartyDungeonNetResult__DB_Not_Found = 3,
	EPartyDungeonNetResult__Table_Not_Found = 4,
	EPartyDungeonNetResult__Instance_Dungeon_Not = 5,
	EPartyDungeonNetResult__EntranceCount_Not_Enough = 6,
	EPartyDungeonNetResult__I_AM_Not_Master = 7,
	EPartyDungeonNetResult__AllReadyState_Not = 8,
	EPartyDungeonNetResult__EnterMap_Not_Exist = 9,
	EPartyDungeonNetResult__Not_PortalMove_On_War_Mode = 10,
	EPartyDungeonNetResult__Quest_Not_Finish = 11,
	EPartyDungeonNetResult__Portal_Not_InArea = 12,
	EPartyDungeonNetResult__Player_Dead = 13,
	EPartyDungeonNetResult__BattleEnd_Not_Enter = 14,
	EPartyDungeonNetResult__Contents_Block = 15,
	EPartyDungeonNetResult__DungeonPlayTime_Over = 16,
	EPartyDungeonNetResult__Different_Party = 17,
	EPartyDungeonNetResult__Member_Full = 18,
	EPartyDungeonNetResult__CanNot_Enter = 19,
	EPartyDungeonNetResult__CanNot_Enter_InPK = 20,
	EPartyDungeonNetResult__ExitPlayer_CanNot_Enter = 21,
	EPartyDungeonNetResult__Cannot_Enter_PartyDungeon_In_Slayer = 22,
	EPartyDungeonNetResult__PartyDungeonMove_Doing = 23,
	EPartyDungeonNetResult__CanNot_Enter_ServerInvasion_Server = 24,
	EPartyDungeonNetResult__Max    = 25
};


// Enum CommonSource.ENoticeNetResult
enum class FCommonSource_CommonSource_ENoticeNetResult : uint8_t
{
	ENoticeNetResult__Success      = 0,
	ENoticeNetResult__Server_Error = 1,
	ENoticeNetResult__Reserved_Error = 2,
	ENoticeNetResult__DB_Not_Found = 3,
	ENoticeNetResult__Table_Not_Found = 4,
	ENoticeNetResult__Max          = 5
};


// Enum CommonSource.EPetNetResult
enum class FCommonSource_CommonSource_EPetNetResult : uint8_t
{
	EPetNetResult__Success         = 0,
	EPetNetResult__Server_Error    = 1,
	EPetNetResult__Reserved_Error  = 2,
	EPetNetResult__User_Not_Found  = 3,
	EPetNetResult__DB_Not_Found    = 4,
	EPetNetResult__Table_Not_Found = 5,
	EPetNetResult__Already_Equiped = 6,
	EPetNetResult__Already_Equiped_OtherParts = 7,
	EPetNetResult__Cannot_Equip_Same_Type = 8,
	EPetNetResult__Not_Pet_Grade   = 9,
	EPetNetResult__Invalid_Pet_Grade = 10,
	EPetNetResult__Not_Enough_PetCount = 11,
	EPetNetResult__Not_Found_Pet   = 12,
	EPetNetResult__Pet_Compose_MaxOver = 13,
	EPetNetResult__Cannot_Compose_FixedPet = 14,
	EPetNetResult__Pet_Decide_MaxOver = 15,
	EPetNetResult__Cannot_Register_Guardian_Board = 16,
	EPetNetResult__Not_Registered_Guardian_Board = 17,
	EPetNetResult__Invalid_Guardian_Board_PetType = 18,
	EPetNetResult__Invalid_Guardian_Board_Grade = 19,
	EPetNetResult__Invalid_Guardian_Board_Reset_Type = 20,
	EPetNetResult__Not_Exist_Guardian_Board = 21,
	EPetNetResult__Not_Enough_Registered_Guardian = 22,
	EPetNetResult__Not_Material_Item = 23,
	EPetNetResult__Not_Enough_Material_Count = 24,
	EPetNetResult__Cannot_Delete_Material = 25,
	EPetNetResult__Not_Equip_On_War_Mode = 26,
	EPetNetResult__Not_Register_On_War_Mode = 27,
	EPetNetResult__ItemCount_Not_Enough = 28,
	EPetNetResult__Item_Not_Found  = 29,
	EPetNetResult__Cash_Not_Enough = 30,
	EPetNetResult__Contents_Block  = 31,
	EPetNetResult__Request_Fast    = 32,
	EPetNetResult__Not_Equipped_Parts = 33,
	EPetNetResult__Not_Satisfied_Condition = 34,
	EPetNetResult__Already_Started_Guard_Board_PetType = 35,
	EPetNetResult__Cannot_Change_Option_Not_Start_Board = 36,
	EPetNetResult__Already_Skill_Trained = 37,
	EPetNetResult__Training_Only_Main_Parts = 38,
	EPetNetResult__Max             = 39
};


// Enum CommonSource.ERelation
enum class FCommonSource_CommonSource_ERelation : uint8_t
{
	ERelation__Relation_Neutral    = 0,
	ERelation__Relation_Friend     = 1,
	ERelation__Relation_Enemy      = 2,
	ERelation__Relation_MAX        = 3
};


// Enum CommonSource.EPlayerNetResult
enum class FCommonSource_CommonSource_EPlayerNetResult : uint8_t
{
	EPlayerNetResult__Success      = 0,
	EPlayerNetResult__Server_Error = 1,
	EPlayerNetResult__Reserved_Error = 2,
	EPlayerNetResult__Table_Not_Found = 3,
	EPlayerNetResult__Final_Class  = 4,
	EPlayerNetResult__PlayerLevel_Not_Enough = 5,
	EPlayerNetResult__Cannot_See_OtherPlayerInfo = 6,
	EPlayerNetResult__OtherPlayer_Not_Connect = 7,
	EPlayerNetResult__Permission_Denied = 8,
	EPlayerNetResult__Cannot_Use_Cheat = 9,
	EPlayerNetResult__Invalid_Parameter = 10,
	EPlayerNetResult__Cannot_Find_Player = 11,
	EPlayerNetResult__Contents_Block = 12,
	EPlayerNetResult__Cannot_See_OtherCastlewarGuildPlayerInfo = 13,
	EPlayerNetResult__RequestFast  = 14,
	EPlayerNetResult__Max          = 15
};


// Enum CommonSource.EPkNetResult
enum class FCommonSource_CommonSource_EPkNetResult : uint8_t
{
	EPkNetResult__Success          = 0,
	EPkNetResult__Server_Error     = 1,
	EPkNetResult__Reserved_Error   = 2,
	EPkNetResult__DB_Not_Found     = 3,
	EPkNetResult__Table_Not_Found  = 4,
	EPkNetResult__User_Not_Found   = 5,
	EPkNetResult__Player_Not_Found = 6,
	EPkNetResult__Cash_Not_Enough  = 7,
	EPkNetResult__Chase_Count_Exceed = 8,
	EPkNetResult__PlayerLevel_Not_Enough = 9,
	EPkNetResult__PKZone_Not       = 10,
	EPkNetResult__TauntComment_Empty = 11,
	EPkNetResult__Watch_Target_Not_Found = 12,
	EPkNetResult__Chase_Pos_Invalid = 13,
	EPkNetResult__Main_Watch_Count_Limit = 14,
	EPkNetResult__TauntComment_Size_Too_Long = 15,
	EPkNetResult__Contents_Block   = 16,
	EPkNetResult__MapInfo_Not_Found = 17,
	EPkNetResult__Not_Same_Map     = 18,
	EPkNetResult__Not_EquipAirVehicle = 19,
	EPkNetResult__CanNot_Use_RandomTeleport = 20,
	EPkNetResult__CanNot_Chase_InPK = 21,
	EPkNetResult__Invalid_PkTauntComment = 22,
	EPkNetResult__Target_Not_Slayer = 23,
	EPkNetResult__Chase_Target_Invalid_MoveType = 24,
	EPkNetResult__Chase_Target_Invalid_Map = 25,
	EPkNetResult__Cannot_Chase_Invalid_Map = 26,
	EPkNetResult__Cannot_Move_In_DungeonReady = 27,
	EPkNetResult__Cannot_Chase_In_Slayer = 28,
	EPkNetResult__Target_Dead      = 29,
	EPkNetResult__RequestFast      = 30,
	EPkNetResult__Cannot_Invasion_User = 31,
	EPkNetResult__Max              = 32
};


// Enum CommonSource.EQuestNetResult
enum class FCommonSource_CommonSource_EQuestNetResult : uint8_t
{
	EQuestNetResult__Success       = 0,
	EQuestNetResult__Server_Error  = 1,
	EQuestNetResult__Reserved_Error = 2,
	EQuestNetResult__DB_Not_Found  = 3,
	EQuestNetResult__Table_Not_Found = 4,
	EQuestNetResult__Reward_Table_Not_Found = 5,
	EQuestNetResult__Npc_Not_Found = 6,
	EQuestNetResult__Max_Count_Over = 7,
	EQuestNetResult__Already_Doing = 8,
	EQuestNetResult__Already_Clear = 9,
	EQuestNetResult__Already_Finish = 10,
	EQuestNetResult__PreQuest_Not_Finish = 11,
	EQuestNetResult__ClassType_Invalid = 12,
	EQuestNetResult__Invalid_NPC   = 13,
	EQuestNetResult__Not_Clear     = 14,
	EQuestNetResult__ItemSlot_Not_Enough = 15,
	EQuestNetResult__MainQuest_Cannot_Cancel = 16,
	EQuestNetResult__Not_Doing_Quest = 17,
	EQuestNetResult__Not_Exist_SubscribedGuild = 18,
	EQuestNetResult__Not_Acceptable_Quest = 19,
	EQuestNetResult__Gold_Not_Enough = 20,
	EQuestNetResult__Cash_Not_Enough = 21,
	EQuestNetResult__Invalid_Resource = 22,
	EQuestNetResult__Cannot_Finish_In_DeadState = 23,
	EQuestNetResult__Can_Not_Map_Move = 24,
	EQuestNetResult__Cannot_Doing_State = 25,
	EQuestNetResult__Contents_Block = 26,
	EQuestNetResult__Invalid_Chapter = 27,
	EQuestNetResult__Invalid_Grade = 28,
	EQuestNetResult__Cannot_Find_Quest = 29,
	EQuestNetResult__Cannot_Accept_Quest_Here = 30,
	EQuestNetResult__Cannot_Refresh_Anymore = 31,
	EQuestNetResult__Cannot_Accept_Quest_Slayer = 32,
	EQuestNetResult__Cannot_Repeat_Extend_Count = 33,
	EQuestNetResult__Cannot_Event_Quest = 34,
	EQuestNetResult__Only_Defence_User = 35,
	EQuestNetResult__Only_Invasion_User = 36,
	EQuestNetResult__Cannot_Guild_Not_Join = 37,
	EQuestNetResult__Cannot_Guild_Level = 38,
	EQuestNetResult__Not_Doing_Invasion = 39,
	EQuestNetResult__Invalid_InvasionServer = 40,
	EQuestNetResult__Max           = 41
};


// Enum CommonSource.EQuickSlotNetResult
enum class FCommonSource_CommonSource_EQuickSlotNetResult : uint8_t
{
	EQuickSlotNetResult__Success   = 0,
	EQuickSlotNetResult__Server_Error = 1,
	EQuickSlotNetResult__Reserved_Error = 2,
	EQuickSlotNetResult__DB_Not_Found = 3,
	EQuickSlotNetResult__Table_Not_Found = 4,
	EQuickSlotNetResult__Not_LearnedSkill = 5,
	EQuickSlotNetResult__Cannot_Set_Passive_Skill = 6,
	EQuickSlotNetResult__Cannot_Set_Combo_Skill = 7,
	EQuickSlotNetResult__Invalid_QuickSlotType = 8,
	EQuickSlotNetResult__Invalid_SlotIndex = 9,
	EQuickSlotNetResult__Invalid_SkillPreset = 10,
	EQuickSlotNetResult__Duplicated_SlotIndex = 11,
	EQuickSlotNetResult__Duplicated_SlotData = 12,
	EQuickSlotNetResult__Potion_Not_Found = 13,
	EQuickSlotNetResult__Not_Potion = 14,
	EQuickSlotNetResult__SelectPreset_Invalid = 15,
	EQuickSlotNetResult__Cannot_Change_Preset_OnDead = 16,
	EQuickSlotNetResult__SkillMemo_Invalid_Length = 17,
	EQuickSlotNetResult__Cannot_Set_OtherClass_Skill = 18,
	EQuickSlotNetResult__Cannot_Set_Item = 19,
	EQuickSlotNetResult__Cannot_Auto_SlotType = 20,
	EQuickSlotNetResult__Cannot_Equip_Condition_Skill = 21,
	EQuickSlotNetResult__Item_Not_Found = 22,
	EQuickSlotNetResult__Prev_Skill_Not_Auto = 23,
	EQuickSlotNetResult__Already_Auto = 24,
	EQuickSlotNetResult__Not_Combo_Skill = 25,
	EQuickSlotNetResult__Contents_Block = 26,
	EQuickSlotNetResult__Max       = 27
};


// Enum CommonSource.ERealmwarNetResult
enum class FCommonSource_CommonSource_ERealmwarNetResult : uint8_t
{
	ERealmwarNetResult__Success    = 0,
	ERealmwarNetResult__Server_Error = 1,
	ERealmwarNetResult__Reserved_Error = 2,
	ERealmwarNetResult__DB_Not_Found = 3,
	ERealmwarNetResult__Table_Not_Found = 4,
	ERealmwarNetResult__Already_Attend_Realmwar = 5,
	ERealmwarNetResult__Realmwar_Not_Found = 6,
	ERealmwarNetResult__Enter_Fail = 7,
	ERealmwarNetResult__Side_Not_Found = 8,
	ERealmwarNetResult__Already_Realmwar_Map = 9,
	ERealmwarNetResult__Not_Enter  = 10,
	ERealmwarNetResult__Already_Reward = 11,
	ERealmwarNetResult__Instance_Dungeon_Not = 12,
	ERealmwarNetResult__Realmwar_Not_Doing = 13,
	ERealmwarNetResult__Cannot_Cancel_Attend = 14,
	ERealmwarNetResult__Can_Not_Area_Move = 15,
	ERealmwarNetResult__Cannot_Attend_Anymore = 16,
	ERealmwarNetResult__Contents_Block = 17,
	ERealmwarNetResult__Cannot_Attend_InPK = 18,
	ERealmwarNetResult__Cannot_Enter_In_Slayer = 19,
	ERealmwarNetResult__Cannot_Enter_In_Quest = 20,
	ERealmwarNetResult__Cannot_Enter_In_Castlewar = 21,
	ERealmwarNetResult__Cannot_Enter_Count = 22,
	ERealmwarNetResult__Max        = 23
};


// Enum CommonSource.ERelicGambleNetResult
enum class FCommonSource_CommonSource_ERelicGambleNetResult : uint8_t
{
	ERelicGambleNetResult__Success = 0,
	ERelicGambleNetResult__Server_Error = 1,
	ERelicGambleNetResult__Reserved_Error = 2,
	ERelicGambleNetResult__DB_Not_Found = 3,
	ERelicGambleNetResult__Table_Not_Found = 4,
	ERelicGambleNetResult__Not_Opened = 5,
	ERelicGambleNetResult__PriceType_Invalid = 6,
	ERelicGambleNetResult__Gold_Not_Enough = 7,
	ERelicGambleNetResult__Cash_Not_Enough = 8,
	ERelicGambleNetResult__GuildCoin_Not_Enough = 9,
	ERelicGambleNetResult__RealmwarCoin_Not_Enough = 10,
	ERelicGambleNetResult__Badge_Not_Enough = 11,
	ERelicGambleNetResult__Select_Count_Fail = 12,
	ERelicGambleNetResult__Level_Limit = 13,
	ERelicGambleNetResult__Not_Clear_ChapterMission = 14,
	ERelicGambleNetResult__Not_User = 15,
	ERelicGambleNetResult__ProductCount_Invalid = 16,
	ERelicGambleNetResult__Material_Not_Enough = 17,
	ERelicGambleNetResult__ItemSlot_Not_Enough = 18,
	ERelicGambleNetResult__Contents_Block = 19,
	ERelicGambleNetResult__RequestFast = 20,
	ERelicGambleNetResult__Max     = 21
};


// Enum CommonSource.ESchedulerNetResult
enum class FCommonSource_CommonSource_ESchedulerNetResult : uint8_t
{
	ESchedulerNetResult__Success   = 0,
	ESchedulerNetResult__Server_Error = 1,
	ESchedulerNetResult__Reserved_Error = 2,
	ESchedulerNetResult__DB_Not_Found = 3,
	ESchedulerNetResult__Table_Not_Found = 4,
	ESchedulerNetResult__ContentBlock = 5,
	ESchedulerNetResult__NeedQuest = 6,
	ESchedulerNetResult__NotMainQuest = 7,
	ESchedulerNetResult__NotDoingQuest = 8,
	ESchedulerNetResult__CanNotPlay = 9,
	ESchedulerNetResult__NotEnoughPlayableSchedule = 10,
	ESchedulerNetResult__NotEnoughCount = 11,
	ESchedulerNetResult__NotEnoughGold = 12,
	ESchedulerNetResult__NotEnoughCashMileage = 13,
	ESchedulerNetResult__NotEnoughItem = 14,
	ESchedulerNetResult__NotEnoughFreeTime = 15,
	ESchedulerNetResult__Max       = 16
};


// Enum CommonSource.ESealedStoneNetResult
enum class FCommonSource_CommonSource_ESealedStoneNetResult : uint8_t
{
	ESealedStoneNetResult__Success = 0,
	ESealedStoneNetResult__Server_Error = 1,
	ESealedStoneNetResult__Reserved_Error = 2,
	ESealedStoneNetResult__Table_Not_Found = 3,
	ESealedStoneNetResult__SealedStone_Not_Found = 4,
	ESealedStoneNetResult__Item_Not_Found = 5,
	ESealedStoneNetResult__Material_Not_Enough = 6,
	ESealedStoneNetResult__Quest_Not_Finish = 7,
	ESealedStoneNetResult__Gold_Not_Enough = 8,
	ESealedStoneNetResult__SealedEssence_Not_Enough = 9,
	ESealedStoneNetResult__Already_Active_SealedStone = 10,
	ESealedStoneNetResult__Contents_Block = 11,
	ESealedStoneNetResult__Item_Count_Not_Enough = 12,
	ESealedStoneNetResult__Cannot_Exceed_Creation_Limit = 13,
	ESealedStoneNetResult__Already_Transcendence = 14,
	ESealedStoneNetResult__Level_Not_Enough = 15,
	ESealedStoneNetResult__Max     = 16
};


// Enum CommonSource.EServerInvasionNetResult
enum class FCommonSource_CommonSource_EServerInvasionNetResult : uint8_t
{
	EServerInvasionNetResult__Success = 0,
	EServerInvasionNetResult__Server_Error = 1,
	EServerInvasionNetResult__Reserved_Error = 2,
	EServerInvasionNetResult__DB_Not_Found = 3,
	EServerInvasionNetResult__Table_Not_Found = 4,
	EServerInvasionNetResult__Cannot_Guild_Not_Join = 5,
	EServerInvasionNetResult__Cannot_Guild_Level = 6,
	EServerInvasionNetResult__Cannot_Guild_MemberCount = 7,
	EServerInvasionNetResult__Cannot_Guild_Permission = 8,
	EServerInvasionNetResult__Cannot_State = 9,
	EServerInvasionNetResult__Cannot_ContentsBlock = 10,
	EServerInvasionNetResult__Cannot_InvalidServer = 11,
	EServerInvasionNetResult__Apply_Already = 12,
	EServerInvasionNetResult__Apply_Full = 13,
	EServerInvasionNetResult__Apply_InvalidServerID = 14,
	EServerInvasionNetResult__Max  = 15
};


// Enum CommonSource.EServerMigrationNetResult
enum class FCommonSource_CommonSource_EServerMigrationNetResult : uint8_t
{
	EServerMigrationNetResult__Success = 0,
	EServerMigrationNetResult__Server_Error = 1,
	EServerMigrationNetResult__Reserved_Error = 2,
	EServerMigrationNetResult__DB_Not_Found = 3,
	EServerMigrationNetResult__Table_Not_Found = 4,
	EServerMigrationNetResult__Contents_Block = 5,
	EServerMigrationNetResult__Invalid_Time = 6,
	EServerMigrationNetResult__Invalid_Group = 7,
	EServerMigrationNetResult__Invalid_Guild = 8,
	EServerMigrationNetResult__Invalid_Letter = 9,
	EServerMigrationNetResult__Invalid_Exchange = 10,
	EServerMigrationNetResult__Invalid_CashShop = 11,
	EServerMigrationNetResult__Invalid_DeathPenalty = 12,
	EServerMigrationNetResult__Invalid_Town = 13,
	EServerMigrationNetResult__Invalid_EquipPreset = 14,
	EServerMigrationNetResult__Invalid_History = 15,
	EServerMigrationNetResult__Invalid_State = 16,
	EServerMigrationNetResult__Invalid_UserCount = 17,
	EServerMigrationNetResult__Same_ServerID = 18,
	EServerMigrationNetResult__Cannot_Use_Item = 19,
	EServerMigrationNetResult__Invalid_Map = 20,
	EServerMigrationNetResult__Invalid_WarMode = 21,
	EServerMigrationNetResult__Invalid_CastleWarMercenary = 22,
	EServerMigrationNetResult__Already_TargetServer = 23,
	EServerMigrationNetResult__Invalid_GuildJoinApply = 24,
	EServerMigrationNetResult__Max = 25
};


// Enum CommonSource.EShadowDungeonNetResult
enum class FCommonSource_CommonSource_EShadowDungeonNetResult : uint8_t
{
	EShadowDungeonNetResult__Success = 0,
	EShadowDungeonNetResult__Server_Error = 1,
	EShadowDungeonNetResult__Reserved_Error = 2,
	EShadowDungeonNetResult__Table_Not_Found = 3,
	EShadowDungeonNetResult__Contents_Block = 4,
	EShadowDungeonNetResult__Unclassed_Tier = 5,
	EShadowDungeonNetResult__Season_Closed = 6,
	EShadowDungeonNetResult__Max   = 7
};


// Enum CommonSource.EShopNetResult
enum class FCommonSource_CommonSource_EShopNetResult : uint8_t
{
	EShopNetResult__Success        = 0,
	EShopNetResult__Server_Error   = 1,
	EShopNetResult__Reserved_Error = 2,
	EShopNetResult__DB_Not_Found   = 3,
	EShopNetResult__Table_Not_Found = 4,
	EShopNetResult__Npc_Not_Found  = 5,
	EShopNetResult__Price_Not_Enough = 6,
	EShopNetResult__Buy_Count_Max  = 7,
	EShopNetResult__ItemAdd_Fail   = 8,
	EShopNetResult__OnceMax_Fail   = 9,
	EShopNetResult__BattleRank_Not_Enough = 10,
	EShopNetResult__Already_LearnedSkill = 11,
	EShopNetResult__Already_Get_Item = 12,
	EShopNetResult__Potion_Max_Count = 13,
	EShopNetResult__Cannot_Doing_State = 14,
	EShopNetResult__Contents_Block = 15,
	EShopNetResult__Empty_Request  = 16,
	EShopNetResult__ItemSlot_Not_Enough = 17,
	EShopNetResult__Wrong_BulkSelection = 18,
	EShopNetResult__Not_Permission_Guild = 19,
	EShopNetResult__Not_Permission_GuildJob = 20,
	EShopNetResult__CastleWarContinueDefenseWinCount_Not_Enough = 21,
	EShopNetResult__Not_Available_No_Guild_Member = 22,
	EShopNetResult__Cannot_Doing_CastlewarShop_GuildJoin_Period = 23,
	EShopNetResult__Cannot_Buy_Costume = 24,
	EShopNetResult__CanNot_Buy_ThisGrade = 25,
	EShopNetResult__Max            = 26
};


// Enum CommonSource.ESkillNetResult
enum class FCommonSource_CommonSource_ESkillNetResult : uint8_t
{
	ESkillNetResult__Success       = 0,
	ESkillNetResult__Server_Error  = 1,
	ESkillNetResult__Reserved_Error = 2,
	ESkillNetResult__Table_Not_Found = 3,
	ESkillNetResult__Not_LearnedSkill = 4,
	ESkillNetResult__Already_LearnedSkill = 5,
	ESkillNetResult__SkillEnchantLevel_Max = 6,
	ESkillNetResult__PlayerLevel_Not_Enough = 7,
	ESkillNetResult__Gold_Not_Enough = 8,
	ESkillNetResult__Class_Unlearnable_Skill = 9,
	ESkillNetResult__Level_Not_Enough_SkillBook = 10,
	ESkillNetResult__Not_Exist_Valid_SkillBook = 11,
	ESkillNetResult__Not_Exist_Valid_SkillBookPiece = 12,
	ESkillNetResult__SkillBookPiece_Not_Enough = 13,
	ESkillNetResult__Need_Learn_PrevSkill = 14,
	ESkillNetResult__Not_Condition_Skill = 15,
	ESkillNetResult__Not_Releasable_AutoTarget_Skill = 16,
	ESkillNetResult__Item_Not_Found = 17,
	ESkillNetResult__Contents_Block = 18,
	ESkillNetResult__RequestFast   = 19,
	ESkillNetResult__SkillEnchantLevel_Not_Enough = 20,
	ESkillNetResult__SkillTranscendTryCount_Max = 21,
	ESkillNetResult__Invalid_SkillTranscendType = 22,
	ESkillNetResult__Not_SkillTranscend = 23,
	ESkillNetResult__Cash_Not_Enough = 24,
	ESkillNetResult__Invalid_SkillTranscendTryCount = 25,
	ESkillNetResult__Invalid_SkillTranscendLevel = 26,
	ESkillNetResult__SkillTranscendRestoreCount_Max = 27,
	ESkillNetResult__Not_DetectTargetSkillObject_Skill = 28,
	ESkillNetResult__Max           = 29
};


// Enum CommonSource.EUserNetResult
enum class FCommonSource_CommonSource_EUserNetResult : uint8_t
{
	EUserNetResult__Success        = 0,
	EUserNetResult__Server_Error   = 1,
	EUserNetResult__Reserved_Error = 2,
	EUserNetResult__Table_Not_Found = 3,
	EUserNetResult__Cheat_Live_Not_Allowed = 4,
	EUserNetResult__Cheat_Command_Not_Found = 5,
	EUserNetResult__Cheat_Param_Not_Found = 6,
	EUserNetResult__Cheat_Param_Invalid = 7,
	EUserNetResult__Cheat_User_Not_Found = 8,
	EUserNetResult__Cheat_Not_Used_ThisTime = 9,
	EUserNetResult__Cheat_Can_Use_In_Lobby = 10,
	EUserNetResult__Cheat_Cannot_Use_In_Connected_state = 11,
	EUserNetResult__NickName_Duplicate = 12,
	EUserNetResult__NickName_Not_Invalid = 13,
	EUserNetResult__NickName_Not_Lenth = 14,
	EUserNetResult__Exceeded_Maximum_Number_Of_Characters = 15,
	EUserNetResult__StateMessage_Not_Invalid = 16,
	EUserNetResult__UserCash_Not_Enough = 17,
	EUserNetResult__User_Not_Found = 18,
	EUserNetResult__Cheat_User_Invalid_Map = 19,
	EUserNetResult__Cheat_User_Cannot_Chase_State = 20,
	EUserNetResult__Max            = 21
};


// Enum CommonSource.EVehicleNetResult
enum class FCommonSource_CommonSource_EVehicleNetResult : uint8_t
{
	EVehicleNetResult__Success     = 0,
	EVehicleNetResult__Server_Error = 1,
	EVehicleNetResult__Reserved_Error = 2,
	EVehicleNetResult__DB_Not_Found = 3,
	EVehicleNetResult__Table_Not_Found = 4,
	EVehicleNetResult__Vehicle_Not_Found = 5,
	EVehicleNetResult__Grade_Max   = 6,
	EVehicleNetResult__Gold_Not_Enough = 7,
	EVehicleNetResult__Vehicle_Not_Enough = 8,
	EVehicleNetResult__Vehicle_Too_Much = 9,
	EVehicleNetResult__Vehicle_Duplicate = 10,
	EVehicleNetResult__Compose_Result_Not = 11,
	EVehicleNetResult__Already_Equip = 12,
	EVehicleNetResult__Not_Equip   = 13,
	EVehicleNetResult__Not_Same_Grade = 14,
	EVehicleNetResult__Max_Vehicle_Level = 15,
	EVehicleNetResult__Not_Same_Vehicle = 16,
	EVehicleNetResult__Invalid_Additional_Option_Slot = 17,
	EVehicleNetResult__Already_Lock_Additional_Option = 18,
	EVehicleNetResult__Not_Equip_Air_Vehicle = 19,
	EVehicleNetResult__Not_Open_Slot = 20,
	EVehicleNetResult__Max_SavePointSlot = 21,
	EVehicleNetResult__Not_Set_Save_Point = 22,
	EVehicleNetResult__Not_Exist_Save_Point = 23,
	EVehicleNetResult__Cannot_Map_Move = 24,
	EVehicleNetResult__Not_Same_Type = 25,
	EVehicleNetResult__Not_Set_Save_Point_On_Current_Map = 26,
	EVehicleNetResult__Not_Set_Save_Point_On_Village = 27,
	EVehicleNetResult__Not_Set_Save_Point_On_Current_Point = 28,
	EVehicleNetResult__Move_Scroll_Not_Enough = 29,
	EVehicleNetResult__Invalid_SavePoint_Count = 30,
	EVehicleNetResult__Invalid_SavePoint_Order = 31,
	EVehicleNetResult__Invalid_Pos = 32,
	EVehicleNetResult__Input_Size_Too_Short = 33,
	EVehicleNetResult__Input_Size_Too_Long = 34,
	EVehicleNetResult__Cannot_Vehicle_WayPoint = 35,
	EVehicleNetResult__Cannot_Vehicle_WayPoint_In_Slayer = 36,
	EVehicleNetResult__Cannot_Vehicle_SavePoint_In_Slayer = 37,
	EVehicleNetResult__Cannot_Use_Item_OnBuff = 38,
	EVehicleNetResult__Contents_Block = 39,
	EVehicleNetResult__Brutal_State = 40,
	EVehicleNetResult__Vehicle_Change_MaxOver = 41,
	EVehicleNetResult__Cash_Not_Enough = 42,
	EVehicleNetResult__Cannot_Warp_InPK = 43,
	EVehicleNetResult__Invalid_VehicleSavePointMemo = 44,
	EVehicleNetResult__Cannot_Use_FixedVehicle = 45,
	EVehicleNetResult__Duplicate_FixedVehicle = 46,
	EVehicleNetResult__Cannot_Move_In_DungeonReady = 47,
	EVehicleNetResult__Cannot_Move_GuildStronghold = 48,
	EVehicleNetResult__Invalid_VehicleType = 49,
	EVehicleNetResult__Cannot_VehicleType_Battle = 50,
	EVehicleNetResult__RequestFast = 51,
	EVehicleNetResult__Cannot_In_Map = 52,
	EVehicleNetResult__CanNot_Enter_ServerInvasion_Server = 53,
	EVehicleNetResult__Max         = 54
};


// Enum CommonSource.EWeaponShapeNetResult
enum class FCommonSource_CommonSource_EWeaponShapeNetResult : uint8_t
{
	EWeaponShapeNetResult__Success = 0,
	EWeaponShapeNetResult__Server_Error = 1,
	EWeaponShapeNetResult__Reserved_Error = 2,
	EWeaponShapeNetResult__DB_Not_Found = 3,
	EWeaponShapeNetResult__Table_Not_Found = 4,
	EWeaponShapeNetResult__WeaponShapeCount_Not_Enough = 5,
	EWeaponShapeNetResult__Not_Equip_On_War_Mode = 6,
	EWeaponShapeNetResult__Not_Class_Type = 7,
	EWeaponShapeNetResult__WeaponShape_Not_Found = 8,
	EWeaponShapeNetResult__Not_WeaponShape_Grade = 9,
	EWeaponShapeNetResult__Not_WeaponShape_Material_Count = 10,
	EWeaponShapeNetResult__WeaponShapeCompose_MaxOver = 11,
	EWeaponShapeNetResult__MaterialCount_Not_Enough = 12,
	EWeaponShapeNetResult__WeaponShape_Decide_MaxOver = 13,
	EWeaponShapeNetResult__Cash_Not_Enough = 14,
	EWeaponShapeNetResult__Contents_Block = 15,
	EWeaponShapeNetResult__Invalid_WeaponShaperClass = 16,
	EWeaponShapeNetResult__Not_Finish_Quest = 17,
	EWeaponShapeNetResult__RequestFast = 18,
	EWeaponShapeNetResult__Not_Select_Exclusion_Class_Type = 19,
	EWeaponShapeNetResult__Max     = 20
};


// Enum CommonSource.EWorldDungeonNetResult
enum class FCommonSource_CommonSource_EWorldDungeonNetResult : uint8_t
{
	EWorldDungeonNetResult__Success = 0,
	EWorldDungeonNetResult__Server_Error = 1,
	EWorldDungeonNetResult__Reserved_Error = 2,
	EWorldDungeonNetResult__DB_Not_Found = 3,
	EWorldDungeonNetResult__Table_Not_Found = 4,
	EWorldDungeonNetResult__No_User = 5,
	EWorldDungeonNetResult__Clear_Quest = 6,
	EWorldDungeonNetResult__No_Guild = 7,
	EWorldDungeonNetResult__Guild_Not_Found = 8,
	EWorldDungeonNetResult__Not_Join = 9,
	EWorldDungeonNetResult__Not_Member = 10,
	EWorldDungeonNetResult__Has_Not_Permission = 11,
	EWorldDungeonNetResult__AllianceMaxCount_Over = 12,
	EWorldDungeonNetResult__HostileMaxCount_Over = 13,
	EWorldDungeonNetResult__CannotApplyMyself = 14,
	EWorldDungeonNetResult__AlreadyAlliance = 15,
	EWorldDungeonNetResult__AlreadyApply = 16,
	EWorldDungeonNetResult__AlreadyHostile = 17,
	EWorldDungeonNetResult__AllianceApplyMaxCount_Over = 18,
	EWorldDungeonNetResult__AllianceAppliedMaxCount_Over = 19,
	EWorldDungeonNetResult__NotApply = 20,
	EWorldDungeonNetResult__TargetAllianceMaxCount_Over = 21,
	EWorldDungeonNetResult__AllianceApplyGuild = 22,
	EWorldDungeonNetResult__Can_Not_Enter = 23,
	EWorldDungeonNetResult__Can_Not_Alliance_Time = 24,
	EWorldDungeonNetResult__Cannot_Be_Done_NormalUser = 25,
	EWorldDungeonNetResult__Contents_Block = 26,
	EWorldDungeonNetResult__Max    = 27
};


// Enum CommonSource.EWorldWideNetResult
enum class FCommonSource_CommonSource_EWorldWideNetResult : uint8_t
{
	EWorldWideNetResult__Success   = 0,
	EWorldWideNetResult__Server_Error = 1,
	EWorldWideNetResult__Reserved_Error = 2,
	EWorldWideNetResult__DB_Not_Found = 3,
	EWorldWideNetResult__Invalid_Sequence = 4,
	EWorldWideNetResult__AGM_Service_Stop = 5,
	EWorldWideNetResult__Already_Login_Doing_Playing = 6,
	EWorldWideNetResult__Invalid_WorldWideType = 7,
	EWorldWideNetResult__Already_Move_Doing = 8,
	EWorldWideNetResult__Player_Not_Found = 9,
	EWorldWideNetResult__Table_Not_Found = 10,
	EWorldWideNetResult__Invalid_SafeZone = 11,
	EWorldWideNetResult__Close_Time = 12,
	EWorldWideNetResult__Cannot_Enter_Guild = 13,
	EWorldWideNetResult__Enter_Member_Full = 14,
	EWorldWideNetResult__No_Guild  = 15,
	EWorldWideNetResult__No_GuildMember = 16,
	EWorldWideNetResult__Cannot_Enter_GuildJoin_Period = 17,
	EWorldWideNetResult__Not_PortalMove_On_War_Mode = 18,
	EWorldWideNetResult__Quest_Not_Finish = 19,
	EWorldWideNetResult__Portal_Not_InArea = 20,
	EWorldWideNetResult__Player_Dead = 21,
	EWorldWideNetResult__Contents_Block = 22,
	EWorldWideNetResult__CanNot_Enter = 23,
	EWorldWideNetResult__Already_MoveReady = 24,
	EWorldWideNetResult__BattlePower_Not_Enough = 25,
	EWorldWideNetResult__CanNot_Enter_BattlePower = 26,
	EWorldWideNetResult__BattleTime_Not_Enough = 27,
	EWorldWideNetResult__Enter_Gold_Not_Enough = 28,
	EWorldWideNetResult__Cannot_Do_In_Current_State = 29,
	EWorldWideNetResult__Cannot_Enter_In_Slayer = 30,
	EWorldWideNetResult__Only_Castlewar_Player_Can_Enter = 31,
	EWorldWideNetResult__Player_Level_Not_Enough = 32,
	EWorldWideNetResult__Guild_Level_Not_Enough = 33,
	EWorldWideNetResult__Castlewar_Qualifier_End = 34,
	EWorldWideNetResult__Castlewar_End_Guild = 35,
	EWorldWideNetResult__Map_Readying = 36,
	EWorldWideNetResult__CanNot_Enter_In_MapType = 37,
	EWorldWideNetResult__Cannot_Enter_Castlewar_GuildJoin_Period = 38,
	EWorldWideNetResult__Cannot_Enter_Qualifier_GuildJoin_Period = 39,
	EWorldWideNetResult__Castlewar_End = 40,
	EWorldWideNetResult__Qualifier_Audience_Member_Zero = 41,
	EWorldWideNetResult__Castlewar_Player_Level_Not_Enough = 42,
	EWorldWideNetResult__Castlewar_Guild_Level_Not_Enough = 43,
	EWorldWideNetResult__Already_CastleWar_Enter_GuildMember_SameUser = 44,
	EWorldWideNetResult__Cannot_Enter_GuildMember_WinGuild_User = 45,
	EWorldWideNetResult__Cannot_Enter_Already_Participated = 46,
	EWorldWideNetResult__Cannot_Enter_In_Brutal = 47,
	EWorldWideNetResult__Cannot_Enter_CreationLimit = 48,
	EWorldWideNetResult__Cannot_Enter_AreaPass = 49,
	EWorldWideNetResult__CanNot_Enter_InfinityDungeon_OpenTime = 50,
	EWorldWideNetResult__CanNot_Enter_InfinityDungeon_ResetWaitTime = 51,
	EWorldWideNetResult__CanNot_Enter_InvalidFloor = 52,
	EWorldWideNetResult__CanNot_Enter_InvalidResetTime = 53,
	EWorldWideNetResult__Cannot_Move_SafeZone_In_Slayer = 54,
	EWorldWideNetResult__CanNot_Enter_InfinityDungeonDoingPlayer = 55,
	EWorldWideNetResult__CanNot_Enter_GuildBattlefield_NotParticipate = 56,
	EWorldWideNetResult__CanNot_Enter_GuildBattlefield_ReEnterCoolTime = 57,
	EWorldWideNetResult__CanNot_Enter_WorldParty_LimitCount = 58,
	EWorldWideNetResult__Not_Open_CastleWar_Contents = 59,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_Connecting = 60,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_Not_Enough_Item = 61,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_Not_Enough_Currency = 62,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_Quest = 63,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_GuildJoinTime = 64,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_RemainBannedTime = 65,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_Slayer = 66,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_Brutal = 67,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_Maintenance = 68,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_NotDoing = 69,
	EWorldWideNetResult__CanNot_Enter_ServerInvasion_Server = 70,
	EWorldWideNetResult__Max       = 71
};


// Enum CommonSource.ETutorialQuestType
enum class FCommonSource_CommonSource_ETutorialQuestType : uint8_t
{
	ETutorialQuestType__None       = 0,
	ETutorialQuestType__Enchant    = 1,
	ETutorialQuestType__Dismantle  = 2,
	ETutorialQuestType__Make       = 3,
	ETutorialQuestType__Max        = 4
};


// Enum CommonSource.EQuestActionType
enum class FCommonSource_CommonSource_EQuestActionType : uint8_t
{
	EQuestActionType__None         = 0,
	EQuestActionType__MapWarp      = 1,
	EQuestActionType__PhasingMapMove = 2,
	EQuestActionType__MapMove      = 3,
	EQuestActionType__Buff         = 4,
	EQuestActionType__SkillCoolTimeReset = 5,
	EQuestActionType__Max          = 6
};


// Enum CommonSource.EQuestMissionType
enum class FCommonSource_CommonSource_EQuestMissionType : uint8_t
{
	EQuestMissionType__None        = 0,
	EQuestMissionType__NpcTalk     = 1,
	EQuestMissionType__MonsterKill = 2,
	EQuestMissionType__PlayerLevel = 3,
	EQuestMissionType__InstanceMapClear = 4,
	EQuestMissionType__GuildJoin   = 5,
	EQuestMissionType__InteractionComplete = 6,
	EQuestMissionType__PotionItemBuy = 7,
	EQuestMissionType__EquipmentItemGet = 8,
	EQuestMissionType__VehicleGet  = 9,
	EQuestMissionType__MonsterKillProbabilityCount = 10,
	EQuestMissionType__MonsterGroupKill = 11,
	EQuestMissionType__AnyMonsterKill = 12,
	EQuestMissionType__AnyPotionUse = 13,
	EQuestMissionType__AnyInstanceMapClear = 14,
	EQuestMissionType__RepeatQuestFinish = 15,
	EQuestMissionType__PotionQuickSlotRegister = 16,
	EQuestMissionType__GroundVehicleEquip = 17,
	EQuestMissionType__Swimming    = 18,
	EQuestMissionType__Climbing    = 19,
	EQuestMissionType__AirVehicleEquip = 20,
	EQuestMissionType__SkillEnchant = 21,
	EQuestMissionType__CashShopEnter = 22,
	EQuestMissionType__GuardNPC    = 23,
	EQuestMissionType__MoveToArea  = 24,
	EQuestMissionType__AloneDungeonClear = 25,
	EQuestMissionType__ItemEnchant = 26,
	EQuestMissionType__ItemMake    = 27,
	EQuestMissionType__ItemDismantle = 28,
	EQuestMissionType__EquipItemEquip = 29,
	EQuestMissionType__AvatarEquip = 30,
	EQuestMissionType__TownReturn  = 31,
	EQuestMissionType__QuestFastMove = 32,
	EQuestMissionType__SkillLearn  = 33,
	EQuestMissionType__QuickSlotItemRegist = 34,
	EQuestMissionType__GatheringComplete = 35,
	EQuestMissionType__RealmwarAttend = 36,
	EQuestMissionType__TutorialQuestClear = 37,
	EQuestMissionType__ObserveObject = 38,
	EQuestMissionType__AnyFieldNormalMonsterKill = 39,
	EQuestMissionType__ObserveGroupObject = 40,
	EQuestMissionType__InvasionMonsterKill = 41,
	EQuestMissionType__InvasionPlayerKill = 42,
	EQuestMissionType__InvasionGatheringComplete = 43,
	EQuestMissionType__InvasionWorldBossKill = 44,
	EQuestMissionType__InvasionWorldBossLootKill = 45,
	EQuestMissionType__InvasionFieldBossKill = 46,
	EQuestMissionType__InvasionFieldBossLootKill = 47,
	EQuestMissionType__InvasionFieldSubBossKill = 48,
	EQuestMissionType__InvasionFieldSubBossLootKill = 49,
	EQuestMissionType__InvasionDefencePlayerKill = 50,
	EQuestMissionType__InvasionObjectKill = 51,
	EQuestMissionType__InvasionChapterMonsterKill = 52,
	EQuestMissionType__InvasionDefenceChapterMonsterKill = 53,
	EQuestMissionType__Max         = 54
};


// Enum CommonSource.EPenaltyNetResult
enum class FCommonSource_CommonSource_EPenaltyNetResult : uint8_t
{
	EPenaltyNetResult__Success     = 0,
	EPenaltyNetResult__Server_Error = 1,
	EPenaltyNetResult__Reserved_Error = 2,
	EPenaltyNetResult__Table_Not_Found = 3,
	EPenaltyNetResult__DB_Not_Found = 4,
	EPenaltyNetResult__UserCash_Not_Enough = 5,
	EPenaltyNetResult__UserGold_Not_Enough = 6,
	EPenaltyNetResult__User_Not_Found = 7,
	EPenaltyNetResult__Penalty_Not_Exists = 8,
	EPenaltyNetResult__Cannot_Restore_OnDead = 9,
	EPenaltyNetResult__Cannot_Use_InPK = 10,
	EPenaltyNetResult__Invalid_PenaltyRestoreType = 11,
	EPenaltyNetResult__Exceed_DailyRestoreCount = 12,
	EPenaltyNetResult__Max         = 13
};


// Enum CommonSource.EQuestState
enum class FCommonSource_CommonSource_EQuestState : uint8_t
{
	EQuestState__None              = 0,
	EQuestState__Acceptable        = 1,
	EQuestState__Doing             = 2,
	EQuestState__Clear             = 3,
	EQuestState__Finish            = 4,
	EQuestState__Fail              = 5,
	EQuestState__Delete            = 6,
	EQuestState__Max               = 7
};


// Enum CommonSource.ESkillPreset
enum class FCommonSource_CommonSource_ESkillPreset : uint8_t
{
	ESkillPreset__Preset0          = 0,
	ESkillPreset__Preset1          = 1,
	ESkillPreset__Preset2          = 2,
	ESkillPreset__Max              = 3
};


// Enum CommonSource.EQuestType
enum class FCommonSource_CommonSource_EQuestType : uint8_t
{
	EQuestType__None               = 0,
	EQuestType__Main               = 1,
	EQuestType__Sub                = 2,
	EQuestType__MustSub            = 3,
	EQuestType__Repeat             = 4,
	EQuestType__ItemRepeat         = 5,
	EQuestType__Event              = 6,
	EQuestType__ServerInvasion     = 7,
	EQuestType__ServerInvasionDefence = 8,
	EQuestType__Max                = 9
};


// Enum CommonSource.EEquipPresetSlot
enum class FCommonSource_CommonSource_EEquipPresetSlot : uint8_t
{
	EEquipPresetSlot__Preset0      = 0,
	EEquipPresetSlot__Preset1      = 1,
	EEquipPresetSlot__Preset2      = 2,
	EEquipPresetSlot__Preset3      = 3,
	EEquipPresetSlot__Preset4      = 4,
	EEquipPresetSlot__Preset5      = 5,
	EEquipPresetSlot__Preset6      = 6,
	EEquipPresetSlot__Preset7      = 7,
	EEquipPresetSlot__Preset8      = 8,
	EEquipPresetSlot__Preset9      = 9,
	EEquipPresetSlot__Preset10     = 10,
	EEquipPresetSlot__Preset11     = 11,
	EEquipPresetSlot__Preset12     = 12,
	EEquipPresetSlot__Preset13     = 13,
	EEquipPresetSlot__Preset14     = 14,
	EEquipPresetSlot__Preset15     = 15,
	EEquipPresetSlot__Preset16     = 16,
	EEquipPresetSlot__Preset17     = 17,
	EEquipPresetSlot__Preset18     = 18,
	EEquipPresetSlot__Preset19     = 19,
	EEquipPresetSlot__Preset20     = 20,
	EEquipPresetSlot__Max          = 21
};


// Enum CommonSource.ESkillSlot
enum class FCommonSource_CommonSource_ESkillSlot : uint8_t
{
	ESkillSlot__Common0            = 0,
	ESkillSlot__Common1            = 1,
	ESkillSlot__Common2            = 2,
	ESkillSlot__Common3            = 3,
	ESkillSlot__Common4            = 4,
	ESkillSlot__Common5            = 5,
	ESkillSlot__Common6            = 6,
	ESkillSlot__Common7            = 7,
	ESkillSlot__Max                = 8
};


// Enum CommonSource.EItemSlot
enum class FCommonSource_CommonSource_EItemSlot : uint8_t
{
	EItemSlot__Common0             = 0,
	EItemSlot__Common1             = 1,
	EItemSlot__Common2             = 2,
	EItemSlot__Common3             = 3,
	EItemSlot__Common4             = 4,
	EItemSlot__Common5             = 5,
	EItemSlot__Common6             = 6,
	EItemSlot__Common7             = 7,
	EItemSlot__Common8             = 8,
	EItemSlot__Common9             = 9,
	EItemSlot__Common10            = 10,
	EItemSlot__Common11            = 11,
	EItemSlot__Common12            = 12,
	EItemSlot__Common13            = 13,
	EItemSlot__Common14            = 14,
	EItemSlot__Common15            = 15,
	EItemSlot__Common16            = 16,
	EItemSlot__Common17            = 17,
	EItemSlot__Common18            = 18,
	EItemSlot__Common19            = 19,
	EItemSlot__Max                 = 20
};


// Enum CommonSource.EPotionSlot
enum class FCommonSource_CommonSource_EPotionSlot : uint8_t
{
	EPotionSlot__Potion0           = 0,
	EPotionSlot__Max               = 1
};


// Enum CommonSource.ERuneNetResult
enum class FCommonSource_CommonSource_ERuneNetResult : uint8_t
{
	ERuneNetResult__Success        = 0,
	ERuneNetResult__Server_Error   = 1,
	ERuneNetResult__Reserved_Error = 2,
	ERuneNetResult__DB_Not_Found   = 3,
	ERuneNetResult__Table_Not_Found = 4,
	ERuneNetResult__Rune_Not_Found = 5,
	ERuneNetResult__RuneCount_Not_Enough = 6,
	ERuneNetResult__Gold_Not_Enough = 7,
	ERuneNetResult__RuneType_Error = 8,
	ERuneNetResult__Item_Not_Found = 9,
	ERuneNetResult__RuneGrade_Error = 10,
	ERuneNetResult__RuneGrade_Max  = 11,
	ERuneNetResult__Level_Not_Enough = 12,
	ERuneNetResult__RuneCompose_MaxOver = 13,
	ERuneNetResult__Contents_Block = 14,
	ERuneNetResult__SelectPreset_Invalid = 15,
	ERuneNetResult__Cannot_Change_Preset_OnDead = 16,
	ERuneNetResult__MaterialCount_Not_Enough = 17,
	ERuneNetResult__RequestFast    = 18,
	ERuneNetResult__Cannot_Register_Lock_State = 19,
	ERuneNetResult__Cannot_Remove_Lock_State = 20,
	ERuneNetResult__Lock_MaxOver   = 21,
	ERuneNetResult__RuneSet_Invalid = 22,
	ERuneNetResult__RuneSet_MaxStep = 23,
	ERuneNetResult__Cash_Not_Enough = 24,
	ERuneNetResult__Max            = 25
};


// Enum CommonSource.EQuickSlotType
enum class FCommonSource_CommonSource_EQuickSlotType : uint8_t
{
	EQuickSlotType__Potion         = 0,
	EQuickSlotType__Item           = 1,
	EQuickSlotType__Skill          = 2,
	EQuickSlotType__EquipPreset0   = 3,
	EQuickSlotType__EquipPreset1   = 4,
	EQuickSlotType__EquipPreset2   = 5,
	EQuickSlotType__SkillPreset0   = 6,
	EQuickSlotType__SkillPreset1   = 7,
	EQuickSlotType__SkillPreset2   = 8,
	EQuickSlotType__SkillPreset3   = 9,
	EQuickSlotType__SkillPreset4   = 10,
	EQuickSlotType__SkillPreset5   = 11,
	EQuickSlotType__BattleVehicle  = 12,
	EQuickSlotType__SkillPreset6   = 13,
	EQuickSlotType__SkillPreset7   = 14,
	EQuickSlotType__SkillPreset8   = 15,
	EQuickSlotType__SkillPreset9   = 16,
	EQuickSlotType__SkillPreset10  = 17,
	EQuickSlotType__SkillPreset11  = 18,
	EQuickSlotType__Max            = 19
};


// Enum CommonSource.ERankingTeamType
enum class FCommonSource_CommonSource_ERankingTeamType : uint8_t
{
	ERankingTeamType__Team1        = 0,
	ERankingTeamType__Team2        = 1,
	ERankingTeamType__Team3        = 2,
	ERankingTeamType__Team4        = 3,
	ERankingTeamType__Team5        = 4,
	ERankingTeamType__Max          = 5
};


// Enum CommonSource.ERankingDivision
enum class FCommonSource_CommonSource_ERankingDivision : uint8_t
{
	ERankingDivision__Server       = 0,
	ERankingDivision__World        = 1,
	ERankingDivision__Total        = 2,
	ERankingDivision__Max          = 3
};


// Enum CommonSource.ERankingType
enum class FCommonSource_CommonSource_ERankingType : uint8_t
{
	ERankingType__PlayerLevel      = 0,
	ERankingType__PlayerBattlePower = 1,
	ERankingType__GuildLevel       = 2,
	ERankingType__GuildBattlePower = 3,
	ERankingType__WeeklyGuildContribution = 4,
	ERankingType__Pk               = 5,
	ERankingType__GuildRaid        = 6,
	ERankingType__Realmwar         = 7,
	ERankingType__WorldDungeonPK   = 8,
	ERankingType__GuildHighBattlePower = 9,
	ERankingType__WorldEliteDungeonPK = 10,
	ERankingType__GuildStronghold  = 11,
	ERankingType__GuildDefense     = 12,
	ERankingType__ShadowDungeon    = 13,
	ERankingType__InfinifyDungeon  = 14,
	ERankingType__WorldShadowDungeon = 15,
	ERankingType__ServerInvasionPK = 16,
	ERankingType__Max              = 17
};


// Enum CommonSource.ERankingClassType
enum class FCommonSource_CommonSource_ERankingClassType : uint8_t
{
	ERankingClassType__All         = 0,
	ERankingClassType__Warrior     = 1,
	ERankingClassType__Sorceress   = 2,
	ERankingClassType__Rogue       = 3,
	ERankingClassType__Priest      = 4,
	ERankingClassType__ShieldMaiden = 5,
	ERankingClassType__Max         = 6
};


// Enum CommonSource.ESlotDataType
enum class FCommonSource_CommonSource_ESlotDataType : uint8_t
{
	ESlotDataType__None            = 0,
	ESlotDataType__Item            = 1,
	ESlotDataType__Skill           = 2,
	ESlotDataType__Max             = 3
};


// Enum CommonSource.ERealmwarFinishRuleState
enum class FCommonSource_CommonSource_ERealmwarFinishRuleState : uint8_t
{
	ERealmwarFinishRuleState__None = 0,
	ERealmwarFinishRuleState__MinimumUserCount = 1,
	ERealmwarFinishRuleState__KillRule = 2,
	ERealmwarFinishRuleState__FlagRule = 3,
	ERealmwarFinishRuleState__TimeOut = 4,
	ERealmwarFinishRuleState__Max  = 5
};


// Enum CommonSource.ERealmwarAttendReason
enum class FCommonSource_CommonSource_ERealmwarAttendReason : uint8_t
{
	ERealmwarAttendReason__None    = 0,
	ERealmwarAttendReason__SelfCancel = 1,
	ERealmwarAttendReason__PartyDungeon = 2,
	ERealmwarAttendReason__GuildDungeon = 3,
	ERealmwarAttendReason__AloneQuestDungeon = 4,
	ERealmwarAttendReason__ConflictDungeon = 5,
	ERealmwarAttendReason__MapMove = 6,
	ERealmwarAttendReason__DuelDungeon = 7,
	ERealmwarAttendReason__VoidDungeon = 8,
	ERealmwarAttendReason__ShadowDungeon = 9,
	ERealmwarAttendReason__InfinityDungeon = 10,
	ERealmwarAttendReason__Max     = 11
};


// Enum CommonSource.ERealmwarFinishState
enum class FCommonSource_CommonSource_ERealmwarFinishState : uint8_t
{
	ERealmwarFinishState__Lose     = 0,
	ERealmwarFinishState__Win      = 1,
	ERealmwarFinishState__Draw     = 2,
	ERealmwarFinishState__Max      = 3
};


// Enum CommonSource.ERealmwarSeasonGrade
enum class FCommonSource_CommonSource_ERealmwarSeasonGrade : uint8_t
{
	ERealmwarSeasonGrade__None     = 0,
	ERealmwarSeasonGrade__SClass_1Tier = 1,
	ERealmwarSeasonGrade__SClass_2Tier = 2,
	ERealmwarSeasonGrade__SClass_3Tier = 3,
	ERealmwarSeasonGrade__SClass_4Tier = 4,
	ERealmwarSeasonGrade__SClass_5Tier = 5,
	ERealmwarSeasonGrade__SClass   = 6,
	ERealmwarSeasonGrade__AClass   = 7,
	ERealmwarSeasonGrade__BClass   = 8,
	ERealmwarSeasonGrade__CClass   = 9,
	ERealmwarSeasonGrade__Newbie   = 10,
	ERealmwarSeasonGrade__Max      = 11
};


// Enum CommonSource.ERealmwarRankType
enum class FCommonSource_CommonSource_ERealmwarRankType : uint8_t
{
	ERealmwarRankType__None        = 0,
	ERealmwarRankType__Kill        = 1,
	ERealmwarRankType__Damaged     = 2,
	ERealmwarRankType__Damage      = 3,
	ERealmwarRankType__Heal        = 4,
	ERealmwarRankType__FlagInteraction = 5,
	ERealmwarRankType__Max         = 6
};


// Enum CommonSource.ERealmwarSide
enum class FCommonSource_CommonSource_ERealmwarSide : uint8_t
{
	ERealmwarSide__None            = 0,
	ERealmwarSide__Aesir           = 1,
	ERealmwarSide__Vanir           = 2,
	ERealmwarSide__Max             = 3
};


// Enum CommonSource.ERankingBattleType
enum class FCommonSource_CommonSource_ERankingBattleType : uint8_t
{
	ERankingBattleType__Kill       = 0,
	ERankingBattleType__Damaged    = 1,
	ERankingBattleType__Damage     = 2,
	ERankingBattleType__Heal       = 3,
	ERankingBattleType__Max        = 4
};


// Enum CommonSource.ERelicGambleSlotType
enum class FCommonSource_CommonSource_ERelicGambleSlotType : uint8_t
{
	ERelicGambleSlotType__Slot0    = 0,
	ERelicGambleSlotType__Slot1    = 1,
	ERelicGambleSlotType__Slot2    = 2,
	ERelicGambleSlotType__Slot3    = 3,
	ERelicGambleSlotType__Slot4    = 4,
	ERelicGambleSlotType__Slot5    = 5,
	ERelicGambleSlotType__Slot6    = 6,
	ERelicGambleSlotType__Slot7    = 7,
	ERelicGambleSlotType__Slot8    = 8,
	ERelicGambleSlotType__Slot9    = 9,
	ERelicGambleSlotType__All      = 10,
	ERelicGambleSlotType__Max      = 11
};


// Enum CommonSource.ERealmwarAttend
enum class FCommonSource_CommonSource_ERealmwarAttend : uint8_t
{
	ERealmwarAttend__None          = 0,
	ERealmwarAttend__Attend        = 1,
	ERealmwarAttend__StartReady    = 2,
	ERealmwarAttend__Max           = 3
};


// Enum CommonSource.ERelicGamblePriceType
enum class FCommonSource_CommonSource_ERelicGamblePriceType : uint8_t
{
	ERelicGamblePriceType__None    = 0,
	ERelicGamblePriceType__Item    = 1,
	ERelicGamblePriceType__Gold    = 2,
	ERelicGamblePriceType__Cash    = 3,
	ERelicGamblePriceType__Max     = 4
};


// Enum CommonSource.RealmwarDifficulty
enum class FCommonSource_CommonSource_ERealmwarDifficulty : uint8_t
{
	RealmwarDifficulty__Low        = 0,
	RealmwarDifficulty__Mid        = 1,
	RealmwarDifficulty__High       = 2,
	RealmwarDifficulty__RealmwarDifficulty_MAX = 3
};


// Enum CommonSource.ERealmwarState
enum class FCommonSource_CommonSource_ERealmwarState : uint8_t
{
	ERealmwarState__PlayerWaiting  = 0,
	ERealmwarState__WarWaiting     = 1,
	ERealmwarState__War            = 2,
	ERealmwarState__ExtraWar       = 3,
	ERealmwarState__EndStart       = 4,
	ERealmwarState__End            = 5,
	ERealmwarState__Max            = 6
};


// Enum CommonSource.ERelicGambleType
enum class FCommonSource_CommonSource_ERelicGambleType : uint8_t
{
	ERelicGambleType__Normal       = 0,
	ERelicGambleType__Advanced     = 1,
	ERelicGambleType__TopGrade     = 2,
	ERelicGambleType__Max          = 3
};


// Enum CommonSource.EResetWeekType
enum class FCommonSource_CommonSource_EResetWeekType : uint8_t
{
	EResetWeekType__EveryWeeks     = 0,
	EResetWeekType__EveryTwoWeeks  = 1,
	EResetWeekType__EveryMonth     = 2,
	EResetWeekType__Max            = 3
};


// Enum CommonSource.EResetTimeType
enum class FCommonSource_CommonSource_EResetTimeType : uint8_t
{
	EResetTimeType__None           = 0,
	EResetTimeType__ShopBuyCount   = 1,
	EResetTimeType__CashShopBuyCount = 2,
	EResetTimeType__GuildDonateCount = 3,
	EResetTimeType__GuildAttendance = 4,
	EResetTimeType__WeeklyGuildContribution = 5,
	EResetTimeType__GuilRaidEnterCount = 6,
	EResetTimeType__Attendance     = 7,
	EResetTimeType__RepeatQuest    = 8,
	EResetTimeType__Collection     = 9,
	EResetTimeType__DungeonDailyBattleTime = 10,
	EResetTimeType__DungeonWeeklyBattleTime = 11,
	EResetTimeType__EventExchageBuyCount = 12,
	EResetTimeType__OfflineHuntingChargingTime = 13,
	EResetTimeType__LetterSendCount = 14,
	EResetTimeType__ExpRestoreCount = 15,
	EResetTimeType__CashShopLimitPackage = 16,
	EResetTimeType__EventMission   = 17,
	EResetTimeType__EscapeCount    = 18,
	EResetTimeType__PartyDungeonPlayCount = 19,
	EResetTimeType__PlaymentPromotion = 20,
	EResetTimeType__WorldDungeon   = 21,
	EResetTimeType__EventBingo     = 22,
	EResetTimeType__WorldDungeonCollection = 23,
	EResetTimeType__EventItemMakeCount = 24,
	EResetTimeType__GuildItemMake  = 25,
	EResetTimeType__WeeklyShopBuyCount = 26,
	EResetTimeType__EventEnchantGame = 27,
	EResetTimeType__Exchange       = 28,
	EResetTimeType__EventStepExchage = 29,
	EResetTimeType__WorldDungeonChampions = 30,
	EResetTimeType__WorldDungeonChampionsCollection = 31,
	EResetTimeType__RockPapperScissorsEx = 32,
	EResetTimeType__LionRoulette   = 33,
	EResetTimeType__InfinityDungeon = 34,
	EResetTimeType__RockPapperScissors = 35,
	EResetTimeType__StrongholdImprovement = 36,
	EResetTimeType__LimitPaymentAge = 37,
	EResetTimeType__EventExchageBuyCountWeekly = 38,
	EResetTimeType__GuildBattlefield = 39,
	EResetTimeType__Scheduler      = 40,
	EResetTimeType__BuffExpireNotify = 41,
	EResetTimeType__RoskvaDice     = 42,
	EResetTimeType__WorldBossReward = 43,
	EResetTimeType__RealmwarEnter  = 44,
	EResetTimeType__WorldEliteDungeon = 45,
	EResetTimeType__PaymentStackPromotion = 46,
	EResetTimeType__ServerInvasionPKRankingReset = 47,
	EResetTimeType__Translate      = 48,
	EResetTimeType__MonthlyShopBuyCount = 49,
	EResetTimeType__Max            = 50
};


// Enum CommonSource.ERunePreset
enum class FCommonSource_CommonSource_ERunePreset : uint8_t
{
	ERunePreset__Preset0           = 0,
	ERunePreset__Preset1           = 1,
	ERunePreset__Preset2           = 2,
	ERunePreset__Max               = 3
};


// Enum CommonSource.ERuneType
enum class FCommonSource_CommonSource_ERuneType : uint8_t
{
	ERuneType__Triangle            = 0,
	ERuneType__Quadrangle          = 1,
	ERuneType__Pentagon            = 2,
	ERuneType__Max                 = 3
};


// Enum CommonSource.ERuneTargetType
enum class FCommonSource_CommonSource_ERuneTargetType : uint8_t
{
	ERuneTargetType__None          = 0,
	ERuneTargetType__MonsterAll    = 1,
	ERuneTargetType__MonsterNormal = 2,
	ERuneTargetType__MonsterBoss   = 3,
	ERuneTargetType__Player        = 4,
	ERuneTargetType__Max           = 5
};


// Enum CommonSource.ERuneAttackType
enum class FCommonSource_CommonSource_ERuneAttackType : uint8_t
{
	ERuneAttackType__None          = 0,
	ERuneAttackType__Normal        = 1,
	ERuneAttackType__Skill         = 2,
	ERuneAttackType__Max           = 3
};


// Enum CommonSource.EScheduleReason
enum class FCommonSource_CommonSource_EScheduleReason : uint8_t
{
	EScheduleReason__None          = 0,
	EScheduleReason__Success       = 1,
	EScheduleReason__TableNotFound = 2,
	EScheduleReason__DBNotFound    = 3,
	EScheduleReason__ContentsBlock = 4,
	EScheduleReason__Continue      = 5,
	EScheduleReason__Terminate     = 6,
	EScheduleReason__Dead          = 7,
	EScheduleReason__Brutal        = 8,
	EScheduleReason__CanNotPlay    = 9,
	EScheduleReason__CanNotPlayDungeon = 10,
	EScheduleReason__CanNotUseResource = 11,
	EScheduleReason__CanNotRecoveryExp = 12,
	EScheduleReason__CanNotMainQuest = 13,
	EScheduleReason__CanNotPlayInMap = 14,
	EScheduleReason__NotEnoughLevel = 15,
	EScheduleReason__NotEnoughGold = 16,
	EScheduleReason__NotEnoughCashMileage = 17,
	EScheduleReason__NotEnoughCount = 18,
	EScheduleReason__NotEnoughFreeTime = 19,
	EScheduleReason__NotEnoughSetBulk = 20,
	EScheduleReason__NotEnoughQuest = 21,
	EScheduleReason__NotEnoughItem = 22,
	EScheduleReason__NotEnoughCash = 23,
	EScheduleReason__NotEnoughInventory = 24,
	EScheduleReason__NotEnoughDismantleItem = 25,
	EScheduleReason__ValidPlay     = 26,
	EScheduleReason__NotEnoughPartyDungeonTicket = 27,
	EScheduleReason__Max           = 28
};


// Enum CommonSource.EResetDayOfWeek
enum class FCommonSource_CommonSource_EResetDayOfWeek : uint8_t
{
	EResetDayOfWeek__Everyday      = 0,
	EResetDayOfWeek__Sunday        = 1,
	EResetDayOfWeek__Monday        = 2,
	EResetDayOfWeek__Tuesday       = 3,
	EResetDayOfWeek__Wednesday     = 4,
	EResetDayOfWeek__Thursday      = 5,
	EResetDayOfWeek__Friday        = 6,
	EResetDayOfWeek__Saturday      = 7,
	EResetDayOfWeek__Max           = 8
};


// Enum CommonSource.EScheduleState
enum class FCommonSource_CommonSource_EScheduleState : uint8_t
{
	EScheduleState__None           = 0,
	EScheduleState__Play           = 1,
	EScheduleState__Pause          = 2,
	EScheduleState__Continue       = 3,
	EScheduleState__Stop           = 4,
	EScheduleState__Completed      = 5,
	EScheduleState__Max            = 6
};


// Enum CommonSource.ERuneAttribute
enum class FCommonSource_CommonSource_ERuneAttribute : uint8_t
{
	ERuneAttribute__None           = 0,
	ERuneAttribute__Brilliant      = 1,
	ERuneAttribute__Ornate         = 2,
	ERuneAttribute__Luminous       = 3,
	ERuneAttribute__Clarity        = 4,
	ERuneAttribute__Beautiful      = 5,
	ERuneAttribute__Max            = 6
};


// Enum CommonSource.EScheduleType
enum class FCommonSource_CommonSource_EScheduleType : uint8_t
{
	EScheduleType__None            = 0,
	EScheduleType__Warp            = 1,
	EScheduleType__AttackCounter   = 2,
	EScheduleType__Resurrection    = 3,
	EScheduleType__ConsumableBuy   = 4,
	EScheduleType__Quest           = 5,
	EScheduleType__Dungeon         = 6,
	EScheduleType__DismantleItem   = 7,
	EScheduleType__PartyDungeon    = 8,
	EScheduleType__Max             = 9
};


// Enum CommonSource.ESealedStoneEnchantType
enum class FCommonSource_CommonSource_ESealedStoneEnchantType : uint8_t
{
	ESealedStoneEnchantType__Success = 0,
	ESealedStoneEnchantType__None  = 1,
	ESealedStoneEnchantType__Downgrade = 2,
	ESealedStoneEnchantType__Init  = 3,
	ESealedStoneEnchantType__Max   = 4
};


// Enum CommonSource.ESealedStoneType
enum class FCommonSource_CommonSource_ESealedStoneType : uint8_t
{
	ESealedStoneType__None         = 0,
	ESealedStoneType__Jormungand   = 1,
	ESealedStoneType__Fenrir       = 2,
	ESealedStoneType__Loki         = 3,
	ESealedStoneType__Hell         = 4,
	ESealedStoneType__Freyr        = 5,
	ESealedStoneType__Magni        = 6,
	ESealedStoneType__Angrboda     = 7,
	ESealedStoneType__Njord        = 8,
	ESealedStoneType__Max          = 9
};


// Enum CommonSource.ESecurityLevel
enum class FCommonSource_CommonSource_ESecurityLevel : uint8_t
{
	ESecurityLevel__Level0         = 0,
	ESecurityLevel__Level1         = 1,
	ESecurityLevel__Level2         = 2,
	ESecurityLevel__Level3         = 3,
	ESecurityLevel__Level4         = 4,
	ESecurityLevel__Level5         = 5,
	ESecurityLevel__Max            = 6
};


// Enum CommonSource.ESecuritySubType
enum class FCommonSource_CommonSource_ESecuritySubType : uint8_t
{
	ESecuritySubType__None         = 0,
	ESecuritySubType__CoolTime     = 1,
	ESecuritySubType__Animation    = 2,
	ESecuritySubType__Max          = 3
};


// Enum CommonSource.ESecurityType
enum class FCommonSource_CommonSource_ESecurityType : uint8_t
{
	ESecurityType__Move            = 0,
	ESecurityType__Attack          = 1,
	ESecurityType__HeartBeat       = 2,
	ESecurityType__MoveHackPenalty = 3,
	ESecurityType__AttackHackPenalty = 4,
	ESecurityType__AttackHackPeriodPenalty = 5,
	ESecurityType__InteractHack    = 6,
	ESecurityType__RandomBoxTimeHack = 7,
	ESecurityType__HeartBeatShort  = 8,
	ESecurityType__HeartBeatShort2 = 9,
	ESecurityType__ParamHackPenalty = 10,
	ESecurityType__FlyHack         = 11,
	ESecurityType__Max             = 12
};


// Enum CommonSource.EWorldMatchingContentsType
enum class FCommonSource_CommonSource_EWorldMatchingContentsType : uint8_t
{
	EWorldMatchingContentsType__None = 0,
	EWorldMatchingContentsType__WorldEliteDungeon = 1,
	EWorldMatchingContentsType__WorldShadownDungeon = 2,
	EWorldMatchingContentsType__Max = 3
};


// Enum CommonSource.EServerGroupID
enum class FCommonSource_CommonSource_EServerGroupID : uint8_t
{
	EServerGroupID__GameServer     = 0,
	EServerGroupID__WorldServer    = 1,
	EServerGroupID__ChampionsServer = 2,
	EServerGroupID__WorldRandomMatchingServer = 3,
	EServerGroupID__Max            = 4
};


// Enum CommonSource.EServerInvasionKickReason
enum class FCommonSource_CommonSource_EServerInvasionKickReason : uint8_t
{
	EServerInvasionKickReason__None = 0,
	EServerInvasionKickReason__ContentsBlock = 1,
	EServerInvasionKickReason__Maintenance = 2,
	EServerInvasionKickReason__Max = 3
};


// Enum CommonSource.EInvasionObjectState
enum class FCommonSource_CommonSource_EInvasionObjectState : uint8_t
{
	EInvasionObjectState__Killed   = 0,
	EInvasionObjectState__Max      = 1
};


// Enum CommonSource.EServerInvasionPkRuleType
enum class FCommonSource_CommonSource_EServerInvasionPkRuleType : uint8_t
{
	EServerInvasionPkRuleType__Dead = 0,
	EServerInvasionPkRuleType__Kill = 1,
	EServerInvasionPkRuleType__Assist = 2,
	EServerInvasionPkRuleType__Max = 3
};


// Enum CommonSource.EServerInvasionMessageType
enum class FCommonSource_CommonSource_EServerInvasionMessageType : uint8_t
{
	EServerInvasionMessageType__None = 0,
	EServerInvasionMessageType__Connecting = 1,
	EServerInvasionMessageType__ConnectComplete = 2,
	EServerInvasionMessageType__End = 3,
	EServerInvasionMessageType__Start = 4,
	EServerInvasionMessageType__Disconnect = 5,
	EServerInvasionMessageType__InvasionQuestForceComplete = 6,
	EServerInvasionMessageType__EndWarning = 7,
	EServerInvasionMessageType__InvasionQuestDeleteReset = 8,
	EServerInvasionMessageType__Max = 9
};


// Enum CommonSource.EServerInvasionUserType
enum class FCommonSource_CommonSource_EServerInvasionUserType : uint8_t
{
	EServerInvasionUserType__None  = 0,
	EServerInvasionUserType__Attack = 1,
	EServerInvasionUserType__Defence = 2,
	EServerInvasionUserType__Max   = 3
};


// Enum CommonSource.EServerInvasionState
enum class FCommonSource_CommonSource_EServerInvasionState : uint8_t
{
	EServerInvasionState__None     = 0,
	EServerInvasionState__Apply    = 1,
	EServerInvasionState__Connecting = 2,
	EServerInvasionState__ConnectComplete = 3,
	EServerInvasionState__Max      = 4
};


// Enum CommonSource.EServerInvasionCheatState
enum class FCommonSource_CommonSource_EServerInvasionCheatState : uint8_t
{
	EServerInvasionCheatState__None = 0,
	EServerInvasionCheatState__Start = 1,
	EServerInvasionCheatState__Stop = 2,
	EServerInvasionCheatState__Reset = 3,
	EServerInvasionCheatState__Max = 4
};


// Enum CommonSource.EWorldShadowState
enum class FCommonSource_CommonSource_EWorldShadowState : uint8_t
{
	EWorldShadowState__None        = 0,
	EWorldShadowState__Init_GroupLoad = 1,
	EWorldShadowState__Init_ServerMatchingLoadDB = 2,
	EWorldShadowState__Init_ServerMatchingAddDB = 3,
	EWorldShadowState__Init_RequestTotalInfo = 4,
	EWorldShadowState__Init_NotifyTotalInfo = 5,
	EWorldShadowState__Open        = 6,
	EWorldShadowState__Closed      = 7,
	EWorldShadowState__Run         = 8,
	EWorldShadowState__Closed_ServerMatchingAddDB = 9,
	EWorldShadowState__Closed_ServerMatchingLoadDB = 10,
	EWorldShadowState__Closed_WaitForRun = 11,
	EWorldShadowState__Done        = 12,
	EWorldShadowState__Max         = 13
};


// Enum CommonSource.EPointTakeType
enum class FCommonSource_CommonSource_EPointTakeType : uint8_t
{
	EPointTakeType__NonUse         = 0,
	EPointTakeType__Fixed          = 1,
	EPointTakeType__Rate           = 2,
	EPointTakeType__Max            = 3
};


// Enum CommonSource.EServerMigrationServerState
enum class FCommonSource_CommonSource_EServerMigrationServerState : uint8_t
{
	EServerMigrationServerState__Open = 0,
	EServerMigrationServerState__Almost = 1,
	EServerMigrationServerState__Closed = 2,
	EServerMigrationServerState__Max = 3
};


// Enum CommonSource.ESoftResetTierType
enum class FCommonSource_CommonSource_ESoftResetTierType : uint8_t
{
	ESoftResetTierType__None       = 0,
	ESoftResetTierType__Scout      = 1,
	ESoftResetTierType__Guardsman  = 2,
	ESoftResetTierType__LesserKnight = 3,
	ESoftResetTierType__Knight     = 4,
	ESoftResetTierType__ChiefKnight = 5,
	ESoftResetTierType__KnightCommander = 6,
	ESoftResetTierType__DeputyCommander = 7,
	ESoftResetTierType__Max        = 8
};


// Enum CommonSource.EShadowTierType
enum class FCommonSource_CommonSource_EShadowTierType : uint8_t
{
	EShadowTierType__Scout         = 0,
	EShadowTierType__Guardsman     = 1,
	EShadowTierType__LesserKnight  = 2,
	EShadowTierType__Knight        = 3,
	EShadowTierType__ChiefKnight   = 4,
	EShadowTierType__KnightCommander = 5,
	EShadowTierType__DeputyCommander = 6,
	EShadowTierType__Commander     = 7,
	EShadowTierType__DivisionCommander = 8,
	EShadowTierType__CorpsCommander = 9,
	EShadowTierType__General       = 10,
	EShadowTierType__Warlord       = 11,
	EShadowTierType__Max           = 12
};


// Enum CommonSource.EShopType
enum class FCommonSource_CommonSource_EShopType : uint8_t
{
	EShopType__None                = 0,
	EShopType__Normal              = 1,
	EShopType__ShadowDungeon       = 2,
	EShopType__CastleWar           = 3,
	EShopType__WorldShadowDungeon  = 4,
	EShopType__ServerInvasion      = 5,
	EShopType__Max                 = 6
};


// Enum CommonSource.EShopLimitedShareType
enum class FCommonSource_CommonSource_EShopLimitedShareType : uint8_t
{
	EShopLimitedShareType__None    = 0,
	EShopLimitedShareType__Player_DailyBuy = 1,
	EShopLimitedShareType__Server_DailyBuy = 2,
	EShopLimitedShareType__Player_LimitedBuy = 3,
	EShopLimitedShareType__Player_WeeklyBuy = 4,
	EShopLimitedShareType__Server_WeeklyBuy = 5,
	EShopLimitedShareType__Guild_DailyBuy = 6,
	EShopLimitedShareType__Guild_WeeklyBuy = 7,
	EShopLimitedShareType__Castlewar_Season = 8,
	EShopLimitedShareType__Server_Season = 9,
	EShopLimitedShareType__Server_MonthlyBuy = 10,
	EShopLimitedShareType__Player_MonthlyBuy = 11,
	EShopLimitedShareType__Max     = 12
};


// Enum CommonSource.EShadowDungeonPkRuleType
enum class FCommonSource_CommonSource_EShadowDungeonPkRuleType : uint8_t
{
	EShadowDungeonPkRuleType__Dead = 0,
	EShadowDungeonPkRuleType__Kill = 1,
	EShadowDungeonPkRuleType__Assist = 2,
	EShadowDungeonPkRuleType__Max  = 3
};


// Enum CommonSource.EShopPriceType
enum class FCommonSource_CommonSource_EShopPriceType : uint8_t
{
	EShopPriceType__Gold           = 0,
	EShopPriceType__Cash           = 1,
	EShopPriceType__Mileage        = 2,
	EShopPriceType__GuildCoin      = 3,
	EShopPriceType__RealmwarCoin   = 4,
	EShopPriceType__Badge          = 5,
	EShopPriceType__ShadowCoin     = 6,
	EShopPriceType__CashMileage    = 7,
	EShopPriceType__CastlewarCoin  = 8,
	EShopPriceType__HellCoin       = 9,
	EShopPriceType__ServerInvasionCoin = 10,
	EShopPriceType__Max            = 11
};


// Enum CommonSource.ETriggerInteractStateType
enum class FCommonSource_CommonSource_ETriggerInteractStateType : uint8_t
{
	ETriggerInteractStateType__None = 0,
	ETriggerInteractStateType__Disabled = 1,
	ETriggerInteractStateType__Activation = 2,
	ETriggerInteractStateType__complete = 3,
	ETriggerInteractStateType__Max = 4
};


// Enum CommonSource.ETriggerTabType
enum class FCommonSource_CommonSource_ETriggerTabType : uint8_t
{
	ETriggerTabType__TriggerCondType = 0,
	ETriggerTabType__TriggerActionType = 1,
	ETriggerTabType__TriggerTargetTabType = 2,
	ETriggerTabType__FactionTab    = 3,
	ETriggerTabType__InteractStateTab = 4,
	ETriggerTabType__QuestTypeTab  = 5,
	ETriggerTabType__QuestStateTab = 6,
	ETriggerTabType__GameCameraModeTab = 7,
	ETriggerTabType__Max           = 8
};


// Enum CommonSource.ETriggerTargetType
enum class FCommonSource_CommonSource_ETriggerTargetType : uint8_t
{
	ETriggerTargetType__None       = 0,
	ETriggerTargetType__Participant = 1,
	ETriggerTargetType__CondObject = 2,
	ETriggerTargetType__SpawnObject = 3,
	ETriggerTargetType__SpawnGroup = 4,
	ETriggerTargetType__Max        = 5
};


// Enum CommonSource.ETriggerCondType
enum class FCommonSource_CommonSource_ETriggerCondType : uint8_t
{
	ETriggerCondType__None         = 0,
	ETriggerCondType__EnterArea    = 1,
	ETriggerCondType__CutSceneEnd  = 2,
	ETriggerCondType__MonsterKill  = 3,
	ETriggerCondType__Quest        = 4,
	ETriggerCondType__InteractionDone = 5,
	ETriggerCondType__Waiting      = 6,
	ETriggerCondType__ItemUse      = 7,
	ETriggerCondType__PreStepMonsterKill = 8,
	ETriggerCondType__DoneTrigger  = 9,
	ETriggerCondType__IsMap        = 10,
	ETriggerCondType__HpPercent    = 11,
	ETriggerCondType__CastlewarState = 12,
	ETriggerCondType__Max          = 13
};


// Enum CommonSource.EAreaVehicleType
enum class FCommonSource_CommonSource_EAreaVehicleType : uint8_t
{
	EAreaVehicleType__All          = 0,
	EAreaVehicleType__Ground       = 1,
	EAreaVehicleType__Air          = 2,
	EAreaVehicleType__Battle       = 3,
	EAreaVehicleType__Nothing      = 4,
	EAreaVehicleType__EAreaVehicleType_MAX = 5
};


// Enum CommonSource.EVehicleRandomBoxType
enum class FCommonSource_CommonSource_EVehicleRandomBoxType : uint8_t
{
	EVehicleRandomBoxType__One     = 0,
	EVehicleRandomBoxType__Several = 1,
	EVehicleRandomBoxType__Max     = 2
};


// Enum CommonSource.ETriggerActionType
enum class FCommonSource_CommonSource_ETriggerActionType : uint8_t
{
	ETriggerActionType__None       = 0,
	ETriggerActionType__AddPlayer  = 1,
	ETriggerActionType__CutScene   = 2,
	ETriggerActionType__ObjectSpawn = 3,
	ETriggerActionType__FactionChange = 4,
	ETriggerActionType__ObjectDestroy = 5,
	ETriggerActionType__CameraChange = 6,
	ETriggerActionType__QuestAdd   = 7,
	ETriggerActionType__Interaction = 8,
	ETriggerActionType__MoveCommand = 9,
	ETriggerActionType__MapWarp    = 10,
	ETriggerActionType__MapMove    = 11,
	ETriggerActionType__MapPhasing = 12,
	ETriggerActionType__MercenarySpawn = 13,
	ETriggerActionType__AnimationStart = 14,
	ETriggerActionType__PortalCreate = 15,
	ETriggerActionType__BarrierActive = 16,
	ETriggerActionType__DungeonWin = 17,
	ETriggerActionType__MonsterSpeech = 18,
	ETriggerActionType__SoundPlay  = 19,
	ETriggerActionType__ObjectGroupSpawn = 20,
	ETriggerActionType__CastlewarDefensePortal = 21,
	ETriggerActionType__ServerMessage = 22,
	ETriggerActionType__CastlewarDefenseBuff = 23,
	ETriggerActionType__Max        = 24
};


// Enum CommonSource.EVehicleType
enum class FCommonSource_CommonSource_EVehicleType : uint8_t
{
	EVehicleType__None             = 0,
	EVehicleType__Ground           = 1,
	EVehicleType__Air              = 2,
	EVehicleType__Battle           = 3,
	EVehicleType__Max              = 4
};


// Enum CommonSource.EWorldDungeonState
enum class FCommonSource_CommonSource_EWorldDungeonState : uint8_t
{
	EWorldDungeonState__None       = 0,
	EWorldDungeonState__Load       = 1,
	EWorldDungeonState__LoadRanking = 2,
	EWorldDungeonState__Notify     = 3,
	EWorldDungeonState__Broadcast  = 4,
	EWorldDungeonState__Reset      = 5,
	EWorldDungeonState__Schedule   = 6,
	EWorldDungeonState__Ranking    = 7,
	EWorldDungeonState__Max        = 8
};


// Enum CommonSource.EWorldDungeonTier
enum class FCommonSource_CommonSource_EWorldDungeonTier : uint8_t
{
	EWorldDungeonTier__None        = 0,
	EWorldDungeonTier__WorldDungeon1 = 1,
	EWorldDungeonTier__WorldDungeon2 = 2,
	EWorldDungeonTier__Champions   = 3,
	EWorldDungeonTier__Max         = 4
};


// Enum CommonSource.EWorldDungeonNotifyState
enum class FCommonSource_CommonSource_EWorldDungeonNotifyState : uint8_t
{
	EWorldDungeonNotifyState__None = 0,
	EWorldDungeonNotifyState__Closed = 1,
	EWorldDungeonNotifyState__Opened = 2,
	EWorldDungeonNotifyState__ShowResult = 3,
	EWorldDungeonNotifyState__Max  = 4
};


// Enum CommonSource.EWorldDungeonGuildAllianceState
enum class FCommonSource_CommonSource_EWorldDungeonGuildAllianceState : uint8_t
{
	EWorldDungeonGuildAllianceState__None = 0,
	EWorldDungeonGuildAllianceState__Alliance = 1,
	EWorldDungeonGuildAllianceState__Hostile = 2,
	EWorldDungeonGuildAllianceState__Max = 3
};


// Enum CommonSource.EWorldWideReason
enum class FCommonSource_CommonSource_EWorldWideReason : uint8_t
{
	EWorldWideReason__None         = 0,
	EWorldWideReason__ServerInvasionObjectKill = 1,
	EWorldWideReason__Max          = 2
};


// Enum CommonSource.EWorldWideType
enum class FCommonSource_CommonSource_EWorldWideType : uint8_t
{
	EWorldWideType__None           = 0,
	EWorldWideType__GameServer     = 1,
	EWorldWideType__CastleWar      = 2,
	EWorldWideType__WorldDungeon1  = 3,
	EWorldWideType__WorldDungeon2  = 4,
	EWorldWideType__EliteDungeon   = 5,
	EWorldWideType__ChampionsDungeon = 6,
	EWorldWideType__GuildBattlefield = 7,
	EWorldWideType__ShadowDungeon  = 8,
	EWorldWideType__RealmWar       = 9,
	EWorldWideType__PartyDungeon   = 10,
	EWorldWideType__ServerInvasion = 11,
	EWorldWideType__Max            = 12
};


// Enum CommonSource.EBattleVehicleType
enum class FCommonSource_CommonSource_EBattleVehicleType : uint8_t
{
	EBattleVehicleType__Stand      = 0,
	EBattleVehicleType__Ground     = 1,
	EBattleVehicleType__CastlewarStand = 2,
	EBattleVehicleType__CastlewarGround = 3,
	EBattleVehicleType__Max        = 4
};


// Enum CommonSource.ETriggerFactionType
enum class FCommonSource_CommonSource_ETriggerFactionType : uint8_t
{
	ETriggerFactionType__None      = 0,
	ETriggerFactionType__neutrality = 1,
	ETriggerFactionType__Player    = 2,
	ETriggerFactionType__Friendlymonster = 3,
	ETriggerFactionType__Enemymonster = 4,
	ETriggerFactionType__Towermonster = 5,
	ETriggerFactionType__Max       = 6
};



//---------------------------------------------------------------------------
// Script Structs
//---------------------------------------------------------------------------

// ScriptStruct CommonSource.Double
// 0x0008
struct FCommonSource_Double
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct CommonSource.ExchangePriceInfo
// 0x0030
struct FCommonSource_ExchangePriceInfo
{
	struct FCommonSource_Double                        m_MinRegisterPrice;                                       // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        m_MaxRegisterPrice;                                       // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SellingPrice;                                           // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FCommonSource_Double                        m_7DayAveragePrice;                                       // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      m_array7DayAveragePrice;                                  // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.OptionParamInfo
// 0x0018
struct FCommonSource_OptionParamInfo
{
	int64_t                                            m_ItemSerial;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ItemIndex;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ParamEnchantStep;                                       // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECharParam              m_OptionParamType;                                        // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0012(0x0002) MISSED OFFSET
	float                                              m_OptionParamValue;                                       // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ExchangeItemInfo
// 0x0058
struct FCommonSource_ExchangeItemInfo
{
	int64_t                                            m_ExchangeDBIdx;                                          // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ItemSerial;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	int64_t                                            m_ExpireTime;                                             // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERewardReason           m_RewardReason;                                           // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_OdinEnchantCount;                                       // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
	int64_t                                            m_OdinEnchantExpireUpdateTime;                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ThorEnchantCount;                                       // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	int64_t                                            m_ThorEnchantResetTime;                                   // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayOptionParam;                                       // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ExchangeBuyInfo1
// 0x00E0
struct FCommonSource_ExchangeBuyInfo1
{
	int64_t                                            m_ExchangeDBIdx;                                          // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_EncodeAccountID;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_RegistAccountDBKey;                                     // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RegistUserDBKey;                                        // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_ExchangeItemInfo              m_ItemInfo;                                               // 0x0028(0x0058) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EExchangeSaleState      m_SaleState;                                              // 0x0080(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	struct FCommonSource_ExchangePriceInfo             m_PriceInfo;                                              // 0x0088(0x0030) (Edit, BlueprintVisible)
	int                                                m_SoldItemCount;                                          // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsMySale;                                               // 0x00C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	int                                                m_SalesCash;                                              // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_WaitingTime;                                            // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	int64_t                                            m_BuyUserDBKey;                                           // 0x00D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAlertPriceItem;                                       // 0x00D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ExchangeBuyInfo0
// 0x0018
struct FCommonSource_ExchangeBuyInfo0
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FCommonSource_Double                        m_MinRegisterPrice;                                       // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SellingCount;                                           // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.SavePointInfo
// 0x0030
struct FCommonSource_SavePointInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NaviVolumeAreaIndex;                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x0008(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     m_Memo;                                                   // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_OrderNo;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ItemEnchantHistory
// 0x000C
struct FCommonSource_ItemEnchantHistory
{
	int                                                m_EnchantStep;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERandomResultType       m_EnchantResult;                                          // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_ExpectedEnchantStep;                                    // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ItemEnchant
// 0x0020
struct FCommonSource_ItemEnchant
{
	int64_t                                            m_ItemSerial;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ItemEnchantHistory>    m_ArrayEnchantHistory;                                    // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.RelicGambleReward
// 0x0018
struct FCommonSource_RelicGambleReward
{
	unsigned char                                      m_Position;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EResourceType           m_ResourceType;                                           // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_ResourceIndex;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ResourceCount;                                          // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.RandomGuaranteeInfo
// 0x0008
struct FCommonSource_RandomGuaranteeInfo
{
	FCommonSource_CommonSource_ERandomGuaranteeType    m_RandomGuaranteeType;                                    // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_Count;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CashShopSalesTimeInfo
// 0x0018
struct FCommonSource_CashShopSalesTimeInfo
{
	int                                                m_Slot;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ShopIndex;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_limitCount;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuyCount;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_StartHour;                                              // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_StartMinute;                                            // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EndHour;                                                // 0x0012(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EndMinute;                                              // 0x0013(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCurrentSlot;                                          // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildMarkInfo
// 0x0014
struct FCommonSource_GuildMarkInfo
{
	int                                                m_EmblemIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_FrameIndex;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_FrameColorIndex;                                        // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BackgroundColorIndex;                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EffectIndex;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastleOccupationInfo
// 0x0058
struct FCommonSource_CastleOccupationInfo
{
	int                                                m_CastleIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PlayerName;                                             // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0030(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_ECastlewarInteractState m_CastlewarInteractState;                                 // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	float                                              m_InteractRemainTime;                                     // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_BossPos;                                                // 0x004C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarEnterGuildInfo
// 0x0058
struct FCommonSource_CastlewarEnterGuildInfo
{
	int                                                m_ServerID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_GuildDBKey;                                             // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0020(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CastlewarGroupID;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CastleIndex;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GroupSelectTime;                                        // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.QualifierRankerInfo
// 0x0028
struct FCommonSource_QualifierRankerInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_KillCount;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LastKillTime;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.DamageMeterInfo
// 0x0020
struct FCommonSource_DamageMeterInfo
{
	int                                                m_PlayerIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_DamagePercent;                                          // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.DuelRankerInfo
// 0x0028
struct FCommonSource_DuelRankerInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_KillCount;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LastKillTime;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.FieldBossSpawnInfo
// 0x0010
struct FCommonSource_FieldBossSpawnInfo
{
	int                                                m_SpawnIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_SpawnRemainTime;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAppear;                                               // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBlock;                                                // 0x0009(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	float                                              m_DisappearingRemainTime;                                 // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildDefenseBlessInfo
// 0x0008
struct FCommonSource_GuildDefenseBlessInfo
{
	unsigned char                                      m_BlessPlaceNum;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_BlessSlotNum;                                           // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_BlessIndex;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildDefenseSummonVehicleInfo
// 0x0010
struct FCommonSource_GuildDefenseSummonVehicleInfo
{
	unsigned char                                      m_SummonPlaceNum;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SummonSlotNum;                                          // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_DefenseSummonVehicleIndex;                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RiderObjectSerial;                                      // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildDefenseBlessSummonInfo
// 0x0050
struct FCommonSource_GuildDefenseBlessSummonInfo
{
	int                                                m_GuardianCoin;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_GuildDefenseBlessInfo> m_arrayBlessing;                                          // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildDefenseBlessInfo> m_arrayCanBuyBless;                                       // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_SummonVehicleOpenCount;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_GuildDefenseSummonVehicleInfo> m_arraySummonedVehicle;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildDefenseSummonVehicleInfo> m_arrayCanSummonVehicle;                                  // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildMemberSimpleInfo
// 0x0028
struct FCommonSource_GuildMemberSimpleInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildDefenseAreaMonsterInfo
// 0x0008
struct FCommonSource_GuildDefenseAreaMonsterInfo
{
	int                                                m_AreaIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MonsterCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildDefenseDoingInfo
// 0x0078
struct FCommonSource_GuildDefenseDoingInfo
{
	FCommonSource_CommonSource_EGuildDefenseState      m_GuildDefenseState;                                      // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	int64_t                                            m_MapSerial;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CurrentWaveGroup;                                       // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CurrentSubWave;                                         // 0x0015(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CurrentWaveSpeed;                                       // 0x0016(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0017(0x0001) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainNextWaveTime;                                     // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_StatueHpPercent;                                        // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerCount;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuardianCoin;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RemainBossCount;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GuildMemberSimpleInfo> m_arrayGuildMemberSimpleInfo;                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayBlessingList;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildDefenseSummonVehicleInfo> m_arraySummonedVehicle;                                   // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildDefenseAreaMonsterInfo> m_arrayAreaMonsterInfo;                                   // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_SkipDifficulty;                                         // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_SkipState;                                              // 0x0071(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsTimeout;                                              // 0x0072(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0073(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildStrongholdGuildInfo
// 0x0050
struct FCommonSource_GuildStrongholdGuildInfo
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildStrongholdState   m_GuildStrongholdState;                                   // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ProclaimCount;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_AttackerGuildDBKey;                                     // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_TotalPoint;                                             // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int64_t>                                    m_arrayDailyPoint;                                        // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayBuffGroup;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayBuffLevel;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildStrongholdMapInfo
// 0x0078
struct FCommonSource_GuildStrongholdMapInfo
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildStrongholdState   m_GuildStrongholdState;                                   // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFirst;                                                // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0028(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	int64_t                                            m_AttackerGuildDBKey;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_AttackerGuildName;                                      // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayAddedAttackerGuildDBKey;                           // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayBuffGroup;                                         // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.RewardInfo
// 0x0030
struct FCommonSource_RewardInfo
{
	FCommonSource_CommonSource_EResourceType           m_ResourceType;                                           // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ResourceIndex;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ResourceCount;                                          // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                m_Option;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_IsDecided;                                              // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
	int64_t                                            m_ExpireTime;                                             // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFixedTime;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERewardEffectEmphasisType m_EffectEmphasisType;                                     // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                m_BonusValue;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.InfinityDungeonBuffInfo
// 0x000C
struct FCommonSource_InfinityDungeonBuffInfo
{
	int                                                m_Index;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Grade;                                                  // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECharParam              m_Param;                                                  // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                m_Value;                                                  // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.WeaponShapeDecideInfo
// 0x0010
struct FCommonSource_WeaponShapeDecideInfo
{
	int                                                m_SlotIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_WeaponShapeIndex;                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChangeCount;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainExpireTime;                                       // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.AvatarDecideInfo
// 0x0010
struct FCommonSource_AvatarDecideInfo
{
	int                                                m_SlotIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AvatarIndex;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChangeCount;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainExpireTime;                                       // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.LinkSlotBindInfo
// 0x0018
struct FCommonSource_LinkSlotBindInfo
{
	int                                                m_BoardIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<unsigned char>                              m_arrayBindSlotNumber;                                    // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.LinkBindInfo
// 0x0020
struct FCommonSource_LinkBindInfo
{
	int                                                m_BoardIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BindCount;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_BonusCount;                                             // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELinkEmblemGrade        m_BindGrade;                                              // 0x0009(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELinkEmblemType         m_EmblemType;                                             // 0x000A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x000B(0x0005) MISSED OFFSET
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayBindOptionParam;                                   // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.LinkSlotInfo
// 0x0028
struct FCommonSource_LinkSlotInfo
{
	int                                                m_BoardIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SlotNum;                                                // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_EmblemIndex;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELinkEmblemType         m_EmblemType;                                             // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELinkEmblemGrade        m_EmblemGrade;                                            // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	struct FCommonSource_OptionParamInfo               m_EmblemOption;                                           // 0x0010(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.PartyMemberInfo
// 0x0088
struct FCommonSource_PartyMemberInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_PlayerDBKey;                                            // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectIndex;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BattlePower;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_MaxHp;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CurHp;                                                  // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_MaxMp;                                                  // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Shield;                                                 // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MpShield;                                               // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AbsorbShield;                                           // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleHp;                                              // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaxHpUsingCurHp;                                        // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x0064(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsConnected;                                            // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsReadyState;                                           // 0x0071(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.PetGuardianBoardInfo
// 0x0040
struct FCommonSource_PetGuardianBoardInfo
{
	FCommonSource_CommonSource_EPetGuardianBoardGrade  m_BoardGrade;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetType                m_BoardPetType;                                           // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ConditionChangeFreeCount;                               // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_OptionChangeFreeCount;                                  // 0x0003(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsGuardStarted;                                         // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int64_t                                            m_ExpireTime;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        m_arrayNeedPetIndex;                                      // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<FCommonSource_CommonSource_ECharParam>      m_arrayOptionCharParam;                                   // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                      m_arrayOptionValue;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.PetDecideInfo
// 0x0010
struct FCommonSource_PetDecideInfo
{
	int                                                m_SlotIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PetIndex;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChangeCount;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainExpireTime;                                       // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.QuickSlotInfo
// 0x0018
struct FCommonSource_QuickSlotInfo
{
	FCommonSource_CommonSource_EQuickSlotType          m_QuickSlotType;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SlotIndex;                                              // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	int64_t                                            m_Data;                                                   // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ESlotDataType           m_DataType;                                               // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAuto;                                                 // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0012(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.ScanInfo
// 0x0030
struct FCommonSource_ScanInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_Name;                                                   // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0018(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CostumeResourceInfo
// 0x0040
struct FCommonSource_CostumeResourceInfo
{
	TArray<FCommonSource_CommonSource_ECostumeResourceType> m_arrayEquipCostumeResourceType;                          // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayEquipCostumeIndex;                                 // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayEquipCostumeAColorIndex;                           // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayEquipCostumeBColorIndex;                           // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GameItemInfo
// 0x0090
struct FCommonSource_GameItemInfo
{
	int64_t                                            m_ItemSerial;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EStorageType            m_StorageType;                                            // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                m_ItemIndex;                                              // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	TArray<int>                                        m_arrayGemSocket;                                         // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsLock;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_RemainExpireTime;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ExpireDate;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CreateDate;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayOptionParam;                                       // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_OdinEnchantCount;                                       // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	int64_t                                            m_OdinEnchantExpireUpdateTime;                            // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_OdinCouponMinPeriod;                                    // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_OdinCouponMaxPeriod;                                    // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ThorEnchantCount;                                       // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	int64_t                                            m_ThorEnchantResetTime;                                   // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ChangeEnchantCount;                                     // 0x0088(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.SkillTranscendBuffInfo
// 0x0008
struct FCommonSource_SkillTranscendBuffInfo
{
	int                                                m_SkillTranscendBuffIndex;                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillTranscendLevel;                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ParamInfo
// 0x0008
struct FCommonSource_ParamInfo
{
	FCommonSource_CommonSource_ECharParam              m_ParamType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EParamReason            m_ParamReason;                                            // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              m_ParamValue;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.BuffInfo
// 0x0080
struct FCommonSource_BuffInfo
{
	int64_t                                            m_BuffIndex;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuffSerial;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Duration;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillEnchantLevel;                                      // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<int>                                        m_arraySkillTranscendLevel;                               // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_SkillTranscendBuffInfo> m_arraySkillTranscendBuffInfo;                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_BuffStackCount;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ParamInfo>             m_arrayBuffParam;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildName;                                              // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PlayerName;                                             // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_BuffExpireTime;                                         // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DamagedTargetCount;                                     // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.TreasureBoxInfo
// 0x0014
struct FCommonSource_TreasureBoxInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectIndex;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SpawnIndex;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsExists;                                               // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CashShopImageUrl
// 0x0018
struct FCommonSource_CashShopImageUrl
{
	unsigned char                                      m_Language;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     m_ImageUrl;                                               // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CashShopGoodsInfo
// 0x00C0
struct FCommonSource_CashShopGoodsInfo
{
	int                                                m_ShopIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAlwaysOpen;                                           // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Price;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Mileage;                                                // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECashShopRecommendType  m_RecommendType;                                          // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECashShopBuyLimitType   m_BuyLimitType;                                           // 0x0025(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECashShopBuyLimitPeriodType m_BuyLimitPeriodType;                                     // 0x0026(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0027(0x0001) MISSED OFFSET
	int                                                m_BuyLimitCount;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuyCount;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LevelLimit;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_HotSlot;                                                // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayProductInfo;                                       // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ReqFinishQuestIndex;                                    // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_CashShopImageUrl>      m_arrayBgImageUrl;                                        // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_MarkEndTime;                                            // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEmphasis;                                             // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDiscount;                                             // 0x0069(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x006A(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_CashShopSalesTimeInfo> m_arraySalesTime;                                         // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayDayOfWeek;                                         // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CashMileage;                                            // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	TArray<FCommonSource_CommonSource_EClassType>      m_arrayClassType;                                         // 0x0098(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayServerID;                                          // 0x00A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_BuyServerID;                                            // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.EventRoskvaDiceCompleteRewardInfo
// 0x0010
struct FCommonSource_EventRoskvaDiceCompleteRewardInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CompleteCount;                                          // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardType;                                             // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                m_RewardIndex;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCount;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildDungeonPlayerInfo
// 0x0020
struct FCommonSource_GuildDungeonPlayerInfo
{
	struct FString                                     m_PlayerName;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BattlePower;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.VehicleDecideInfo
// 0x0010
struct FCommonSource_VehicleDecideInfo
{
	int                                                m_SlotIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleIndex;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChangeCount;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainExpireTime;                                       // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.AchievementReward
// 0x0018
struct FCommonSource_AchievementReward
{
	int                                                m_AchievementIndex;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardPoint;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.AchievementInfo
// 0x0038
struct FCommonSource_AchievementInfo
{
	int                                                m_AchievementIndex;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EAchievementState       m_AchievementState;                                       // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int64_t                                            m_ClearCount;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_FinishCount;                                            // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_RewardPlayerName;                                       // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_RewardedTime;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainRewardCoolTime;                                   // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.AlchemyTestOptionInfo
// 0x000C
struct FCommonSource_AlchemyTestOptionInfo
{
	int                                                m_OptionIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OptionValueIndex;                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OptionCount;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.AlchemyTestInfo
// 0x0018
struct FCommonSource_AlchemyTestInfo
{
	int                                                m_BoardIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestCount;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_AlchemyTestOptionInfo> m_arrayTestOptionInfo;                                    // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.AlchemyOptionInfo
// 0x0014
struct FCommonSource_AlchemyOptionInfo
{
	int                                                m_OptionIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OptionValueIndex;                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_OptionValue;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_ParamInfo                     m_ParamInfo;                                              // 0x000C(0x0008) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.AlchemyBoardInfo
// 0x0028
struct FCommonSource_AlchemyBoardInfo
{
	int                                                m_BoardIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_HeatingCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_BuffExpireTimestamp;                                    // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBuffApply;                                            // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_AlchemyOptionInfo>     m_arrayOptionInfo;                                        // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.AlchemyMakeInfo
// 0x0008
struct FCommonSource_AlchemyMakeInfo
{
	int                                                m_AlchemyGroup;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AlchemyInputCount;                                      // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.SkillTranscendLevelInfo
// 0x0010
struct FCommonSource_SkillTranscendLevelInfo
{
	TArray<FCommonSource_CommonSource_ESkillTranscendResultType> m_arraySkillTranscendResultType;                          // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.SkillInfo
// 0x0038
struct FCommonSource_SkillInfo
{
	int                                                m_SkillIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillEnchantLevel;                                      // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainCoolTime;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDisable;                                              // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAutoTarget;                                           // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsUseFirst;                                             // 0x000E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDetectTargetSkillObject;                              // 0x000F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_SkillTranscendLevelInfo> m_arraySkillTranscendLevelInfo;                           // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<FCommonSource_CommonSource_ESkillTranscendResultType> m_arraySkillTranscendTry;                                 // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_SkillTranscendRestoreCount;                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.DeadPlayerInfo
// 0x0060
struct FCommonSource_DeadPlayerInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	int64_t                                            m_DeadTime;                                               // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.KillerInfo
// 0x0070
struct FCommonSource_KillerInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectIndex;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_GuildDBKey;                                             // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	int64_t                                            m_DeadTime;                                               // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ServerName;                                             // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.HitDamageInfo
// 0x0030
struct FCommonSource_HitDamageInfo
{
	int64_t                                            m_Damage;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DamageMp;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	int64_t                                            m_TargetHp;                                               // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_AttackerAbsorbHp;                                       // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_AttackerAbsorbMp;                                       // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EAttackResult           m_AttackResult;                                           // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDouble;                                               // 0x0025(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBlock;                                                // 0x0026(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0027(0x0001) MISSED OFFSET
	int                                                m_AbsorbShieldDamage;                                     // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.AttendanceRewardInfo
// 0x0040
struct FCommonSource_AttendanceRewardInfo
{
	int                                                m_AttendanceDay;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0008(0x0030) (Edit, BlueprintVisible)
	bool                                               m_IsEmphasis;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.AttendanceInfo
// 0x0068
struct FCommonSource_AttendanceInfo
{
	FCommonSource_CommonSource_EAttendanceType         m_AttendanceType;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_AttendanceIdx;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Title;                                                  // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Description;                                            // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_StartTime;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RewardEndTime;                                          // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Period;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_IsRepeat;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_AttendanceRewardInfo>  m_arrayAttendanceReward;                                  // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_NewUserBasePeriod;                                      // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ReturnUserBasePeriod;                                   // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EAttendanceRewardUIType m_AttendanceRewardUIType;                                 // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_EndTimeDisplay;                                         // 0x0061(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0062(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.AvatarComposeInfo
// 0x0008
struct FCommonSource_AvatarComposeInfo
{
	FCommonSource_CommonSource_EItemGrade              m_ItemGrade;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ComposeCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.AvatarInfo
// 0x0014
struct FCommonSource_AvatarInfo
{
	int                                                m_AvatarIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AvatarCount;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DecideCount;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFixedTerm;                                            // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              m_RemainExpireTime;                                       // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.BlessingSlotEnchantTest
// 0x0018
struct FCommonSource_BlessingSlotEnchantTest
{
	int                                                m_SlotIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SuccessCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GreatSuccessCount;                                      // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_FailureCount;                                           // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GreatFailureCount;                                      // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SuperGreatFailureCount;                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.BlessingSlotEnchantResultInfo
// 0x0008
struct FCommonSource_BlessingSlotEnchantResultInfo
{
	int                                                m_BlessingSlotIndex;                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBlessingSlotEnchantResult m_EnchantResult;                                          // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.BlessingStoneComposeInfo
// 0x0018
struct FCommonSource_BlessingStoneComposeInfo
{
	FCommonSource_CommonSource_EGrade                  m_ItemGrade;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ComposeCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        m_arrayStoneDBSlot;                                       // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.BlessingStoneInfo
// 0x0060
struct FCommonSource_BlessingStoneInfo
{
	int                                                m_StoneIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StoneDBSlot;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBlessingSymbolType     m_StoneSymbolType;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FCommonSource_OptionParamInfo               m_DefaultOptionParam;                                     // 0x0010(0x0018) (Edit, BlueprintVisible)
	struct FCommonSource_OptionParamInfo               m_UniqueOptionParam;                                      // 0x0028(0x0018) (Edit, BlueprintVisible)
	bool                                               m_IsEquipped;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                m_EquipBoardIndex;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        m_arrayEquipSlotIndex;                                    // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_StoneCount;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.BlessingSlotInfo
// 0x0010
struct FCommonSource_BlessingSlotInfo
{
	int                                                m_SlotIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBlessingSymbolType     m_SlotSymbolType;                                         // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_EquipStoneDBSlot;                                       // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.BlessingBoardInfo
// 0x0028
struct FCommonSource_BlessingBoardInfo
{
	int                                                m_BoardIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActive;                                               // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_OpenSlotCount;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsComplete;                                             // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_CompleteGrade;                                          // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayCompleteOptionParam;                               // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_SymbolChangeCount;                                      // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CompleteSlotEnchantStep;                                // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.WorldBossRewardPlayerInfo
// 0x0020
struct FCommonSource_WorldBossRewardPlayerInfo
{
	struct FString                                     m_PlayerName;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_GuildDBKey;                                             // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.EventBlessedFieldBossTimeInfo
// 0x0018
struct FCommonSource_EventBlessedFieldBossTimeInfo
{
	int                                                m_SpawnIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BossObjectIndex;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardRandomPackageGroupID;                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsMapVisible;                                           // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.BlessedFieldBossTimeInfo
// 0x000C
struct FCommonSource_BlessedFieldBossTimeInfo
{
	int                                                m_SpawnIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BossObjectIndex;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_DisappearingRemainTime;                                 // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.VoidSummonerPortalInfo
// 0x000C
struct FCommonSource_VoidSummonerPortalInfo
{
	int                                                m_VoidSummonerIndex;                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VoidSummonerPortalSerial;                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.WorldBossRankerInfo
// 0x0060
struct FCommonSource_WorldBossRankerInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_RankingPoint;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.VoidSummonerInfo
// 0x0024
struct FCommonSource_VoidSummonerInfo
{
	int                                                m_VoidSummonerIndex;                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VoidSummonerSerial;                                     // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SpawnIndex;                                             // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPortal;                                               // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	int                                                m_PortalObjectSerial;                                     // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.WorldBossInfo
// 0x0014
struct FCommonSource_WorldBossInfo
{
	int                                                m_WorldBossIndex;                                         // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_WorldBossObjectIndex;                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCount;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCanMove;                                              // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CashShopChainProduct
// 0x0018
struct FCommonSource_CashShopChainProduct
{
	int                                                m_ChainProductIndex;                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_CashShopGoodsInfo>     m_arrayChainProductInfo;                                  // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.StepPackageMainRewardInfo
// 0x0038
struct FCommonSource_StepPackageMainRewardInfo
{
	int                                                m_ShopIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Step;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0008(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CashShopBulkBuyInfo
// 0x000C
struct FCommonSource_CashShopBulkBuyInfo
{
	int                                                m_ShopItemIndex;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuyCount;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCheck;                                                // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CashShopRandomChoiceGradeInfo
// 0x0018
struct FCommonSource_CashShopRandomChoiceGradeInfo
{
	FCommonSource_CommonSource_ECashShopRandomChoiceGrade m_RandomChoiceGrade;                                      // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayMatchingGroup;                                     // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CashShopRandomChoiceInfo
// 0x0018
struct FCommonSource_CashShopRandomChoiceInfo
{
	int                                                m_ShopIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_CashShopRandomChoiceGradeInfo> m_arrayRandomChoiceGradeInfo;                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.AosPcMarketRefundInfo
// 0x0010
struct FCommonSource_AosPcMarketRefundInfo
{
	int64_t                                            m_MarketRefundSeq;                                        // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_PurchaseQuantity;                                       // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.LocalizedPrice
// 0x0018
struct FCommonSource_LocalizedPrice
{
	struct FString                                     m_Currency;                                               // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_Price;                                                  // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.BuyCashShopItem
// 0x0008
struct FCommonSource_BuyCashShopItem
{
	int                                                m_ShopIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuyCount;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CashShopPackageMission
// 0x0018
struct FCommonSource_CashShopPackageMission
{
	int                                                m_ShopIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EAchievementMissionType m_MissionType;                                            // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_MissionX;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionY;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionZ;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionN;                                               // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.LimitPackageReward
// 0x0008
struct FCommonSource_LimitPackageReward
{
	int                                                m_PackageIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBuyRewarded;                                          // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFreeRewarded;                                         // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.OdinPassPoint
// 0x0008
struct FCommonSource_OdinPassPoint
{
	int                                                m_OdinPassPoint;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OdinPassCompletionCount;                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.OdinPassRewardInfo
// 0x0068
struct FCommonSource_OdinPassRewardInfo
{
	int                                                m_PackageIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_BuyRewardInfo;                                          // 0x0008(0x0030) (Edit, BlueprintVisible)
	struct FCommonSource_RewardInfo                    m_FreeRewardInfo;                                         // 0x0038(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CashShopLimitPackage
// 0x00E8
struct FCommonSource_CashShopLimitPackage
{
	struct FCommonSource_CashShopGoodsInfo             m_GoodsInfo;                                              // 0x0000(0x00C0) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_LimitPackageReward>    m_arrayPackageReward;                                     // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_OdinPassPoint                 m_OdinPassPoint;                                          // 0x00D0(0x0008) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_OdinPassRewardInfo>    m_arrayOdinPassRewardInfo;                                // 0x00D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.OdinPassMissionInfo
// 0x0028
struct FCommonSource_OdinPassMissionInfo
{
	FCommonSource_CommonSource_EAchievementMissionType m_MissionType;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_CurClearCount;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECashShopMissionPeriodType m_MissionPeriodType;                                      // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                m_CurCompletionCount;                                     // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OdinPassPoint;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionX;                                               // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionY;                                               // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionZ;                                               // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionN;                                               // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CompletionCount;                                        // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CashShopStoragebox
// 0x0030
struct FCommonSource_CashShopStoragebox
{
	int                                                m_DBSlot;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ShopIndex;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuyCount;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	int64_t                                            m_BuyTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RewardInfo>            m_arrayProductInfo;                                       // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_BuyPlayerDBKey;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CashShopGoodsRewardInfo
// 0x0018
struct FCommonSource_CashShopGoodsRewardInfo
{
	int                                                m_ShopIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CashShopEventBanner
// 0x0070
struct FCommonSource_CashShopEventBanner
{
	unsigned char                                      m_AreaIndex;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ShopIndex;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAlwaysOpen;                                           // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FString                                     m_Desc;                                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CashShopImageUrl>      m_arrayBannerImageUrl;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CashShopImageUrl>      m_arrayBgImageUrl;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CashShopImageUrl>      m_arrayTextImageUrl;                                      // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsPopup;                                                // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CashShopDiscountTimeInfo
// 0x0008
struct FCommonSource_CashShopDiscountTimeInfo
{
	int                                                m_ShopIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarAttackWorldSelectInfo
// 0x0028
struct FCommonSource_CastlewarAttackWorldSelectInfo
{
	int                                                m_CastleGroupID;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_Name;                                                   // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_TotalWeekTax;                                           // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MaxSelectCount;                                         // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CurSelectCount;                                         // 0x0021(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0022(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CastlewarTargetableCountInfo
// 0x0008
struct FCommonSource_CastlewarTargetableCountInfo
{
	int                                                m_CastleIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxTagetableCount;                                      // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarWinGuildInfo
// 0x0078
struct FCommonSource_CastlewarWinGuildInfo
{
	int                                                m_ServerID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_GuildDBKey;                                             // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0020(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CastleIndex;                                            // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	int64_t                                            m_CastlewarTime;                                          // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBidGuild;                                             // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                m_CastlewarSeasonIdx;                                     // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CastlewarGroupID;                                       // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FString                                     m_WorldName;                                              // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CastlewarCastleTargetInfo
// 0x0090
struct FCommonSource_CastlewarCastleTargetInfo
{
	struct FCommonSource_CastlewarWinGuildInfo         m_WinGuildInfo;                                           // 0x0000(0x0078) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_CastlewarEnterGuildInfo> m_arrayEnterGuildInfo;                                    // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PossibleTargettingEntergGuildCount;                     // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CastlewarForceWarp
// 0x0020
struct FCommonSource_CastlewarForceWarp
{
	int64_t                                            m_KillerCastlewarGuildDBKey;                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_BossPos;                                                // 0x0008(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FCommonSource_Double                        m_WarpDistance;                                           // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarDoorInfo
// 0x0018
struct FCommonSource_CastlewarDoorInfo
{
	int                                                m_ObjectIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_MaxHp;                                                  // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CurHp;                                                  // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.QualifierGuildMemberInfo
// 0x0040
struct FCommonSource_QualifierGuildMemberInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EQualifierSide          m_QualifierSide;                                          // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x001C(0x0014) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GuildMemberSimpleInfo> m_arrayQualifierSideRank;                                 // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.QualifierInfo
// 0x0018
struct FCommonSource_QualifierInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_DungeonSerial;                                          // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_UserCount;                                              // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.QualifierSideRankInfo
// 0x0020
struct FCommonSource_QualifierSideRankInfo
{
	int                                                m_KillCount;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_LastKillTime;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EQualifierSide          m_QualifierSide;                                          // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.QualifierDoingInfo
// 0x0040
struct FCommonSource_QualifierDoingInfo
{
	struct FCommonSource_QualifierInfo                 m_QualifierInfo;                                          // 0x0000(0x0018) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_ECastlewarQualifierState m_CastlewarQualifierState;                                // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_QualifierSideRankInfo> m_QualifierSideRankInfo;                                  // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EQualifierSide          m_QualifierSide;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                m_GoalKillCount;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAudience;                                             // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.QualifierReadyInfo
// 0x0010
struct FCommonSource_QualifierReadyInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsReady;                                                // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLogOut;                                               // 0x0009(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CastlewarRankingInfo
// 0x0070
struct FCommonSource_CastlewarRankingInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClassType              m_PlayerClass;                                            // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0024(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_Ranking;                                                // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RankPoint;                                              // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MercenaryNum;                                           // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ServerName;                                             // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CastlewarBridgeGuildInfo
// 0x0018
struct FCommonSource_CastlewarBridgeGuildInfo
{
	int                                                m_CastleIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<int64_t>                                    m_arrayGuildDBKey;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CastleOccupationGuildInfo
// 0x0038
struct FCommonSource_CastleOccupationGuildInfo
{
	int                                                m_CastleIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_OccupationCount;                                        // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0024(0x0014) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CastlewarMercenaryInfo
// 0x0098
struct FCommonSource_CastlewarMercenaryInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RecruitGuildDBKey;                                      // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CastlewarSeasonIdx;                                     // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EClassType              m_PlayerClass;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_Level;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BattlePower;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0050(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_ECastlewarMercenaryState m_MercenaryState;                                         // 0x0064(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	int64_t                                            m_UpdateTime;                                             // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MercenaryNum;                                           // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                m_MaxAttackLevel;                                         // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxDefenseLevel;                                        // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ServerName;                                             // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsDeleted;                                              // 0x0090(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CastlewarMercenaryRecruitInfo
// 0x0080
struct FCommonSource_CastlewarMercenaryRecruitInfo
{
	int                                                m_CastlewarSeasonIdx;                                     // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0028(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_ECastlewarAttackType    m_AttackType;                                             // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RecruitNumber;                                          // 0x003D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	int64_t                                            m_BountyCash;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECastlewarResultType    m_ResultType;                                             // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	int64_t                                            m_RefundCash;                                             // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_UpdateTime;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsDeleted;                                              // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	int                                                m_CastleIndex;                                            // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarMercenaryRecruitListInfo
// 0x0088
struct FCommonSource_CastlewarMercenaryRecruitListInfo
{
	struct FCommonSource_CastlewarMercenaryRecruitInfo m_Info;                                                   // 0x0000(0x0080) (Edit, BlueprintVisible)
	unsigned char                                      m_MercenaryCount;                                         // 0x0080(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECastlewarMercenaryState m_MyRecruitState;                                         // 0x0081(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0082(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CastlewarMercenaryLogInfo
// 0x0030
struct FCommonSource_CastlewarMercenaryLogInfo
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};

// ScriptStruct CommonSource.CastlewarMercenaryRecruitGuildMasterInfo
// 0x0010
struct FCommonSource_CastlewarMercenaryRecruitGuildMasterInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarTaxDistReserveCancelInfoWithdraw
// 0x0018
struct FCommonSource_CastlewarTaxDistReserveCancelInfoWithdraw
{
	int64_t                                            m_CanceledTax;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_TaxDistKey;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CastlewarTaxDistReserveCancelInfo
// 0x0018
struct FCommonSource_CastlewarTaxDistReserveCancelInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_TaxDistKey;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CastlewarTaxDistReserveTimeInfo
// 0x0018
struct FCommonSource_CastlewarTaxDistReserveTimeInfo
{
	struct FString                                     m_TaxDistKey;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_TaxDistReservedTime;                                    // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarTaxDistributionInfo
// 0x0048
struct FCommonSource_CastlewarTaxDistributionInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                m_InnerRanking;                                           // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClassType              m_PlayerClass;                                            // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_TaxDistribution;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MercenaryNum;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildJoinTime;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarRewardHistoryInfo
// 0x00A0
struct FCommonSource_CastlewarRewardHistoryInfo
{
	int                                                m_CastlewarSeasonIdx;                                     // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClassType              m_PlayerClass;                                            // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_RewardTax;                                              // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ReserveTax;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ReserveRewardTax;                                       // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RewardTime;                                             // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERewardReason           m_RewardReason;                                           // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	int64_t                                            m_DBIdx;                                                  // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MercenaryNum;                                           // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ServerName;                                             // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_TaxDistKey;                                             // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_TaxDistReservedTime;                                    // 0x0090(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECastlewarRewardHistoryStatus m_RewardStatus;                                           // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CastlewarTaxRateInfo
// 0x0080
struct FCommonSource_CastlewarTaxRateInfo
{
	struct FCommonSource_CastlewarWinGuildInfo         m_WinGuildInfo;                                           // 0x0000(0x0078) (Edit, BlueprintVisible)
	int                                                m_TaxRate;                                                // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ServerTaxRateInfo
// 0x0020
struct FCommonSource_ServerTaxRateInfo
{
	int                                                m_ServerID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_TaxRate;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SettingTaxRate;                                         // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarCastleInfo
// 0x0090
struct FCommonSource_CastlewarCastleInfo
{
	struct FCommonSource_CastlewarWinGuildInfo         m_WinGuildInfo;                                           // 0x0000(0x0078) (Edit, BlueprintVisible)
	int                                                m_MyServerTaxRate;                                        // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ServerTaxRateInfo>     m_ArrayServerTaxRateList;                                 // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CastlewarEnterGuildMemberInfo
// 0x0020
struct FCommonSource_CastlewarEnterGuildMemberInfo
{
	int                                                m_GroupID;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_UserDBKey;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarQualifierGuildInfo
// 0x0058
struct FCommonSource_CastlewarQualifierGuildInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ServerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_GuildDBKey;                                             // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0020(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_BiddingPrice;                                           // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_QualifierGroupID;                                       // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EQualifierSide          m_QualifierSide;                                          // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEnd;                                                  // 0x0055(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDefendGuild;                                          // 0x0056(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPlayingGuild;                                         // 0x0057(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarBidGuildMember
// 0x0020
struct FCommonSource_CastlewarBidGuildMember
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_UserDBKey;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_BidPrice;                                               // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarBidGuildInfo
// 0x0048
struct FCommonSource_CastlewarBidGuildInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0010(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MemberCount;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxMemberCount;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildLevel;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildBattlePower;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarBidMemberRankingInfo
// 0x0030
struct FCommonSource_CastlewarBidMemberRankingInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_BiddingPrice;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CastlewarBidRankingInfo
// 0x0050
struct FCommonSource_CastlewarBidRankingInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0010(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_BiddingPrice;                                           // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_UpdateTime;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ChampionsDungeonOpenTime
// 0x0005
struct FCommonSource_ChampionsDungeonOpenTime
{
	FCommonSource_CommonSource_EResetDayOfWeek         m_OpenDay;                                                // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_StartHour;                                              // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_StartMinute;                                            // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EndHour;                                                // 0x0003(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EndMinute;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ChampionsDungeonServerGroup
// 0x0018
struct FCommonSource_ChampionsDungeonServerGroup
{
	int                                                m_ServerGroupID;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_ServerGroupName;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildAllianceChattingInfo
// 0x0080
struct FCommonSource_GuildAllianceChattingInfo
{
	FCommonSource_CommonSource_EGuildChatType          m_GuildChatType;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_SendGuildName;                                          // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_SendPlayerDBKey;                                        // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_SendPlayerName;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_ChatContent;                                            // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EmoticonIndex;                                          // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0050(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0064(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	float                                              m_ElaspedCreateTime;                                      // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	int64_t                                            m_ChatIndex;                                              // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ChatPkDeadInfo
// 0x0040
struct FCommonSource_ChatPkDeadInfo
{
	struct FString                                     m_KillerPlayerName;                                       // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_DeadPlayerName;                                         // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MapIndex;                                               // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NaviVolumeAreaIndex;                                    // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x0028(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ElaspedChatTime;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ExpireTime;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildChatDetailInfo
// 0x0008
struct FCommonSource_GuildChatDetailInfo
{
	int                                                m_EquipAvatarIndex;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_ContentsGrade;                                          // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildChatInfo
// 0x00E0
struct FCommonSource_GuildChatInfo
{
	int64_t                                            m_ChatIndex;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildChatType          m_GuildChatType;                                          // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBroadcastType          m_ItemGetType;                                            // 0x0009(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_SendPlayerDBKey;                                        // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_SendPlayerName;                                         // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_ChatContent;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EmoticonIndex;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ItemEnchantStep;                                        // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_ItemBindType;                                           // 0x004D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	float                                              m_ElaspedCreateTime;                                      // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapNameCode;                                            // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AreaNameCode;                                           // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FString                                     m_EventTitle;                                             // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_RandomDrawIndex;                                        // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERuneSetOption          m_RuneSetOption;                                          // 0x007C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_RuneGrade;                                              // 0x007D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNicknameHide;                                         // 0x007E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x007F(0x0001) MISSED OFFSET
	struct FCommonSource_ChatPkDeadInfo                m_ChatPkDeadInfo;                                         // 0x0080(0x0040) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EBlessingSymbolType     m_BlessingSymbolTYpe;                                     // 0x00C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET
	struct FString                                     m_GuildMasterPlayerName;                                  // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildChatDetailInfo           m_GuildChatDetailInfo;                                    // 0x00D8(0x0008) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.ChatMapInfo
// 0x0028
struct FCommonSource_ChatMapInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	int64_t                                            m_MapSerial;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ChannelIndex;                                           // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                m_SectorIndex;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNotDisPlayName;                                       // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ChatBanInfo
// 0x0028
struct FCommonSource_ChatBanInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EChattingBanType        m_ChattingBanType;                                        // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.RankingInfo
// 0x0008
struct FCommonSource_RankingInfo
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingType            m_RankingType;                                            // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_Ranking;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ChatPlayerInfo
// 0x00E0
struct FCommonSource_ChatPlayerInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_UserDBKey;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGMLevel                m_GMLevel;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                m_PlayerLevel;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0050(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0064(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	int                                                m_PartySerial;                                            // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERealmwarSide           m_RealmwarSide;                                           // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPartyMaster;                                          // 0x0071(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0072(0x0002) MISSED OFFSET
	int                                                m_EquipAvatarIndex;                                       // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RankingInfo>           m_arrayRankingInfo;                                       // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_WorldDungeonTier;                                       // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0090(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_CastlewarGuildName;                                     // 0x0098(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_MercenaryNum;                                           // 0x00A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x00A9(0x0007) MISSED OFFSET
	TArray<int64_t>                                    m_arrayGuildAllianceChattingChannelIdx;                   // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_WorldPartySerial;                                       // 0x00C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        m_arrayWorldPartyServerID;                                // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGrade                  m_ContentsGrade;                                          // 0x00D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x00D9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x00DA(0x0002) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ChatInfo
// 0x0120
struct FCommonSource_ChatInfo
{
	FCommonSource_CommonSource_EChatType               m_ChatType;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELanguage               m_ChatLanguage;                                           // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	struct FCommonSource_ChatPlayerInfo                m_ChatPlayerInfo;                                         // 0x0008(0x00E0) (Edit, BlueprintVisible)
	struct FString                                     m_Message;                                                // 0x00E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EmoticonIndex;                                          // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ElaspedChatTime;                                        // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Color;                                                  // 0x0100(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsShouting;                                             // 0x0101(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0102(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_RankingInfo>           m_arrayToWhisperPlayerRankingInfo;                        // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ClassChangeSelectTargetClassInfo
// 0x0010
struct FCommonSource_ClassChangeSelectTargetClassInfo
{
	unsigned char                                      m_OrderNum;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MyClassType;                                            // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_MyPlayerIndex;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetClassType;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                m_TargetPlayerIndex;                                      // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ClassChangeSkillTranscendLog
// 0x0040
struct FCommonSource_ClassChangeSkillTranscendLog
{
	int                                                m_SkillIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChangeSkillIndex;                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TranscendTryCount;                                      // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TranscendRestoreCount;                                  // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              m_arrayTranscendLevelIndex;                               // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arraySkillTranscendResultType;                          // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayTranscendLevel;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CustomizingGaugeInfo
// 0x0002
struct FCommonSource_CustomizingGaugeInfo
{
	FCommonSource_CommonSource_ECustomizingGauge       m_GaugeType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_GaugeValue;                                             // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CustomizingInfo
// 0x0038
struct FCommonSource_CustomizingInfo
{
	unsigned char                                      m_Preset;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<unsigned char>                              m_arrayChangedType;                                       // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayChangedColor;                                      // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CustomizingGaugeInfo>  m_arrayChangedGauge;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ClassChangeAvatarInfo
// 0x0008
struct FCommonSource_ClassChangeAvatarInfo
{
	int                                                m_AvatarIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Count;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ClassChangeWeaponShapeInfo
// 0x0008
struct FCommonSource_ClassChangeWeaponShapeInfo
{
	int                                                m_WeaponShapeIndex;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Count;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ClassChangeSkillInfo
// 0x0008
struct FCommonSource_ClassChangeSkillInfo
{
	int                                                m_SkillIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SkillType;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsKeepEnchantLevel;                                     // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsKeepTranscendSkill;                                   // 0x0006(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_KeepLevel;                                              // 0x0007(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ClassChangeCostumeInfo
// 0x0010
struct FCommonSource_ClassChangeCostumeInfo
{
	int                                                m_CostumeIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CostumeType;                                            // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_Count;                                                  // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPurchase;                                             // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.ClassChangeInfo_2nd
// 0x00D8
struct FCommonSource_ClassChangeInfo_2nd
{
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x0000(0x0038) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_ClassChangeAvatarInfo> m_OwnedAvatarList;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ClassChangeAvatarInfo> m_ChangeAvatarList;                                       // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ClassChangeWeaponShapeInfo> m_OwnedWeaponShapeList;                                   // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ClassChangeWeaponShapeInfo> m_ChangeWeaponShapeList;                                  // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_OwnedEquipedItemList;                                   // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_ChangeEquipedItemList;                                  // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ClassChangeSkillInfo>  m_ChangeActiveSkillList;                                  // 0x0098(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ClassChangeSkillInfo>  m_ChangePassiveSkillList;                                 // 0x00A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ClassChangeCostumeInfo> m_OwnedCostumeList;                                       // 0x00B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ClassChangeCostumeInfo> m_ChangeCostumeList;                                      // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ClassChangeHistory
// 0x0008
struct FCommonSource_ClassChangeHistory
{
	unsigned char                                      m_ClassType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ChangeCount;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ClassChangeInfo
// 0x00A8
struct FCommonSource_ClassChangeInfo
{
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x0000(0x0038) (Edit, BlueprintVisible)
	TArray<int>                                        m_OwnedAvatarList;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_ChangeAvatarList;                                       // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_OwnedWeaponShapeList;                                   // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_ChangeWeaponShapeList;                                  // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_OwnedEquipedItemList;                                   // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_ChangeEquipedItemList;                                  // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_ChangePassiveSkillList;                                 // 0x0098(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ClassChangeEvent
// 0x0020
struct FCommonSource_ClassChangeEvent
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetClassType;                                        // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetJobClassType;                                     // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CollectionEventExpireInfo
// 0x0018
struct FCommonSource_CollectionEventExpireInfo
{
	int                                                m_CollectionInfoIndex;                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_CreateTime;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ExpireTime;                                             // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CollectionItemInfo
// 0x000C
struct FCommonSource_CollectionItemInfo
{
	int                                                m_CollectionItemSlot;                                     // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CollectionItemIndex;                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClassType              m_ClassType;                                              // 0x0009(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CollectionEventInfo
// 0x0028
struct FCommonSource_CollectionEventInfo
{
	FCommonSource_CommonSource_ECollectionType         m_CollectionType;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_CollectionInfoIndex;                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_CollectionItemInfo>    m_arrayCollectionItemInfo;                                // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_EndTime;                                                // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsReward;                                               // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CollectionEnrollDetailInfo
// 0x0010
struct FCommonSource_CollectionEnrollDetailInfo
{
	int64_t                                            m_ItemSerial;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CollectionItemSlot;                                     // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CollectionEnrollInfo
// 0x0018
struct FCommonSource_CollectionEnrollInfo
{
	int                                                m_CollectionRewardIndex;                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_CollectionEnrollDetailInfo> m_arrayEnrollInfo;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CollectionInfo
// 0x0028
struct FCommonSource_CollectionInfo
{
	FCommonSource_CommonSource_ECollectionType         m_CollectionType;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_CollectionRewardIndex;                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_CollectionItemInfo>    m_arrayCollectionItemInfo;                                // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_PlayerDBKey;                                            // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsReward;                                               // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ConflictDungeonInfo
// 0x000C
struct FCommonSource_ConflictDungeonInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOpen;                                                 // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              m_RemainOpenTime;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CostumeDyeingInfo
// 0x0014
struct FCommonSource_CostumeDyeingInfo
{
	int                                                m_CostumeIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeBodyAColorIndex;                                 // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeBodyBColorIndex;                                 // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeHeadAColorIndex;                                 // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeHeadBColorIndex;                                 // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CostumeEquipInfo
// 0x0010
struct FCommonSource_CostumeEquipInfo
{
	int                                                m_CostumeIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECostumeSkinType        m_CostumeSkinType;                                        // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECostumeResourceType    m_CostumeResourceType;                                    // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                m_CostumeAColorIndex;                                     // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeBColorIndex;                                     // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CostumeShowingInfo
// 0x0018
struct FCommonSource_CostumeShowingInfo
{
	FCommonSource_CommonSource_ECostumeShowingType     m_CostumeShowingType;                                     // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FCommonSource_CostumeEquipInfo              m_CostumeEquipInfo;                                       // 0x0004(0x0010) (Edit, BlueprintVisible)
	bool                                               m_IsCostumeLook;                                          // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CostumeExpireInfo
// 0x0018
struct FCommonSource_CostumeExpireInfo
{
	int                                                m_CostumeIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_CreateTime;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ExpireTime;                                             // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CostumeInfo
// 0x0010
struct FCommonSource_CostumeInfo
{
	int                                                m_CostumeIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ExpireRemainTime;                                       // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFixedTerm;                                            // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPurchase;                                             // 0x000E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x000F(0x0001) MISSED OFFSET
};

// ScriptStruct CommonSource.DuelSideRankInfo
// 0x0018
struct FCommonSource_DuelSideRankInfo
{
	int                                                m_KillCount;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_LastKillTime;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDuelSide               m_DuelSide;                                               // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.DuelInfo
// 0x0058
struct FCommonSource_DuelInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_DungeonSerial;                                          // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DungeonNum;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     m_DungeonName;                                            // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_LimitBattlePower;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LimitUserCount;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MinBattlePower;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxBattlePower;                                         // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_MasterName;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MasterObjectIndex;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_UserCount;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.DuelMemberInfo
// 0x0050
struct FCommonSource_DuelMemberInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ObjectIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDuelSide               m_DuelSide;                                               // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	int                                                m_KillCount;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.MapState
// 0x0008
struct FCommonSource_MapState
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EServiceState           m_ServiceState;                                           // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.EliteDungeonInfo
// 0x0050
struct FCommonSource_EliteDungeonInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainFreeBattleTime;                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainChargeBattleTime;                                 // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainWorldChargeBattleTime;                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RemainFixedChargeBattleTime;                            // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RemainWorldFixedChargeBattleTime;                       // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_UsedChargeCount;                                        // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EventDropGroup;                                         // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_StartTime;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_MapState>              m_arrayServiceState;                                      // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EWorldEliteDungeonMatchState m_WorldEliteDungeonMatchState;                            // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.MapEventDropGroup
// 0x0008
struct FCommonSource_MapEventDropGroup
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EventDropGroup;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.EmotionInfo
// 0x0008
struct FCommonSource_EmotionInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EEmotionType            m_EmotionType;                                            // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.ExchangeFavoriteInfo
// 0x0018
struct FCommonSource_ExchangeFavoriteInfo
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_CreateTime;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSale;                                                 // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                m_OrderNo;                                                // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ExchangeMyHistoryInfo
// 0x0030
struct FCommonSource_ExchangeMyHistoryInfo
{
	FCommonSource_CommonSource_EExchangeTradeType      m_TradeType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ItemIndex;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	int                                                m_SellingPrice;                                           // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SoldItemCount;                                          // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SalesCash;                                              // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ElapsedTradingTime;                                     // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayOptionParam;                                       // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ExchangeMySaleInfo
// 0x0078
struct FCommonSource_ExchangeMySaleInfo
{
	int64_t                                            m_ExchangeDBIdx;                                          // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_ExchangeItemInfo              m_ItemInfo;                                               // 0x0008(0x0058) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EExchangeSaleState      m_SaleState;                                              // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	int                                                m_SellingPrice;                                           // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SoldItemCount;                                          // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SalesCash;                                              // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ExchangeSearchOption
// 0x0018
struct FCommonSource_ExchangeSearchOption
{
	FCommonSource_CommonSource_EExchangeOrderType      m_OrderType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClassType              m_ClassType;                                              // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MinEnchantStep;                                         // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MaxEnchantStep;                                         // 0x0003(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<FCommonSource_CommonSource_EItemGrade>      m_arrayItemGrade;                                         // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.FriendEquipItemInfo
// 0x0004
struct FCommonSource_FriendEquipItemInfo
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.FriendDetailInfo
// 0x00A0
struct FCommonSource_FriendDetailInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGMLevel                m_GMLevel;                                                // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x0028(0x0038) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_FriendEquipItemInfo>   m_arrayEquipItem;                                         // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_BattlePower;                                            // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0088(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.FriendApplyInfo
// 0x0058
struct FCommonSource_FriendApplyInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGMLevel                m_GMLevel;                                                // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EFriendState            m_FriendState;                                            // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              m_RemainApplyTime;                                        // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.FriendRecommendInfo
// 0x0050
struct FCommonSource_FriendRecommendInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGMLevel                m_GMLevel;                                                // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EFriendState            m_FriendState;                                            // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_ConnectionStatus;                                       // 0x004D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.FriendInfo
// 0x0090
struct FCommonSource_FriendInfo
{
	int64_t                                            m_UserDBKey;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BattlePower;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0040(0x0014) (Edit, BlueprintVisible)
	int                                                m_PartyCount;                                             // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsInParty;                                              // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                m_MapIndex;                                               // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x0060(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFavorite;                                             // 0x006C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	float                                              m_ElapedTime;                                             // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOfflineHunting;                                       // 0x0074(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	int                                                m_EquipAvatarIndex;                                       // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGMLevel                m_GMLevel;                                                // 0x007C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_ConnectionStatus;                                       // 0x007D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x007E(0x0002) MISSED OFFSET
	int                                                m_EquipWeaponShapeIndex;                                  // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDead;                                                 // 0x0084(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0085(0x0003) MISSED OFFSET
	int64_t                                            m_LogoutTime;                                             // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GameEventBlessedWorldBossInfo
// 0x0018
struct FCommonSource_GameEventBlessedWorldBossInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BlessedWorldBossIndex;                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxHpAddPercent;                                        // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AttackAddPercent;                                       // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NormalRandomRate;                                       // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BlessedRandomRate;                                      // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GameEventBlessedFieldBoss
// 0x0058
struct FCommonSource_GameEventBlessedFieldBoss
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_BossIndex;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_StartTime;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SpawnRate;                                              // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	int64_t                                            m_MaxHpPercent;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DamagePercent;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CriticalChancePercent;                                  // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CriticalDamageAddPercent;                               // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MagicDamageAbsoluteReductionPercent;                    // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CloseDamageAbsoluteReductionPercent;                    // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RangeDamageAbsoluteReductionPercent;                    // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AbnormalResistPercent;                                  // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_HitAccuracyAdd;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_HitAvoidanceAdd;                                        // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardRandomPackageGroupID;                             // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GameEventRuneWordInfo
// 0x0010
struct FCommonSource_GameEventRuneWordInfo
{
	unsigned char                                      m_MissionSlotIndex;                                       // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MissonSlotNum;                                          // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RuneWordType;                                           // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGradeRuneWord          m_RuneWordGrade;                                          // 0x0003(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaterialItemIndex;                                      // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaterialCount;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCompleted;                                            // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GameEventRuneWordMatch_PlayerBoard
// 0x0030
struct FCommonSource_GameEventRuneWordMatch_PlayerBoard
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MissionSlotIndex;                                       // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_GameEventRuneWordInfo> m_arrayRuneWordList;                                      // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_RemainCompletedCount;                                   // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxCompleteCnt;                                         // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CompletedRewardIndex;                                   // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CompletedRewardType;                                    // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CompletedRewardCount;                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCompletedSlotLine;                                    // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GameEventRuneWordMatch_RewardEx
// 0x0010
struct FCommonSource_GameEventRuneWordMatch_RewardEx
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ItemType;                                               // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_ItemIndex;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GameEventRuneWordMatch_Reward
// 0x0018
struct FCommonSource_GameEventRuneWordMatch_Reward
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MissionSlotIndex;                                       // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ItemType;                                               // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                m_ItemIndex;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardProb;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsRewardEx;                                             // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GameEventRuneWordMatch_Board
// 0x0030
struct FCommonSource_GameEventRuneWordMatch_Board
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MissionSlotIndex;                                       // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	TArray<FCommonSource_CommonSource_EGameEventRuneWordTextRange> m_arrayRuneWordTextSlot;                                  // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<FCommonSource_CommonSource_EGradeRuneWord>  m_arrayGradeSlot;                                         // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MaxCompleteCnt;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GameEventRuneWordMatch
// 0x0020
struct FCommonSource_GameEventRuneWordMatch
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRuneWordMatchEventType m_RuneWordMatchEventType;                                 // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SetRuneWordType;                                        // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                m_MaterialItemIndex;                                      // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<int>                                        m_arrayMaterialCount;                                     // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GameEventCollectionInfo
// 0x0018
struct FCommonSource_GameEventCollectionInfo
{
	int                                                m_CollectionIndex;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.EventRoskvaDiceInfo
// 0x0068
struct FCommonSource_EventRoskvaDiceInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResourceIndex;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResourceNeedCount;                                      // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DailyLimitCount;                                        // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	int                                                m_SpecialDicePrice;                                       // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<unsigned char>                              m_arrayDiceProb;                                          // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayBlockGroupProb;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arraySpecialDiceOddProb;                                // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arraySpecialDiceEvenProb;                               // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arraySpecialDiceNumber;                                 // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.EventRoskvaDiceBlockRewardInfo
// 0x0018
struct FCommonSource_EventRoskvaDiceBlockRewardInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_BlockGroup;                                             // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_BlockIndex;                                             // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRoskvaDiceBonusBlockType m_BonusBlockType;                                         // 0x0006(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_BonusBlockValue;                                        // 0x0007(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardType;                                             // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                m_RewardIndex;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCount;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_IsEmphasis;                                             // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.EventLionRouletteInfo
// 0x0060
struct FCommonSource_EventLionRouletteInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResourceIndex;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResourceNeedCount;                                      // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardIndex;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCountByFail;                                      // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<unsigned char>                              m_arrayProbByAttempt;                                     // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayRewardCountByAttempt;                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_DailyLimitCount;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsRewardPoint;                                          // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	struct FString                                     m_PointName;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_RewardPointName;                                        // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.EventRockPapperScissorsEx
// 0x0048
struct FCommonSource_EventRockPapperScissorsEx
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResourceIndex;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MinBettingCnt;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxBettingCnt;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DailyLimitCnt;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MultiplierCnt;                                          // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ConsecutiveWinCorrectProb;                              // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ConsecutiveLoseCorrectProb;                             // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PcDuplicateCardProb;                                    // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SameCardProb;                                           // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_FavorableCardProb;                                      // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DrawRewardCount;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxAccumulatedRewardCount;                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     m_PointName;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GameEventStepExchangeGoodsInfo
// 0x0050
struct FCommonSource_GameEventStepExchangeGoodsInfo
{
	int64_t                                            m_ExchangeDBIndex;                                        // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EventIndex;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Slot;                                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PriceResouceCount;                                      // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TotalPriceResourceCount;                                // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuyCount;                                               // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_GoodsInfo;                                              // 0x0020(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.EventRPSRewardProbInfo
// 0x000C
struct FCommonSource_EventRPSRewardProbInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCount;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardProb;                                             // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.EventRockPapperScissors
// 0x0040
struct FCommonSource_EventRockPapperScissors
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResourceIndex;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MinBettingCnt;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxBettingCnt;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_WinRate;                                                // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_LoseRate;                                               // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DrawRate;                                               // 0x0012(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_AccumulateProb;                                         // 0x0013(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_EventRPSRewardProbInfo> m_arrayRewardInfo;                                        // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MaxDailyChanlangeCnt;                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_PointName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.EventClassChange
// 0x0020
struct FCommonSource_EventClassChange
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventType          m_EventType;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetClassType;                                        // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetJobClassType;                                     // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.ItemMakeInfoDetail
// 0x000C
struct FCommonSource_ItemMakeInfoDetail
{
	int                                                m_ItemMakeIndex;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemLimitCount;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemMakeCount;                                          // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.EventItemMakeInfo
// 0x0030
struct FCommonSource_EventItemMakeInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventType          m_EventType;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventItemMakeLimitType m_ItemMakeLimitType;                                      // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventItemMakePeriodType m_ItemMakePeriodType;                                     // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_ItemMakeInfoDetail>    m_arrayItemMakeInfoDetail;                                // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.EventOdinCouponInfo
// 0x0050
struct FCommonSource_EventOdinCouponInfo
{
	int64_t                                            m_OdinCouponIndex;                                        // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_OdinCouponTitle;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_OdinCouponType;                                         // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MinPeriod;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxPeriod;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MinGrade;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MaxGrade;                                               // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	int64_t                                            m_MinPeriodUnixTime;                                      // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaxPeriodUnixTime;                                      // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.RewardSlotInfo
// 0x0038
struct FCommonSource_RewardSlotInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardSlotIndex;                                        // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardOrderNum;                                         // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EMissionState           m_RewardState;                                            // 0x0006(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0007(0x0001) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0008(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.ContentsTimeInfo
// 0x0010
struct FCommonSource_ContentsTimeInfo
{
	FCommonSource_CommonSource_EContentsType           m_ContentsType;                                           // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ContentsStep;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_StartHour;                                              // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_StartMinute;                                            // 0x0009(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	int                                                m_OpenTimeMinute;                                         // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.EventDropGroupInfo
// 0x000C
struct FCommonSource_EventDropGroupInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RandomBoxDropGroupID;                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsApplyEvent;                                           // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.EventVoidSummonerInfo
// 0x0030
struct FCommonSource_EventVoidSummonerInfo
{
	int                                                m_Idx;                                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventType          m_EventType;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SummonStartTime;                                        // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SummonEndTime;                                          // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MinSummonCycle;                                         // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxSummonCycle;                                         // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SummonPortalRate;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.PaymentStackRewardInfo
// 0x0038
struct FCommonSource_PaymentStackRewardInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardStep;                                             // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0008(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.EventPaymentStackRewardInfo
// 0x0048
struct FCommonSource_EventPaymentStackRewardInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardStep;                                             // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FCommonSource_PaymentStackRewardInfo        m_EventRewardInfo;                                        // 0x0008(0x0038) (Edit, BlueprintVisible)
	bool                                               m_IsRewarded;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.GameEventImageUrl
// 0x0018
struct FCommonSource_GameEventImageUrl
{
	unsigned char                                      m_Language;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     m_ImageUrl;                                               // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.PaymentStackImageInfo
// 0x0020
struct FCommonSource_PaymentStackImageInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FCommonSource_GameEventImageUrl             m_GameEventImageUrl;                                      // 0x0008(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.EventRewardInfo
// 0x0040
struct FCommonSource_EventRewardInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EventDay;                                               // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SubIdx;                                                 // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0008(0x0030) (Edit, BlueprintVisible)
	int                                                m_NeedPayment;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.EventPaymentRewardInfo
// 0x0020
struct FCommonSource_EventPaymentRewardInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EventDay;                                               // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_EventRewardInfo>       m_arrayEventRewardInfo;                                   // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsClosed;                                               // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsRewarded;                                             // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x001A(0x0002) MISSED OFFSET
	int                                                m_NeedPayment;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.EventHotTimeInfo
// 0x0068
struct FCommonSource_EventHotTimeInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NaviVolumeAreaIndex;                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EventIndex;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     m_EventTitle;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGameEventType          m_EventType;                                              // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	int                                                m_EventValue;                                             // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_StartTime;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartHour;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EndHour;                                                // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEventItemCheck;                                       // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FString                                     m_EventComment;                                           // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayDayOfWeek;                                         // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.EventMissionBonusInfo
// 0x0048
struct FCommonSource_EventMissionBonusInfo
{
	int64_t                                            m_MissionUniqueIndex;                                     // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EventIndex;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CompleteCount;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_RewardInfo                    m_BonusRewardInfo;                                        // 0x0010(0x0030) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EMissionState           m_MissionState;                                           // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.EventMissionInfo
// 0x0068
struct FCommonSource_EventMissionInfo
{
	int64_t                                            m_MissionUniqueIndex;                                     // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EventIndex;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AchievementMissionIndex;                                // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionX;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionY;                                               // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionZ;                                               // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionN;                                               // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ClearCount;                                             // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EMissionState           m_MissionState;                                           // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_ClearRewardInfo;                                        // 0x0028(0x0030) (Edit, BlueprintVisible)
	int                                                m_EventDay;                                               // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CompleteRewardCount;                                    // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EMissionPeriodType      m_MissionPeriodType;                                      // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	int                                                m_CompleteLimitCount;                                     // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.EventDiscountInfo
// 0x0028
struct FCommonSource_EventDiscountInfo
{
	FCommonSource_CommonSource_EGameEventType          m_EventType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_EventIndex;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEventOn;                                              // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	int64_t                                            m_EventCost;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EventCostHigh;                                          // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GameEventExchangeGoodsInfo
// 0x0090
struct FCommonSource_GameEventExchangeGoodsInfo
{
	int64_t                                            m_ExchangeDBIndex;                                        // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EventIndex;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Slot;                                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventBuyLimitType  m_LimitType;                                              // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                m_limitCount;                                             // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LimitLevel;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_GoodsInfo;                                              // 0x0020(0x0030) (Edit, BlueprintVisible)
	struct FCommonSource_RewardInfo                    m_PriceInfo;                                              // 0x0050(0x0030) (Edit, BlueprintVisible)
	int                                                m_BuyCount;                                               // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFree;                                                 // 0x0084(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0085(0x0003) MISSED OFFSET
	int64_t                                            m_ExchageStartTime;                                       // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GameEventInfo
// 0x0078
struct FCommonSource_GameEventInfo
{
	int                                                m_EventIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_EventTitle;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGameEventType          m_EventType;                                              // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                m_EventValue;                                             // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_StartTime;                                              // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_StartHour;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EndHour;                                                // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Progress;                                               // 0x0032(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0033(0x0005) MISSED OFFSET
	int64_t                                            m_BuffEndTime;                                            // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ElapsedDays;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPrivate;                                              // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEventItemCheck;                                       // 0x0045(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	int                                                m_RefreshCount;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FString                                     m_EventComment;                                           // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_StepPriceCashCount;                                     // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StepPriceResourceIndex;                                 // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StepPriceResourceCount;                                 // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventTarget        m_EventTarget;                                            // 0x006C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	int                                                m_NewUserBasePeriod;                                      // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ReturnUserBasePeriod;                                   // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GameEventTitle
// 0x0018
struct FCommonSource_GameEventTitle
{
	unsigned char                                      m_Language;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     m_EventTitle;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GameEventCategory
// 0x0038
struct FCommonSource_GameEventCategory
{
	FCommonSource_CommonSource_EGameEventType          m_EventType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_EventIndex;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GroupIndex;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_GameEventTitle>        m_arrayTitle;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GameEventImageUrl>     m_arrayImageUrl;                                          // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_StartTime;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GameEventGroup
// 0x0018
struct FCommonSource_GameEventGroup
{
	int                                                m_Index;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Language;                                               // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FString                                     m_GroupName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GameOptionLogInfo
// 0x0009
struct FCommonSource_GameOptionLogInfo
{
	FCommonSource_CommonSource_EGameOptionPropertyType m_PlayerInfoShow;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameOptionPropertyType m_SleepingMode;                                           // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameOptionPropertyType m_GraphicQuality;                                         // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameOptionPropertyType m_GraphicResolution;                                      // 0x0003(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameOptionPropertyType m_GraphicTexture;                                         // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameOptionPropertyType m_GraphicEffect;                                          // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameOptionPropertyType m_GraphicFrame;                                           // 0x0006(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameOptionPropertyType m_GraphicUserInterfaceRate;                               // 0x0007(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameOptionPropertyType m_GraphicFilter;                                          // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GameOptionNoSaveInfo
// 0x0001
struct FCommonSource_GameOptionNoSaveInfo
{
	bool                                               m_IsPartyMasterScanShare;                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GameOptionInfo
// 0x001C
struct FCommonSource_GameOptionInfo
{
	bool                                               m_OfflineHuntingPush;                                     // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPartyInvitationReceiveType m_PartyInvitationReceiveType;                             // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEtcItemAcquire;                                       // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EEquipmentAcquireGradeType m_EquipmentAcquireGradeType;                              // 0x0003(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_AutoBattleRange;                                        // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_AutoBattlePotionPercent;                                // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EQuickSlotPotionSortType m_QuickSlotPotionSortType;                                // 0x0006(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAutoParty;                                            // 0x0007(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsHideNickname;                                         // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsMannerMode;                                           // 0x0009(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsResurrectionConfirm;                                  // 0x000A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EConfirmPkPreventType   m_ConfirmPkPrevent;                                       // 0x000B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEquipmentOnlyRedDot;                                  // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_AllowFriendRecommend;                                   // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	int                                                m_AutoSafeEnchant;                                        // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsHostileGuildRangeDamage;                              // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectLanguage;                                         // 0x0015(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectVoiceLanguage;                                    // 0x0016(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EInfinityDungeonBuffOption m_InfinityDungeonBuffOption;                              // 0x0017(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsContentsDecoration;                                   // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildDisplayInfo
// 0x0040
struct FCommonSource_GuildDisplayInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0008(0x0014) (Edit, BlueprintVisible)
	int                                                m_GuildLevel;                                             // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildMasterPlayerName;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildAllianceChattingChatSave
// 0x00B8
struct FCommonSource_GuildAllianceChattingChatSave
{
	FCommonSource_CommonSource_EGuildAllianceChattingNotifyState m_GuildAllianceChattingNotifyState;                       // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<int64_t>                                    m_arrayGuildDBKey;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ServerID;                                               // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_TargetGuildDBKey;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildAllianceChattingChannelName;                       // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildAllianceChattingChannelMasterName;                 // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_OnlyTarget;                                             // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	struct FString                                     m_FromGuildName;                                          // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildDisplayInfo              m_GuildDisplayInfo;                                       // 0x0078(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.FindGuildDisplayInfo
// 0x0048
struct FCommonSource_FindGuildDisplayInfo
{
	struct FCommonSource_GuildDisplayInfo              m_GuildDisplayInfo;                                       // 0x0000(0x0040) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildAllianceState     m_GuildAllianceState;                                     // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAllianceChattingApplyState m_GuildAllianceChattingApplyState;                        // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildAllianceChattingChannelChangeNotify
// 0x0020
struct FCommonSource_GuildAllianceChattingChannelChangeNotify
{
	int                                                ServerID;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_AppliedGuildDBKey;                                      // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAllianceChattingNotifyState m_GuildAllianceChattingNotifyState;                       // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildAllianceChattingChannelMemberManaged
// 0x0010
struct FCommonSource_GuildAllianceChattingChannelMemberManaged
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_AppliedGuildDBKey;                                      // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildAllianceChattingChannelInfo
// 0x0040
struct FCommonSource_GuildAllianceChattingChannelInfo
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildAllianceChattingChannelName;                       // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_GuildDBKey;                                             // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_AllianceChattingChannelMemberGuildCount;                // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	int64_t                                            m_CreateTime;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_UpdateTime;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsTemporary;                                            // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildAllianceChattingMemberInfo
// 0x0060
struct FCommonSource_GuildAllianceChattingMemberInfo
{
	int64_t                                            m_GuildAllianceChattingMemberIdx;                         // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CreateTime;                                             // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildDisplayInfo              m_GuildDisplayInfo;                                       // 0x0020(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.GuildAllianceChattingChannelMemberList
// 0x0050
struct FCommonSource_GuildAllianceChattingChannelMemberList
{
	struct FCommonSource_GuildAllianceChattingChannelInfo m_GuildAllianceChattingChannelInfo;                       // 0x0000(0x0040) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GuildAllianceChattingMemberInfo> m_arrayGuildAllianceChattingMemberInfo;                   // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildAllianceChattingChannelList
// 0x0010
struct FCommonSource_GuildAllianceChattingChannelList
{
	TArray<struct FCommonSource_GuildAllianceChattingChannelInfo> m_arrayGuildAllianceChattingChannelInfo;                  // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildAllianceChattingApplyInfo
// 0x00B8
struct FCommonSource_GuildAllianceChattingApplyInfo
{
	int64_t                                            m_GuildAllianceChattingApplyIdx;                          // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CreateTime;                                             // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ExpireTime;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainApplyTime;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FCommonSource_GuildAllianceChattingChannelInfo m_GuildAllianceChattingChannelInfo;                       // 0x0038(0x0040) (Edit, BlueprintVisible)
	struct FCommonSource_GuildDisplayInfo              m_GuildDisplayInfo;                                       // 0x0078(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.GuildAuctionItemInfo
// 0x000C
struct FCommonSource_GuildAuctionItemInfo
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildAuctionSaleInfo
// 0x0080
struct FCommonSource_GuildAuctionSaleInfo
{
	int64_t                                            m_GuildAuctionDBKey;                                      // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MonsterIndex;                                           // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GetPlayerName;                                          // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GetPlayerIndex;                                         // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildAuctionItemInfo          m_ItemInfo;                                               // 0x0024(0x000C) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildAuctionSaleState  m_SaleState;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	int64_t                                            m_AppointedPlayerDBKey;                                   // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_AppointedPlayerName;                                    // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_AppointedPrice;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MinBidPrice;                                            // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_BidPlayerDBKey;                                         // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_BidPlayerName;                                          // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_BidPrice;                                               // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ContributorCount;                                       // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.DBGuildBattlefieldResult
// 0x0030
struct FCommonSource_DBGuildBattlefieldResult
{
	int                                                m_SeasonIdx;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MatchingGroupTier;                                      // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MatchingGroupSubTier;                                   // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Ranking;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_KillPoint;                                              // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ReturnPoint;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	int64_t                                            m_BattleEndTime;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildBattlefieldMemberInfo
// 0x0030
struct FCommonSource_GuildBattlefieldMemberInfo
{
	int                                                m_PlayerObjectSerial;                                     // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildBattlefieldBoxMinimapInfo
// 0x0018
struct FCommonSource_GuildBattlefieldBoxMinimapInfo
{
	int                                                m_PlayerObjectSerial;                                     // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_PlayerObjectPos;                                        // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildBattlefieldMinimapInfo
// 0x0018
struct FCommonSource_GuildBattlefieldMinimapInfo
{
	int64_t                                            m_PlayerObjectSerial;                                     // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_PlayerObjectPos;                                        // 0x0008(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildBattlefieldRankerDetailInfo
// 0x0048
struct FCommonSource_GuildBattlefieldRankerDetailInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	int                                                m_ReturnPoint;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_KillPoint;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_DamagedPoint;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_DamagePoint;                                            // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_HealPoint;                                              // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildBattlefieldScoreInfo
// 0x0020
struct FCommonSource_GuildBattlefieldScoreInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ReturnPoint;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_KillPoint;                                              // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LastReturnTime;                                         // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LastKillTime;                                           // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildBattlefieldPlayerInfo
// 0x0028
struct FCommonSource_GuildBattlefieldPlayerInfo
{
	int64_t                                            m_UserDBKey;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildBattlefieldGuildInfo
// 0x0068
struct FCommonSource_GuildBattlefieldGuildInfo
{
	int                                                m_ServerID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildMasterPlayerName;                                  // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0030(0x0014) (Edit, BlueprintVisible)
	int                                                m_GuildLevel;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildBattlePower;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MatchingGroupIdx;                                       // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MatchingGroupSubIdx;                                    // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MatchingRoomNum;                                        // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BattlePart;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_WarSide;                                                // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MatchingResult;                                         // 0x005D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x005E(0x0002) MISSED OFFSET
	int                                                m_EnterServerGroupID;                                     // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildDefenseTotalInfo
// 0x0080
struct FCommonSource_GuildDefenseTotalInfo
{
	int                                                m_ClearDifficulty;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RemainEntranceCount;                                    // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ChargeEntranceCount;                                    // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	struct FCommonSource_GuildDefenseDoingInfo         m_DefenseDoingInfo;                                       // 0x0008(0x0078) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.GuildDefenseRewardInfo
// 0x0058
struct FCommonSource_GuildDefenseRewardInfo
{
	int64_t                                            m_DefenseDBKey;                                           // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ClearTime;                                              // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClearRank              m_ClearRank;                                              // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	int                                                m_TotalTryCount;                                          // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TotalContribution;                                      // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldGuildRanking;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NewGuildRanking;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyRanking;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardItem;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayRewardMapIndex;                                    // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildItemMakeRewardHistory
// 0x0028
struct FCommonSource_GuildItemMakeRewardHistory
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildItemMakeMeterialAddHistory
// 0x0028
struct FCommonSource_GuildItemMakeMeterialAddHistory
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildItemMakeCompleteInfo
// 0x0020
struct FCommonSource_GuildItemMakeCompleteInfo
{
	int                                                m_GuildItemMakeInfoIndex;                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	int64_t                                            m_BuffIndex;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CompleteTime;                                           // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildItemMakeHistory
// 0x0038
struct FCommonSource_GuildItemMakeHistory
{
	int                                                m_Slot;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildItemMakeInfoSerial;                                // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildItemMakeHistoryType m_GuildItemMakeHistoryType;                               // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                m_GuildItemMakeInfoIndex;                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_HistoryTime;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildItemMakeCastleWarSeasonCount
// 0x0008
struct FCommonSource_GuildItemMakeCastleWarSeasonCount
{
	int                                                m_GuildItemMakeInfoIndex;                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Count;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildItemMakeSlotInfo
// 0x0030
struct FCommonSource_GuildItemMakeSlotInfo
{
	int                                                m_Slot;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildItemMakeInfoSerial;                                // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildItemMakeInfoIndex;                                 // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildItemMakeSlotState m_GuildItemMakeSlotState;                                 // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	TArray<int>                                        m_arrayMeterialCount;                                     // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_RemainTime;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildItemMakeWeekCount
// 0x0008
struct FCommonSource_GuildItemMakeWeekCount
{
	int                                                m_GuildItemMakeInfoIndex;                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Count;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildRaidVoteOptionDetail
// 0x0014
struct FCommonSource_GuildRaidVoteOptionDetail
{
	unsigned char                                      UnknownData00[0x14];                                      // 0x0000(0x0014) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildRaidRewardInfo
// 0x0068
struct FCommonSource_GuildRaidRewardInfo
{
	int64_t                                            m_RaidDBKey;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ClearTime;                                              // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClearRank              m_ClearRank;                                              // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	int                                                m_TotalTryCount;                                          // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TotalContribution;                                      // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldGuildRanking;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NewGuildRanking;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyRanking;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     m_BossKillerName;                                         // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardItem;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayRewardMapIndex;                                    // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildRaidVoteOption
// 0x000C
struct FCommonSource_GuildRaidVoteOption
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildItemMakeMemberReward
// 0x0010
struct FCommonSource_GuildItemMakeMemberReward
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Count;                                                  // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildRaidMapInfo
// 0x0038
struct FCommonSource_GuildRaidMapInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_MapSerial;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerCount;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BossSpawnIndex;                                         // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ProgressPercent;                                        // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildRaidState         m_GuildRaidState;                                         // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_GuildMemberSimpleInfo> m_arrayGuildMemberSimpleInfo;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildRaidDoingInfo
// 0x0018
struct FCommonSource_GuildRaidDoingInfo
{
	unsigned char                                      m_SkipDifficulty;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_SkipState;                                              // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_GuildRaidMapInfo>      m_arrayRaidMapInfo;                                       // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildRaidTotalInfo
// 0x0020
struct FCommonSource_GuildRaidTotalInfo
{
	int                                                m_ClearDifficulty;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RemainEntranceCount;                                    // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ChargeEntranceCount;                                    // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	struct FCommonSource_GuildRaidDoingInfo            m_RaidDoingInfo;                                          // 0x0008(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.RankingPlayerInfo
// 0x0070
struct FCommonSource_RankingPlayerInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldRanking;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_GMLevel;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0040(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ServerID;                                               // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_ContentsGrade;                                          // 0x006C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildStrongholdRankingPlayerInfo
// 0x0080
struct FCommonSource_GuildStrongholdRankingPlayerInfo
{
	FCommonSource_CommonSource_ERankingTeamType        m_RankingTeamType;                                        // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingBattleType      m_RankingBattleType;                                      // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	int64_t                                            m_RankingPoint;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_RankingPlayerInfo             m_RankingPlayerInfo;                                      // 0x0010(0x0070) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.GuildStrongholdSeasonTimeInfo
// 0x0010
struct FCommonSource_GuildStrongholdSeasonTimeInfo
{
	int                                                m_SeasonEndWeek;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonEndDayOfWeek;                                     // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonEndDay;                                           // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonEndHour;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildStrongholdRankerDetailInfo
// 0x0068
struct FCommonSource_GuildStrongholdRankerDetailInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_KillRanking;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	int64_t                                            m_KillPoint;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LastKillTime;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DamagedRanking;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	int64_t                                            m_DamagedPoint;                                           // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DamageRanking;                                          // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	int64_t                                            m_DamagePoint;                                            // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_HealRanking;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	int64_t                                            m_HealPoint;                                              // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildStrongholdProclaimTimeInfo
// 0x0014
struct FCommonSource_GuildStrongholdProclaimTimeInfo
{
	int                                                m_DayOfWeek;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartHour;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartMinute;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EndHour;                                                // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EndMinute;                                              // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildStrongholdAllianceGuildInfo
// 0x0048
struct FCommonSource_GuildStrongholdAllianceGuildInfo
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildLevel;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0014(0x0014) (Edit, BlueprintVisible)
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildMasterName;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildAllianceInfo
// 0x0070
struct FCommonSource_GuildAllianceInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildLevel;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x001C(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildAllianceState     m_GuildAllianceState;                                     // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FString                                     m_GuildMasterPlayerName;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_RemainApplyTime;                                        // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ServerName;                                             // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MaxChannelCount;                                        // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapChannelIndex;                                        // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CreateTime;                                             // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildAllianceSimpleInfo
// 0x0030
struct FCommonSource_GuildAllianceSimpleInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildAllianceState     m_GuildAllianceState;                                     // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x001C(0x0014) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.GuildAllianceSimpleList
// 0x0018
struct FCommonSource_GuildAllianceSimpleList
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_GuildAllianceSimpleInfo> m_arrayGuildAllianceSimple;                               // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildLetterInfo
// 0x0030
struct FCommonSource_GuildLetterInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0018(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildRankingInfo
// 0x0070
struct FCommonSource_GuildRankingInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldRanking;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildLevel;                                             // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0024(0x0014) (Edit, BlueprintVisible)
	struct FString                                     m_GuildMasterPlayerName;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildMasterPlayerIndex;                                 // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MemberCount;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxMemberCount;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_IsRankingIntroductionEmtpy;                             // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ServerName;                                             // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGrade                  m_GuildMasterContentsGrade;                               // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildBattlePowerRankingInfo
// 0x0078
struct FCommonSource_GuildBattlePowerRankingInfo
{
	struct FCommonSource_GuildRankingInfo              m_GuildInfo;                                              // 0x0000(0x0070) (Edit, BlueprintVisible)
	int                                                m_GuildBattlePower;                                       // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildLevelContributionRankingInfo
// 0x0078
struct FCommonSource_GuildLevelContributionRankingInfo
{
	struct FCommonSource_GuildRankingInfo              m_GuildInfo;                                              // 0x0000(0x0070) (Edit, BlueprintVisible)
	int                                                m_GuildContribution;                                      // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildApplyWaitingInfo
// 0x0030
struct FCommonSource_GuildApplyWaitingInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsExpel;                                                // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	int                                                m_ElapedLogoutTime;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ElapedApplyTime;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildApplyInfo
// 0x0068
struct FCommonSource_GuildApplyInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildLevel;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x001C(0x0014) (Edit, BlueprintVisible)
	TArray<int>                                        m_arrayGuildTendencyIndex;                                // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildMasterPlayerName;                                  // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MemberCount;                                            // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxMemberCount;                                         // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildApplyState        m_ApplyState;                                             // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                m_Ranking;                                                // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldRanking;                                             // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildContributionRankingInfo
// 0x0020
struct FCommonSource_GuildContributionRankingInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_Rate;                                                   // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildMemberInfo
// 0x0058
struct FCommonSource_GuildMemberInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsRaider;                                               // 0x0025(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_RequestRaider;                                          // 0x0026(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0027(0x0001) MISSED OFFSET
	int                                                m_BattlePower;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Contribution;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_WeeklyContribution;                                     // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ElapedLogoutTime;                                       // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOfflineHunting;                                       // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RaidEnterCount;                                         // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DefenseEnterCount;                                      // 0x003A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x003B(0x0001) MISSED OFFSET
	int                                                m_GuildRaidEnterRemainTime;                               // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildDefenseEnterRemainTime;                            // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_ConnectionStatus;                                       // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int64_t                                            m_GuildJoinTime;                                          // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_ContentsGrade;                                          // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildAppearInfo
// 0x0030
struct FCommonSource_GuildAppearInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0018(0x0014) (Edit, BlueprintVisible)
	bool                                               m_IsRaider;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildSimpleInfo
// 0x0048
struct FCommonSource_GuildSimpleInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildLevel;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x001C(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsRaider;                                               // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	int64_t                                            m_GuildMasterPlayerDBKey;                                 // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildJoinTime;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GuildListInfo
// 0x00A0
struct FCommonSource_GuildListInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildLevel;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x001C(0x0014) (Edit, BlueprintVisible)
	TArray<int>                                        m_arrayGuildTendencyIndex;                                // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildMasterPlayerName;                                  // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MemberCount;                                            // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxMemberCount;                                         // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJoinType          m_JoinType;                                               // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	struct FString                                     m_Comment;                                                // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsExpel;                                                // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                m_Ranking;                                                // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldRanking;                                             // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	int64_t                                            m_CreateTime;                                             // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0090(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildInfo
// 0x00C0
struct FCommonSource_GuildInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Comment;                                                // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_RankingIntroduction;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Notice;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayGuildTendencyIndex;                                // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildMasterPlayerName;                                  // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildMasterPlayerIndex;                                 // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x006C(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      m_IsPublic;                                               // 0x0080(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	int                                                m_JoinLevel;                                              // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJoinType          m_JoinType;                                               // 0x0088(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	int                                                m_MemberCount;                                            // 0x008C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BattlePower;                                            // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	int64_t                                            m_CreateTime;                                             // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DonateCount;                                            // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildLevel;                                             // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Contribution;                                           // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_WeeklyContribution;                                     // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_OpenChattingUrl;                                        // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildMarkInputInfo
// 0x000C
struct FCommonSource_GuildMarkInputInfo
{
	int                                                m_EmblemIndex;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_FrameIndex;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BackgroundColorIndex;                                   // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ImprintOptionProb
// 0x0010
struct FCommonSource_ImprintOptionProb
{
	FCommonSource_CommonSource_EImprintProbType        m_ProbType;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ProbEnum;                                               // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EImprintOptionGrade     m_GroupGrade;                                             // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Target;                                                 // 0x0003(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_BuffType;                                               // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_TotalCount;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Prob;                                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ImprintOptionInfo
// 0x0038
struct FCommonSource_ImprintOptionInfo
{
	struct FCommonSource_OptionParamInfo               m_OptionParam;                                            // 0x0000(0x0018) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EImprintOptionGrade     m_OptionGrade;                                            // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              m_MinValue;                                               // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_MaxValue;                                               // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillIndex;                                             // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillLevel;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillPassiveTarget;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ESpecializeBuffType     m_SpecializeBuffType;                                     // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ImprintInfo
// 0x0020
struct FCommonSource_ImprintInfo
{
	int                                                m_ImprintStep;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ImprintOptionInfo>     m_arrayOptionParam;                                       // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EImprintOptionGrade     m_GroupGrade;                                             // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Preset;                                                 // 0x001A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSpecial;                                              // 0x001B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDecided;                                              // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDisabled;                                             // 0x001D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x001E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.InfinityDungeonSkillPriorityInfo
// 0x0008
struct FCommonSource_InfinityDungeonSkillPriorityInfo
{
	int                                                m_SkillIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Priority;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.InfinityDungeonRewardInfo
// 0x0028
struct FCommonSource_InfinityDungeonRewardInfo
{
	unsigned char                                      m_Floor;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayItemIndexes;                                       // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayItemCounts;                                        // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.InfinityDungeonMonsterInfo
// 0x0014
struct FCommonSource_InfinityDungeonMonsterInfo
{
	int                                                m_Index;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EInfinityDungeonMonsterType m_MonsterType;                                            // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                m_MaxCount;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Count;                                                  // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.InfinityDungeonRankingInfo
// 0x0050
struct FCommonSource_InfinityDungeonRankingInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Floor;                                                  // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_PlayerIndex;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGrade                  m_ContentsGrade;                                          // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.InfinityDungeonFloorInfo
// 0x0020
struct FCommonSource_InfinityDungeonFloorInfo
{
	unsigned char                                      m_Floor;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_SettingIndex;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuffOptionGroup;                                        // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<int>                                        m_ArrayBossIndexes;                                       // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.InfinityDungeonChallengerInfo
// 0x0048
struct FCommonSource_InfinityDungeonChallengerInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildName;                                              // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0030(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.InfinityDungeonInfo
// 0x0008
struct FCommonSource_InfinityDungeonInfo
{
	unsigned char                                      m_Floor;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_NumChallenger;                                          // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_PlayerIndex;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.InfinityDungeonPlayerInfo
// 0x0003
struct FCommonSource_InfinityDungeonPlayerInfo
{
	unsigned char                                      m_Floor;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_PartyCount;                                             // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ResetCount;                                             // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.InfinityDungeonSettingInfo
// 0x0010
struct FCommonSource_InfinityDungeonSettingInfo
{
	int                                                m_SettingIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuffOptionGroup;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ResetTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.InfinityDungeonBossSimpleInfo
// 0x0018
struct FCommonSource_InfinityDungeonBossSimpleInfo
{
	unsigned char                                      m_Floor;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayBossIndex;                                         // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.InfinityDungeonDoingInfo
// 0x0028
struct FCommonSource_InfinityDungeonDoingInfo
{
	bool                                               m_IsOpen;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ClearFloor;                                             // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MaxClearFloor;                                          // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0003(0x0005) MISSED OFFSET
	TArray<struct FCommonSource_InfinityDungeonBossSimpleInfo> m_arrayBossInfo;                                          // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EInfinityDungeonDoingPlayerState m_DoingPlayerState;                                       // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPartyChallengeType     m_PartyChallengeType;                                     // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x001A(0x0002) MISSED OFFSET
	int                                                m_PartyChallengeCount;                                    // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ResetTime;                                              // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.Int16
// 0x0002
struct FCommonSource_Int16
{
	unsigned char                                      UnknownData00[0x2];                                       // 0x0000(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.IntegratedPresetActiveInfo
// 0x0009
struct FCommonSource_IntegratedPresetActiveInfo
{
	bool                                               m_IsActiveAvatar;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActiveVehicle;                                        // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActiveWeapon;                                         // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActiveRune;                                           // 0x0003(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActiveRuneSet;                                        // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActiveImprint;                                        // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActiveImprintSpecialize;                              // 0x0006(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActiveLink;                                           // 0x0007(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActiveSealed;                                         // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.IntegratedPresetInfo
// 0x0030
struct FCommonSource_IntegratedPresetInfo
{
	FCommonSource_CommonSource_EClassType              m_ClassType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_PresetGroup;                                            // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_AvatarIndex;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleGroundIndex;                                     // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleAirIndex;                                        // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_WeaponShapeIndex;                                       // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EEquipPreset            m_EquipPresetIndex;                                       // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ESkillPreset            m_SkillPresetIndex;                                       // 0x0015(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERunePreset             m_RunePresetIndex;                                        // 0x0016(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RuneSetPresetIndex;                                     // 0x0017(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ImprintPresetIndex;                                     // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ImprintSpecializePresetIndex;                           // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_LinkPresetIndex;                                        // 0x001A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsUseSealedStone;                                       // 0x001B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeBodyIndex;                                       // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeHelmetIndex;                                     // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeVehicleGroundIndex;                              // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeVehicleAirIndex;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeWeaponIndex;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.InteractInfo
// 0x0018
struct FCommonSource_InteractInfo
{
	int64_t                                            m_UserDBKey;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_InteractIndex;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ItemSoulLogInfo
// 0x0010
struct FCommonSource_ItemSoulLogInfo
{
	int64_t                                            m_ItemSerial;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EItemSoulType           m_ItemSoulType;                                           // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ResultEnchantType;                                      // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_OriginalSoulLevel;                                      // 0x000E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_AfterItemSoulLevel;                                     // 0x000F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ItemSoulInfo
// 0x0010
struct FCommonSource_ItemSoulInfo
{
	int64_t                                            m_ItemSerial;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EItemSoulType           m_ItemSoulType;                                           // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ItemSoulEnchantLevel;                                   // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.RelicTestResult
// 0x0038
struct FCommonSource_RelicTestResult
{
	int                                                m_SlotNumber;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0008(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.ItemEnchantTest
// 0x0008
struct FCommonSource_ItemEnchantTest
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ResultEnchantStep;                                      // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.RandomTestResult
// 0x0010
struct FCommonSource_RandomTestResult
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ItemExpireInfo
// 0x0020
struct FCommonSource_ItemExpireInfo
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_CreateTime;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ExpireTime;                                             // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ItemWorkmanShipTest
// 0x0010
struct FCommonSource_ItemWorkmanShipTest
{
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayOptionParamInfo;                                   // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ItemMakeMaterialInfo
// 0x000C
struct FCommonSource_ItemMakeMaterialInfo
{
	int                                                m_Index;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ReplaceMaterialIndex;                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ReplaceMaterialCount;                                   // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ItemUseCoolTimeInfo
// 0x0008
struct FCommonSource_ItemUseCoolTimeInfo
{
	FCommonSource_CommonSource_EItemType               m_ItemType;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ItemMakeInfo
// 0x0008
struct FCommonSource_ItemMakeInfo
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERandomResultType       m_ItemMakeResult;                                         // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.RandomOptionRankingInfo
// 0x000C
struct FCommonSource_RandomOptionRankingInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECharParam              m_RandOptionType;                                         // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_OptionSlot;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.EquipItemInfo
// 0x0060
struct FCommonSource_EquipItemInfo
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_ItemSerial;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayGemIndex;                                          // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayOptionParam;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsDisable;                                              // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_OdinEnchantCount;                                       // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	int64_t                                            m_OdinEnchantExpireUpdateTime;                            // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ThorEnchantCount;                                       // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	int64_t                                            m_ThorEnchantResetTime;                                   // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ItemRewardInfo
// 0x0008
struct FCommonSource_ItemRewardInfo
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ItemCountInfo
// 0x0010
struct FCommonSource_ItemCountInfo
{
	int64_t                                            m_ItemSerial;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.AppearItemInfo
// 0x0008
struct FCommonSource_AppearItemInfo
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EEquipState             m_EquipState;                                             // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x0006(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0007(0x0001) MISSED OFFSET
};

// ScriptStruct CommonSource.OptionParamLogInfo
// 0x0028
struct FCommonSource_OptionParamLogInfo
{
	int64_t                                            m_ItemSerial;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ItemIndex;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ParamEnchantStep;                                       // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECharParam              m_OptionParamType;                                        // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0012(0x0002) MISSED OFFSET
	float                                              m_OptionParamValue;                                       // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_OptionName;                                             // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.GuildCSLetter
// 0x0088
struct FCommonSource_GuildCSLetter
{
	int64_t                                            m_Idx;                                                    // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnumLetterType;                                         // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                m_MessageValueCode;                                       // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Sender;                                                 // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Message;                                                // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0030(0x0030) (Edit, BlueprintVisible)
	unsigned char                                      m_EnchantStep;                                            // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayOptionParam;                                       // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsTimeLimit;                                            // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsReceived;                                             // 0x0080(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.LetterMessageBanInfo
// 0x0028
struct FCommonSource_LetterMessageBanInfo
{
	int                                                m_BanSlotIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_BanTime;                                                // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.LetterMessageInfo
// 0x0080
struct FCommonSource_LetterMessageInfo
{
	int64_t                                            m_SendPlayerDBKey;                                        // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LetterMessageDBSlot;                                    // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELetterType             m_LetterType;                                             // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	int                                                m_MessageValueCode;                                       // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     m_Sender;                                                 // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Title;                                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Message;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRead;                                                 // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0049(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAbuse;                                                // 0x004A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x004B(0x0005) MISSED OFFSET
	int64_t                                            m_ReceivedTime;                                           // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FString                                     m_SenderGuildName;                                        // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_SenderGuildMarkEmblemIndex;                             // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SenderGuildMarkFrameIndex;                              // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SenderGuildMarkBackgroundColorIndex;                    // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.LetterInfo
// 0x00A0
struct FCommonSource_LetterInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LetterDBSlot;                                           // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ElaspedReceivedTime;                                    // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELetterType             m_LetterType;                                             // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                m_MessageValueCode;                                       // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Sender;                                                 // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Message;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0038(0x0030) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GameItemInfo>          m_arrayItemInfo;                                          // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsTimeLimit;                                            // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x0079(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x007A(0x0002) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x0080(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayOptionParam;                                       // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsReceived;                                             // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.LinkTestSlotInfo
// 0x0014
struct FCommonSource_LinkTestSlotInfo
{
	int                                                m_BoardIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SlotNum;                                                // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_EmblemIndex;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELinkEmblemGrade        m_EmblemGrade;                                            // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	int                                                m_EmblemOptionIndex;                                      // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.LinkBoardInfo
// 0x0030
struct FCommonSource_LinkBoardInfo
{
	int                                                m_BoardIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActive;                                               // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsComplete;                                             // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELinkEmblemGrade        m_CompleteGrade;                                          // 0x0006(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0007(0x0001) MISSED OFFSET
	struct FCommonSource_OptionParamInfo               m_CompleteParam;                                          // 0x0008(0x0018) (Edit, BlueprintVisible)
	int                                                m_RemainSummonCount;                                      // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChargeCount;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.MarketRefundInfo
// 0x0098
struct FCommonSource_MarketRefundInfo
{
	int64_t                                            m_MarketRefundSeq;                                        // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_AppId;                                                  // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PlayerId;                                               // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_OS;                                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Market;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_MarketProductId;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_MarketOrderId;                                          // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Currency;                                               // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_Price;                                                  // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	int64_t                                            m_MarketPurchaseTime;                                     // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MarketRefundTime;                                       // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_refundProductCount;                                     // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_repurchaseProductCount;                                 // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.DeviceInfo
// 0x00E0
struct FCommonSource_DeviceInfo
{
	struct FString                                     m_DeviceToken;                                            // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_ADID;                                                   // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_UDID;                                                   // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Country;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Language;                                               // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_DeviceModel;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_OSVersion;                                              // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PhoneNumber;                                            // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_MacAddress;                                             // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Network;                                                // 0x0090(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_DeviceWidth;                                            // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DeviceHeight;                                           // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_AppVersion;                                             // 0x00A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Isp;                                                    // 0x00B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_IsRoot;                                                 // 0x00C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	struct FString                                     m_PlatformID;                                             // 0x00D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.LoginUserInfo
// 0x00E8
struct FCommonSource_LoginUserInfo
{
	FCommonSource_CommonSource_EAccountType            m_AccountType;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EOSCode                 m_OSCode;                                                 // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EMarketType             m_Market;                                                 // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPlatformType           m_PlatformType;                                           // 0x0003(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELanguage               m_SelectLanguage;                                         // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FCommonSource_DeviceInfo                    m_DeviceInfo;                                             // 0x0008(0x00E0) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.ServerPlayerInfo
// 0x0040
struct FCommonSource_ServerPlayerInfo
{
	int                                                m_ServerID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_PlayerClassType;                                        // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	int64_t                                            m_LoginTime;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LogoutTime;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OrderNum;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ServerMergeInfo
// 0x0038
struct FCommonSource_ServerMergeInfo
{
	struct FString                                     m_ServerName;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ServerID;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	int64_t                                            m_FixExpireTime;                                          // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_DataStoreExpireTime;                                    // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ServerPlayerInfo>      m_arrayServerPlayerInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ServerAccountInfo
// 0x0030
struct FCommonSource_ServerAccountInfo
{
	int                                                m_ServerID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_LastestPlayerName;                                      // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_LastestPlayerLevel;                                     // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerCount;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ElaspedLoginTime;                                       // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ElaspedLogoutTime;                                      // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOfflineHunting;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ServerChangeInfo
// 0x0008
struct FCommonSource_ServerChangeInfo
{
	int                                                m_ServerID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EServiceState           m_ServiceState;                                           // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLimitUserCreate;                                      // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.ServerSelectInfo
// 0x0038
struct FCommonSource_ServerSelectInfo
{
	int                                                m_ServerID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EServiceState           m_ServiceState;                                           // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLimitUserCreate;                                      // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELoginRecommandType     m_RecommandType;                                          // 0x001A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x001B(0x0005) MISSED OFFSET
	struct FString                                     m_NoticeMessage;                                          // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsUseSecondPassword;                                    // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ServerGroupInfo
// 0x0018
struct FCommonSource_ServerGroupInfo
{
	int                                                m_GroupID;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_GroupName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.MapOpenInfo
// 0x0020
struct FCommonSource_MapOpenInfo
{
	int                                                m_Idx;                                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_StartTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsClosed;                                               // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.EnterTicketInfo
// 0x0010
struct FCommonSource_EnterTicketInfo
{
	FCommonSource_CommonSource_EEnterTicketType        m_EnterTicketType;                                        // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_EnterTicketIndex;                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EnterTicketCount;                                       // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.MapFavoriteInfo
// 0x0010
struct FCommonSource_MapFavoriteInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NaviVolumeAreaIndex;                                    // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DropGroupID;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OrderNo;                                                // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PortalInfo
// 0x0028
struct FCommonSource_PortalInfo
{
	int                                                m_PortalAreaIndex;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_OwnerKey;                                               // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPortalOwnerType        m_PortalOwnerType;                                        // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FString                                     m_OwnerName;                                              // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.SpawnSpeechInfo
// 0x0020
struct FCommonSource_SpawnSpeechInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_Message;                                                // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EMonsterGrade           m_MonsterGrade;                                           // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildDungeonRankingInfo
// 0x0038
struct FCommonSource_GuildDungeonRankingInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0018(0x0014) (Edit, BlueprintVisible)
	int                                                m_ClearDifficulty;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ClearTime;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.GuildDungeonContributionInfo
// 0x0050
struct FCommonSource_GuildDungeonContributionInfo
{
	bool                                               m_IsChanged;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	int64_t                                            m_DungeonDBKey;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	int64_t                                            m_DamagedContribution;                                    // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_DamageContribution;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_HealContribution;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.PartyDungeonInfo
// 0x0018
struct FCommonSource_PartyDungeonInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsQuestFinish;                                          // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ClearRankInfo
// 0x000C
struct FCommonSource_ClearRankInfo
{
	int                                                m_DeadCount;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ClearSecTime;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MonsterAliveCount;                                      // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.MarkInfo
// 0x0018
struct FCommonSource_MarkInfo
{
	FCommonSource_CommonSource_EMarkType               m_MarkType;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	int64_t                                            m_Value1;                                                 // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Value2;                                                 // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Value3;                                                 // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0012(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.NoticeInfo
// 0x0020
struct FCommonSource_NoticeInfo
{
	FCommonSource_CommonSource_ENoticeType             m_NoticeType;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ENoticeLevel            m_NoticeLevel;                                            // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	int64_t                                            m_Index;                                                  // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Value;                                                  // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ObjectMoveInfo
// 0x0020
struct FCommonSource_ObjectMoveInfo
{
	FCommonSource_CommonSource_EMoveType               m_MoveType;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EMoveState              m_MoveState;                                              // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	struct FVector                                     m_CurPos;                                                 // 0x0004(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Direction;                                              // 0x0010(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Angle;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.FactionInfo
// 0x0008
struct FCommonSource_FactionInfo
{
	FCommonSource_CommonSource_EFaction                m_MainFaction;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_SubFaction;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ObjectBaseInfo
// 0x0080
struct FCommonSource_ObjectBaseInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectIndex;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	int64_t                                            m_CurHp;                                                  // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_ObjectMoveInfo                m_MoveInfo;                                               // 0x001C(0x0020) (Edit, BlueprintVisible)
	struct FCommonSource_FactionInfo                   m_Faction;                                                // 0x003C(0x0008) (Edit, BlueprintVisible)
	unsigned char                                      m_ControllerFlag;                                         // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_BuffInfo>              m_arrayBuffInfo;                                          // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_Shield;                                                 // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MpShield;                                               // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AbsorbShield;                                           // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleHp;                                              // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaxHpUsingCurHp;                                        // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsWarMode;                                              // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                m_MaxLightIllusionCount;                                  // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LightIllusionCount;                                     // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.AppearInteractObjectInfo
// 0x00A8
struct FCommonSource_AppearInteractObjectInfo
{
	struct FCommonSource_ObjectBaseInfo                m_ObjectBaseInfo;                                         // 0x0000(0x0080) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_Double>                m_arrayAppearParam;                                       // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EInteractState          m_InteractState;                                          // 0x0090(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	int                                                m_GatheringPetIndex;                                      // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Rotator;                                                // 0x0098(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.AppearSkillObjectInfo
// 0x0090
struct FCommonSource_AppearSkillObjectInfo
{
	struct FCommonSource_ObjectBaseInfo                m_ObjectBaseInfo;                                         // 0x0000(0x0080) (Edit, BlueprintVisible)
	int                                                m_ServerCaseSerial;                                       // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ParentSkillIndex;                                       // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OwnerSerial;                                            // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.TargetInfo
// 0x0058
struct FCommonSource_TargetInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildName;                                              // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0028(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.AppearNpcInfo
// 0x0120
struct FCommonSource_AppearNpcInfo
{
	struct FCommonSource_ObjectBaseInfo                m_ObjectBaseInfo;                                         // 0x0000(0x0080) (Edit, BlueprintVisible)
	int                                                m_SpawnIndex;                                             // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_Double>                m_arrayAppearParam;                                       // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EPhaseType              m_PhaseType;                                              // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLastPhase;                                            // 0x0099(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x009A(0x0006) MISSED OFFSET
	TArray<int>                                        m_arrayPassiveSkillndex;                                  // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsSpawnAni;                                             // 0x00B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	struct FCommonSource_TargetInfo                    m_TargetInfo;                                             // 0x00B8(0x0058) (Edit, BlueprintVisible)
	float                                              m_LifeTime;                                               // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EEventMonsterType       m_EventMonsterType;                                       // 0x0118(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0119(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ExchangeCouponItemInfo
// 0x000C
struct FCommonSource_ExchangeCouponItemInfo
{
	FCommonSource_CommonSource_EResourceType           m_ResourceType;                                           // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_ResourceGrade;                                          // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_ResourceIndex;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEquiped;                                              // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.OdinCouponItemInfo
// 0x0010
struct FCommonSource_OdinCouponItemInfo
{
	int                                                m_ItemIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Enchant;                                                // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int64_t                                            m_UpdateTime;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.AvatarVehicleComposeInfo
// 0x0010
struct FCommonSource_AvatarVehicleComposeInfo
{
	unsigned char                                      m_ComposeGrade;                                           // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	int64_t                                            m_UpdateTime;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ParamMaxInfo
// 0x0008
struct FCommonSource_ParamMaxInfo
{
	FCommonSource_CommonSource_ECharParam              m_ParamType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              m_ParamMaxValue;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PartyDungeonIndividualRewardInfo
// 0x0048
struct FCommonSource_PartyDungeonIndividualRewardInfo
{
	struct FString                                     m_PlayerName;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ObjectIndex;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0018(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.PartyMemberSimpleInfo
// 0x0020
struct FCommonSource_PartyMemberSimpleInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ObjectIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PartySimpleInfo
// 0x0048
struct FCommonSource_PartySimpleInfo
{
	int                                                m_PartySerial;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_DungeonSerial;                                          // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_MasterName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MasterObjectIndex;                                      // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MasterLevel;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MasterBattlePower;                                      // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MasterServerID;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_PartyMemberSimpleInfo> m_arrayMemberSimpleInfo;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_DungeonDifficulty;                                      // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.PartyInfo
// 0x0040
struct FCommonSource_PartyInfo
{
	int                                                m_PartySerial;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MasterSerial;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MasterPlayerDBKey;                                      // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MasterServerID;                                         // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_PartyMemberInfo>       m_arrayMemberInfo;                                        // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_DungeonIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_DungeonSerial;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DungeonDifficulty;                                      // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	float                                              m_ElapsedAllowServerMoveTime;                             // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.InvitePlayerInfo
// 0x0078
struct FCommonSource_InvitePlayerInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ObjectIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BattlePower;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_CanInvite;                                              // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	struct FCommonSource_GuildSimpleInfo               m_GuildSimpleInfo;                                        // 0x0028(0x0048) (Edit, BlueprintVisible)
	float                                              m_RemainTime;                                             // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_ConnectionStatus;                                       // 0x0074(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.PlayerPenalty
// 0x0010
struct FCommonSource_PlayerPenalty
{
	int                                                m_PenaltyDBSlot;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPkBrutalState          m_PkBrutalState;                                          // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDeathPenaltyFreeMode   m_DeathPenaltyFreeMode;                                   // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	float                                              m_LossExpPercent;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PetComposeInfo
// 0x0008
struct FCommonSource_PetComposeInfo
{
	FCommonSource_CommonSource_EItemGrade              m_ItemGrade;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ComposeCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PetInfo
// 0x0014
struct FCommonSource_PetInfo
{
	int                                                m_PetIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PetCount;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainSkillEableTime;                                   // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFixedTerm;                                            // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              m_RemainExpireTime;                                       // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PkTauntTargetInfo
// 0x0020
struct FCommonSource_PkTauntTargetInfo
{
	struct FString                                     m_PlayerName;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_TargetGuildDBKey;                                       // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PkRankingInfo
// 0x0060
struct FCommonSource_PkRankingInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldRanking;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSlayer;                                               // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	int                                                m_KillCount;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AssistCount;                                            // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DeadCount;                                              // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PkScore;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_ContentsGrade;                                          // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.PkWatchInfo
// 0x0058
struct FCommonSource_PkWatchInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0030(0x0014) (Edit, BlueprintVisible)
	bool                                               m_IsMainWatch;                                            // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                m_DeadElapedTime;                                         // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_LogoutElapedTime;                                       // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_ConnectionStatus;                                       // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.PkTauntPlayerInfo
// 0x0058
struct FCommonSource_PkTauntPlayerInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0030(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PkChaseInfo
// 0x0060
struct FCommonSource_PkChaseInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0030(0x0014) (Edit, BlueprintVisible)
	int                                                m_MapIndex;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x0048(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainChaseTime;                                        // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOnline;                                               // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.PkBrutalInfo
// 0x0010
struct FCommonSource_PkBrutalInfo
{
	FCommonSource_CommonSource_EPkBrutalState          m_PkBrutalState;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              m_BrutalTime;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_KillCount;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Bounty;                                                 // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PkSlayerInfo
// 0x0060
struct FCommonSource_PkSlayerInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_Level;                                                  // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	int                                                m_KillCount;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DeadCount;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AssistCount;                                            // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ElaspedLogoutTime;                                      // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_ConnectionStatus;                                       // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.PkInfo
// 0x0080
struct FCommonSource_PkInfo
{
	int64_t                                            m_PkDBKey;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPkResultType           m_PkResultType;                                           // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BattlePower;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0048(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	int64_t                                            m_CreateTime;                                             // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ChaseableTime;                                          // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainChaseTime;                                        // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsChase;                                                // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                m_RemainChaseCount;                                       // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_IsSlayer;                                               // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_ConnectionStatus;                                       // 0x007C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.ContentsWorldControlInfo
// 0x0002
struct FCommonSource_ContentsWorldControlInfo
{
	FCommonSource_CommonSource_EContentsType           m_ContentsBlockType;                                      // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBlock;                                                // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GMCheatInfo
// 0x0038
struct FCommonSource_GMCheatInfo
{
	int64_t                                            m_Idx;                                                    // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_CheatName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsOnOff;                                                // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_HasParameter;                                           // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
	struct FString                                     m_ParameterName;                                          // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGMCheatParamType       m_CheatParameterType;                                     // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ContentsBlockInfo
// 0x0003
struct FCommonSource_ContentsBlockInfo
{
	FCommonSource_CommonSource_EContentsType           m_ContentsBlockType;                                      // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBlock;                                                // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsHideUI;                                               // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PlayerOrder
// 0x0010
struct FCommonSource_PlayerOrder
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_OrderNum;                                               // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.PlayerBattlePowerRankingInfo
// 0x0078
struct FCommonSource_PlayerBattlePowerRankingInfo
{
	struct FCommonSource_RankingPlayerInfo             m_RankingPlayerInfo;                                      // 0x0000(0x0070) (Edit, BlueprintVisible)
	int                                                m_BattlePower;                                            // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.PlayerLevelRankingInfo
// 0x0078
struct FCommonSource_PlayerLevelRankingInfo
{
	struct FCommonSource_RankingPlayerInfo             m_RankingPlayerInfo;                                      // 0x0000(0x0070) (Edit, BlueprintVisible)
	int                                                m_Level;                                                  // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ExpRate;                                                // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PlayerPos
// 0x0020
struct FCommonSource_PlayerPos
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectSerial;                                           // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x0010(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.OtherPlayerInfo
// 0x0160
struct FCommonSource_OtherPlayerInfo
{
	int64_t                                            m_UserDBKey;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_Level;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EquipAvatarIndex;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x0030(0x0038) (Edit, BlueprintVisible)
	struct FCommonSource_GuildSimpleInfo               m_GuildInfo;                                              // 0x0068(0x0048) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_EquipItemInfo>         m_arrayEquipItem;                                         // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsFriend;                                               // 0x00C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_GMLevel;                                                // 0x00C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x00C2(0x0006) MISSED OFFSET
	TArray<float>                                      m_arrayBaseParam;                                         // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ParamInfo>             m_arrayPlusParam;                                         // 0x00D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_CostumeResourceInfo           m_CostumeResourceInfo;                                    // 0x00E8(0x0040) (Edit, BlueprintVisible)
	int                                                m_EquipWeaponShapeIndex;                                  // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayItemRandomOption;                                  // 0x0130(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsLogin;                                                // 0x0140(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_ConnectionStatus;                                       // 0x0141(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_AvatarIsLook;                                           // 0x0142(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_WeaponShapeIsLook;                                      // 0x0143(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ItemSoulInfo>          m_arrayItemSoulInfo;                                      // 0x0148(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EquipMainPetIndex;                                      // 0x0158(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x015C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ImagePlayerInfo
// 0x00C0
struct FCommonSource_ImagePlayerInfo
{
	FCommonSource_CommonSource_EClassType              m_ClassType;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_EquipWeaponShapeIndex;                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EquipWeaponItemIndex;                                   // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EquipWeaponEnchantStep;                                 // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_WeaponShapeLook;                                        // 0x000D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	int                                                m_EquipAvatarIndex;                                       // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_AvatarIsLook;                                           // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	int                                                m_EquipPetIndex;                                          // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x0020(0x0038) (Edit, BlueprintVisible)
	struct FCommonSource_CostumeResourceInfo           m_CostumeResourceInfo;                                    // 0x0058(0x0040) (Edit, BlueprintVisible)
	struct FCommonSource_GuildMemberSimpleInfo         m_GuildSimpleInfo;                                        // 0x0098(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.WeaponShapeEquipedInfo
// 0x0008
struct FCommonSource_WeaponShapeEquipedInfo
{
	int                                                m_EquipWeaponShapeIndex;                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_WeaponShapeIsLook;                                      // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.PlayerCampInfo
// 0x0004
struct FCommonSource_PlayerCampInfo
{
	unsigned char                                      m_RealmwarSide;                                           // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DuelSide;                                               // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CastlewarMercenaryNum;                                  // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CastlewarQualifierSide;                                 // 0x0003(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.AppearPlayerInfo
// 0x01D0
struct FCommonSource_AppearPlayerInfo
{
	struct FCommonSource_ObjectBaseInfo                m_ObjectBaseInfo;                                         // 0x0000(0x0080) (Edit, BlueprintVisible)
	int64_t                                            m_PlayerDBKey;                                            // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_Double>                m_arrayAppearParam;                                       // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PlayerName;                                             // 0x0098(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x00A8(0x0038) (Edit, BlueprintVisible)
	int                                                m_RideVehicleIndex;                                       // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AirVehicleIndex;                                        // 0x00E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsVehicleTransform;                                     // 0x00E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET
	struct FCommonSource_GuildAppearInfo               m_AppearGuildInfo;                                        // 0x00F0(0x0030) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EPkBrutalState          m_BrutalState;                                            // 0x0120(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSlayer;                                               // 0x0121(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFavoriteFriend;                                       // 0x0122(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0123(0x0001) MISSED OFFSET
	int                                                m_EquipWeaponItemIndex;                                   // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EquipWeaponEnchantStep;                                 // 0x0128(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	int                                                m_EquipAvatarIndex;                                       // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EquipPetIndex;                                          // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_AvatarIsLook;                                           // 0x0134(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPkMainWatch;                                          // 0x0135(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0136(0x0002) MISSED OFFSET
	TArray<struct FCommonSource_RankingInfo>           m_arrayRankingInfo;                                       // 0x0138(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildAllianceState     m_GuildAllianceState;                                     // 0x0148(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAggroIcon;                                            // 0x0149(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x014A(0x0006) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0150(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_CostumeResourceInfo           m_CostumeResourceInfo;                                    // 0x0160(0x0040) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildAllianceState     m_GuildStrongholdAllianceState;                           // 0x01A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x01A1(0x0003) MISSED OFFSET
	struct FCommonSource_WeaponShapeEquipedInfo        m_WeaponShapeEquipedInfo;                                 // 0x01A4(0x0008) (Edit, BlueprintVisible)
	struct FCommonSource_PlayerCampInfo                m_PlayerCampInfo;                                         // 0x01AC(0x0004) (Edit, BlueprintVisible)
	int                                                m_ShadowTierIndex;                                        // 0x01B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsKillMe;                                               // 0x01B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x01B5(0x0003) MISSED OFFSET
	int64_t                                            m_KillerTargetExpireTime;                                 // 0x01B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x01C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x01C1(0x0003) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerInvasionGuildEnterOrder;                          // 0x01C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x01CC(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.OfflineHuntingInfo
// 0x0028
struct FCommonSource_OfflineHuntingInfo
{
	int                                                m_PlayTime;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_Exp;                                                    // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_Gold;                                                   // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GameItemInfo>          m_arrayDropItemInfo;                                      // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.PlayerReconnectInfo
// 0x0068
struct FCommonSource_PlayerReconnectInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CurMapIndex;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x0008(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	int64_t                                            m_CurHp;                                                  // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      m_arrayBaseParam;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ParamInfo>             m_arrayPlusParam;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayPartyMemberSerial;                                 // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_RealmwarRemainTime;                                     // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.VehicleInfo
// 0x001C
struct FCommonSource_VehicleInfo
{
	int                                                m_VehicleIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleGrade;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleCount;                                           // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEquip;                                                // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	float                                              m_ElaspedCreateTime;                                      // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFixedTerm;                                            // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PlayerDetailInfo
// 0x0150
struct FCommonSource_PlayerDetailInfo
{
	struct FCommonSource_ObjectBaseInfo                m_ObjectBaseInfo;                                         // 0x0000(0x0080) (Edit, BlueprintVisible)
	int64_t                                            m_PlayerDBKey;                                            // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_Exp;                                                    // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_Gold;                                                   // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RepeatQuestBadge;                                       // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildCoin;                                              // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RealmwarCoin;                                           // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MimirWisdom;                                            // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x00B8(0x0038) (Edit, BlueprintVisible)
	int                                                m_MapIndex;                                               // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_VehicleInfo>           m_arrayVehicleInfo;                                       // 0x00F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<float>                                      m_arrayBaseParam;                                         // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ParamInfo>             m_arrayPlusParam;                                         // 0x0118(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGMLevel                m_GMLevel;                                                // 0x0128(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsMimirOn;                                              // 0x0129(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x012A(0x0006) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0130(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CastlewarCoin;                                          // 0x0140(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ShadowCoin;                                             // 0x0144(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_HellCoin;                                               // 0x0148(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_InvasionCurrency;                                       // 0x014C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.PlayerSimpleInfo
// 0x0120
struct FCommonSource_PlayerSimpleInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Level;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BattlePower;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	int64_t                                            m_CreateTime;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_LastLoginTime;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x0038(0x0038) (Edit, BlueprintVisible)
	int                                                m_EquipWeaponItemIndex;                                   // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EquipWeaponEnchantStep;                                 // 0x0074(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	int                                                m_EquipAvatarIndex;                                       // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EquipWeaponShapeIndex;                                  // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EquipPetIndex;                                          // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_AvatarIsLook;                                           // 0x0084(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_WeaponShapeIsLook;                                      // 0x0085(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_OrderNum;                                               // 0x0086(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0087(0x0001) MISSED OFFSET
	int                                                m_OfflineHuntingPlayTime;                                 // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	struct FCommonSource_GuildSimpleInfo               m_GuildInfo;                                              // 0x0090(0x0048) (Edit, BlueprintVisible)
	float                                              m_RemainDeleteTime;                                       // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDeleteReservation;                                    // 0x00DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET
	struct FCommonSource_CostumeResourceInfo           m_CostumeResourceInfo;                                    // 0x00E0(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.BaseProtocol
// 0x0028
struct FCommonSource_BaseProtocol
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_FINISH_ALL_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_FINISH_ALL_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_FINISH_ALL_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_FINISH_ALL_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_AchievementReward>     m_arrayAchievementReward;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GameItemInfo>          m_arrayResultItemInfo;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_FINISH_ALL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_FINISH_ALL_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EAchievementCategory    m_AchievementCategory;                                    // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_FINISH_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_FINISH_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_AchievementReward             m_AchievementReward;                                      // 0x0028(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_FINISH_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_FINISH_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_AchievementIndex;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_POINT_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_POINT_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ChangeAchievementPoint;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResultAchievementPoint;                                 // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_ADD_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_ADD_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_AchievementInfo>       m_arrayAchievementInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_TOTAL_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_AchievementInfo>       m_arrayAchievementInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_TOTAL_INFO_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_AchievementPoint;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_AchievementInfo>       m_arrayAchievementInfo;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_PLAYER_SELECT_INFO_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_AchievementPoint;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_AchievementInfo>       m_arrayAchievementInfo;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ACHIEVEMENT_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ACHIEVEMENT_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EAchievementNetResult   m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ALCHEMY_MAKING_TEST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ALCHEMY_MAKING_TEST_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_AlchemyTestInfo               m_AlchemyTestInfo;                                        // 0x0028(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_ALCHEMY_MAKING_TEST_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ALCHEMY_MAKING_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_AlchemyMakeInfo>       m_arrAlchemyInfo;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_TestCount;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestType;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ALCHEMY_BOARD_INACTIVE_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_ALCHEMY_BOARD_INACTIVE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_AlchemyBoardInfo              m_AlchemyBoardInfo;                                       // 0x0028(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_ALCHEMY_HEATING_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_ALCHEMY_HEATING_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_AlchemyBoardInfo              m_AlchemyBoardInfo;                                       // 0x0028(0x0028) (Edit, BlueprintVisible)
	bool                                               m_IsSuccessHeating;                                       // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_ItemRewardInfo>        m_arrayItemRewardInfo;                                    // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ALCHEMY_BOARD_ACTIVE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ALCHEMY_BOARD_ACTIVE_CMD : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayBoardIndex;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ALCHEMY_MAKING_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_ALCHEMY_MAKING_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_AlchemyBoardInfo              m_AlchemyBoardInfo;                                       // 0x0028(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_ALCHEMY_HEATING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ALCHEMY_HEATING_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ALCHEMY_MAKING_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ALCHEMY_MAKING_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_AlchemyMakeInfo>       m_arrayAlchemyInfo;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ALCHEMY_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ALCHEMY_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_AlchemyBoardInfo>      m_arrayAlchemyBoardInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ALCHEMY_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ALCHEMY_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ALCHEMY_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ALCHEMY_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EAlchemyNetResult       m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_SACRIFICE_POINT_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_SACRIFICE_POINT_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ChangeSacrificePoint;                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResultSacrificePoint;                                   // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_SACRIFICE_POINT_ONOFF_COOLTIME_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_SACRIFICE_POINT_ONOFF_COOLTIME_CMD : public FCommonSource_BaseProtocol
{
	float                                              m_SacrificePointOnOffRemainCoolTime;                      // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_SACRIFICE_POINT_ONOFF_CHANGE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ATTACK_SACRIFICE_POINT_ONOFF_CHANGE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ATTACK_SACRIFICE_POINT_ONOFF_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_SACRIFICE_POINT_ONOFF_INFO_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsOn;                                                   // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_DAMAGE_METER_END_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ATTACK_DAMAGE_METER_END_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ATTACK_DAMAGE_METER_UPDATE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ATTACK_DAMAGE_METER_UPDATE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_DamageMeterInfo>       m_arrayDamageMeterInfo;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ATTACK_SACRIFICE_POINT_ONOFF_CHANGE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_SACRIFICE_POINT_ONOFF_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsOn;                                                   // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_RESURRECTION_BUFF_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ATTACK_RESURRECTION_BUFF_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ATTACK_SKILL_COOLTIME_RESET_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ATTACK_SKILL_COOLTIME_RESET_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ATTACK_SKILL_DELETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_SKILL_DELETE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillIndex;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_AUTO_HUNTING_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ATTACK_AUTO_HUNTING_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ATTACK_RESURRECTION_BUFF_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_RESURRECTION_BUFF_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsConfirm;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_AUTO_HUNTING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_AUTO_HUNTING_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAutoHunting;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_HITAREA_NOTIFY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_HITAREA_NOTIFY_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_AttackerSerial;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerCaseSerial;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_COOLTIME_REDUCTION_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTACK_COOLTIME_REDUCTION_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ReductionPercent;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ReductionSecond;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_VALKNUT_COUNT_COOLTIME_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_VALKNUT_COUNT_COOLTIME_CMD : public FCommonSource_BaseProtocol
{
	float                                              m_ValknutCountRemainCoolTime;                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_VALKNUT_COUNT_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_VALKNUT_COUNT_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ChangeValknutCount;                                     // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResultValknutCount;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_INSTINCT_CHANGE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_INSTINCT_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EInstinctType           m_InstinctType;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_InstinctRemainCoolTime;                                 // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_INSTINCT_CHANGE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ATTACK_INSTINCT_CHANGE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ATTACK_INSTINCT_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_INSTINCT_INFO_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EInstinctType           m_InstinctType;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_InstinctRemainCoolTime;                                 // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_SUN_MOON_POINT_COOLTIME_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_SUN_MOON_POINT_COOLTIME_CMD : public FCommonSource_BaseProtocol
{
	float                                              m_SunPointRemainCoolTime;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_MoonPointRemainCoolTime;                                // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_SUN_MOON_POINT_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTACK_SUN_MOON_POINT_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ChangeSunPoint;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResultSunPoint;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChangeMoonPoint;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResultMoonPoint;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_MELODY_POINT_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_MELODY_POINT_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ChangeMelodyPoint;                                      // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResultMelodyPoint;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_SEAL_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_SEAL_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ChangeSealCount;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResultSealCount;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_PKMODE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_PKMODE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPKModeType             m_PkModeType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_RESURRECTION_WAIT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTACK_RESURRECTION_WAIT_CMD : public FCommonSource_BaseProtocol
{
	float                                              m_RemainResurrectionWaitingTime;                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainResurrectionLimitTime;                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainResurrectionCashWaitingTime;                      // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_WARMODE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_WARMODE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWarModeType            m_WarModeType;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_RESURRECTION_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ATTACK_RESURRECTION_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TargetSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CurHp;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_RESURRECTION_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ATTACK_RESURRECTION_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ATTACK_DEAD_FINISH_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTACK_DEAD_FINISH_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_TargetSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_TargetPos;                                              // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_DEAD_FINISH_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTACK_DEAD_FINISH_SYN : public FCommonSource_BaseProtocol
{
	struct FVector                                     m_CurPos;                                                 // 0x0028(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_DEAD_COUNT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTACK_DEAD_COUNT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DeadCount;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CashResurrectionCount;                                  // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_DEAD_CMD
// 0x0080 (0x00A8 - 0x0028)
struct FCommonSource_CG_ATTACK_DEAD_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TargetSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_KillerInfo                    m_KillerInfo;                                             // 0x0030(0x0070) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EDeadType               m_DeadType;                                               // 0x00A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNoName;                                               // 0x00A1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNoPanelty;                                            // 0x00A2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDeadSubType            m_DeadSubType;                                            // 0x00A3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_ABNORMAL_RESIST_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ATTACK_ABNORMAL_RESIST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TargetSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillIndex;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	int64_t                                            m_BuffIndex;                                              // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_BUFF_EXPIRE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTACK_BUFF_EXPIRE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BuffInfo>              m_arrayDeleteBuffInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ATTACK_BUFF_CHANGE_CMD
// 0x0098 (0x00C0 - 0x0028)
struct FCommonSource_CG_ATTACK_BUFF_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TargetSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuffSerial;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NewServerCaseSerial;                                    // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_BuffInfo                      m_NewBuffInfo;                                            // 0x0038(0x0080) (Edit, BlueprintVisible)
	bool                                               m_IsBroadcast;                                            // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_BUFF_END_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTACK_BUFF_END_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TargetSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuffSerial;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBroadcast;                                            // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_BUFF_TOTAL_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTACK_BUFF_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BuffInfo>              m_arrayBuffInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ATTACK_BUFF_START_CMD
// 0x0090 (0x00B8 - 0x0028)
struct FCommonSource_CG_ATTACK_BUFF_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TargetSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_BuffInfo                      m_BuffInfo;                                               // 0x0030(0x0080) (Edit, BlueprintVisible)
	bool                                               m_IsBroadcast;                                            // 0x00B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_HIT_AGGRO_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ATTACK_HIT_AGGRO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AttackerSerial;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        m_arrayTargetSerial;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ATTACK_HIT_KNOCKBACK_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ATTACK_HIT_KNOCKBACK_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TargetSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_TargetPos;                                              // 0x003C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_HIT_PULL_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ATTACK_HIT_PULL_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TargetSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_TargetPos;                                              // 0x003C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_HIT_DAMAGE_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ATTACK_HIT_DAMAGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TargetSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_HitDamageInfo>         m_arrayHitDamageInfo;                                     // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsBroadcast;                                            // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsForceDisplayDamage;                                   // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPetSkill;                                             // 0x0042(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0043(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_TOGGLE_OFF_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_TOGGLE_OFF_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_END_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTACK_END_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_AttackerSerial;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerCaseSerial;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillIndex;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_CANCEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_TOGGLE_OFF_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTACK_TOGGLE_OFF_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_SKILL_SHOOT_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_ATTACK_SKILL_SHOOT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AttackerSerial;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_AttackerPos;                                            // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillIndex;                                             // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MainTargetSerial;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_ExtraPos;                                               // 0x0044(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCurCritical;                                          // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECriticalType           m_CurCriticalType;                                        // 0x0051(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0052(0x0006) MISSED OFFSET
	int64_t                                            m_CurHp;                                                  // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_AttackSpeedAddPercent;                                  // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTACK_SKILL_SERIAL_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ATTACK_SKILL_SERIAL_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ClientCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerCaseSerial;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CurHp;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_SKILL_SHOOT_L210_SYN
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_ATTACK_SKILL_SHOOT_L210_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ClientCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_AttackerPos;                                            // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillIndex;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MainTargetSerial;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_ExtraPos;                                               // 0x0040(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_SKILL_CASTING_SYN
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_ATTACK_SKILL_CASTING_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ClientCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_AttackerPos;                                            // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillIndex;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MainTargetSerial;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_GroundPos;                                              // 0x0040(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_NAK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_ATTACK_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EAttackNetResult        m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                m_ObjectSerial;                                           // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillIndex;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x0048(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainCoolTime;                                         // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTENDANCE_CHECK_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTENDANCE_CHECK_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_AttendanceIdx;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AttendanceCount;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTENDANCE_CHECK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTENDANCE_CHECK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_AttendanceIdx;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTACK_SKILL_CASTING_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_ATTACK_SKILL_CASTING_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AttackerSerial;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_AttackerPos;                                            // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillIndex;                                             // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MainTargetSerial;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	int64_t                                            m_CurHp;                                                  // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTENDANCE_REWARD_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ATTENDANCE_REWARD_INFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_AttendanceIdx;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_AttendanceRewardInfo>  m_arrayAttendanceRewardInfo;                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsAttended;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                m_AttendanceCount;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ATTENDANCE_REWARD_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTENDANCE_REWARD_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_AttendanceIdx;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTENDANCE_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ATTENDANCE_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_AttendanceIdx;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTENDANCE_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ATTENDANCE_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_AttendanceInfo>        m_arrayAttendanceInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ATTENDANCE_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ATTENDANCE_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ATTENDANCE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ATTENDANCE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EAttendanceNetResult    m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_DECIDE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_DECIDE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_AvatarIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ATTENDANCE_INFO_ACK
// 0x0068 (0x0090 - 0x0028)
struct FCommonSource_CG_ATTENDANCE_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_AttendanceInfo                m_AttendanceInfo;                                         // 0x0028(0x0068) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_AVATAR_DECIDE_DELETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_DECIDE_DELETE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_DelteSlotIndex;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_DECIDE_ADD_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_DECIDE_ADD_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_AvatarDecideInfo              m_AvatarChangeInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_AVATAR_DRAW_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_DRAW_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_AvatarDecideInfo              m_AvatarChangeInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_AVATAR_DRAW_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_DRAW_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SlotIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClassType              m_SelectedClassType;                                      // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_RANDOM_SHIFT_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_RANDOM_SHIFT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_OldAvatarIndex;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AvatarIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_AvatarSerial;                                           // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ShiftCount;                                             // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_RANDOM_SHIFT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_RANDOM_SHIFT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_AvatarIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_AvatarSerial;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_RANDOM_BOX_CONFIRM_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_AVATAR_RANDOM_BOX_CONFIRM_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_AVATAR_RANDOM_BOX_CONFIRM_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_AVATAR_RANDOM_BOX_CONFIRM_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_AVATAR_RANDOM_BOX_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_AVATAR_RANDOM_BOX_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayAvatarSerial;                                      // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_AVATAR_LOOK_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_LOOK_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLook;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_LOOK_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_LOOK_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsLook;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_LOOK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_LOOK_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsLook;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_AVATAR_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_AvatarInfo                    m_AvatarInfo;                                             // 0x0028(0x0014) (Edit, BlueprintVisible)
	int                                                m_ReasonIndex;                                            // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_AVATAR_OWN_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_OWN_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_AvatarIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_OWN_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_OWN_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_AvatarIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_COMPOSE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_AVATAR_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EItemGrade              m_ItemGrade;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayAvatar;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_AVATAR_BUNDLE_COMPOSE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_AVATAR_BUNDLE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_AvatarComposeInfo>     m_arrayAvatarComposeInfo;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CG_AVATAR_COMPOSE_ACK> m_arrayAvatarCompose;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_AVATAR_BUNDLE_COMPOSE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_BUNDLE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EClassType              m_ExclusionClassType;                                     // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_COMPOSE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_COMPOSE_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ItemCountInfo>         m_arrayAvatar;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_AVATAR_EQUIP_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_EQUIP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EquipAvatarIndex;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldAvatarIndex;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_EQUIP_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_EQUIP_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_AvatarIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_AVATAR_EQUIP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_EQUIP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_AvatarIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_EXPIRE_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_EXPIRE_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_AvatarInfo>            m_arrayAvatar;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_AVATAR_EXPIRE_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_AVATAR_EXPIRE_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_AVATAR_PLAYER_SELECT_INFO_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_AVATAR_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_EquipAvatarIndex;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_AvatarIsLook;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_AvatarInfo>            m_arrayAvatar;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_AvatarDecideInfo>      m_arrayAvatarDecide;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_AVATAR_RUNE_AUTO_COMPOSE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_RUNE_AUTO_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayItemIndex;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_AVATAR_RUNE_AUTO_COMPOSE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_RUNE_AUTO_COMPOSE_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RuneGrade;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_RUNE_COMPOSE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_AVATAR_RUNE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayItemSerial;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_RuneItemIndex;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Succ;                                                   // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_RUNE_COMPOSE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_RUNE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayItemSerial;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_AVATAR_RUNE_EXTRACT_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_RUNE_EXTRACT_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RuneSlot;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_RUNE_EXTRACT_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_RUNE_EXTRACT_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RuneSlot;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_RUNE_DEL_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_RUNE_DEL_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RuneSlot;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_RUNE_DEL_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_RUNE_DEL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RuneSlot;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_AVATAR_RUNE_EQUIP_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_RUNE_EQUIP_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RuneSerial;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_AVATAR_RUNE_EQUIP_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_AVATAR_RUNE_EQUIP_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RuneSerial;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_AVATAR_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_AVATAR_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EAvatarNetResult        m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_COLLECTION_COMPLETE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSING_COLLECTION_COMPLETE_CMD : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayCollectionIndex;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_COLLECTION_TOTALINFO_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_BLESSING_COLLECTION_TOTALINFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        m_arrayCollectionIndex;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_COLLECTION_TOTALINFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_BLESSING_COLLECTION_TOTALINFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_CHANGE_CMD
// 0x0068 (0x0090 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERewardReason           m_RewardReason;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_ReasonIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_BlessingStoneInfo             m_StoneInfo;                                              // 0x0030(0x0060) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_RANDOMBOX_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_RANDOMBOX_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_BlessingStoneInfo>     m_arrayRewardStoneInfo;                                   // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_EXCHANGE_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_EXCHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_BlessingStoneInfo             m_ResultStoneInfo;                                        // 0x0028(0x0060) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_EXCHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_EXCHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BlessingStoneDBSlot;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_BUNDLE_COMPOSE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_BUNDLE_COMPOSE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BlessingStoneInfo>     m_arrayResultStoneInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_BUNDLE_COMPOSE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_BUNDLE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BlessingStoneInfo>     m_arrayResultStoneInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_BUNDLE_COMPOSE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_BUNDLE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_AVATAR_DECIDE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AVATAR_DECIDE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_DecideSlotIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_TRANSFORM_ACK
// 0x0078 (0x00A0 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_TRANSFORM_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayMeterialStoneDBSlot;                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_BlessingStoneInfo             m_ResultStoneInfo;                                        // 0x0038(0x0060) (Edit, BlueprintVisible)
	bool                                               m_IsSuccess;                                              // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_TRANSFORM_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_TRANSFORM_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MainBlessingStoneDBSlot;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        m_arrayMeterialStoneDBSlot;                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_COMPOSE_ACK
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGrade                  m_ComposeGrade;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayMeterialStoneDBSlot;                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_BlessingStoneInfo>     m_arrayResultStoneInfo;                                   // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_RewardInfo                    m_ExtraRewardInfo;                                        // 0x0050(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_COMPOSE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayMeterialStoneDBSlot;                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_LOCK_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_LOCK_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_BlessingStoneInfo             m_BlessingStoneInfo;                                      // 0x0028(0x0060) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_LOCK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_LOCK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BlessingStoneDBSlot;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_UNEQUIP_ACK
// 0x0078 (0x00A0 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_UNEQUIP_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_BlessingStoneInfo             m_UnEquipStoneInfo;                                       // 0x0028(0x0060) (Edit, BlueprintVisible)
	TArray<int>                                        m_arrayUnEquipSlotIndex;                                  // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsAllClear;                                             // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_EQUIP_ACK
// 0x0070 (0x0098 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_EQUIP_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_BlessingStoneInfo             m_EquipStoneInfo;                                         // 0x0028(0x0060) (Edit, BlueprintVisible)
	TArray<int>                                        m_arrayEquipSlotIndex;                                    // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_UNEQUIP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_UNEQUIP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BlessingStoneDBSlot;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAllClear;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_STONE_EQUIP_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_BLESSING_STONE_EQUIP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BlessingStoneDBSlot;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        m_arrayEquipSlotIndex;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_ENCHANT_PARAM_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_ENCHANT_PARAM_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayOptionParam;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_ENCHANT_TEST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_ENCHANT_TEST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BlessingSlotEnchantTest> m_arrayTestResult;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_ENCHANT_TEST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_ENCHANT_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectColumnGroup;                                      // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectRowsGroup;                                        // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                m_EnchantCount;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_ENCHANT_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_ENCHANT_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BlessingSlotInfo>      m_arrayBlessingSlotInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_BlessingSlotEnchantResultInfo> m_arrayEnchantResult;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_ENCHANT_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_ENCHANT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectColumnGroup;                                      // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectRowsGroup;                                        // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	TArray<int>                                        m_arrayProtectSlotIndex;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_LOCK_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_LOCK_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BlessingSlotInfo>      m_arraySlotInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_LOCK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_LOCK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EquipStoneDBSlot;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_CHANGECOUNT_RESET_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_CHANGECOUNT_RESET_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_SYMBOLCHANGE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_SYMBOLCHANGE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BlessingSlotInfo>      m_arraySlotInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsAllReset;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_CHANGECOUNT_RESET_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_CHANGECOUNT_RESET_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_SYMBOLCHANGE_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_SYMBOLCHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectColumnGroup;                                      // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectRowsGroup;                                        // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	TArray<int>                                        m_arrayProtectSlotIndex;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_OPEN_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_OPEN_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_BlessingSlotInfo              m_SlotInfo;                                               // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_BLESSING_SLOT_OPEN_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_BLESSING_SLOT_OPEN_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SlotIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSING_TOTAL_INFO_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_BLESSING_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BlessingSlotInfo>      m_arrayBlessingSlotInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_BlessingStoneInfo>     m_arrayBlessingStoneInfo;                                 // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSING_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BlessingBoardInfo>     m_arrayBlessingBoardInfo;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSING_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_BLESSING_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_BLESSING_BOARD_CHANGE_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_BLESSING_BOARD_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_BlessingBoardInfo             m_BoardInfo;                                              // 0x0028(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_BLESSING_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_BLESSING_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EBlessingNetResult      m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BLESSED_BOSS_EVENT_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BLESSED_BOSS_EVENT_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayBlessedWorldBossIndex;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSED_BOSS_REAMIN_TIME_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_BLESSED_BOSS_REAMIN_TIME_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BlessedFieldBossTimeInfo> m_arrayBlessedFieldBossReaminTimeInfo;                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_EventBlessedFieldBossTimeInfo> m_arrayEventBlessedFieldBossTimeInfo;                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BLESSED_BOSS_REAMIN_TIME_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_BLESSED_BOSS_REAMIN_TIME_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_VOIDSUMMONERPORTAL_CLOSE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONERPORTAL_CLOSE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_VoidSummonerPortalGroup;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VOIDSUMMONERPORTAL_OPEN_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONERPORTAL_OPEN_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_VoidSummonerPortalGroup;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        m_arrayVoidSummonerPortalSerial;                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VOIDSUMMONERPORTAL_MOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONERPORTAL_MOVE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_VoidSummonerPortalSerial;                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VOIDSUMMONERPORTAL_ENTERSTATE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONERPORTAL_ENTERSTATE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_VoidSummonerPortalSerial;                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EVoidSummonerPortalEnterState m_VoidSummonerPortalEnterState;                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VOIDSUMMONERPORTAL_MOVE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONERPORTAL_MOVE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_VoidSummonerPortalSerial;                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VOIDSUMMONERPORTAL_ENTERSTATE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONERPORTAL_ENTERSTATE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_VoidSummonerPortalSerial;                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VOIDSUMMONERPORTAL_END_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONERPORTAL_END_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_VoidSummonerPortalInfo> m_arrayVoidSummonerPortal;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VOIDSUMMONERPORTAL_START_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONERPORTAL_START_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsStart;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_VoidSummonerPortalInfo> m_arrayVoidSummonerPortal;                                // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VOIDSUMMONSMONSTER_END_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONSMONSTER_END_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_VoidSummonsMonsterSerial;                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_KillerPlayerName;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VOIDSUMMONER_WARP_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONER_WARP_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_VoidSummonerSerial;                                     // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VOIDSUMMONER_WARP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONER_WARP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_VoidSummonerSerial;                                     // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VOIDSUMMONER_END_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONER_END_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_VoidSummonerInfo>      m_arrayVoidSummoner;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VOIDSUMMONSMONSTER_START_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONSMONSTER_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_VoidSummonsMonsterIndex;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_SummonerPlayerName;                                     // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_SummonerPlayerLevel;                                    // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VOIDSUMMONER_START_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_VOIDSUMMONER_START_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsStart;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_VoidSummonerInfo>      m_arrayVoidSummoner;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BOSS_RANKING_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_BOSS_RANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldBossRankType      m_WorldBossRankType;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MyRanking;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MyRankingPoint;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_WorldBossRankerInfo>   m_arrayRankerInfo;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BOSS_RANKING_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_BOSS_RANKING_INFO_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldBossRankType      m_WorldBossRankType;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BOSS_REWARD_INFO_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_BOSS_REWARD_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_WorldBossObjectIndex;                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsExceptReward;                                         // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_WorldBossRewardPlayerInfo> m_arrayWorldBossRewardPlayer;                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BOSS_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BOSS_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_WorldBossInfo>         m_arrayWorldBoss;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_BOSS_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_BOSS_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_BOSS_DESTROY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_BOSS_DESTROY_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BossObjectIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BOSS_DEAD_INFO_CMD
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_BOSS_DEAD_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BossObjectIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_KillerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsHideNickname;                                         // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FString                                     m_KillerServerName;                                       // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_KillerGuildName;                                        // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsKillerGuild;                                          // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x0069(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x006A(0x0002) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_KillerGuildDBKey;                                       // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_BOSS_CREATE_INFO_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_BOSS_CREATE_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BossObjectIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCount;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_BOSS_READY_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_BOSS_READY_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BossObjectIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCount;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_BOSS_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_BOSS_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EBossNetResult          m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_CHAIN_PRODUCT_GOODS_OPEN_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CASHSHOP_CHAIN_PRODUCT_GOODS_OPEN_CMD : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayAvailablChainProductIndex;                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arraySoldOutChainProductIndex;                          // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_CHAIN_PRODUCT_TOTAL_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_CHAIN_PRODUCT_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_CHAIN_PRODUCT_TOTAL_INFO_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASHSHOP_CHAIN_PRODUCT_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_CashShopChainProduct          m_ChainProduct;                                           // 0x0028(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASHSHOP_CHAIN_PRODUCT_TOTAL_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_CHAIN_PRODUCT_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASHSHOP_RANDOM_GUARANTEE_REWARD_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASHSHOP_RANDOM_GUARANTEE_REWARD_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERandomGuaranteeType    m_RandomGuaranteeType;                                    // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_RANDOM_GUARANTEE_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_RANDOM_GUARANTEE_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RandomGuaranteeInfo           m_RandomGuaranteeInfo;                                    // 0x0028(0x0008) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASHSHOP_RANDOM_GUARANTEE_TOTAL_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_RANDOM_GUARANTEE_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RandomGuaranteeInfo>   m_arrayRandomGuaranteeInfo;                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_CASH_MILEAGE_RESETTIME_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_CASH_MILEAGE_RESETTIME_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_CashMileageReset;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_ResetTime;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASHSHOP_RANDOM_GUARANTEE_REWARD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_RANDOM_GUARANTEE_REWARD_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERandomGuaranteeType    m_RandomGuaranteeType;                                    // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_CASH_MILEAGE_RESET_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_CASH_MILEAGE_RESET_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_CurrentCashMileage;                                     // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EResourceType           m_ReplaceResourceType;                                    // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                m_ResourceCount;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChangedAmount;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASHSHOP_AGE_LIMIT_PAYMENT_TYPE_SAVE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_AGE_LIMIT_PAYMENT_TYPE_SAVE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_BUY_TEST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BUY_TEST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentCount;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_AGE_LIMIT_PAYMENT_TYPE_SAVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_AGE_LIMIT_PAYMENT_TYPE_SAVE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ELimitPaymentAgeType    m_enumLimitPaymentAgeType;                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_BUY_TEST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BUY_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ShopIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartCount;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_RANDOM_CHOICE_SET_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_RANDOM_CHOICE_SET_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_RANDOM_CHOICE_SET_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASHSHOP_RANDOM_CHOICE_SET_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_CashShopRandomChoiceInfo      m_RandomChoiceInfo;                                       // 0x0028(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASHSHOP_RANDOM_CHOICE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_RANDOM_CHOICE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CashShopRandomChoiceInfo> m_arrayRandomChoiceInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_ITEMCOUNT_CHECK_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASHSHOP_ITEMCOUNT_CHECK_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_HaveItem;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_OwnerPlayerName;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_ITEMCOUNT_CHECK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_ITEMCOUNT_CHECK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ShopIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_GOODSINFO_REFRESH_ACK
// 0x00C0 (0x00E8 - 0x0028)
struct FCommonSource_CG_CASHSHOP_GOODSINFO_REFRESH_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_CashShopGoodsInfo             m_GoodsInfo;                                              // 0x0028(0x00C0) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASHSHOP_GOODSINFO_REFRESH_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_GOODSINFO_REFRESH_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ShopIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_PCBILLING_INFO_CMD
// 0x00D8 (0x0100 - 0x0028)
struct FCommonSource_CG_CASHSHOP_PCBILLING_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ShopIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EOSCode                 m_OSCode;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	float                                              m_Price;                                                  // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FCommonSource_CashShopGoodsInfo             m_GoodsInfo;                                              // 0x0038(0x00C0) (Edit, BlueprintVisible)
	int                                                m_DBSlot;                                                 // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_ODINPASS_MISSION_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_ODINPASS_MISSION_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_OdinPassMissionInfo>   m_arrayMissionInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_ODINPASS_MISSION_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_ODINPASS_MISSION_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ShopIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_ODINPASS_COMPLETION_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_ODINPASS_COMPLETION_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_OdinPassPoint                 m_OdinPassPoint;                                          // 0x0028(0x0008) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASHSHOP_ODINPASS_COMPLETION_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_ODINPASS_COMPLETION_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ShopIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PackageIndex;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASHSHOP_MISSIONPACKAGE_OPEN_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASHSHOP_MISSIONPACKAGE_OPEN_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CashShopGoodsInfo>     m_arrayGoodsInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsPopup;                                                // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_LIMITPACKAGE_RESET_CHECK_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_LIMITPACKAGE_RESET_CHECK_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_LIMITPACKAGE_RESET_CHECK_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_LIMITPACKAGE_RESET_CHECK_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_LIMITPACKAGE_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_LIMITPACKAGE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CashShopLimitPackage>  m_arrayLimitPackage;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_LIMITPACKAGE_ALL_REWARD_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_LIMITPACKAGE_ALL_REWARD_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayPackageIndex;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_LIMITPACKAGE_ALL_REWARD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_LIMITPACKAGE_ALL_REWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ShopIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_LIMITPACKAGE_REWARD_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_LIMITPACKAGE_REWARD_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_PackageIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBuyReward;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_LIMITPACKAGE_REWARD_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_LIMITPACKAGE_REWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_PackageIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBuyReward;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                m_ShopIndex;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_LIMITPACKAGE_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_LIMITPACKAGE_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CashShopLimitPackage>  m_arrayLimitPackage;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_LIMITPACKAGE_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_LIMITPACKAGE_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_CLIENT_FAIL_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_CLIENT_FAIL_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_CLIENT_FAIL_SYN
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_CLIENT_FAIL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_BillingToken;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ShopIndex;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     m_Reason;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_CONFIRM_ACK
// 0x0100 (0x0128 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_CONFIRM_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsRestore;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_CashShopGoodsInfo             m_GoodsInfo;                                              // 0x0030(0x00C0) (Edit, BlueprintVisible)
	struct FString                                     m_PurchaseToken;                                          // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_DBSlot;                                                 // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	struct FString                                     m_TransactionId;                                          // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_AosPcMarketRefundInfo         m_AosPcMarketRefundInfo;                                  // 0x0118(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_CN_CONFIRM_SYN
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_CN_CONFIRM_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ShopIndex;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     m_ProductID;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRestore;                                              // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_IOS_CONFIRM_SYN
// 0x0070 (0x0098 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_IOS_CONFIRM_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_BillingToken;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRestore;                                              // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<unsigned char>                              m_arraySignature;                                         // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_MarketRefundSeq;                                        // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ClientTransactionID;                                    // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Currency;                                               // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_Price;                                                  // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	struct FString                                     m_SKStorefront;                                           // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_AOS_CONFIRM_SYN
// 0x0070 (0x0098 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_AOS_CONFIRM_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_BillingToken;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRestore;                                              // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<unsigned char>                              m_arraySignature;                                         // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arraySignedDataJson;                                    // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_MarketRefundSeq;                                        // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ClientPurchaseToken;                                    // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Currency;                                               // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_Price;                                                  // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_PC_AOS_CONFIRM_SYN
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_PC_AOS_CONFIRM_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_UserAccessToken;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_languageCode;                                           // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRestore;                                              // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsMarketRefund;                                         // 0x0049(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x004A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_PC_AOS_SKUDETAIL_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_PC_AOS_SKUDETAIL_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Sku;                                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_DeepLink;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_PC_AOS_SKUDETAIL_SYN
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_PC_AOS_SKUDETAIL_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_ProductID;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_UserAccessToken;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_languageCode;                                           // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_ObfuscatedAccountId;                                    // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_CN_START_SYN
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_CN_START_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EOSCode                 m_OSCode;                                                 // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FString                                     m_ProductID;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ContinuousCount;                                        // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FString                                     m_Currency;                                               // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_UUID;                                                   // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ShopIndex;                                              // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_START_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_START_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_ProductID;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_PurchaseID;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_START_SYN
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_START_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_BillingToken;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EOSCode                 m_OSCode;                                                 // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FString                                     m_ProductID;                                              // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ContinuousCount;                                        // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FString                                     m_Currency;                                               // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_UUID;                                                   // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_CHECK_VERSION_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_CHECK_VERSION_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BillingVersion;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_MYCARD_CONFIRM_SYN
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_MYCARD_CONFIRM_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_TransactionId;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRestore;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FString                                     m_ClientPurchaseToken;                                    // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BILLING_CHECK_VERSION_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BILLING_CHECK_VERSION_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNeedUpdate;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_STORAGEBOX_GET_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_STORAGEBOX_GET_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CashShopStoragebox>    m_arrayStoragebox;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_STORAGEBOX_GET_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_STORAGEBOX_GET_SYN : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayDBSlot;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_STORAGEBOX_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_STORAGEBOX_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CashShopStoragebox>    m_arrayStoragebox;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_STORAGEBOX_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_STORAGEBOX_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_BATCH_BUYINFO_CHANGE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BATCH_BUYINFO_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CashShopBulkBuyInfo>   m_arrayBulkBuyInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BATCH_BUYINFO_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BATCH_BUYINFO_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CashShopBulkBuyInfo>   m_arrayBulkBuyInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BATCH_BUYINFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BATCH_BUYINFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CashShopBulkBuyInfo>   m_arrayBulkBuyInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BATCH_BUYINFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BATCH_BUYINFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_BONUS_CASH_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BONUS_CASH_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsCanBuy;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECashShopBonusCashCmdSendType m_enumCmdSendType;                                        // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_DISCOUNT_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_DISCOUNT_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CashShopGoodsInfo>     m_arrayGoodsInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_DISCOUNT_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_DISCOUNT_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_BATCH_BUY_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BATCH_BUY_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_BuyCashShopItem>       m_arrayBuyCashShopItem;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASHSHOP_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_OldShopIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_CashShopGoodsInfo>     m_arrayNewGoodsInfo;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BATCH_BUY_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BATCH_BUY_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASHSHOP_BUY_ACK
// 0x00D8 (0x0100 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BUY_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_CashShopGoodsInfo             m_GoodsInfo;                                              // 0x0028(0x00C0) (Edit, BlueprintVisible)
	int                                                m_BuyCount;                                               // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayResultInfo;                                        // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_BUY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_BUY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ShopIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuyCount;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASHSHOP_TOTAL_GOODS_INFO_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_CASHSHOP_TOTAL_GOODS_INFO_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsCanRefrashGoods;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_CashShopGoodsInfo>     m_arrayGoodsInfo;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CashShopGoodsRewardInfo> m_arrayGroupGoodsRewardInfo;                              // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASHSHOP_TOTAL_INFO_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_CASHSHOP_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_Mileage;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsStorageboxNotify;                                     // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_CashShopEventBanner>   m_arrayEventBanner;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CashShopBulkBuyInfo>   m_arrayBulkBuyInfo;                                       // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_StepPackageMainRewardInfo> m_arrayMainRewardInfo;                                    // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CashShopDiscountTimeInfo> m_arrayDiscountTimeInfo;                                  // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ELimitPaymentAgeType    m_enumLimitPaymentAgeType;                                // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCanRefreshLimitPaymentAgeType;                        // 0x0071(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	int64_t                                            m_UsedMonthlyPaymentCash;                                 // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPaymentStackEvent;                                    // 0x0080(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASHSHOP_TOTAL_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASHSHOP_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASHSHOP_NAK
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_CASHSHOP_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ECashShopNetResult      m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsRestore;                                              // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	int                                                m_ShopIndex;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_OrderID;                                                // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_TransactionId;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_ATTACK_WORLD_SELECT_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ATTACK_WORLD_SELECT_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_ATTACK_WORLD_SELECT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ATTACK_WORLD_SELECT_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_ATTACK_WORLD_INFO_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ATTACK_WORLD_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_SelectedCastlewarGroupID;                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainingTimeSec;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_CastlewarAttackWorldSelectInfo> m_arrayAttackWorldSelectInfo;                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_ATTACK_WORLD_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ATTACK_WORLD_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_ATTACK_WORLD_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ATTACK_WORLD_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_ENTER_GUILD_TARGET_SETTING_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ENTER_GUILD_TARGET_SETTING_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_CastleIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSuccess;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_CastlewarWinGuildInfo> m_arrayWinGuildInfo;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CastlewarEnterGuildInfo> m_arrayEnterGuildInfo;                                    // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_ENTER_GUILD_TARGET_SETTING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ENTER_GUILD_TARGET_SETTING_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_CastleIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_ENTER_GUILD_TARGET_INFO_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ENTER_GUILD_TARGET_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarWinGuildInfo> m_arrayWinGuildInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CastlewarEnterGuildInfo> m_arrayEnterGuildInfo;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_WorldName;                                              // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CastlewarTargetableCountInfo> m_arrayCastlewarTargetableCountInfo;                      // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_ENTER_GUILD_TARGET_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ENTER_GUILD_TARGET_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_VEHIClE_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_VEHIClE_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_CastlewarVehicleCount;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsVehicleRide;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_DEFENSE_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_DEFENSE_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_CastleWarContinueDefenseWinCount;                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_ENTER_GUILDMEMBER_LIST_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ENTER_GUILDMEMBER_LIST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_CurMemberCount;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_ENTER_GUILDMEMBER_LIST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ENTER_GUILDMEMBER_LIST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_ENTER_GUILDMEMBER_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ENTER_GUILDMEMBER_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_BOSS_HP_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BOSS_HP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_CastleIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaxHp;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CurHp;                                                  // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_SUB_BOSS_HP_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_SUB_BOSS_HP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_CastleIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaxHp;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CurHp;                                                  // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_DOOR_HP_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_DOOR_HP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_CastleIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_CastlewarDoorInfo>     m_arrayFCastlewarDoor;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_BRIDGE_GUILD_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BRIDGE_GUILD_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarBridgeGuildInfo> m_arrayCastlewarBridgeGuild;                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLE_INFO_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_CASTLE_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastleOccupationInfo>  m_arrayCastleOccupation;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CastleOccupationGuildInfo> m_arrayCastleOccupationGuild;                             // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CastlewarWinGuildInfo> m_arrayWinGuild;                                          // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_DEFEND_FAIL_CMD
// 0x0118 (0x0140 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_DEFEND_FAIL_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_CastlewarWinGuildInfo         m_FailGuildInfo;                                          // 0x0028(0x0078) (Edit, BlueprintVisible)
	struct FCommonSource_CastlewarWinGuildInfo         m_WinGuildInfo;                                           // 0x00A0(0x0078) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardItem;                                        // 0x0118(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_CastlewarWorldName;                                     // 0x0128(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsDefend;                                               // 0x0138(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0139(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_OCCUPATION_SUCCESS_CMD
// 0x00A0 (0x00C8 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_OCCUPATION_SUCCESS_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_CastlewarWinGuildInfo         m_WinGuildInfo;                                           // 0x0028(0x0078) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardItem;                                        // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsOccupation;                                           // 0x00B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	struct FString                                     m_CastlewarWorldName;                                     // 0x00B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_RESULT_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_RESULT_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarWinGuildInfo> m_arrayWinGuildInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardItem;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_CastlewarWorldName;                                     // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_BOSS_INTERACTION_NOTICE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BOSS_INTERACTION_NOTICE_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_InteractCount;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_OCCUPATION_SUCCESS_NOTICE_CMD
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_OCCUPATION_SUCCESS_NOTICE_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CastleIndex;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECastlewarAttackType    m_AttackType;                                             // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	struct FString                                     m_WinPlayerServerName;                                    // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_WinPlayerName;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MASTER_KILL_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MASTER_KILL_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_DeadGuildName;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_DeadPlayerName;                                         // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_KillerGuildName;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_KillerPlayerName;                                       // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_RANKING_INFO_ACK
// 0x0088 (0x00B0 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_RANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ECastlewarRankType      m_RankType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_CastlewarRankingInfo>  m_arrayRankingInfo;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_CastlewarRankingInfo          m_MyRankingInfo;                                          // 0x0040(0x0070) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_RANKING_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_RANKING_INFO_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ECastlewarRankType      m_RankType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAXREWARD_HISTORY_ACK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAXREWARD_HISTORY_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarRewardHistoryInfo> m_arrayHistoryInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_UsableTax;                                              // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_TotalTax;                                               // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_DayTax;                                                 // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPopup;                                                // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAXREWARD_HISTORY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAXREWARD_HISTORY_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsPopup;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAX_DISTRIBUTION_NOTIFY_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAX_DISTRIBUTION_NOTIFY_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ECastlewarTaxDistNotify m_NotifyType;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_GUILD_CONTRIBUTION_INFO_ACK
// 0x0088 (0x00B0 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_GUILD_CONTRIBUTION_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ECastlewarRankType      m_RankType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_CastlewarRankingInfo>  m_arrayContributionInfo;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_CastlewarRankingInfo          m_MyContributionInfo;                                     // 0x0040(0x0070) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_GUILD_CONTRIBUTION_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_GUILD_CONTRIBUTION_INFO_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ECastlewarRankType      m_RankType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAX_DISTRIBUTION_CANCEL_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAX_DISTRIBUTION_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	TArray<FCommonSource_CommonSource_ECastlewarNetResult> m_arrayTaxDistCancelNak;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAX_DISTRIBUTION_CANCEL_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAX_DISTRIBUTION_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarTaxDistReserveCancelInfo> m_arrayTaxDistReserveCancelInfo;                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAX_DISTRIBUTION_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAX_DISTRIBUTION_ACK : public FCommonSource_BaseProtocol
{
	TArray<FCommonSource_CommonSource_ECastlewarNetResult> m_arrayTaxDistNak;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAX_DISTRIBUTION_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAX_DISTRIBUTION_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarTaxDistributionInfo> m_arrayDistInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAX_DISTRIBUTION_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAX_DISTRIBUTION_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarTaxDistributionInfo> m_arrayDistInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAX_DISTRIBUTION_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAX_DISTRIBUTION_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAXRATE_SET_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAXRATE_SET_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SettingTaxRate;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TOTAL_PARTICIPATION_GUILD_LIST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TOTAL_PARTICIPATION_GUILD_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarWinGuildInfo> m_arrayWinGuildInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CastlewarEnterGuildInfo> m_arrayEnterGuildInfo;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TOTAL_PARTICIPATION_GUILD_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TOTAL_PARTICIPATION_GUILD_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_ENTER_GUILD_LIST_CMD
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ENTER_GUILD_LIST_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarWinGuildInfo> m_arrayWinGuildInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CastlewarEnterGuildInfo> m_arrayEnterGuildInfo;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayDefeatGuildList;                                   // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayOccupationWinGuildList;                            // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayOccupationLoseGuildList;                           // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAXRATE_SET_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAXRATE_SET_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_CastleIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SettingTaxRate;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_ENTER_GUILD_LIST_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ENTER_GUILD_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarWinGuildInfo> m_arrayWinGuildInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CastlewarEnterGuildInfo> m_arrayEnterGuildInfo;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayDefeatGuildList;                                   // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayOccupationWinGuildList;                            // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayOccupationLoseGuildList;                           // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsMercenary;                                            // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_GUILD_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_GUILD_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarQualifierGuildInfo> m_arrayQualifierGuildInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_GUILD_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_GUILD_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_BID_FINAL_RANKING_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BID_FINAL_RANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarQualifierGuildInfo> m_arrayQualifierGuildInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_ENTER_GUILD_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_ENTER_GUILD_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_BID_FINAL_RANKING_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BID_FINAL_RANKING_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_BID_MEMBERRANKING_INFO_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BID_MEMBERRANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarBidMemberRankingInfo> m_arrayBidRankingInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_CastlewarBidMemberRankingInfo m_MyBidRankingInfo;                                       // 0x0038(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_BID_MEMBERRANKING_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BID_MEMBERRANKING_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_BID_RANKING_INFO_CMD
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BID_RANKING_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarBidRankingInfo> m_arrayBidRankingInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_CastlewarBidRankingInfo       m_MyGuildBidRankingInfo;                                  // 0x0038(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_BID_RANKING_INFO_ACK
// 0x0068 (0x0090 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BID_RANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarBidRankingInfo> m_arrayBidRankingInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsFirstBid;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FCommonSource_CastlewarBidRankingInfo       m_MyGuildBidRankingInfo;                                  // 0x0040(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_BID_RANKING_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BID_RANKING_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_BID_ADD_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BID_ADD_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_BiddingPrice;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_BID_ADD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BID_ADD_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_BiddingPrice;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_CANBID_GUILD_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_CANBID_GUILD_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarBidGuildInfo> m_arrayBidGuildInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EResetWeekType          m_BidWeekType;                                            // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EResetDayOfWeek         m_BidDayType;                                             // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	int                                                m_BidHour;                                                // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BidMinute;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_BEFORE_RESULT_LIST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BEFORE_RESULT_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarWinGuildInfo> m_arrayWinGuildList;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsExistPreviously;                                      // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsExistNext;                                            // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	int64_t                                            m_CastlewarTime;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_CANBID_GUILD_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_CANBID_GUILD_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_BEFORE_RESULT_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BEFORE_RESULT_LIST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_ToPreviously;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_ToNext;                                                 // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAXRATE_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAXRATE_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarTaxRateInfo>  m_arrayTaxRateInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAXRATE_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAXRATE_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarTaxRateInfo>  m_arrayTaxRateInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_TAXRATE_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_TAXRATE_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_INFO_ACK
// 0x00C0 (0x00E8 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarCastleInfo>   m_arrayCastleGuildInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_AllDayTax;                                              // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_AllWeekTax;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCanBidGuild;                                          // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	int64_t                                            m_BidStartTime;                                           // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_BidEndTime;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_QualifierStartTime;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CastlewarTime;                                          // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsGuildMaster;                                          // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECastlewarState         m_CurState;                                               // 0x0071(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0072(0x0002) MISSED OFFSET
	float                                              m_CurStateRemainTime;                                     // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsTapView;                                              // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_CastlewarCastleInfo>   m_arrayInWorldOccupiedMyGuildCastleGuildInfo;             // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_OccupiedWorldAllDayTax;                                 // 0x0090(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_OccupiedWorldAllWeekTax;                                // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_HomeWorldName;                                          // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_AwayWorldName;                                          // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_AttackWorldName;                                        // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_WorldSelectStartTime;                                   // 0x00D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_TargetSelectStartTime;                                  // 0x00D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSingleMatchingWorld;                                  // 0x00E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsHome;                                                 // 0x00E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCastleShopOpen;                                       // 0x00E2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x00E3(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_BEFORE_BID_END_NOTICE_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BEFORE_BID_END_NOTICE_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_BID_RANKING_DOWN_NOTICE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_BID_RANKING_DOWN_NOTICE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_CurRanking;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_COUNTDOWN_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_COUNTDOWN_CMD : public FCommonSource_BaseProtocol
{
	float                                              m_RemainTime;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_STATE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_STATE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ECastlewarState         m_CurCastlewarState;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_NextRemainTime;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ProgressTime;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNotice;                                               // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                m_EnterGuildCount;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAnonymizationGroupingWorld;                           // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ECastlewarNetResult     m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_BOUNTY_NOTICE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_BOUNTY_NOTICE_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_CONTRIBUTION_INFO_ACK
// 0x0088 (0x00B0 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_CONTRIBUTION_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ECastlewarRankType      m_RankType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_CastlewarRankingInfo>  m_arrayContributionInfo;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_CastlewarRankingInfo          m_MyContributionInfo;                                     // 0x0040(0x0070) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_CONTRIBUTION_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_CONTRIBUTION_INFO_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ECastlewarRankType      m_RankType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_BOUNTY_DISTRIBUTION_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_BOUNTY_DISTRIBUTION_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_RemainBountyCash;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_BOUNTY_DISTRIBUTION_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_BOUNTY_DISTRIBUTION_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarTaxDistributionInfo> m_arrayDistInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_BOUNTY_DISTRIBUTION_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_BOUNTY_DISTRIBUTION_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarTaxDistributionInfo> m_arrayDistInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_BOUNTY_DISTRIBUTION_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_BOUNTY_DISTRIBUTION_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_REWARD_HISTORY_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_REWARD_HISTORY_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarRewardHistoryInfo> m_arrayHistoryInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_NextIndex;                                              // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_BountyCash;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_BountyRemainTime;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_REWARD_HISTORY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_REWARD_HISTORY_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_NextIndex;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_OUR_MERCENARY_LIST_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_OUR_MERCENARY_LIST_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0040(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      m_MercenaryNum;                                           // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	TArray<int64_t>                                    m_arrayMercenaryPlayerDBKey;                              // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_GUILD_ALLIANCE_SIMPLE_LIST_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_GUILD_ALLIANCE_SIMPLE_LIST_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildAllianceSimpleList       m_CastlewarGuildAllianceSimpleList;                       // 0x0030(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_MY_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_MY_INFO_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_EXPEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_EXPEL_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_RecruitPlayerDBKey;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_EXPEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_EXPEL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_RecruitPlayerDBKey;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_JOIN_REJECT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_JOIN_REJECT_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_RecruitPlayerDBKey;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_JOIN_REJECT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_JOIN_REJECT_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_RecruitPlayerDBKey;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_JOIN_ACCEPT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_JOIN_ACCEPT_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_RecruitPlayerDBKey;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_JOIN_ACCEPT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_JOIN_ACCEPT_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_RecruitPlayerDBKey;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_WITHDRAW_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_WITHDRAW_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_WITHDRAW_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_WITHDRAW_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_JOIN_CANCEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_JOIN_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_JOIN_CANCEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_JOIN_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_JOIN_APPLY_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_JOIN_APPLY_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_JOIN_APPLY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_JOIN_APPLY_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_RECRUIT_MODIFY_ACK
// 0x0080 (0x00A8 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_RECRUIT_MODIFY_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_CastlewarMercenaryRecruitInfo m_RecruitInfo;                                            // 0x0028(0x0080) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_RECRUIT_MODIFY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_RECRUIT_MODIFY_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_AddBountyCash;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_RECRUIT_CANCEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_RECRUIT_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CastlewarGuildDBKey;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_RECRUIT_CANCEL_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_RECRUIT_CANCEL_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_RECRUIT_CREATE_ACK
// 0x0088 (0x00B0 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_RECRUIT_CREATE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_CastlewarMercenaryRecruitInfo m_RecruitInfo;                                            // 0x0028(0x0080) (Edit, BlueprintVisible)
	int                                                m_MercenaryCount;                                         // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_RECRUIT_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_RECRUIT_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarMercenaryRecruitListInfo> m_arrayRecruitListInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_RECRUIT_CREATE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_RECRUIT_CREATE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_BountyCash;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_RECRUIT_INFO_ACK
// 0x0098 (0x00C0 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_RECRUIT_INFO_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_IsRegisteredRecruit;                                    // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_CastlewarMercenaryRecruitInfo m_RecruitInfo;                                            // 0x0030(0x0080) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_CastlewarMercenaryInfo> m_arrayMercenaryInfo;                                     // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_RECRUIT_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_RECRUIT_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_RECRUIT_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_RECRUIT_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_NOTICE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_NOTICE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ECastlewarMercenaryNotice m_NoticeType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FString>                             m_arrayArgument;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_MERCENARY_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_MERCENARY_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ECastlewarMercenaryNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_ALL_GUILDMEMBER_LIST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_ALL_GUILDMEMBER_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_QualifierGuildMemberInfo> m_arrayQualifierGuildMember;                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayJoinPlayerDBKey;                                   // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_ALL_GUILDMEMBER_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_ALL_GUILDMEMBER_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_RESULT_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_RESULT_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ServerID;                                               // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ServerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_WinGuildDBKey;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_WinGuildName;                                           // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_QualifierSideRankInfo> m_arrayQualifierSideRankInfo;                             // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_CHANGE_INFO_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_CHANGE_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_QualifierDoingInfo            m_QualifierDoingInfo;                                     // 0x0028(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_INFO_ENTER_CMD
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_INFO_ENTER_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_QualifierInfo                 m_QualifierInfo;                                          // 0x0028(0x0018) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EQualifierSide          m_QualifierSide;                                          // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECastlewarQualifierState m_CastlewarQualifierState;                                // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                m_GoalKillCount;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_QualifierSideRankInfo> m_arrayQualifierSideRankInfo;                             // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_RemainTime;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAudience;                                             // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_DISQUALIFIER_GUILD_NOTICE_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_DISQUALIFIER_GUILD_NOTICE_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_READY_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_READY_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_READY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_READY_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsReady;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_QualifierReadyInfo>    m_arrayQualifierReadyInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_MATCH_UPDATE_CMD
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_MATCH_UPDATE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_QualifierRankerInfo           m_QualifierRankerInfo;                                    // 0x0028(0x0028) (Edit, BlueprintVisible)
	struct FCommonSource_QualifierSideRankInfo         m_QualifierSideRankInfo;                                  // 0x0050(0x0020) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_SELECT_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_SELECT_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSelect;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_QualifierReadyInfo>    m_arrayQualifierReadyInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ECastlewarQualifierNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CHAMPIONSDUNGEON_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CHAMPIONSDUNGEON_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EChampionsDungeonNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CH_CHATTING_TRANSLATE_MESSAGE_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CH_CHATTING_TRANSLATE_MESSAGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_RemainCount;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MessageIndex;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELanguage               m_TranslatedLanguage;                                     // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FString                                     m_TranslatedMessage;                                      // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CHATTING_TRANSLATE_MESSAGE_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CHATTING_TRANSLATE_MESSAGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MessageIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELanguage               m_OriginalLanguage;                                       // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELanguage               m_TranslatedLanguage;                                     // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	struct FString                                     m_OriginalMessage;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_SELECT_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_QUALIFIER_GUILDMEMBER_SELECT_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSelect;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CHATTING_TRANSLATE_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CHATTING_TRANSLATE_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_RemainCount;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CH_CHATTING_GUILD_ALLIANCE_CHAT_CMD
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CH_CHATTING_GUILD_ALLIANCE_CHAT_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildChatType          m_GuildChatType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildAllianceChattingChannelName;                       // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_GuildAllianceChattingChannelMasterName;                 // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CHATTING_TRANSLATE_MESSAGE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CHATTING_TRANSLATE_MESSAGE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CH_CHATTING_GUILD_ALLIACNE_CHAT_LIST_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CH_CHATTING_GUILD_ALLIACNE_CHAT_LIST_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_StartChatIndex;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GuildAllianceChattingInfo> m_GuildAllianceChatList;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsAdd;                                                  // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CH_CHATTING_GUILD_ALLIACNE_CHAT_LIST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CH_CHATTING_GUILD_ALLIACNE_CHAT_LIST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CH_CHATTING_GUILD_ALLIACNE_CHAT_LIST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CH_CHATTING_GUILD_ALLIACNE_CHAT_LIST_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_StartChatIndex;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CHATTING_GUILD_MASTER_DELEGATE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CHATTING_GUILD_MASTER_DELEGATE_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CHATTING_PK_SLAYER_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CHATTING_PK_SLAYER_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CHATTING_GUILD_CHAT_LIST_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CHATTING_GUILD_CHAT_LIST_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_StartChatIndex;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GuildChatInfo>         m_GuildChatList;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CHATTING_GUILD_CHAT_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CHATTING_GUILD_CHAT_LIST_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_StartChatIndex;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GuildChatInfo>         m_GuildChatList;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CHATTING_GUILD_CHAT_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CHATTING_GUILD_CHAT_LIST_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_StartChatIndex;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CHATTING_SHOW_INFO_UI_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CHATTING_SHOW_INFO_UI_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CHATTING_BAN_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CHATTING_BAN_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ChatBanInfo>           m_arrayChatBanInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CHATTING_SHOW_INFO_UI_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CHATTING_SHOW_INFO_UI_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsFriend;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsParty;                                                // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CHATTING_BAN_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CHATTING_BAN_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CHATTING_BAN_DELETE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CHATTING_BAN_DELETE_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EChattingBanType        m_ChattingBanType;                                        // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CHATTING_BAN_DELETE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CHATTING_BAN_DELETE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EChattingBanType        m_ChattingBanType;                                        // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CHATTING_BAN_ADD_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_CHATTING_BAN_ADD_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ChatBanInfo                   m_ChatBanInfo;                                            // 0x0028(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CHATTING_BAN_ADD_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CHATTING_BAN_ADD_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EChattingBanType        m_ChattingBanType;                                        // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CHATTING_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CHATTING_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EChattingNetResult      m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CH_CHATTING_GUILD_CHAT_LIST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CH_CHATTING_GUILD_CHAT_LIST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CH_CHATTING_GUILD_CHAT_LIST_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CH_CHATTING_GUILD_CHAT_LIST_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_StartChatIndex;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GuildChatInfo>         m_GuildChatList;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsAdd;                                                  // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CH_CHATTING_GUILD_CHAT_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CH_CHATTING_GUILD_CHAT_LIST_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_StartChatIndex;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CH_CHATTING_PK_KILL_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CH_CHATTING_PK_KILL_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ChatPkDeadInfo                m_ChatPkDeadInfo;                                         // 0x0028(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CH_CHATTING_PK_DEAD_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CH_CHATTING_PK_DEAD_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ChatPkDeadInfo                m_ChatPkDeadInfo;                                         // 0x0028(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CH_CHATTING_PK_DEAD_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CH_CHATTING_PK_DEAD_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CH_CHATTING_PK_DEAD_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CH_CHATTING_PK_DEAD_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_KillerPlayerName;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_NaviVolumeAreaIndex;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x003C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CH_CHATTING_INFINITYDUNGEON_HIGH_FLOOR_CLEAR_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CH_CHATTING_INFINITYDUNGEON_HIGH_FLOOR_CLEAR_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_ClearFloor;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CH_CHATTING_GUILD_ALLIANCE_STATE_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CH_CHATTING_GUILD_ALLIANCE_STATE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildAllianceState     m_GuildAllianceState;                                     // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_BroadcastTime;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CH_CHATTING_GUILDAUCTION_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CH_CHATTING_GUILDAUCTION_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EAuctionMsgType         m_AuctionMsgType;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ItemIndex;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MonsterIndex;                                           // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_BroadcastTime;                                          // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CH_CHATTING_BROADCAST_CMD
// 0x0140 (0x0168 - 0x0028)
struct FCommonSource_CH_CHATTING_BROADCAST_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ChatPlayerInfo                m_ChatPlayerInfo;                                         // 0x0028(0x00E0) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EBroadcastType          m_BroadcastType;                                          // 0x0108(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0109(0x0007) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0110(0x0030) (Edit, BlueprintVisible)
	int64_t                                            m_BroadcastTime;                                          // 0x0140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NameCode;                                               // 0x0148(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	struct FString                                     m_EventTitle;                                             // 0x0150(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_RandomDrawIndex;                                        // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERuneSetOption          m_RuneSetOption;                                          // 0x0164(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_RuneGrade;                                              // 0x0165(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsHideNickname;                                         // 0x0166(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBlessingSymbolType     m_BlessingSymbolTYpe;                                     // 0x0167(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CH_CHATTING_NOTICE_CMD
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CH_CHATTING_NOTICE_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Message;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Sender;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsPopup;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	int64_t                                            m_ChatTime;                                               // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DisplayDuratoinTime;                                    // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FString                                     m_TextColorCode;                                          // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CH_CHATTING_CHAT_CMD
// 0x0120 (0x0148 - 0x0028)
struct FCommonSource_CH_CHATTING_CHAT_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ChatInfo                      m_ChatInfo;                                               // 0x0028(0x0120) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CH_CHATTING_CHAT_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CH_CHATTING_CHAT_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CH_CHATTING_CHAT_SYN
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CH_CHATTING_CHAT_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EChatType               m_ChatType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ELanguage               m_ChatLanguage;                                           // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FString                                     m_TargetPlayerName;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Message;                                                // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EmoticonIndex;                                          // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Color;                                                  // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CH_CHATTING_HEARTBEAT_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CH_CHATTING_HEARTBEAT_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CH_CHATTING_LOGOUT_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CH_CHATTING_LOGOUT_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CH_CHATTING_LOGOUT_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CH_CHATTING_LOGOUT_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CH_CHATTING_AUTH_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CH_CHATTING_AUTH_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CH_CHATTING_AUTH_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CH_CHATTING_AUTH_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_UserDBKey;                                              // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CLASS_CHANGE_AVATAR_WEAPONSHAPE_INFO_ACK
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_CLASS_CHANGE_AVATAR_WEAPONSHAPE_INFO_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_TargetClassType;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<int>                                        m_HaveAvatarList;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_HaveWeaponShapeList;                                    // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_HaveCostumeList;                                        // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CH_CHATTING_HEARTBEAT_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CH_CHATTING_HEARTBEAT_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CH_CHATTING_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CH_CHATTING_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EChattingNetResult      m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CLASS_CHANGE_AVATAR_WEAPONSHAPE_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CLASS_CHANGE_AVATAR_WEAPONSHAPE_INFO_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_TargetClassType;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CLASS_CHANGE_START_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CLASS_CHANGE_START_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_TargetClassType;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CLASS_CHANGE_START_3RD_SYN
// 0x00F8 (0x0120 - 0x0028)
struct FCommonSource_CG_CLASS_CHANGE_START_3RD_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetClassType;                                        // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_ClassChangeSelectTargetClassInfo> m_arrayOtherSelectedClassTypeList;                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_ClassChangeInfo_2nd           m_ClassChangeInfo;                                        // 0x0048(0x00D8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CLASS_CHANGE_START_2ND_SYN
// 0x00E8 (0x0110 - 0x0028)
struct FCommonSource_CG_CLASS_CHANGE_START_2ND_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetClassType;                                        // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_NoSelectedClassType;                                    // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_NoSelectedTargetClassType;                              // 0x0032(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0033(0x0005) MISSED OFFSET
	struct FCommonSource_ClassChangeInfo_2nd           m_ClassChangeInfo;                                        // 0x0038(0x00D8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CLASS_CHANGE_START_SYN
// 0x00B8 (0x00E0 - 0x0028)
struct FCommonSource_CG_CLASS_CHANGE_START_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetClassType;                                        // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FCommonSource_ClassChangeInfo               m_ClassChangeInfo;                                        // 0x0038(0x00A8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_CLASS_CHANGE_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CLASS_CHANGE_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ClassChangeEvent>      m_ClassChangeEventInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ClassChangeHistory>    m_ClassChangeHistory;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CLASS_CHANGE_INFO_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CLASS_CHANGE_INFO_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_TicketItemSerial;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPreview;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CLASS_CHANGE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CLASS_CHANGE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EClassChangeStructNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COLLECTION_EXPIRED_NOTIFY_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_EXPIRED_NOTIFY_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CollectionEventExpireInfo> m_arrayExpiredCollectionIndex;                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_EXPIRED_NOTIFY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_COLLECTION_EXPIRED_NOTIFY_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_COLLECTION_FAVORITES_CHECK_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_FAVORITES_CHECK_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayCollectionRewardIndex;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_FAVORITES_CHECK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_COLLECTION_FAVORITES_CHECK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_CollectionRewardIndex;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDelete;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COLLECTION_FAVORITES_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_FAVORITES_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayCollectionRewardIndex;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_FAVORITES_INFO_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_FAVORITES_INFO_SYN : public FCommonSource_BaseProtocol
{
	TArray<FCommonSource_CommonSource_ECollectionType> m_arrayCollectionType;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_ENROLLMENT_ALL_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_ENROLLMENT_ALL_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayCollectionRewardIndex;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_ENROLLMENT_ALL_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_ENROLLMENT_ALL_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CollectionEnrollInfo>  m_arrayCollectionEnrollInfo;                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_ENROLLMENT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_COLLECTION_ENROLLMENT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_CollectionRewardIndex;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSuccess;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COLLECTION_ENROLLMENT_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COLLECTION_ENROLLMENT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_CollectionRewardIndex;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_ItemSerial;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CollectionItemSlot;                                     // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COLLECTION_EVENT_SIMPLE_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_EVENT_SIMPLE_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CollectionEventInfo>   m_arrayCollectionSimpleInfo;                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_EVENT_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_EVENT_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CollectionEventInfo>   m_arrayCollectionInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_EVENT_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_EVENT_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CollectionEventInfo>   m_arrayCollectionInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_EVENT_INFO_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_EVENT_INFO_SYN : public FCommonSource_BaseProtocol
{
	TArray<FCommonSource_CommonSource_ECollectionType> m_arrayCollectionType;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_PLAYER_SELECT_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CollectionInfo>        m_arrayCollectionInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_TOTAL_INFO_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COLLECTION_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ECollectionType         m_CollectionType;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_CollectionInfo>        m_arrayCollectionInfo;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<FCommonSource_CommonSource_ECollectionType> m_arrayCollectionType;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_TOTAL_INFO_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{
	TArray<FCommonSource_CommonSource_ECollectionType> m_arrayCollectionType;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_COMPLETE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COLLECTION_COMPLETE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ECollectionType         m_CollectionType;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_CollectionRewardIndex;                                  // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CompleteCount;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COLLECTION_COMPLETE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_COLLECTION_COMPLETE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_CollectionRewardIndex;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COLLECTION_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COLLECTION_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ECollectionNetResult    m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CONFLICTDUNGEON_BOSS_NOTICE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CONFLICTDUNGEON_BOSS_NOTICE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BossObjectIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CONFLICTDUNGEON_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CONFLICTDUNGEON_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ConflictDungeonInfo>   m_arrayDungeonInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COLLECTION_TOTAL_INFO_SEND_COMPLETE_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_COLLECTION_TOTAL_INFO_SEND_COMPLETE_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CONFLICTDUNGEON_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CONFLICTDUNGEON_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EConflictDungeonNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CONFLICTDUNGEON_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CONFLICTDUNGEON_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_COSTUME_DYEING_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COSTUME_DYEING_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeEquipInfo>      m_arrayCostumeEquipInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ObjectSerial;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COSTUME_DYEING_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COSTUME_DYEING_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeEquipInfo>      m_arrayCostumeEquipInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COSTUME_DYEING_CHANGE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COSTUME_DYEING_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsReset;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_CostumeIndex;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ECostumeSkinType        m_CostumeSkinType;                                        // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COSTUME_SHOWING_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COSTUME_SHOWING_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeShowingInfo>    m_arrayCostumeShowingInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ObjectSerial;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBroadcast;                                            // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COSTUME_SHOWING_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COSTUME_SHOWING_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeShowingInfo>    m_arrayCostumeShowingInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COSTUME_RANDOM_BOX_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_COSTUME_RANDOM_BOX_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayCostumeSerial;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COSTUME_SHOWING_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COSTUME_SHOWING_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeShowingInfo>    m_arrayCostumeShowingInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COSTUME_UNEQUIP_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COSTUME_UNEQUIP_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeEquipInfo>      m_arrayCostumeEquipInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COSTUME_UNEQUIP_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COSTUME_UNEQUIP_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeEquipInfo>      m_arrayCostumeEquipInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ObjectSerial;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COSTUME_EQUIP_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COSTUME_EQUIP_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeEquipInfo>      m_arrayCostumeEquipInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ObjectSerial;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COSTUME_UNEQUIP_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COSTUME_UNEQUIP_SYN : public FCommonSource_BaseProtocol
{
	TArray<FCommonSource_CommonSource_ECostumeSkinType> m_arrayCostumeSkinType;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COSTUME_EQUIP_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COSTUME_EQUIP_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeEquipInfo>      m_arrayCostumeEquipInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COSTUME_EQUIP_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COSTUME_EQUIP_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeEquipInfo>      m_arrayCostumeEquipInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COSTUME_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COSTUME_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_CostumeIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CostumeCount;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ReasonIndex;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EBindType               m_BindType;                                               // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	float                                              m_ExpireRemainTime;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFixedTerm;                                            // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPurchase;                                             // 0x003D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COSTUME_PLAYER_SELECT_INFO_CMD
// 0x0070 (0x0098 - 0x0028)
struct FCommonSource_CG_COSTUME_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CostumeInfo>           m_arrayCostume;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_CostumeResourceInfo           m_CostumeResourceInfo;                                    // 0x0038(0x0040) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_CostumeShowingInfo>    m_arrayCostumeShowingInfo;                                // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CostumeDyeingInfo>     m_arrayCostumeDyeingInfo;                                 // 0x0088(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COSTUME_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COSTUME_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ECostumeNetResult       m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COUPON_EXCHANGE_USE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COUPON_EXCHANGE_USE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EResourceType           m_ResourceType;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FCommonSource_ExchangeCouponItemInfo        m_ResultItemInfo;                                         // 0x002C(0x000C) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_COUPON_EXCHANGE_USE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COUPON_EXCHANGE_USE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CouponItemSerial;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SelectedItemIndex;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClassType              m_ExclusionClassType;                                     // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COUPON_EXCHANGE_SELECT_LIST_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_COUPON_EXCHANGE_SELECT_LIST_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CouponItemSerial;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_COUPON_EXCHANGE_SELECT_LIST_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COUPON_EXCHANGE_SELECT_LIST_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EResourceType           m_ResourceType;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_ExchangeCouponItemInfo> m_arrayExchangeItemInfo;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COUPON_EXCHANGE_SELECT_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_COUPON_EXCHANGE_SELECT_LIST_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CouponItemSerial;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.RuneInfo
// 0x0010
struct FCommonSource_RuneInfo
{
	int                                                m_RuneIndex;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_RuneGrade;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERuneSetOption          m_RuneSetOption;                                          // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                m_RuneCount;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COUPON_ODINCOUPON_USE_ACK
// 0x0088 (0x00B0 - 0x0028)
struct FCommonSource_CG_COUPON_ODINCOUPON_USE_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_CouponType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_AvatarVehicleIndex;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_OdinCouponItemInfo            m_ItemInfo;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_RuneInfo                      m_RuneInfo;                                               // 0x0040(0x0010) (Edit, BlueprintVisible)
	struct FCommonSource_BlessingStoneInfo             m_BlessingStoneInfo;                                      // 0x0050(0x0060) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_COUPON_ODINCOUPON_USE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COUPON_ODINCOUPON_USE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CouponItemSerial;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectedGrade;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                m_SelectedItemIndex;                                      // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_COUPON_ODINCOUPON_SELECT_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COUPON_ODINCOUPON_SELECT_LIST_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_CouponType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MinPeriod;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxPeriod;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MinGrade;                                               // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MaxGrade;                                               // 0x0035(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COUPON_ODINCOUPON_SELECT_LIST_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_COUPON_ODINCOUPON_SELECT_LIST_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_CouponType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_AvatarVehicleComposeInfo> m_arrayAvatarVehicleInfo;                                 // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_OdinCouponItemInfo>    m_arrayItemInfo;                                          // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COUPON_ODINCOUPON_SELECT_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_COUPON_ODINCOUPON_SELECT_LIST_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_CouponType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_COUPON_USE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COUPON_USE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardItemInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COUPON_USE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_COUPON_USE_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_CouponCode;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_COUPON_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_COUPON_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EErrorCouponNetResult   m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DEBUG_LOG_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_DEBUG_LOG_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_DEBUG_LOG_SYN
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_DEBUG_LOG_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_DebugMessage;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_value0;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Value1;                                                 // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Value2;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Value3;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_value4;                                                 // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CRITICAL_ERROR_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CRITICAL_ERROR_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_CRITICAL_ERROR_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CRITICAL_ERROR_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_ErrorMessage;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_DUEL_DUNGEON_INFO_ENTER_CMD
// 0x0080 (0x00A8 - 0x0028)
struct FCommonSource_CG_DUEL_DUNGEON_INFO_ENTER_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_DuelInfo                      m_DuelInfo;                                               // 0x0028(0x0058) (Edit, BlueprintVisible)
	int                                                m_MasterObjectSerial;                                     // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDuelSide               m_DuelSide;                                               // 0x0084(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDuelMatchState         m_DuelMatchState;                                         // 0x0085(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0086(0x0002) MISSED OFFSET
	int                                                m_GoalKillCount;                                          // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_DuelSideRankInfo>      m_arrayDuelSideRankInfo;                                  // 0x0090(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_RemainTime;                                             // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAudience;                                             // 0x00A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00A5(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_MATCH_UPDATE_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_UPDATE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_DuelRankerInfo                m_DuelRankerInfo;                                         // 0x0028(0x0028) (Edit, BlueprintVisible)
	struct FCommonSource_DuelSideRankInfo              m_DuelSideRankInfo;                                       // 0x0050(0x0018) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_DUEL_MATCH_RESULT_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_RESULT_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsTimeOver;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_WinPlayerName;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_DuelSideRankInfo>      m_arrayDuelSideRankInfo;                                  // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_UserCount;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_MATCH_RANK_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_RANK_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_DuelRankerInfo>        m_arrayDuelRankerInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_DUEL_MATCH_RANK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_RANK_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EDuelSide               m_DuelSide;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_MATCH_CANCEL_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_CANCEL_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_DUEL_MATCH_CANCEL_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_CANCEL_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_DUEL_MATCH_CANCEL_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_CANCEL_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_DUEL_MATCH_READY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_READY_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_GoalKillCount;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_DUEL_MATCH_START_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_START_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_GoalKillCount;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MatchTime;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_DUEL_MEMBER_KICKOUT_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_DUEL_MEMBER_KICKOUT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_KickOutPlayerName;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_DUEL_MEMBER_KICKOUT_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_DUEL_MEMBER_KICKOUT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_KickOutPlayerName;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_DUEL_MEMBER_KICKOUT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_MEMBER_KICKOUT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_MASTER_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_MASTER_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_MASTER_CHANGE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_MASTER_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_MASTER_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_MASTER_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_SIDE_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_SIDE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDuelSide               m_DuelSide;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_SIDE_CHANGE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_SIDE_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EDuelSide               m_DuelSide;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_MATCH_START_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_START_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_DUEL_SIDE_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_SIDE_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EDuelSide               m_DuelSide;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_MEMBER_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_DUEL_MEMBER_LIST_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_DungeonSerial;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MasterObjectSerial;                                     // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_MATCH_START_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_DUEL_MATCH_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_GoalKillCount;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_UserCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_MEMBER_LIST_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_DUEL_MEMBER_LIST_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_DuelMemberInfo>        m_arrayMemberInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_DUEL_MEMBER_LIST_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_DUEL_MEMBER_LIST_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_DungeonSerial;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Password;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_DUEL_EDIT_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_DUEL_EDIT_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_DUEL_EDIT_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_DUEL_EDIT_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_DungeonName;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_LimitBattlePower;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LimitUserCount;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Password;                                               // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsLock;                                                 // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_VIEW_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_VIEW_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAudience;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_EDIT_SYN
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_DUEL_EDIT_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_DungeonName;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_LimitBattlePower;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LimitUserCount;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Password;                                               // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsLock;                                                 // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_VIEW_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_DUEL_VIEW_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_DungeonSerial;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Password;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_DUEL_JOIN_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_DUEL_JOIN_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_DUEL_JOIN_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_DUEL_JOIN_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_DungeonSerial;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDuelSide               m_DuelSide;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_REGISTER_SYN
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_DUEL_REGISTER_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_DungeonName;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_LimitBattlePower;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LimitUserCount;                                         // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Password;                                               // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsLock;                                                 // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDuelSide               m_DuelSide;                                               // 0x0059(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x005A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_CHECK_REGISTER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_DUEL_CHECK_REGISTER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_DUEL_CHECK_REGISTER_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_DUEL_CHECK_REGISTER_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_DungeonName;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_DUEL_REGISTER_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_DUEL_REGISTER_LIST_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_DuelCount;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_DuelInfo>              m_arrayDuelInfo;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_DUEL_REGISTER_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_DUEL_REGISTER_LIST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_DUEL_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_DUEL_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EDuelNetResult          m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.WorldDungeonPKInfo
// 0x0058
struct FCommonSource_WorldDungeonPKInfo
{
	int                                                m_Ranking;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_ServerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0040(0x0014) (Edit, BlueprintVisible)
	int                                                m_KillCount;                                              // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLDELITEDUNGEON_PK_MYINFO_CMD
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_WORLDELITEDUNGEON_PK_MYINFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_WorldDungeonPKInfo            m_MyPkRankingInfo;                                        // 0x0028(0x0058) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_WORLDELITEDUNGEON_PK_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLDELITEDUNGEON_PK_LIST_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_WorldDungeonPKInfo>    m_arrayWorldDungeonPK;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_DUEL_REGISTER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_DUEL_REGISTER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_WORLDELITEDUNGEON_PK_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WORLDELITEDUNGEON_PK_LIST_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsGroup;                                                // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ELITEDUNGEON_INFO_ACK
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_ELITEDUNGEON_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_EliteDungeonInfo              m_EliteDungeonInfo;                                       // 0x0028(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_ELITEDUNGEON_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ELITEDUNGEON_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ELITEDUNGEON_CHANGE_CHARGE_COUNT_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ELITEDUNGEON_CHANGE_CHARGE_COUNT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_UsedChargeCount;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ELITEDUNGEON_TOTAL_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ELITEDUNGEON_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_EliteDungeonInfo>      m_arrayEliteDungeonInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_MapEventDropGroup>     m_arrayEventDropInfo;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ELITEDUNGEON_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ELITEDUNGEON_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ELITEDUNGEON_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ELITEDUNGEON_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EEliteDungeonNetResult  m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CASTLEWAR_EMOTION_NOTIFY_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_EMOTION_NOTIFY_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_CastlewarWinGuildInfo> m_arrayWinGuildInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_EMOTION_START_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_EMOTION_START_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_EmotionInfo                   m_EmotionInfo;                                            // 0x0028(0x0008) (Edit, BlueprintVisible)
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EMOTION_START_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_EMOTION_START_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EmotionIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EXCHANGE_RECOMMEND_INFO_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_EXCHANGE_RECOMMEND_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayRecommendItemIndex;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_WeaponItemIndex;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ArmorItemIndex;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_EXCHANGE_RECOMMEND_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_EXCHANGE_RECOMMEND_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_EXCHANGE_FAVORITES_EXCHANGE_ORDER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_EXCHANGE_FAVORITES_EXCHANGE_ORDER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_EXCHANGE_FAVORITES_EXCHANGE_ORDER_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_EXCHANGE_FAVORITES_EXCHANGE_ORDER_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_BaseOrderNo;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetOrderNo;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EXCHANGE_FAVORITES_CHECK_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_EXCHANGE_FAVORITES_CHECK_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_EXCHANGE_FAVORITES_CHECK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_EXCHANGE_FAVORITES_CHECK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDelete;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EMOTION_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_EMOTION_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EEmotionNetResult       m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EXCHANGE_FAVORITES_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_EXCHANGE_FAVORITES_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ExchangeFavoriteInfo>  m_arrayExchangeFavoriteInfo;                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_EXCHANGE_FAVORITES_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_EXCHANGE_FAVORITES_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_EXCHANGE_MYHISTORY_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_EXCHANGE_MYHISTORY_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ExchangeMyHistoryInfo> m_arrayMyHistoryInfo;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_EXCHANGE_FAVORITES_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_EXCHANGE_FAVORITES_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_EXCHANGE_SETTLE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_EXCHANGE_SETTLE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SalesCash;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SellingPrice;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ItemRewardInfo>        m_arraySalesItemInfo;                                     // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_EXCHANGE_MYHISTORY_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_EXCHANGE_MYHISTORY_LIST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EXCHANGE_SETTLE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_EXCHANGE_SETTLE_SYN : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayExchangeDBIdx;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_EXCHANGE_CANCEL_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_EXCHANGE_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SalesCash;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FCommonSource_ExchangeItemInfo              m_ItemInfo;                                               // 0x0030(0x0058) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_EXCHANGE_CANCEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_EXCHANGE_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ExchangeDBIdx;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_EXCHANGE_REREGISTER_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_EXCHANGE_REREGISTER_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ExchangeItemInfo              m_ItemInfo;                                               // 0x0028(0x0058) (Edit, BlueprintVisible)
	int                                                m_ItemIndex;                                              // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SellingPrice;                                           // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_EXCHANGE_REREGISTER_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_EXCHANGE_REREGISTER_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ExchangeDBIdx;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SellingPrice;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_EXCHANGE_REGISTER_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_EXCHANGE_REGISTER_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ExchangeItemInfo              m_ItemInfo;                                               // 0x0028(0x0058) (Edit, BlueprintVisible)
	int                                                m_ItemIndex;                                              // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SellingPrice;                                           // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_EXCHANGE_REGISTER_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_EXCHANGE_REGISTER_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SellingPrice;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_EXCHANGE_REGISTER_INFO_ACK
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_EXCHANGE_REGISTER_INFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FCommonSource_ExchangePriceInfo             m_PriceInfo;                                              // 0x0030(0x0030) (Edit, BlueprintVisible)
	int                                                m_CastleTaxRate;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FCommonSource_Double                        m_AlertPrice;                                             // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_EXCHANGE_REGISTER_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_EXCHANGE_REGISTER_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EXCHANGE_MYSALE_LIST_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_EXCHANGE_MYSALE_LIST_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ExchangeMySaleInfo>    m_arrayMySaleInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_EXCHANGE_MYSALE_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_EXCHANGE_MYSALE_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_EXCHANGE_BUY_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_EXCHANGE_BUY_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_EXCHANGE_BUY_CMD
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_EXCHANGE_BUY_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ExchangeItemInfo              m_ItemInfo;                                               // 0x0028(0x0058) (Edit, BlueprintVisible)
	int                                                m_SellingPrice;                                           // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EXCHANGE_BUY_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_EXCHANGE_BUY_SYN : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayExchangeDBIdx;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_EXCHANGE_BUY_LIST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_EXCHANGE_BUY_LIST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_EXCHANGE_BUY_LIST_DEPTH1_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_EXCHANGE_BUY_LIST_DEPTH1_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ExchangeBuyInfo1>      m_arrayBuyInfo1;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_EXCHANGE_MYSALE_LIST_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_EXCHANGE_MYSALE_LIST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_TotalSalesCash;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EXCHANGE_BUY_LIST_DEPTH0_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_EXCHANGE_BUY_LIST_DEPTH0_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ExchangeBuyInfo0>      m_arrayBuyInfo0;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_EXCHANGE_BUY_LIST_SYN
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_EXCHANGE_BUY_LIST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_CategoryIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_SearchName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_ExchangeSearchOption          m_SearchOption;                                           // 0x0040(0x0018) (Edit, BlueprintVisible)
	bool                                               m_IsNextPage;                                             // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EXCHANGE_DELETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_EXCHANGE_DELETE_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ExchangeDBIdx;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_EXCHANGE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_EXCHANGE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EExchangeNetResult      m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_FRIEND_INVITE_PARTY_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_FRIEND_INVITE_PARTY_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_FRIEND_INVITE_PARTY_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_INVITE_PARTY_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_FRIEND_DETAIL_INFO_ACK
// 0x00A0 (0x00C8 - 0x0028)
struct FCommonSource_CG_FRIEND_DETAIL_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_FriendDetailInfo              m_PlayerInfo;                                             // 0x0028(0x00A0) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_FRIEND_DETAIL_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_FRIEND_DETAIL_INFO_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_FRIEND_MOVE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_FRIEND_MOVE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PlayerPos                     m_FirendPos;                                              // 0x0028(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_FRIEND_MOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_FRIEND_MOVE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_FRIEND_FAVORITE_POSITION_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_FAVORITE_POSITION_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PlayerPos>             m_arrayPlayerPos;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_FAVORITE_DISAPPEAR_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_FAVORITE_DISAPPEAR_CMD : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayPlayerDBKey;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_FAVORITE_APPEAR_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_FAVORITE_APPEAR_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_FriendInfo>            m_arrayFriendInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_FAVORITE_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_FAVORITE_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_FriendInfo>            m_arrayFriendInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_FAVORITE_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_FRIEND_FAVORITE_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_FRIEND_FAVORITE_ACK
// 0x0098 (0x00C0 - 0x0028)
struct FCommonSource_CG_FRIEND_FAVORITE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_FriendInfo                    m_FriendInfo;                                             // 0x0028(0x0090) (Edit, BlueprintVisible)
	bool                                               m_IsFavorite;                                             // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_FRIEND_FAVORITE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_FAVORITE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFavorite;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_FRIEND_REMOVE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_FRIEND_REMOVE_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_FRIEND_REMOVE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_FRIEND_REMOVE_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_FRIEND_REMOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_FRIEND_REMOVE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_FRIEND_ACCEPT_CMD
// 0x0098 (0x00C0 - 0x0028)
struct FCommonSource_CG_FRIEND_ACCEPT_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_FriendInfo                    m_FriendInfo;                                             // 0x0028(0x0090) (Edit, BlueprintVisible)
	bool                                               m_IsAccept;                                               // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_FRIEND_ACCEPT_ACK
// 0x0098 (0x00C0 - 0x0028)
struct FCommonSource_CG_FRIEND_ACCEPT_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_FriendInfo                    m_FriendInfo;                                             // 0x0028(0x0090) (Edit, BlueprintVisible)
	bool                                               m_IsAccept;                                               // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_FRIEND_ACCEPT_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_ACCEPT_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAccept;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_FRIEND_BE_APPLIED_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_BE_APPLIED_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_FriendApplyInfo>       m_arrayFriendApplyInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_APPLY_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_APPLY_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_FriendApplyInfo>       m_arrayFriendApplyInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_BE_APPLIED_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_FRIEND_BE_APPLIED_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_FRIEND_APPLY_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_FRIEND_APPLY_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_FRIEND_APPLY_CMD
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_FRIEND_APPLY_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_FriendApplyInfo               m_FriendApplyInfo;                                        // 0x0028(0x0058) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_FRIEND_APPLY_ACK
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_FRIEND_APPLY_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_FriendApplyInfo               m_FriendApplyInfo;                                        // 0x0028(0x0058) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_FRIEND_APPLY_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_FRIEND_APPLY_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_RECOMMEND_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_RECOMMEND_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_FriendRecommendInfo>   m_arrayFriendRecommendInfo;                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_RECOMMEND_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_FRIEND_RECOMMEND_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_FRIEND_FIND_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_FIND_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_FriendRecommendInfo>   m_arrayFriendRecommendInfo;                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_FIND_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_FIND_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_COUNT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_FRIEND_COUNT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_FriendCount;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_FRIEND_COUNT_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_FRIEND_COUNT_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_FRIEND_GUILDMEMBER_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_FRIEND_GUILDMEMBER_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_FriendRecommendInfo>   m_arrayFriendRecommendInfo;                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsNextPage;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_FRIEND_GUILDMEMBER_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_FRIEND_GUILDMEMBER_LIST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_FRIEND_INFO_CHANGE_CMD
// 0x0090 (0x00B8 - 0x0028)
struct FCommonSource_CG_FRIEND_INFO_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_FriendInfo                    m_FriendInfo;                                             // 0x0028(0x0090) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_FRIEND_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_FRIEND_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_FriendInfo>            m_arrayFriendInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsNextPage;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_FRIEND_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_FRIEND_LIST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_FRIEND_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_FriendInfo>            m_arrayFriendInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_INFO_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_FRIEND_INFO_SYN : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayPlayerDBKey;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_FRIEND_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_FRIEND_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EFriendNetResult        m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_RUNEWORDMATCH_CHALLENGE_RUNE_ACK
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_RUNEWORDMATCH_CHALLENGE_RUNE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ChallengeRuneWordType;                                  // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGradeRuneWord          ChallengeGradeRunWord;                                    // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	TArray<struct FCommonSource_GameEventRuneWordInfo> m_arrayMatchedRuneWordList;                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GameEventRuneWordMatch_PlayerBoard> m_arrayRuneWordResetSlotInfo;                             // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardList;                                        // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardExList;                                      // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_RUNEWORDMATCH_CHALLENGE_RUNE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_RUNEWORDMATCH_CHALLENGE_RUNE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGradeRuneWord          ChallengeGradeRunWord;                                    // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_RUNEWORDMATCH_INFO_ACK
// 0x00B0 (0x00D8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_RUNEWORDMATCH_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGameEventRuneWordMatchEventType m_enumGameEventRuneWordMatchEventType;                    // 0x00A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ChallengeRuneWordType;                                  // 0x00A1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGradeRuneWord          m_enumChallengeRuneWordGrade;                             // 0x00A2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x00A3(0x0005) MISSED OFFSET
	TArray<struct FCommonSource_GameEventRuneWordMatch_PlayerBoard> m_arrayBoardInfo;                                         // 0x00A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MaterialItemIndex;                                      // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	TArray<int>                                        m_arrayMaterialCount;                                     // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_RewardExItemIndex;                                      // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardExItemType;                                       // 0x00D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00D5(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_QUEST_INFO_ACK
// 0x0088 (0x00B0 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_QUEST_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	TArray<int>                                        m_arrayQuestIndex;                                        // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_RUNEWORDMATCH_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_RUNEWORDMATCH_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROSKVADICE_ROLL_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROSKVADICE_ROLL_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DiceNumber;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CurStep;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_LeftDailyLimitCount;                                    // 0x002E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_QUEST_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_QUEST_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROSKVADICE_ROLL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROSKVADICE_ROLL_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRoskvaDiceType m_DiceType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROSKVADICE_INFO_ACK
// 0x00D0 (0x00F8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROSKVADICE_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	int                                                m_ResourceIndex;                                          // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ResourceNeedCount;                                      // 0x00A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A5(0x0003) MISSED OFFSET
	int                                                m_SpecialDicePrice;                                       // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DailyLimitCount;                                        // 0x00AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_LeftDailyLimitCount;                                    // 0x00AD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CurBlockStep;                                           // 0x00AE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_BlockCount;                                             // 0x00AF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CompleteCount;                                          // 0x00B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_EventRoskvaDiceBlockRewardInfo> m_arrayBlockRewardInfo;                                   // 0x00B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_EventRoskvaDiceCompleteRewardInfo> m_arrayCompleteRewardInfo;                                // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayRewardBlockHistory;                                // 0x00D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arraySpecialDiceNumber;                                 // 0x00E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROSKVADICE_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROSKVADICE_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_GUILD_ATTENDANCE_INFO_ACK
// 0x00A0 (0x00C8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_GUILD_ATTENDANCE_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_EventMissionInfo>      m_arrayDailyMissionInfo;                                  // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_EventMissionInfo>      m_arrayMissionInfo;                                       // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_TodayAttendanceCount;                                   // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_GUILD_ATTENDANCE_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_GUILD_ATTENDANCE_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_LIONROULETTE_STAB_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_LIONROULETTE_STAB_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_StabSlotIndex;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventLionRouletteResultType m_ResultType;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                m_GetRewardCount;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CumulativeRewardCount;                                  // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NextCumulativeRewardCount;                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_LIONROULETTE_STAB_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_LIONROULETTE_STAB_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_StabSlotIndex;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_LIONROULETTE_STOP_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_LIONROULETTE_STOP_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCount;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_LIONROULETTE_STOP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_LIONROULETTE_STOP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_LIONROULETTE_START_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_LIONROULETTE_START_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_LIONROULETTE_START_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_LIONROULETTE_START_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_LIONROULETTE_INFO_ACK
// 0x00F0 (0x0118 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_LIONROULETTE_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	int                                                m_RewardCountByFail;                                      // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CumulativeRewardCount;                                  // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NextCumulativeRewardCount;                              // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	TArray<unsigned char>                              m_arrayStabSlot;                                          // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ResourceIndex;                                          // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResourceNeedCount;                                      // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardIndex;                                            // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsStartEvent;                                           // 0x00CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	int                                                m_DailyLimitCount;                                        // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CurrentDailyLimitCount;                                 // 0x00D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PointName;                                              // 0x00D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EventResourcePoint;                                     // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EventRewardPoint;                                       // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_EventMissionInfo>      m_arrayMissionInfo;                                       // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_RewardPointName;                                        // 0x0100(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRewardPoint;                                          // 0x0110(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_LIONROULETTE_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_LIONROULETTE_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_REWARD_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_REWARD_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRPSExCardType m_PlayerSelectedCard;                                     // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRPSExCardType m_OpponentSelectedCard;                                   // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                m_RewardIndex;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BettingCount;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GainRewardCount;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRPSExResultType m_ResultType;                                             // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRPSExStateType m_State;                                                  // 0x003D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	int                                                m_AccumulatedRewardCount;                                 // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_SHUFFLEEND_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_SHUFFLEEND_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRPSExStateType m_State;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_SHUFFLEEND_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_SHUFFLEEND_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_REWARD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_REWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SelectCardIdx;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_START_ACK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_START_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<FCommonSource_CommonSource_EGameEventRPSExCardType> m_arrayPlayerCard;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<FCommonSource_CommonSource_EGameEventRPSExCardType> m_arrayOpponentCard;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGameEventRPSExStateType m_State;                                                  // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_START_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_START_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_MODIFY_BETTING_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_MODIFY_BETTING_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AlteredBettingCnt;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_MODIFY_BETTING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_MODIFY_BETTING_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CurrentBettingCnt;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_INFO_ACK
// 0x00F0 (0x0118 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	int                                                m_ResourceIndex;                                          // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MinBettingCnt;                                          // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxBettingCnt;                                          // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CurrentBettingCnt;                                      // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DailyLimitCnt;                                          // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CurrentDailyLimitCnt;                                   // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardMultiplierCnt;                                    // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	TArray<FCommonSource_CommonSource_EGameEventRPSExCardType> m_arrayPlayerCard;                                        // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<FCommonSource_CommonSource_EGameEventRPSExCardType> m_arrayOpponentCard;                                      // 0x00D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGameEventRPSExStateType m_State;                                                  // 0x00E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00E1(0x0003) MISSED OFFSET
	int                                                m_AccumulatedRewardCount;                                 // 0x00E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DrawRewardCount;                                        // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxAccumulatedRewardCount;                              // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PointName;                                              // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EventPoint;                                             // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_EventMissionInfo>      m_arrayMissionInfo;                                       // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_EX_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ENCHANT_GAMESTOP_ACK
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ENCHANT_GAMESTOP_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EventPoint;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AddEnchantStep;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EnchantGrade;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GreateSuccessCnt;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0040(0x0030) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGameEventEnchantStateType m_State;                                                  // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ENCHANT_GAMESTOP_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ENCHANT_GAMESTOP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_ElapsedTimeStamp;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ENCHANT_GAMESTART_ACK
// 0x0090 (0x00B8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ENCHANT_GAMESTART_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_RoundTripTimeStamp;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EventPoint;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventEnchantStateType m_State;                                                  // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0040(0x0078) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ENCHANT_GAMESTART_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ENCHANT_GAMESTART_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ENCHANT_GAMEREADY_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ENCHANT_GAMEREADY_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ENCHANT_GAMEREADY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ENCHANT_GAMEREADY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ENCHANT_INFO_ACK
// 0x00B0 (0x00D8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ENCHANT_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_EventMissionInfo>      m_arrayMissionInfo;                                       // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EventPoint;                                             // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EnchantGrade;                                           // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GreateSuccessCnt;                                       // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxEnchantStep;                                         // 0x00CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventEnchantStateType m_State;                                                  // 0x00D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ENCHANT_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ENCHANT_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_STEPEXCHANGE_BUY_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_STEPEXCHANGE_BUY_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GameEventStepExchangeGoodsInfo> m_arrayGoodsInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentEventPoint;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_STEPEXCHANGE_BUY_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_STEPEXCHANGE_BUY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        m_arrayBuySlot;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_STEPEXCHANGE_INFO_ACK
// 0x00A0 (0x00C8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_STEPEXCHANGE_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GameEventStepExchangeGoodsInfo> m_arrayGoodsInfo;                                         // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_EventMissionInfo>      m_arrayMissionInfo;                                       // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentEventPoint;                                      // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_STEPEXCHANGE_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_STEPEXCHANGE_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_GACHAREWARD_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_GACHAREWARD_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BettingCount;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GainRewardCount;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRPSResultType m_RPSResultType;                                          // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRPSStateType  m_State;                                                  // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_GACHAREWARD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_GACHAREWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_START_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_START_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BettingCount;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DailyChanlangeCnt;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxDailyChanlangeCnt;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGameEventRPSStateType  m_State;                                                  // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_START_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_START_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_MODIFY_MULTIPLIER_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_MODIFY_MULTIPLIER_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AlteredBettingCnt;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_INFO_ACK
// 0x00D0 (0x00F8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	int                                                m_RewardIndex;                                            // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MinBettingCnt;                                          // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxBettingCnt;                                          // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CurrentBettingCnt;                                      // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DailyChanlangeCnt;                                      // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxDailyChanlangeCnt;                                   // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_EventRPSRewardProbInfo> m_arrayRewardInfo;                                        // 0x00B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGameEventRPSStateType  m_State;                                                  // 0x00C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	struct FString                                     m_PointName;                                              // 0x00D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EventPoint;                                             // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_EventMissionInfo>      m_arrayMissionInfo;                                       // 0x00E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_OFFICIALCAFE_INFO_CMD
// 0x0078 (0x00A0 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_OFFICIALCAFE_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ITEMMAKE_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ITEMMAKE_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_EventItemMakeInfo>     m_arrayItemMakeInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ROCKPAPPERSCISSORS_MODIFY_MULTIPLIER_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ROCKPAPPERSCISSORS_MODIFY_MULTIPLIER_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CurrentBettingCnt;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_ITEMMAKE_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_ITEMMAKE_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GAMEEVENT_DRAW_REWARD_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_DRAW_REWARD_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardSlotIndex;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                m_RewardOrderNum;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0038(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_DRAW_REWARD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_DRAW_REWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardSlotIndex;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_DRAW_REFRESH_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_DRAW_REFRESH_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RemainRefreshCount;                                     // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_DRAW_REFRESH_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_DRAW_REFRESH_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_DRAW_INFO_ACK
// 0x00B0 (0x00D8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_DRAW_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_RewardSlotInfo>        m_arrayRewardSlotInfo;                                    // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_EventMissionInfo>      m_arrayMissionInfo;                                       // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EventPoint;                                             // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TotalRefreshCount;                                      // 0x00D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RemainRefreshCount;                                     // 0x00D5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00D6(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_BINGO_REWARD_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_BINGO_REWARD_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardSlotIndex;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                m_RewardOrderNum;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_RewardInfo;                                             // 0x0038(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_BINGO_REWARD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_BINGO_REWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardSlotIndex;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_BINGO_REWARD_OPEN_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_BINGO_REWARD_OPEN_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<unsigned char>                              m_arrayRewardSlotIndex;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardSlotInfo>        m_arrayRewardSlotInfo;                                    // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_DRAW_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_DRAW_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_BINGO_SLOT_OPEN_ACK
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_BINGO_SLOT_OPEN_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_OpenSlotIndex;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FCommonSource_RewardInfo                    m_BonusRewardInfo;                                        // 0x0030(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_BINGO_SLOT_OPEN_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_BINGO_SLOT_OPEN_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_OpenSlotIndex;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_BINGO_REFRESH_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_BINGO_REFRESH_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RemainRefreshCount;                                     // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_BINGO_REFRESH_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_BINGO_REFRESH_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_BINGO_INFO_ACK
// 0x00C0 (0x00E8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_BINGO_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	TArray<unsigned char>                              m_arrayOpenSlot;                                          // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardSlotInfo>        m_arrayRewardSlotInfo;                                    // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_EventMissionInfo>      m_arrayMissionInfo;                                       // 0x00D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EventPoint;                                             // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TotalRefreshCount;                                      // 0x00E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RemainRefreshCount;                                     // 0x00E5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00E6(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_BINGO_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_BINGO_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CONTENTS_TIMETABLE_INFO_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_CONTENTS_TIMETABLE_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ContentsTimeInfo>      m_arrayContentsTimeInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_FieldBossSpawnInfo>    m_arrayFieldBossSpawnInfo;                                // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_CONTENTS_TIMETABLE_INFO_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_CONTENTS_TIMETABLE_INFO_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ServerTime;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_PAYMENT_STACK_PROMOTION_REWARD_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_PAYMENT_STACK_PROMOTION_REWARD_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_EventPaymentStackRewardInfo> m_arrayPaymentStackRewardInfo;                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_PAYMENT_STACK_PROMOTION_REWARD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_PAYMENT_STACK_PROMOTION_REWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RewardMaxStep;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_CONTENTS_TIMETABLE_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_CONTENTS_TIMETABLE_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GAMEEVENT_PAYMENT_STACK_PROMOTION_TOTAL_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_PAYMENT_STACK_PROMOTION_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GAMEEVENT_PAYMENT_STACK_PROMOTION_TOTAL_INFO_CMD
// 0x00A8 (0x00D0 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_PAYMENT_STACK_PROMOTION_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	int                                                m_TotalPaymentStack;                                      // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_EventPaymentStackRewardInfo> m_arrayPaymentStackRewardInfo;                            // 0x00A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GameEventImageUrl             m_GameEventImageUrl;                                      // 0x00B8(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_PAYMENT_STACK_PROMOTION_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_PAYMENT_STACK_PROMOTION_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GAMEEVENT_PAYMENT_PROMOTION_REWARD_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_PAYMENT_PROMOTION_REWARD_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_EventPaymentRewardInfo        m_PaymentRewardInfo;                                      // 0x0028(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_PAYMENT_PROMOTION_REWARD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_PAYMENT_PROMOTION_REWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EventDay;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_TOTALPAYMENT_PROMOTION_INFO_ACK
// 0x0090 (0x00B8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_TOTALPAYMENT_PROMOTION_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	int                                                m_TotalPayment;                                           // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_EventPaymentRewardInfo> m_arrayPaymentRewardInfo;                                 // 0x00A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_TOTALPAYMENT_PROMOTION_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_TOTALPAYMENT_PROMOTION_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_PAYMENT_PROMOTION_INFO_ACK
// 0x0090 (0x00B8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_PAYMENT_PROMOTION_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	bool                                               m_IsClear;                                                // 0x00A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_EventPaymentRewardInfo> m_arrayPaymentRewardInfo;                                 // 0x00A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_HOTTIME_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_HOTTIME_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_EventHotTimeInfo>      m_arrayEventInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_HOTTIME_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_HOTTIME_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_EventHotTimeInfo>      m_arrayEventInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_HOTTIME_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_HOTTIME_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_MISSION_COMPLETE_BONUS_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_MISSION_COMPLETE_BONUS_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_MissionUniqueIndex;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CompleteCount;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_PAYMENT_PROMOTION_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_PAYMENT_PROMOTION_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_MISSION_COMPLETE_BONUS_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_MISSION_COMPLETE_BONUS_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_MissionUniqueIndex;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CompleteCount;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_MISSION_REWARD_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_MISSION_REWARD_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_MissionUniqueIndex;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionIndex;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TotalCompleteCount;                                     // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_MISSION_REWARD_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_MISSION_REWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_MissionUniqueIndex;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MissionIndex;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_MISSION_INFO_ACK
// 0x00A0 (0x00C8 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_MISSION_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_EventMissionInfo>      m_arrayMissionInfo;                                       // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_EventMissionBonusInfo> m_arrayBonusInfo;                                         // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_TotalCompleteCount;                                     // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_MISSION_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_MISSION_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_DISCOUNT_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_DISCOUNT_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_EventDiscountInfo>     m_arrayEventCost;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_DISCOUNT_INFO_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_DISCOUNT_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_EventDiscountInfo             m_EventCostInfo;                                          // 0x0028(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_DISCOUNT_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_DISCOUNT_INFO_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGameEventType          m_EventType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_DROPGROUP_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_DROPGROUP_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_EventDropGroupInfo>    m_arrayDropGroupInfo;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_EXCHANGE_BUY_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_EXCHANGE_BUY_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ExchangeDBIndex;                                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuyCount;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_EXCHANGE_INFO_ACK
// 0x00A8 (0x00D0 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_EXCHANGE_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameEventInfo                 m_EventInfo;                                              // 0x0028(0x0078) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GameEventExchangeGoodsInfo> m_arrayGoodsInfo;                                         // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayPriceItemInfo;                                     // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayFreeRewardInfo;                                    // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_EXCHANGE_BUY_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_EXCHANGE_BUY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_ExchangeDBIndex;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuyCount;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_EXCHANGE_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_EXCHANGE_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_CATEGORY_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_CATEGORY_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GameEventCategory>     m_arrayEventCategory;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEEVENT_CATEGORY_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_CATEGORY_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GAMEEVENT_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGameEventNetResult     m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEOPTION_GROWTH_CONTENTS_WINDOW_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GAMEOPTION_GROWTH_CONTENTS_WINDOW_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GAMEOPTION_GROWTH_CONTENTS_WINDOW_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEOPTION_GROWTH_CONTENTS_WINDOW_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EOSCode                 m_OSCode;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEOPTION_CHANGE_NO_SAVE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEOPTION_CHANGE_NO_SAVE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameOptionNoSaveInfo          m_GameOptionNoSaveInfo;                                   // 0x0028(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEEVENT_GROUP_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEEVENT_GROUP_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GameEventGroup>        m_arrayEventGroup;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GAMEOPTION_CHANGE_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_GAMEOPTION_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameOptionInfo                m_GameOptionInfo;                                         // 0x0028(0x001C) (Edit, BlueprintVisible)
	struct FCommonSource_GameOptionLogInfo             m_GameOptionLogInfo;                                      // 0x0044(0x0009) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEOPTION_CHANGE_NO_SAVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEOPTION_CHANGE_NO_SAVE_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameOptionNoSaveInfo          m_GameOptionNoSaveInfo;                                   // 0x0028(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEOPTION_TOTAL_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GAMEOPTION_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameOptionInfo                m_GameOptionInfo;                                         // 0x0028(0x001C) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEOPTION_TOTAL_INFO_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GAMEOPTION_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameOptionLogInfo             m_GameOptionLogInfo;                                      // 0x0028(0x0009) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEOPTION_PLAYER_SELECT_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GAMEOPTION_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EQuickSlotPotionSortType m_QuickSlotPotionSortType;                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsHostileGuildRangeDamage;                              // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectLanguage;                                         // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEOPTION_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GAMEOPTION_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGameOptionNetResult    m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUIDE_DOING_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUIDE_DOING_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_GroupID;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUIDE_DOING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUIDE_DOING_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_GroupID;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GAMEOPTION_CHANGE_SYN
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_GAMEOPTION_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameOptionInfo                m_GameOptionInfo;                                         // 0x0028(0x001C) (Edit, BlueprintVisible)
	struct FCommonSource_GameOptionLogInfo             m_GameOptionLogInfo;                                      // 0x0044(0x0009) (Edit, BlueprintVisible)
	bool                                               m_IsCloseGameOption;                                      // 0x004D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUIDE_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUIDE_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayGroupID;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUIDE_TRIGGER_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUIDE_TRIGGER_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_TriggerIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUIDE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUIDE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuideNetResult         m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_CS_LETTER_DELETE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_CS_LETTER_DELETE_CMD : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayGuildCSLetterIdx;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_CS_LETTER_RECV_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_CS_LETTER_RECV_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_CS_LETTER_RECV_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_CS_LETTER_RECV_SYN : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayGuildCSLetterIdx;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_CS_LETTER_NOTICE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_CS_LETTER_NOTICE_CMD : public FCommonSource_BaseProtocol
{
	bool                                               IsLetterNotice;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_DISBAND_CHECK_CS_LETTER_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_DISBAND_CHECK_CS_LETTER_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_HasCSLetter;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_DISBAND_CHECK_CS_LETTER_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_DISBAND_CHECK_CS_LETTER_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_CS_LETTER_LIST_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_CS_LETTER_LIST_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildCSLetter>         m_arrayGuildCSLetter;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_CS_LETTER_LIST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_CS_LETTER_LIST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_CS_LETTER_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_CS_LETTER_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_EXTRACT_CONTRIBUTION_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_EXTRACT_CONTRIBUTION_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsExtractContribution;                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_ExtractServerID;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_EXTRACT_CONTRIBUTION_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_EXTRACT_CONTRIBUTION_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ExtractServerID;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_EXTRACT_CONTRIBUTION_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_EXTRACT_CONTRIBUTION_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_MEMBER_LIST_ALL_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_MEMBER_LIST_ALL_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildMemberSortType    m_MemberSortType;                                         // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAscendingOrder;                                       // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002B(0x0001) MISSED OFFSET
	int                                                m_MemberCount;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GuildMemberInfo>       m_arrayGuildMemberInfo;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_MEMBER_POSITION_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_MEMBER_POSITION_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PlayerPos>             m_arrayPlayerPos;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_MEMBER_DISAPPEAR_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_MEMBER_DISAPPEAR_CMD : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayPlayerDBKey;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_MEMBER_APPEAR_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_MEMBER_APPEAR_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PlayerPos>             m_arrayMemberInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_RANKING_INTRODUCTION_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_GUILD_RANKING_INTRODUCTION_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0040(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FString                                     m_RankingIntroduction;                                    // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_RANKING_INTRODUCTION_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RANKING_INTRODUCTION_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_NAME_CHANGE_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_GUILD_NAME_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PrevGuildName;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_CurrentGuildName;                                       // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_LastChangedGuildNameTime;                               // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_CHANGE_RAIDER_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_GUILD_CHANGE_RAIDER_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ChangerPlayerDBKey;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRaider;                                               // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_WITHDRAW_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_WITHDRAW_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_WITHDRAW_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_WITHDRAW_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_RESPONSE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_RESPONSE_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAccept;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_REQUESTAROUND_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_REQUESTAROUND_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_REQUESTAROUND_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_REQUESTAROUND_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_RESPONSE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_RESPONSE_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAccept;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_REQUESTALL_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_REQUESTALL_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_REQUEST_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_REQUEST_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAroundRequest;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_REQUEST_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_REQUEST_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_REQUEST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_REQUEST_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_REQUESTALL_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_REQUESTALL_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_GET_RAIDER_DESTROY_TIME_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_GET_RAIDER_DESTROY_TIME_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_DESTROY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_DESTROY_CMD : public FCommonSource_BaseProtocol
{
	float                                              m_RaiderDestroyRemainTime;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_DESTROY_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_DESTROY_ACK : public FCommonSource_BaseProtocol
{
	float                                              m_RaiderDestroyRemainTime;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_GET_RAIDER_DESTROY_TIME_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_GET_RAIDER_DESTROY_TIME_ACK : public FCommonSource_BaseProtocol
{
	float                                              m_RaiderDestroyRemainTime;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_DESTROY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_DESTROY_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsCancel;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_CREATE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_CREATE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_RAIDER_CREATE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_RAIDER_CREATE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_BATTLE_POWER_MY_RANKING_CMD
// 0x0088 (0x00B0 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLE_POWER_MY_RANKING_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildBattlePowerRankingInfo   m_GuildRankingInfo;                                       // 0x0030(0x0078) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_ERankingType            m_RankingType;                                            // 0x00A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00A9(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLE_POWER_RANKING_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLE_POWER_RANKING_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_GuildBattlePowerRankingInfo> m_arrayRankingInfo;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ERankingType            m_RankingType;                                            // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLE_POWER_RANKING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLE_POWER_RANKING_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingType            m_RankingType;                                            // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_LEVEL_CONTRIBUTION_MY_RANKING_CMD
// 0x0080 (0x00A8 - 0x0028)
struct FCommonSource_CG_GUILD_LEVEL_CONTRIBUTION_MY_RANKING_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildLevelContributionRankingInfo m_GuildRankingInfo;                                       // 0x0030(0x0078) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_LEVEL_CONTRIBUTION_RANKING_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_LEVEL_CONTRIBUTION_RANKING_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_GuildLevelContributionRankingInfo> m_arrayRankingInfo;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_LEVEL_CONTRIBUTION_RANKING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_LEVEL_CONTRIBUTION_RANKING_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEMODE_TOTAL_INFO_ACK
// 0x00A0 (0x00C8 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEMODE_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildRaidTotalInfo            m_RaidTotalInfo;                                          // 0x0028(0x0020) (Edit, BlueprintVisible)
	struct FCommonSource_GuildDefenseTotalInfo         m_DefenseTotalInfo;                                       // 0x0048(0x0080) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEMODE_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEMODE_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_LEVEL_CHANGE_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_GUILD_LEVEL_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_GuildLevel;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildContribution;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_CONTRIBUTION_RANKING_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_CONTRIBUTION_RANKING_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildContributionRankingInfo> m_arrayContributionInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_DONATE_LOCK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_DONATE_LOCK_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EDonateLock             m_DonateLock;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_DONATE_LOCK_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_DONATE_LOCK_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_DONATE_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_GUILD_DONATE_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RemainDonateCount;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_Contribution;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildContribution;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildCoin;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_DONATE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_DONATE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EDonateType             m_DonateType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_EXPEL_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_EXPEL_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_EXPEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_EXPEL_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_EXPEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_EXPEL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_APPLY_WAITTING_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_APPLY_WAITTING_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildApplyWaitingInfo> m_arrayApplyWaitingInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_APPLY_WAITTING_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_APPLY_WAITTING_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_APPLY_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_APPLY_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_CHANGE_GUILD_INFO_ACK
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_GUILD_CHANGE_GUILD_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Comment;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_RankingIntroduction;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildJoinType          m_JoinType;                                               // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayGuildTendencyIndex;                                // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_OpenChattingUrl;                                        // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_APPLY_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_APPLY_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildApplyInfo>        m_arrayApplyInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_RemainApplyCount;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_CHANGE_GUILD_INFO_SYN
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_GUILD_CHANGE_GUILD_INFO_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Comment;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_RankingIntroduction;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInputInfo            m_GuildMarkInfo;                                          // 0x0048(0x000C) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildJoinType          m_JoinType;                                               // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	TArray<int>                                        m_arrayGuildTendencyIndex;                                // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_OpenChattingUrl;                                        // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_CHANGE_NOTICE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_CHANGE_NOTICE_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Notice;                                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_CHANGE_JOB_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_CHANGE_JOB_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_CHANGE_NOTICE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_CHANGE_NOTICE_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Notice;                                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_CHANGE_JOB_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_CHANGE_JOB_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_PrevGuildJob;                                           // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_CHANGE_JOB_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_CHANGE_JOB_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_WITHDRAW_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_WITHDRAW_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_WITHDRAW_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_WITHDRAW_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_WITHDRAW_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_WITHDRAW_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_APPLY_CANCEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_APPLY_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_APPLY_CANCEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_APPLY_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_APPLY_ACCEPT_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_APPLY_ACCEPT_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAccept;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_APPLY_ACCEPT_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_APPLY_ACCEPT_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAccept;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_AUTO_JOIN_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_AUTO_JOIN_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildLevel;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_AUTO_JOIN_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_AUTO_JOIN_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_JOIN_CMD
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_GUILD_JOIN_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildMemberInfo               m_GuildMemberInfo;                                        // 0x0028(0x0058) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_JOIN_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_JOIN_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildLevel;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_DISBAND_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_DISBAND_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_DISBAND_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_DISBAND_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_JOIN_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_JOIN_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_DISBAND_CHECK_DOING_AUCTION_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_DISBAND_CHECK_DOING_AUCTION_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_DISBAND_CHECK_DOING_AUCTION_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_DISBAND_CHECK_DOING_AUCTION_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_HasDoingAuction;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_CREATE_CHECK_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_CREATE_CHECK_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_CREATE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_CREATE_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsInsertContribution;                                   // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_CREATE_CHECK_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_CREATE_CHECK_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_CREATE_SYN
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_GUILD_CREATE_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildMarkInputInfo            m_GuildMarkInfo;                                          // 0x0028(0x000C) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     m_Comment;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildJoinType          m_GuildJoinType;                                          // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayGuildTendencyIndex;                                // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_InsertContributeItemSerial;                             // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_NAME_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_NAME_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_NAME_CHECK_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_NAME_CHECK_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_NAME_CHECK_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_NAME_CHECK_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildListInfo>         m_arrayGuildInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsNextPage;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_LIST_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_LIST_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsNextPage;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_MEMBER_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_MEMBER_LIST_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildMemberSortType    m_MemberSortType;                                         // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAscendingOrder;                                       // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002B(0x0001) MISSED OFFSET
	int                                                m_MemberCount;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GuildMemberInfo>       m_arrayGuildMemberInfo;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_MEMBER_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_MEMBER_LIST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildMemberSortType    m_MemberSortType;                                         // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAscendingOrder;                                       // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_INFO_CMD
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_GUILD_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FCommonSource_GuildSimpleInfo               m_GuildInfo;                                              // 0x0030(0x0048) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildJoinType          m_GuildJoinType;                                          // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_TOTAL_INFO_ACK
// 0x0148 (0x0170 - 0x0028)
struct FCommonSource_CG_GUILD_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildInfo                     m_GuildInfo;                                              // 0x0028(0x00C0) (Edit, BlueprintVisible)
	struct FCommonSource_GuildMemberInfo               m_MyGuildMemberInfo;                                      // 0x00E8(0x0058) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GuildMemberInfo>       m_arrayGuildMemberInfo;                                   // 0x0140(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_AttendContribution;                                     // 0x0150(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AttendCoin;                                             // 0x0154(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RemainDonateCount;                                      // 0x0158(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DonateLock;                                             // 0x0159(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x015A(0x0002) MISSED OFFSET
	float                                              m_RemainGuildRaiderDestroyTime;                           // 0x015C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNoticeChanged;                                        // 0x0160(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOnlyInfo;                                             // 0x0161(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0162(0x0006) MISSED OFFSET
	int64_t                                            m_LastChangedGuildNameTime;                               // 0x0168(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_TOTAL_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsOnlyInfo;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildNetResult         m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_SEARCH_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_SEARCH_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildListInfo>         m_arrayGuildList;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_NAME_CHANGE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_NAME_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_SEARCH_LIST_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_SEARCH_LIST_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_ACCEPT_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_ACCEPT_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_HostileGuildDBKey;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAccept;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_APPLY_CANCEL_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_APPLY_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAllianceState     m_AllianceState;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	int64_t                                            m_HostileGuildDBKey;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_APPLY_CANCEL_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_APPLY_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_HostileGuildDBKey;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_APPLY_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_APPLY_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_HostileGuildDBKey;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_APPLY_ACK
// 0x0088 (0x00B0 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_APPLY_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildAllianceInfo             m_GuildHostileRemoveApplyInfo;                            // 0x0030(0x0070) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGuildAllianceState     m_AllianceState;                                          // 0x00A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x00A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_STATE_CHANGE_CMD
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_STATE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildAllianceSimpleInfo       m_GuildAllianceSimpleInfo;                                // 0x0030(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAllianceState     m_AllianceState;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_HOSTILE_ADD_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_HOSTILE_ADD_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_HostileGuildDBKey;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_HOSTILE_ADD_ACK
// 0x0078 (0x00A0 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_HOSTILE_ADD_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildAllianceInfo             m_GuildHostileInfo;                                       // 0x0030(0x0070) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_REMOVE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_REMOVE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAllianceState     m_AllianceState;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_REMOVE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_REMOVE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_APPLY_LIST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_APPLY_LIST_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_GuildAllianceInfo>     m_arrayGuildAllianceApplyInfo;                            // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsNextPage;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_APPLY_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_APPLY_LIST_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_ACCEPT_ACK
// 0x0078 (0x00A0 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_ACCEPT_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildAllianceInfo             m_GuildAllianceInfo;                                      // 0x0030(0x0070) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_ACCEPT_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_ACCEPT_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAccept;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_APPLY_CANCEL_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_APPLY_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAllianceState     m_AllianceState;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_APPLY_CANCEL_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_APPLY_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_CASTLEWAR_GUILD_ALLIANCE_APPLY_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_CASTLEWAR_GUILD_ALLIANCE_APPLY_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_APPLY_ACK
// 0x0078 (0x00A0 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_APPLY_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildAllianceInfo             m_GuildAllianceApplyInfo;                                 // 0x0030(0x0070) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_APPLY_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_APPLY_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_LIST_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_LIST_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildAllianceSimpleList> m_arrayGuildAlliance;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_LIST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_LIST_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAllianceType      m_GuildAllianceType;                                      // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_GuildAllianceInfo>     m_arrayGuildAllianceInfo;                                 // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentCount;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_LIST_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAllianceType      m_GuildAllianceType;                                      // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildAllianceNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_MEMBER_GUILD_MASTER_CHANGE_CMD
// 0x0068 (0x0090 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_MEMBER_GUILD_MASTER_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildAllianceChattingMemberInfo m_GuildAllianceChattingMemberInfo;                        // 0x0030(0x0060) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_DISBAND_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_DISBAND_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_CHANGE_NAME_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_CHANGE_NAME_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildAllianceChattingChannelName;                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_CHANGE_NAME_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_CHANGE_NAME_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_CHANGE_NAME_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_CHANGE_NAME_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildAllianceChattingChannelName;                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_MASTER_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_MASTER_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_MASTER_CHANGE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_MASTER_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_MASTER_CHANGE_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_MASTER_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_WITHDRAW_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_WITHDRAW_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_WITHDRAW_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_WITHDRAW_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_WITHDRAW_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_WITHDRAW_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_EXPELLED_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_EXPELLED_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_TargetGuildDBKey;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_EXPELLED_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_EXPELLED_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_TargetGuildDBKey;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_EXPELLED_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_EXPELLED_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_TargetGuildDBKey;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLY_ACCEPT_RESPONSE_CMD
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLY_ACCEPT_RESPONSE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildAllianceChattingChannelMemberList m_GuildAllianceChattingChannelMemberList;                 // 0x0028(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLY_RESPONSE_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLY_RESPONSE_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ResponseGuildDBKey;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RequestGuildDBKey;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAccept;                                               // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_ACCEPT_CMD
// 0x00A8 (0x00D0 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_ACCEPT_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAccept;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildAllianceChattingChannelInfo m_GuildAllianceChattingChannelInfo;                       // 0x0030(0x0040) (Edit, BlueprintVisible)
	struct FCommonSource_GuildAllianceChattingMemberInfo m_GuildAllianceChattingMemberInfo;                        // 0x0070(0x0060) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_ACCEPT_ACK
// 0x0078 (0x00A0 - 0x0028)
struct FCommonSource_CG_WORLD_GUILD_ALLIANCE_HOSTILE_REMOVE_ACCEPT_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildAllianceInfo             m_GuildAllianceInfo;                                      // 0x0030(0x0070) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_ACCEPT_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_ACCEPT_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ResponseGuildDBKey;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RequestGuildDBKey;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAccept;                                               // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_ACCEPT_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_ACCEPT_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAccept;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLY_CANCEL_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLY_CANCEL_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLY_CANCEL_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLY_CANCEL_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLY_CANCEL_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLY_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLY_CMD
// 0x00F8 (0x0120 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLY_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildAllianceChattingChannelInfo m_GuildAllianceChattingChannelInfo;                       // 0x0028(0x0040) (Edit, BlueprintVisible)
	struct FCommonSource_GuildAllianceChattingApplyInfo m_GuildAllianceChattingApplyInfo;                         // 0x0068(0x00B8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLY_ACK
// 0x00B8 (0x00E0 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLY_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildAllianceChattingApplyInfo m_GuildAllianceChattingApplyInfo;                         // 0x0028(0x00B8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_GUILD_ALLIANCE_LIST_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_GUILD_ALLIANCE_LIST_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAllianceType      m_GuildAllianceType;                                      // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_FindGuildDisplayInfo>  m_arrayFindGuildDisplayInfo;                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentCount;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_GUILD_ALLIANCE_LIST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_GUILD_ALLIANCE_LIST_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAllianceType      m_GuildAllianceType;                                      // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0032(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0033(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_FIND_GUILD_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_FIND_GUILD_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_FindGuildDisplayInfo>  m_arrayFindGuildDisplayInfo;                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_FIND_GUILD_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_FIND_GUILD_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_CHANNEL_ENTER_CMD
// 0x00A0 (0x00C8 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_CHANNEL_ENTER_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildAllianceChattingChannelInfo m_GuildAllianceChattingChannelInfo;                       // 0x0028(0x0040) (Edit, BlueprintVisible)
	struct FCommonSource_GuildAllianceChattingMemberInfo m_GuildAllianceChattingMemberInfo;                        // 0x0068(0x0060) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_CHANNEL_CREATE_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_CHANNEL_CREATE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildAllianceChattingChannelInfo m_GuildAllianceChattingChannelInfo;                       // 0x0028(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_CHANNEL_CREATE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_CHANNEL_CREATE_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuildAllianceChattingChannelName;                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_CHANNEL_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_CHANNEL_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildAllianceChattingChannelMemberList> m_ArrayGuildAllianceChattingChannelMemberList;            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_CHANNEL_LIST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_CHANNEL_LIST_SYN : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayGuildAllianceChattingChannelIdx;                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLYLIST_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLYLIST_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildAllianceChattingApplyInfo> m_arraySendApplyList;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildAllianceChattingApplyInfo> m_arrayReceiveApplyList;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLYLIST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLYLIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildAllianceChattingApplyInfo> m_arraySendApplyList;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildAllianceChattingApplyInfo> m_arrayReceiveApplyList;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLYLIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLYLIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildAllianceChattingNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_APPLY_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_APPLY_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAllianceChattingChannelIdx;                        // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ApplyGuildDBKey;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_CONTRIBUTOR_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_CONTRIBUTOR_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildMemberSimpleInfo> m_arrayGuildMemberSimpleInfo;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_CONTRIBUTOR_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_CONTRIBUTOR_LIST_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAuctionDBKey;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ALLIANCE_CHATTING_CHANNEL_LIST_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ALLIANCE_CHATTING_CHANNEL_LIST_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildAllianceChattingChannelMemberList> m_ArrayGuildAllianceChattingChannelMemberList;            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_FAILED_ITEM_RETURN_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_FAILED_ITEM_RETURN_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_FAILED_ITEM_RETURN_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_FAILED_ITEM_RETURN_SYN : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayGuildAuctionDBKey;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_FAILCASH_RETURN_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_FAILCASH_RETURN_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ReturnCash;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_FAILCASH_RETURN_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_FAILCASH_RETURN_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_ALLOT_MEMBER_CHECK_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_ALLOT_MEMBER_CHECK_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_ALLOT_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_ALLOT_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildMemberInfo>       m_arrayMemberInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ExpectAllotCash;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_ALLOT_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_ALLOT_LIST_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAuctionDBKey;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_END_CMD
// 0x0080 (0x00A8 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_END_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildAuctionSaleInfo          m_SaleInfo;                                               // 0x0028(0x0080) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_BIDREWARD_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_BIDREWARD_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BidPrice;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EResourceType           m_RewardResourceType;                                     // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                m_RewardIndex;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCount;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildAuctionRewardReason m_RewardReason;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                m_MonsterIndex;                                           // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_ALLOT_MEMBER_CHECK_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_ALLOT_MEMBER_CHECK_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_HasAllotAuction;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_BIDFAILCASH_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_BIDFAILCASH_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BidFailCash;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_BID_CMD
// 0x0088 (0x00B0 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_BID_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PreviousBidPlayerDBKey;                                 // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildAuctionSaleInfo          m_SaleInfo;                                               // 0x0030(0x0080) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_BID_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_BID_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_BID_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_BID_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAuctionDBKey;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BidPrice;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_APPOINT_PLAYER_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_APPOINT_PLAYER_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildAuctionDBKey;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_AppointPlayerDBKey;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AppointPrice;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_APPOINT_PLAYER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_APPOINT_PLAYER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_START_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_START_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildAuctionSaleInfo>  m_arrayGuildAuctionSaleInfo;                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_START_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_START_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_LIST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildAuctionSaleInfo>  m_arraySaleInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_BidFailCash;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCanBid;                                               // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x003D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	int                                                m_CastleTaxRate;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_START_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_START_SYN : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayGuildAuctionDBKey;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_LIST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_AUCTION_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_AUCTION_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildAuctionNetResult  m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BOSS_DEAD_NOTIFY_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BOSS_DEAD_NOTIFY_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_SpawnIndex;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BOSS_SPAWN_NOTIFY_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BOSS_SPAWN_NOTIFY_CMD : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arraySpawnIndex;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsNewSpawn;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_TELEPORT_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_TELEPORT_CMD : public FCommonSource_BaseProtocol
{
	float                                              m_TeleportCoolTime;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_ALTAR_RESET_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_ALTAR_RESET_CMD : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayAltarObjectSerial;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_WAY_POINT_MOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_WAY_POINT_MOVE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_NaviVolumeAreaIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BOX_MINIMAPINFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BOX_MINIMAPINFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildBattlefieldBoxMinimapInfo> m_arrayMinimapPlayerInfo;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_WAY_POINT_MOVE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_WAY_POINT_MOVE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_MINIMAPINFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_MINIMAPINFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildBattlefieldMinimapInfo> m_arrayMinimapPlayerInfo;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_RESULT_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_RESULT_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildBattlefieldScoreInfo> m_arrayScoreInfoRank;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayWinRewardInfo;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildBattlefieldRankerDetailInfo> m_arrayRankerDetailInfo;                                  // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_ENTERMEMBER_APPEAR_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_ENTERMEMBER_APPEAR_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildBattlefieldMemberInfo    m_EnterMemberInfo;                                        // 0x0028(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_ENTERMEMBER_DISAPPEAR_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_ENTERMEMBER_DISAPPEAR_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_SCORE_INFO_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_SCORE_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildBattlefieldScoreInfo     m_Score;                                                  // 0x0028(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_ENTERMEMBER_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_ENTERMEMBER_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildBattlefieldMemberInfo> m_arrayEnterMemberInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_BOX_RETURN_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_BOX_RETURN_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BoxObjectKey;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerObjectSerial;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_INTERACT_TIME_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_INTERACT_TIME_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_InteractObjectSerial;                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerObjectSerial;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_InRangeMemeberCount;                                    // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsInRange;                                              // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_INTERACT_STATE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_INTERACT_STATE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_InteractObjectSerial;                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerObjectSerial;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EInteractActionState    m_ActionState;                                            // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_ALTAR_INFO_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_ALTAR_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_AltarObjectNumberTag;                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AltarObjectSerial;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_AltarObjectPos;                                         // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_BOX_RECALL_REMAIN_TIME_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_BOX_RECALL_REMAIN_TIME_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BoxObjectKey;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_BOX_INFO_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_BOX_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BoxObjectKey;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BoxObjectSerial;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerObjectSerial;                                     // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildBattlefieldBoxState m_BoxState;                                               // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildBattlefieldBoxGrade m_BoxGrade;                                               // 0x0035(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FVector                                     m_BoxObjectPos;                                           // 0x0048(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_TOTAL_INFO_CMD
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildBattlefieldBattleState m_BattleState;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RewardInfo>            m_arrayReturnRewardInfo;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildBattlefieldScoreInfo> m_arrayScore;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MatchingGroupIdx;                                       // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MatchingGroupSubIdx;                                    // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_TeleportCoolTime;                                       // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_PARTICIPATION_REGISTER_DELETE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_PARTICIPATION_REGISTER_DELETE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildBattlefieldNetResult m_Result;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_PARTICIPATION_REGISTER_DELETE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_PARTICIPATION_REGISTER_DELETE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_PARTICIPATION_REGISTER_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_PARTICIPATION_REGISTER_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildBattlefieldNetResult m_Result;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_PARTICIPATION_MEMBER_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_PARTICIPATION_MEMBER_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayGuildParticipationMemberList;                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_PARTICIPATION_MEMBER_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_PARTICIPATION_MEMBER_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_PARTICIPATION_MEMBER_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_PARTICIPATION_MEMBER_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_RESULT_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_RESULT_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_DBGuildBattlefieldResult> m_arrayResult;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_PARTICIPATION_REGISTER_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_PARTICIPATION_REGISTER_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_RESULT_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_RESULT_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_TOTAL_INFO_CMD
// 0x00C8 (0x00F0 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_SeasonIdx;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildBattlefieldState  m_State;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildBattlefieldMatchingResultType m_MatchingResult;                                         // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int64_t                                            m_ParticipationRegisterStartTime;                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ParticipationRegisterEndTime;                           // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_BattleReadyTime;                                        // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_BattleStartTime;                                        // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_BattleEndTime;                                          // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildBattlefieldGuildInfo     m_MyGuildInfo;                                            // 0x0058(0x0068) (Edit, BlueprintVisible)
	int64_t                                            m_MyParticipationPlayer;                                  // 0x00C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GuildBattlefieldGuildInfo> m_arrayMatchingList;                                      // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildBattlefieldPlayerInfo> m_arrayEnterPlayerList;                                   // 0x00D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ReentryWaitTime;                                        // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildBattlefieldBattleState m_MyGuildBattleState;                                     // 0x00EC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00ED(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_TOTAL_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_BATTLE_STATE_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_BATTLE_STATE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildBattlefieldBattleState m_BattleState;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_STATE_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_STATE_INFO_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildBattlefieldState  m_State;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDoingGuild;                                           // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsChange;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_BATTLEFIELD_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_BATTLEFIELD_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildBattlefieldNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_DOING_PLAYER_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_DOING_PLAYER_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildDungeonPlayerInfo> m_arrayDefensePlayerInfo;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_DROP_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_DROP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MonsterSerial;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCoin;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_SKIP_DIFFICULTY_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_SKIP_DIFFICULTY_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Difficulty;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_SKIP_DIFFICULTY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_SKIP_DIFFICULTY_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Difficulty;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_RANKING_INFO_ACK
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_RANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildDungeonRankingInfo       m_MyDefenseRankingInfo;                                   // 0x0028(0x0038) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GuildDungeonRankingInfo> m_arrayDefenseRankingInfo;                                // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_RANKING_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_RANKING_INFO_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Page;                                                   // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_LOSE_CMD
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_LOSE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildDefenseRewardInfo        m_DefenseRewardInfo;                                      // 0x0028(0x0058) (Edit, BlueprintVisible)
	bool                                               m_IsTimout;                                               // 0x0080(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsReset;                                                // 0x0081(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0082(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_WIN_CMD
// 0x0080 (0x00A8 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_WIN_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_TotalGuildCoin;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TotalGuildGold;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TotalGuildContribution;                                 // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_TotalReward;                                            // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildDefenseRewardInfo        m_DefenseRewardInfo;                                      // 0x0048(0x0058) (Edit, BlueprintVisible)
	int                                                m_MinDifficulty;                                          // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxDifficulty;                                          // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_SUMMONVEHICLE_BUY_ACK
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_SUMMONVEHICLE_BUY_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_SummonPlaceNum;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildDefenseBlessSummonInfo   m_DefenseBlessSummonInfo;                                 // 0x0030(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_SUMMONVEHICLE_BUY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_SUMMONVEHICLE_BUY_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_SummonPlaceNum;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RequestSlotNum;                                         // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_SUMMONVEHICLE_LIST_REFRESH_ACK
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_SUMMONVEHICLE_LIST_REFRESH_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_SummonPlaceNum;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_IsRefresh;                                              // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FCommonSource_GuildDefenseBlessSummonInfo   m_DefenseBlessSummonInfo;                                 // 0x0030(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_SUMMONVEHICLE_LIST_REFRESH_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_SUMMONVEHICLE_LIST_REFRESH_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_SummonPlaceNum;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_BLESS_DELETE_ACK
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_BLESS_DELETE_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RequestPlaceNum;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildDefenseBlessSummonInfo   m_DefenseBlessSummonInfo;                                 // 0x0030(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_BLESS_DELETE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_BLESS_DELETE_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RequestPlaceNum;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_BLESS_BUY_ACK
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_BLESS_BUY_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RequestPlaceNum;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_GuildDefenseBlessSummonInfo   m_DefenseBlessSummonInfo;                                 // 0x0030(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_BLESS_BUY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_BLESS_BUY_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RequestPlaceNum;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RequestSlotNum;                                         // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_BLESS_LIST_REFRESH_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_BLESS_LIST_REFRESH_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RequestPlaceNum;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_BLESSSUMMON_INFO_ACK
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_BLESSSUMMON_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildDefenseBlessSummonInfo   m_DefenseBlessSummonInfo;                                 // 0x0028(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_BLESSSUMMON_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_BLESSSUMMON_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_WAVE_SPEEDCHANGE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_WAVE_SPEEDCHANGE_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_CurrentWaveSpeed;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_WAVE_SPEEDCHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_WAVE_SPEEDCHANGE_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_WaveSpeed;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_NEXTWAVE_START_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_NEXTWAVE_START_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_NEXTWAVE_START_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_NEXTWAVE_START_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_BLESSSUMMON_CHANGE_CMD
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_BLESSSUMMON_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildDefenseBlessSummonInfo   m_BlessSummonInfo;                                        // 0x0028(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_CHANGE_CMD
// 0x0078 (0x00A0 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildDefenseDoingInfo         m_DefenseDoingInfo;                                       // 0x0028(0x0078) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_MOVE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_MOVE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_PREV_CONTRIBUTION_INFO_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_PREV_CONTRIBUTION_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildDungeonContributionInfo> m_arrayContributionInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_ClearTime;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_MOVE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_MOVE_ACK : public FCommonSource_BaseProtocol
{
	float                                              m_RemainBattleTime;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_PREV_CONTRIBUTION_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_PREV_CONTRIBUTION_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_DOING_INFO_ACK
// 0x00A8 (0x00D0 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_DOING_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildDefenseDoingInfo         m_DefenseDoingInfo;                                       // 0x0028(0x0078) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GuildDungeonContributionInfo> m_arrayContributionInfo;                                  // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildDungeonPlayerInfo> m_arrayDefensePlayerInfo;                                 // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsDungeonOpen;                                          // 0x00C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	float                                              m_RemainBattleTime;                                       // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SkipDifficulty;                                         // 0x00C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_SkipState;                                              // 0x00C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAlreadyOccupyPlayer;                                  // 0x00CA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x00CB(0x0001) MISSED OFFSET
	int                                                m_OccupyPlayerEnterCount;                                 // 0x00CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_DOING_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_DOING_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildDefenseNetResult  m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_COMPLETE_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_COMPLETE_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildItemMakeCompleteInfo> m_arrayGuildItemMakeCompleteInfo;                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CH_GUILD_ITEM_MAKE_CHATTING_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CH_GUILD_ITEM_MAKE_CHATTING_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildChatType          m_GuildChatType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_ItemIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	int64_t                                            m_CreateTime;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_REWARD_HISTORY_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_REWARD_HISTORY_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_Slot;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildItemMakeInfoSerial;                                // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GuildItemMakeRewardHistory> m_arrayGuildItemMakeRewardHistory;                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_REWARD_HISTORY_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_REWARD_HISTORY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_Slot;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildItemMakeInfoSerial;                                // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_METERIAL_ADD_HISTORY_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_METERIAL_ADD_HISTORY_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_Slot;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildItemMakeInfoSerial;                                // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_GuildItemMakeMeterialAddHistory> m_arrayGuildItemMakeMeterialAddHistory;                   // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_METERIAL_ADD_HISTORY_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_METERIAL_ADD_HISTORY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_Slot;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildItemMakeInfoSerial;                                // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_REWARD_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_REWARD_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_GuildItemMakeInfoIndex;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_REWARD_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_REWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_Slot;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_GuildItemMakeMemberReward> m_arrayGuildItemMakeMemberReward;                         // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_IMMEDIATELY_COMPLETE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_IMMEDIATELY_COMPLETE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_IMMEDIATELY_COMPLETE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_IMMEDIATELY_COMPLETE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_Slot;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_METERIAL_ADD_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_METERIAL_ADD_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_Contribution;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildContribution;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildCoin;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_METERIAL_ADD_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_METERIAL_ADD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_Slot;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_ItemSerial;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_EnchantStep;                                            // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                m_ItemCount;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDDEFENSE_BLESS_LIST_REFRESH_ACK
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_GUILDDEFENSE_BLESS_LIST_REFRESH_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RequestPlaceNum;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_IsRefresh;                                              // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FCommonSource_GuildDefenseBlessSummonInfo   m_DefenseBlessSummonInfo;                                 // 0x0030(0x0050) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_CANCEL_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_CANCEL_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_CANCEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_Slot;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_REGISTER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_REGISTER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_REGISTER_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_REGISTER_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_Slot;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildItemMakeInfoIndex;                                 // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_FAVORIT_CHANGE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_FAVORIT_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_GuildItemMakeInfoIndex;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFavorit;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_FAVORIT_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_FAVORIT_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_GuildItemMakeInfoIndex;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFavorit;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_FAVORIT_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_FAVORIT_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayGuildItemMakeInfoIndex;                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_HISTORY_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_HISTORY_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildItemMakeHistory>  m_arrayGuildItemMakeHistory;                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_HISTORY_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_HISTORY_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_FAVORIT_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_FAVORIT_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_COUNT_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_COUNT_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildItemMakeWeekCount> m_arrayGuildItemMakeWeekCount;                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildItemMakeCastleWarSeasonCount> m_arrayGuildItemMakeCastleWarSeasonCount;                 // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_COUNT_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_COUNT_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_CASTLEWAR_SEASONCOUNT_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_CASTLEWAR_SEASONCOUNT_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildItemMakeCastleWarSeasonCount> m_arrayGuildItemMakeCastleWarSeasonCount;                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_CASTLEWAR_SEASONCOUNT_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_CASTLEWAR_SEASONCOUNT_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_WEEKCOUNT_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_WEEKCOUNT_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildItemMakeWeekCount> m_arrayGuildItemMakeWeekCount;                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_WEEKCOUNT_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_WEEKCOUNT_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_DAYCOUNT_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_DAYCOUNT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_DayCount;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_INFO_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildItemMakeSlotInfo> m_arrayGuildItemMakeSlotInfo;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_DayCount;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CastleWarContinueDefenseWinCount;                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_INFO_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildItemMakeSlotInfo         m_GuildItemMakeSlotInfo;                                  // 0x0028(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_ITEM_MAKE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_ITEM_MAKE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildItemMakeNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILDRAID_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildRaidDoingInfo            m_RaidDoingInfo;                                          // 0x0028(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILDRAID_DOING_PLAYER_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILDRAID_DOING_PLAYER_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_GuildDungeonPlayerInfo> m_arrayRaidPlayerInfo;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILDRAID_SKIP_DIFFICULTY_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDRAID_SKIP_DIFFICULTY_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Difficulty;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_SKIP_DIFFICULTY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDRAID_SKIP_DIFFICULTY_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Difficulty;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_RANKING_INFO_ACK
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_GUILDRAID_RANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildDungeonRankingInfo       m_MyRaidRankingInfo;                                      // 0x0028(0x0038) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GuildDungeonRankingInfo> m_arrayRaidRankingInfo;                                   // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILDRAID_RANKING_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDRAID_RANKING_INFO_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Page;                                                   // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_LOSE_CMD
// 0x0068 (0x0090 - 0x0028)
struct FCommonSource_CG_GUILDRAID_LOSE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildRaidRewardInfo           m_RaidRewardInfo;                                         // 0x0028(0x0068) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILDRAID_WIN_CMD
// 0x0090 (0x00B8 - 0x0028)
struct FCommonSource_CG_GUILDRAID_WIN_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_TotalGuildCoin;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TotalGuildGold;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TotalGuildContribution;                                 // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_TotalReward;                                            // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildRaidRewardInfo           m_RaidRewardInfo;                                         // 0x0048(0x0068) (Edit, BlueprintVisible)
	int                                                m_MinDifficulty;                                          // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxDifficulty;                                          // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILDRAID_APPLIED_BUFF_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILDRAID_APPLIED_BUFF_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildRaidVoteOption>   m_arrayRaidVoteOptions;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILDRAID_VOTE_RESULT_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILDRAID_VOTE_RESULT_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildRaidVoteOptionDetail> m_arrayRaidVoteOptionDetails;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILDRAID_VOTE_RESULT_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILDRAID_VOTE_RESULT_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILDRAID_VOTE_CHANGE_OPTIONS_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILDRAID_VOTE_CHANGE_OPTIONS_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_RemainBuffChangeCount;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_GuildRaidVoteOption>   m_arrayRaidVoteOptions;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILDRAID_VOTE_CHANGE_OPTIONS_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILDRAID_VOTE_CHANGE_OPTIONS_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILDRAID_VOTE_SUBMIT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILDRAID_VOTE_SUBMIT_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildRaidVoteOption           m_RaidVotedOptions;                                       // 0x0028(0x000C) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_VOTE_SUBMIT_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILDRAID_VOTE_SUBMIT_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILDRAID_VOTE_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILDRAID_VOTE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VoterCount;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RemainChangeCount;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_GuildRaidVoteOption>   m_arrayRaidVoteOptions;                                   // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILDRAID_VOTE_SUBMIT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDRAID_VOTE_SUBMIT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SelectIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_MOVE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDRAID_MOVE_ACK : public FCommonSource_BaseProtocol
{
	float                                              m_RemainBattleTime;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_MOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDRAID_MOVE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ParticipantCount;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILDRAID_PREV_CONTRIBUTION_INFO_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILDRAID_PREV_CONTRIBUTION_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildDungeonContributionInfo> m_arrayContributionInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_ClearTime;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_PREV_CONTRIBUTION_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDRAID_PREV_CONTRIBUTION_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_DOING_INFO_ACK
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_GUILDRAID_DOING_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildDungeonContributionInfo> m_arrayContributionInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildDungeonPlayerInfo> m_arrayRaidPlayerInfo;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsDungeonOpen;                                          // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              m_RemainBattleTime;                                       // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SkipDifficulty;                                         // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_SkipState;                                              // 0x0051(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAlreadyOccupyPlayer;                                  // 0x0052(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0053(0x0001) MISSED OFFSET
	int                                                m_OccupyPlayerEnterCount;                                 // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsVoted;                                                // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEntered;                                              // 0x0059(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x005A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_DOING_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILDRAID_DOING_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILDRAID_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILDRAID_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildRaidNetResult     m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_INTERACT_STATE_INFO_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_INTERACT_STATE_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_InteractObjectIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EInteractActionState    m_ActionState;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_FIRST_REWARD_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_FIRST_REWARD_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_RewardBuffPoint;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_SEASON_INFO_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_SEASON_INFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SeasonNum;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildStrongholdSeasonState m_GuildStrongholdSeasonState;                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	int64_t                                            m_NextSeasonStartTime;                                    // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_SEASON_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_SEASON_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_SEASON_NOTIFY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_SEASON_NOTIFY_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildStrongholdSeasonState m_GuildStrongholdSeasonState;                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_BATTLE_DETAIL_RESULT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_BATTLE_DETAIL_RESULT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_BATTLE_DETAIL_RESULT_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_BATTLE_DETAIL_RESULT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_GuildStrongholdRankingPlayerInfo> m_arrayGuildStrongholdRankingPlayerInfo;                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_BATTLE_DETAIL_RESULT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_BATTLE_DETAIL_RESULT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_BATTLE_RESULT_CMD
// 0x0168 (0x0190 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_BATTLE_RESULT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0048(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	int64_t                                            m_AttackerGuildDBKey;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_AttackerGuildName;                                      // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_AttackerGuildMarkInfo;                                  // 0x0078(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	int64_t                                            m_WinGuildDBKey;                                          // 0x0090(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BattleTime;                                             // 0x0098(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FCommonSource_RankingPlayerInfo             m_MvpRankingPlayerInfo_Team1;                             // 0x00A0(0x0070) (Edit, BlueprintVisible)
	struct FCommonSource_RankingPlayerInfo             m_MvpRankingPlayerInfo_Team2;                             // 0x0110(0x0070) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GuildStrongholdRankingPlayerInfo> m_arrayGuildStrongholdRankingPlayerInfo;                  // 0x0180(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_GUARD_COUNT_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_GUARD_COUNT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_OtherGuildDBKey;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxCount;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Count;                                                  // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_DEAD_COUNT_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_DEAD_COUNT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_DeadCount;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_AROUND_NOTIFY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_AROUND_NOTIFY_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildStrongholdNotiType m_GuildStrongholdNotiType;                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_StrongholdInfoIndex;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_REMAINTIME_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_REMAINTIME_ACK : public FCommonSource_BaseProtocol
{
	float                                              m_RemainTime;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_NOTIFY_CMD
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_NOTIFY_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGuildStrongholdNotiType m_GuildStrongholdNotiType;                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_StrongholdInfoIndex;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_OtherGuildDBKey;                                        // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_OtherGuildName;                                         // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayOtherGuildDBKey;                                   // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FString>                             m_arrayOtherGuildName;                                    // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_RemainTime;                                             // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_PROCLAIM_TIME_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_PROCLAIM_TIME_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildStrongholdProclaimTimeInfo> m_arrayGuildStrongholdProclaimTimeInfo;                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_PROCLAIM_TIME_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_PROCLAIM_TIME_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_PROCLAIM_WAR_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_PROCLAIM_WAR_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_PROCLAIM_WAR_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_PROCLAIM_WAR_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_StrongholdInfoIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildStrongholdDestructionModeState m_DestructionMode;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_SURRENDER_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_SURRENDER_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_GIVEUP_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_GIVEUP_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_GIVEUP_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_GIVEUP_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_UPGRADE_BUFF_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_UPGRADE_BUFF_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_OrderIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BuffLevel;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_SURRENDER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_SURRENDER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_UPGRADE_BUFF_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_UPGRADE_BUFF_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_OrderIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_DEFENSER_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_DEFENSER_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_GUILD_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_GUILD_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_MAP_INFO_CMD
// 0x0078 (0x00A0 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_MAP_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildStrongholdMapInfo        m_GuildStrongholdMapInfo;                                 // 0x0028(0x0078) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_MAP_INFO_LIST_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_MAP_INFO_LIST_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GuildStrongholdMapInfo> m_arrayGuildStrongholdMapInfo;                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildStrongholdProclaimTimeInfo> m_arrayGuildStrongholdProclaimTimeInfo;                   // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_GUILD_INFO_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_GUILD_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GuildStrongholdGuildInfo      m_GuildStrongholdGuildInfo;                               // 0x0028(0x0050) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_GuildStrongholdAllianceGuildInfo> m_arrayAllianceGuildStrongholdInfo;                       // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_GUILD_STRONGHOLD_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_GUILD_STRONGHOLD_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EGuildStrongholdNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_IMPRINT_TEST_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_IMPRINT_TEST_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsSpecialize;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_TestCount;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ImprintOptionProb>     m_arrayTotalProb;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ImprintOptionProb>     m_arrayOptionProb;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ImprintOptionProb>     m_arrayGradeProb;                                         // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ImprintOptionProb>     m_arrayBuffTypeProb;                                      // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ImprintOptionProb>     m_arrayTargetProb;                                        // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_SuccessCount;                                           // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_IMPRINT_SPECIALIZE_SKILLINFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_IMPRINT_SPECIALIZE_SKILLINFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ImprintInfo>           m_arrayImprintInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_IMPRINT_SPECIALIZE_DECIDE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_IMPRINT_SPECIALIZE_DECIDE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ImprintInfo                   m_ImprintInfo;                                            // 0x0028(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_IMPRINT_SPECIALIZE_DECIDE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_IMPRINT_SPECIALIZE_DECIDE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ImprintStep;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_IMPRINT_SPECIALIZE_CHANGE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_IMPRINT_SPECIALIZE_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ImprintInfo                   m_ImprintInfo;                                            // 0x0028(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_IMPRINT_SPECIALIZE_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_IMPRINT_SPECIALIZE_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ImprintStep;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_IMPRINT_PRESET_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_IMPRINT_PRESET_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Preset;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSpecialize;                                           // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_IMPRINT_LOCK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_IMPRINT_LOCK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ImprintStep;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSpecialize;                                           // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_IMPRINT_LOCK_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_IMPRINT_LOCK_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ImprintInfo>           m_arrayImprintInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_IMPRINT_OPTION_CHANGE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_IMPRINT_OPTION_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ImprintInfo                   m_ImprintInfo;                                            // 0x0028(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_IMPRINT_OPTION_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_IMPRINT_OPTION_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ImprintStep;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_IMPRINT_COMPLETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_IMPRINT_COMPLETE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EImprintOptionGrade     m_CompleteOptionGrade;                                    // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSpecialize;                                           // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                m_ImprintStep;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_IMPRINT_STEP_OPEN_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_IMPRINT_STEP_OPEN_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_NextImprintStep;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EImprintOptionGrade     m_GroupGrade;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSpecialize;                                           // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	struct FCommonSource_ImprintInfo                   m_NextImprintStepInfo;                                    // 0x0030(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_IMPRINT_TEST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_IMPRINT_TEST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsSpecialize;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_ImprintStep;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_IMPRINT_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_IMPRINT_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_IMPRINT_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_IMPRINT_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EImprintNetResult       m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_CHEAT_BUF_RESELECT_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_CHEAT_BUF_RESELECT_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Floor;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_BuffOptionGroup;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_InfinityDungeonBuffInfo> m_arrayBuffs;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_IMPRINT_TOTAL_INFO_ACK
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_IMPRINT_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ImprintInfo>           m_arrayImprintInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<FCommonSource_CommonSource_EImprintOptionGrade> m_arrayCompleteGrade;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_Preset;                                                 // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_ImprintInfo>           m_arraySpecializeInfo;                                    // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<FCommonSource_CommonSource_EImprintOptionGrade> m_arraySpecializeCompleteGrade;                           // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_SpecializePreset;                                       // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_CHEAT_BUF_RESELECT_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_CHEAT_BUF_RESELECT_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_CHEAT_BUF_RESELECT_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_CHEAT_BUF_RESELECT_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Floor;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<int>                                        m_ArrayIndexes;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRenew;                                                // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_BUFF_TEST_ACK
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_BUFF_TEST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_TestCount;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_InfinityDungeonBuffInfo> m_arrayTotalInfo;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_InfinityDungeonBuffInfo> m_arrayOptionInfo;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_InfinityDungeonBuffInfo> m_arrayGradeInfo;                                         // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_IMPRINT_PRESET_CHANGE_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_IMPRINT_PRESET_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ImprintInfo>           m_arrayImprintInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<FCommonSource_CommonSource_EImprintOptionGrade> m_arrayCompleteGrade;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_Preset;                                                 // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSpecialize;                                           // 0x0049(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x004A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_BUFF_TEST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_BUFF_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BuffMainGroup;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OptionGroup;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_AREAPASS_RESET_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_AREAPASS_RESET_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_BUFF_CHANGE_COUNT_RESET_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_BUFF_CHANGE_COUNT_RESET_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_BuffChangeCount;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_RESETCOUNT_RESET_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_RESETCOUNT_RESET_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ResetCount;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_FAIL_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_FAIL_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Floor;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_SELECT_BUFF_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_SELECT_BUFF_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_InfinityDungeonBuffInfo> m_arrayBuffs;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsNextAreaPass;                                         // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_SELECT_BUFF_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_SELECT_BUFF_SYN : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_ArrayIndexes;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_Floor;                                                  // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EInfinityDungeonRewardType m_RewardType;                                             // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_RESET_BUFF_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_RESET_BUFF_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RemainResetCount;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_InfinityDungeonBuffInfo> m_arrayBuffs;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_RESET_BUFF_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_RESET_BUFF_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EInfinityDungeonRewardType m_RewardType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_WIN_CMD
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_WIN_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ClearFloor;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_Ranking;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardGold;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_FirstRewardInfo;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_GuaranteedRewardInfo;                                   // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_BuffOptionGroup;                                        // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_InfinityDungeonBuffInfo> m_arrayBuffs;                                             // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_BestClearFloor;                                         // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ResetCount;                                             // 0x0071(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_START_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_START_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_ENTER_CMD
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_ENTER_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Floor;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_SettingIndex;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_SurvivalRemainTime;                                     // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RemainMonsters;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<int>                                        m_BossIndexes;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_InfinityDungeonBuffInfo> m_arrayBuffs;                                             // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_PARTY_MOVE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_PARTY_MOVE_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Floor;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_PARTY_MOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_PARTY_MOVE_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Floor;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_APPLIED_BUF_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_APPLIED_BUF_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_InfinityDungeonBuffInfo> m_arrayAppliedBuff;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_APPLIED_BUF_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_APPLIED_BUF_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_RANKING_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_RANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MyRanking;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyScore;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_InfinityDungeonRankingInfo> m_RakingInfo;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_RANKING_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_RANKING_INFO_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextRank;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_CHALLENGER_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_CHALLENGER_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_InfinityDungeonChallengerInfo> m_arrayChallengerInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_CHALLENGER_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_CHALLENGER_INFO_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Floor;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_SEAON_RESET_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_SEAON_RESET_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_RESET_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_RESET_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ClearFloor;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MaxClearFloor;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAreaPass;                                             // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_SEAON_REWARD_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_SEAON_REWARD_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardItem;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_RESET_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_RESET_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsCashReset;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_RESET_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_RESET_INFO_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ResetCurCount;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ResetMaxCount;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                m_CashResetFloor;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CashResetValue;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_FLOOR_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_FLOOR_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_InfinityDungeonFloorInfo      m_FloorInfo;                                              // 0x0028(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_FLOOR_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_FLOOR_INFO_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Floor;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_AREAPASS_INFO_ACK
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_AREAPASS_INFO_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsCanDoing;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAreaPassNotify;                                       // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAreaPassReward;                                       // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_PrevClearFloor;                                         // 0x002B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_AreaPassFloor;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_AreaPassStartFloor;                                     // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectionFloor;                                         // 0x002E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	int                                                m_SelectionBuffsOptionGrup;                               // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_InfinityDungeonBuffInfo> m_arraySectionBuffs;                                      // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_InfinityDungeonRewardInfo> m_arrayClearRewards;                                      // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_ResetCount;                                             // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_RESET_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_RESET_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_INFO_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_InfinityDungeonInfo>   m_arrayFloorInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentSeasonGroup;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_INFO_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Floor;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_CURRENT_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_CURRENT_INFO_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ClearFloor;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MaxFloor;                                               // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_BestClearFloor;                                         // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002B(0x0001) MISSED OFFSET
	int                                                m_CurrentSeasonGroup;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_TOTAL_INFO_ACK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_InfinityDungeonDoingInfo      m_DoingInfo;                                              // 0x0028(0x0028) (Edit, BlueprintVisible)
	bool                                               m_IsOpen;                                                 // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAreaHide;                                             // 0x0051(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAreaNotify;                                           // 0x0052(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0053(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EInfinityDungeonNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_INTEGRATED_PRESET_APPLY_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PLAYER_INTEGRATED_PRESET_APPLY_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ApplyPresetIndex;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_INTEGRATED_PRESET_APPLY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PLAYER_INTEGRATED_PRESET_APPLY_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ApplyPresetIndex;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_INTEGRATED_PRESET_CHANGE_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PLAYER_INTEGRATED_PRESET_CHANGE_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_IntegratedPresetActiveInfo    m_IntegratedPresetActiveInfo;                             // 0x0028(0x0009) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_INTEGRATED_PRESET_CHANGE_INFO_CMD
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_PLAYER_INTEGRATED_PRESET_CHANGE_INFO_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ChangePresetIndex;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FCommonSource_IntegratedPresetInfo          m_IntegratedPresetInfo;                                   // 0x002C(0x0030) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_INTEGRATED_PRESET_CHANGE_INFO_SYN
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_PLAYER_INTEGRATED_PRESET_CHANGE_INFO_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_IntegratedPresetActiveInfo    m_IntegratedPresetActiveInfo;                             // 0x0028(0x0009) (Edit, BlueprintVisible)
	unsigned char                                      m_ChangePresetIndex;                                      // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	struct FCommonSource_IntegratedPresetInfo          m_IntegratedPresetInfo;                                   // 0x0034(0x0030) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_INTEGRATED_PRESET_TOTAL_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_INTEGRATED_PRESET_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_INTEGRATED_PRESET_TOTAL_INFO_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_PLAYER_INTEGRATED_PRESET_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ActivePresetIndex;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_IntegratedPresetInfo>  m_arrayIntegratedPresetInfo;                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_IntegratedPresetActiveInfo    m_IntegratedPresetActiveInfo;                             // 0x0040(0x0009) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_INTEGRATED_PRESET_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_INTEGRATED_PRESET_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_INTEGRATED_PRESET_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_INTEGRATED_PRESET_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EIntegratedPresetNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_PORTAL_MOVE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INTERACT_PORTAL_MOVE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_PORTAL_MOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INTERACT_PORTAL_MOVE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_TREASUREBOX_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_INTERACT_TREASUREBOX_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_TreasureBoxInfo>       m_arrayTreasureBoxInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_INTERACT_BUFF_GET_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INTERACT_BUFF_GET_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_BUFF_GET_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INTERACT_BUFF_GET_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INFINITYDUNGEON_AREAPASS_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_INFINITYDUNGEON_AREAPASS_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_INTERACT_DONE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_INTERACT_DONE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_PlayerSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_InteractObjectSerial;                                   // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsGreatSuccess;                                         // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDone;                                                 // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_STATE_CHANGE_BRD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_INTERACT_STATE_CHANGE_BRD : public FCommonSource_BaseProtocol
{
	int                                                m_InteractSerial;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EInteractState          m_InteractState;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                m_InteractingPetIndex;                                    // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerSerial;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSendAround;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_CANCEL_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INTERACT_CANCEL_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_PlayerSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPet;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_CANCEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_INTERACT_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsPet;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_START_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_INTERACT_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_PlayerSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_InteractSerial;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPet;                                                  // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	struct FVector                                     m_StopPos;                                                // 0x0034(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_InteractMotionType;                                     // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_START_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_INTERACT_START_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_InteractSerial;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_StopPos;                                                // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPet;                                                  // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_INTERACT_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_InteractInfo>          m_arrayInteractInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_INTERACT_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_INTERACT_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_INTERACT_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_INTERACT_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EInteractNetResult      m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_INTERACT_PLAYER_SELECT_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_INTERACT_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_InteractInfo>          m_arrayInteractInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_EXCLUSION_CLASS_TYPE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_EXCLUSION_CLASS_TYPE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_EXCLUSION_CLASS_TYPE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_EXCLUSION_CLASS_TYPE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EClassType              m_ExclusionClassType;                                     // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_SOUL_TEST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ITEM_SOUL_TEST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ITEM_SOUL_TEST_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_SOUL_TEST_CMD : public FCommonSource_BaseProtocol
{
	TArray<unsigned char>                              m_Result;                                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_SOUL_TEST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_SOUL_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_GroupID;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CheckEnchantLevel;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TryCnt;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_EXCLUSION_CLASS_TYPE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_EXCLUSION_CLASS_TYPE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EClassType              m_ExclusionClassType;                                     // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_BUY_TEST_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_BUY_TEST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ReturnCount;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ChangedBCCount;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_BUY_TEST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ITEM_BUY_TEST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ITEM_SELL_TEST_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_SELL_TEST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChangedCount;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ReturnBCCount;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_BUY_TEST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_BUY_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RequestCount;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_SELL_TEST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ITEM_SELL_TEST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ITEM_MAP_REWARD_TEST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_MAP_REWARD_TEST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RandomTestResult>      m_arrayRandomTestResult;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentCount;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_MAP_REWARD_TEST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_MAP_REWARD_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_DropGroupID;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlanDropGroupID;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartCount;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_SELL_TEST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_SELL_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RequestCount;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_COMPOSE_TEST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_COMPOSE_TEST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RandomTestResult>      m_arrayRandomTestResult;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentCount;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_COMPOSE_TEST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_COMPOSE_TEST_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EResourceType           m_ComposeType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_Grade;                                                  // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                m_TestCount;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartCount;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_WORKMANSHIP_TEST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ITEM_WORKMANSHIP_TEST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaterialIndex;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ItemWorkmanShipTest>   m_arrayItemWorkmanShip;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentCount;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_WORKMANSHIP_TEST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_WORKMANSHIP_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaterialIndex;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartCount;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_ENCHANT_TEST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ITEM_ENCHANT_TEST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ItemEnchantTest>       m_arrayItemEnchantTest;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentCount;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_ENCHANT_TEST_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_ENCHANT_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaterialIndex;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_BaseEnchantStep;                                        // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsMaximum;                                              // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	int                                                m_TestCount;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartCount;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_USE_TEST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_USE_TEST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RandomTestResult>      m_arrayRandomTestResult;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentCount;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_USE_TEST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_USE_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestCount;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartCount;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_DROP_TEST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_DROP_TEST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RandomTestResult>      m_arrayRandomTestResult;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentCount;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_DROP_TEST_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_DROP_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_DropGroupID;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlanDropGroupID;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartCount;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SpawnIndex;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_COLLECTION_HIDE_DEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_COLLECTION_HIDE_DEL_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_CollectionIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_COLLECTION_HIDE_DEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_COLLECTION_HIDE_DEL_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_CollectionIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_COLLECTION_HIDE_ADD_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_COLLECTION_HIDE_ADD_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_CollectionIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_GUILDNAME_CHANGE_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_GUILDNAME_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_GUILDNAME_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_GUILDNAME_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_PLAYERNAME_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_PLAYERNAME_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_PLAYERNAME_CHANGE_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_PLAYERNAME_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_CUSOMIZING_CHANGE_ACK
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_ITEM_CUSOMIZING_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x0028(0x0038) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_ITEM_CUSOMIZING_CHANGE_SYN
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_ITEM_CUSOMIZING_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x0030(0x0038) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_ITEM_GET_NOTICE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_GET_NOTICE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AreaNameCode;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_MAKE_FAVORITE_DEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_MAKE_FAVORITE_DEL_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_MakeIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_MAKE_FAVORITE_ADD_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_MAKE_FAVORITE_ADD_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_MakeIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_MAKE_FAVORITE_ADD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_MAKE_FAVORITE_ADD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MakeIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_MAKE_FAVORITE_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_MAKE_FAVORITE_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayMakeIndex;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_MAKE_FAVORITE_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ITEM_MAKE_FAVORITE_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ITEM_PET_RANDOM_OPTION_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ITEM_PET_RANDOM_OPTION_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaterialSerial;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayOptionParam;                                       // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_PET_RANDOM_OPTION_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_PET_RANDOM_OPTION_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaterialSerial;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_WORKMANSHIP_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ITEM_WORKMANSHIP_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaterialSerial;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayOptionParam;                                       // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_WORKMANSHIP_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_WORKMANSHIP_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaterialSerial;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_BATCHDISMANTLE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_BATCHDISMANTLE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ItemRewardInfo>        m_arrayItemRewardInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_DismantleCount;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_MAKE_FAVORITE_DEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_MAKE_FAVORITE_DEL_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MakeIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_DISMANTLE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_DISMANTLE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ItemRewardInfo>        m_arrayItemRewardInfo;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_BATCHDISMANTLE_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ITEM_BATCHDISMANTLE_SYN : public FCommonSource_BaseProtocol
{
	TArray<FCommonSource_CommonSource_EItemGrade>      arrayItemGrade;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    arrayItemSerial;                                          // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_DISMANTLE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_DISMANTLE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_MAKE_DETAIL_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_MAKE_DETAIL_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_ItemMakeInfoDetail            m_ItemMakeInfoDetail;                                     // 0x002C(0x000C) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_ITEM_MAKE_DETAIL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_MAKE_DETAIL_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_EventIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MakeIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_EXPIRE_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_EXPIRE_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ItemExpireInfo>        m_arrayItemExpireInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_MAKE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ITEM_MAKE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_MakeIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ItemMakeInfo>          m_arrayItemMake;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_ItemRewardInfo                m_SubMaterialReward;                                      // 0x0040(0x0008) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_ITEM_MAKE_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ITEM_MAKE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MakeIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ItemMakeMaterialInfo>  m_arrayReplaceMaterialInfo;                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_EventIndex;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_OPTION_RANKING_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_OPTION_RANKING_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EItemType               m_ItemType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_RandomOptionRankingInfo> m_arrayRandomOptionRanking;                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_OPTION_RANKING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_OPTION_RANKING_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_LOCK_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_LOCK_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_LOCK_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_LOCK_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_DELETE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_DELETE_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_DELETE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_DELETE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_USE_ACK
// 0x00B0 (0x00D8 - 0x0028)
struct FCommonSource_CG_ITEM_USE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_GameItemInfo                  m_GameItemInfo;                                           // 0x0028(0x0090) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x00B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_CurHp;                                                  // 0x00C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EItemNetResult          m_ErrorCode;                                              // 0x00D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00D5(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_USE_SYN
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_ITEM_USE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SelectIndex;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ClientCaseSerial;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MainTargetSerial;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_ExtraPos;                                               // 0x0040(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_CONGRATULATE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_CONGRATULATE_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_CONGRATULATE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_CONGRATULATE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_CONGRATULATE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ITEM_CONGRATULATE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ITEM_BOAST_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ITEM_BOAST_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ItemIndex;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_BOAST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_ITEM_BOAST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_ITEM_BOAST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_BOAST_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_ENCHANT_CHANGE_ACK
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_ITEM_ENCHANT_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ItemChangeSerial;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RemainChangeCount;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayRandomOption;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ItemSoulInfo>          m_arrayItemSoul;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_ENCHANT_CHANGE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_ENCHANT_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ItemChangeSerial;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_ENCHANT_BUNDLE_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_ITEM_ENCHANT_BUNDLE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ItemEnchant>           m_ArrayItemEnchant;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ItemRewardInfo>        m_ArrayFailReward;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayRandomOption;                                      // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ItemSoulInfo>          m_arrayItemSoul;                                          // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_ENCHANT_BUNDLE_SYN
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_ITEM_ENCHANT_BUNDLE_SYN : public FCommonSource_BaseProtocol
{
	TArray<int64_t>                                    m_arrayItemSerial;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_ArrayMaterialSerial;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_TargetEnchantStep;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_ENCHANT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_ENCHANT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EItemType               m_ItemType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                m_EnchantStep;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_ENCHANT_ACK
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_ITEM_ENCHANT_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaterialSerial;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AddEnchantStep;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemIndex;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EnchantStep;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSuccess;                                              // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_ItemRewardInfo>        m_ArrayFailReward;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayRandomOption;                                      // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ItemSoulInfo>          m_arrayItemSoul;                                          // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_ENCHANT_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_ENCHANT_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaterialSerial;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_SLOT_EXPAND_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_SLOT_EXPAND_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EStorageType            m_StorageType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TotExpandCount;                                         // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_CHANGE_CMD
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_ITEM_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERewardReason           m_RewardReason;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLookChanged;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_GameItemInfo>          m_arrayItemInfo;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsItemAdd;                                              // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                m_ReasonIndex;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayItemRandomOptionInfo;                              // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ItemSoulInfo>          m_arrayItemSoulInfo;                                      // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ERewardSubReason        m_RewardSubReason;                                        // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_SALE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_SALE_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arraySaleItemIndex;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_SaleGold;                                               // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_SALE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_SALE_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ItemCountInfo>         m_arraySaleItem;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_MOVE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_MOVE_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsToWareHouse;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLockChange;                                           // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_SLOT_EXPAND_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_SLOT_EXPAND_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EStorageType            m_StorageType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ExpandCount;                                            // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_MOVE_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_MOVE_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsToWareHouse;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_ItemCountInfo>         m_arrayMoveItem;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_EQUIP_PRESET_MEMO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_EQUIP_PRESET_MEMO_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_EquipMemo;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_EQUIP_PRESET_MEMO_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_ITEM_EQUIP_PRESET_MEMO_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_EquipMemo;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_EQUIP_PRESET_CHANGE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_EQUIP_PRESET_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EEquipPreset            m_NextPreset;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<int64_t>                                    m_arrayEquipItem;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_EQUIP_PRESET_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_EQUIP_PRESET_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EEquipPreset            m_NextPreset;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_UNEQUIP_ALL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_UNEQUIP_ALL_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_UNEQUIP_ALL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_UNEQUIP_ALL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_EQUIP_APPEAR_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_EQUIP_APPEAR_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_AppearItemInfo>        m_arrayAppearItem;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_EQUIP_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_EQUIP_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_EQUIP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_EQUIP_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ItemSerial;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_ITEM_TOTAL_INFO_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EStorageType            m_StorageType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_TOTAL_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EStorageType            m_StorageType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ITEM_TOTAL_INFO_CMD
// 0x0068 (0x0090 - 0x0028)
struct FCommonSource_CG_ITEM_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_InventoryExpandCount;                                   // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EEquipPreset            m_EquipPreset;                                            // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<struct FString>                             m_arrayEquipMemo;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GameItemInfo>          m_arrayItemInfo;                                          // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ItemUseCoolTimeInfo>   m_arrayItemUseCoolTime;                                   // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_OptionParamInfo>       m_arrayRandomOptionInfo;                                  // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayItemCollectionHide;                                // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ItemSoulInfo>          m_arrayItemSoulInfo;                                      // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_ITEM_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EItemNetResult          m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ABUSE_REPORT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ABUSE_REPORT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ReadLetterSlotIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ABUSE_REPORT_SYN
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_ABUSE_REPORT_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Sender;                                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_SenderPlayerDBkey;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Title;                                                  // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Message;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EAbuseReportType        m_ReportType;                                             // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EAbuseType              m_AbuseType;                                              // 0x0061(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0062(0x0002) MISSED OFFSET
	int                                                m_ReadLetterSlotIndex;                                    // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_PLAYER_UNBAN_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_PLAYER_UNBAN_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_BanSlotIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_PLAYER_UNBAN_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_PLAYER_UNBAN_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BanSlotIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_PLAYER_BAN_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_PLAYER_BAN_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_UNLOCK_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_UNLOCK_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_UnLockLetterSlotIndex;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_PLAYER_BAN_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_PLAYER_BAN_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_LetterMessageBanInfo          m_BanInfo;                                                // 0x0028(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_UNLOCK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_UNLOCK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_UnLockLetterSlotIndex;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_LOCK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_LOCK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_LockLetterSlotIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_READ_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_READ_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ReadLetterSlotIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_LOCK_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_LOCK_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_LockLetterSlotIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_READ_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_READ_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ReadLetterSlotIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_DELETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_DELETE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_DeleteLetterSlotIndex;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_DELETE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_DELETE_SYN : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayDeleteLetterSlotIndex;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_DELETE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_DELETE_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayDeleteLetterSlotIndex;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_RECEIVE_CMD
// 0x0088 (0x00B0 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_RECEIVE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_LetterMessageInfo             m_MessageLetterInfo;                                      // 0x0028(0x0080) (Edit, BlueprintVisible)
	int                                                m_DeleteLetterSlotIndex;                                  // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_WRITE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_WRITE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ELetterType             m_LetterType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_WRITE_SYN
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_WRITE_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RecvPlayerName;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Title;                                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Message;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_RecvGuildDBKey;                                         // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_RecvGuildName;                                          // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_WRITE_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_WRITE_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FString>                             m_arrayFriendInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_GuildLetterInfo>       m_arrayGuildInfo;                                         // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_WRITE_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_WRITE_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LETTER_MESSAGE_LIST_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_LETTER_MESSAGE_LIST_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_LetterMessageInfo>     m_arrayMessageInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LetterMessageBanInfo>  m_arrayMessageBanInfo;                                    // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MessageSendCount;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_REFRESH_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LETTER_REFRESH_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LETTER_ALL_DELETE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LETTER_ALL_DELETE_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayLetterDBSlot;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_ALL_DELETE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LETTER_ALL_DELETE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LETTER_DELETE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_LETTER_DELETE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_LetterInfo>            m_arrayLetterInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsExpired;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_DELETE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_DELETE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_LetterDBSlot;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_DELETE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_DELETE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_LetterDBSlot;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_ADD_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LETTER_ADD_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_LetterInfo>            m_arrayLetterInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_REFRESH_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LETTER_REFRESH_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LETTER_PLATFORM_DELETE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LETTER_PLATFORM_DELETE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FString>                             m_arrayMessageId;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_PLATFORM_DELETE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LETTER_PLATFORM_DELETE_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FString>                             m_arrayMessageId;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_PLATFORM_REWARD_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_LETTER_PLATFORM_REWARD_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FString>                             m_arrayMessageId;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_PLATFORM_REWARD_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LETTER_PLATFORM_REWARD_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FString>                             m_arrayMessageId;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_ALL_REWARD_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_LETTER_ALL_REWARD_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_LetterInfo>            m_arrayDeleteLetterInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LetterInfo>            m_arrayRewardLetterInfo;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_ALL_REWARD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_ALL_REWARD_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsReceive;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_REWARD_ACK
// 0x00A0 (0x00C8 - 0x0028)
struct FCommonSource_CG_LETTER_REWARD_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_LetterInfo                    m_LetterInfo;                                             // 0x0028(0x00A0) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_LETTER_ITEM_EXPIRE_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LETTER_ITEM_EXPIRE_INFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_ExpireTime;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LETTER_REWARD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_REWARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_LetterDBSlot;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_ITEM_EXPIRE_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LETTER_ITEM_EXPIRE_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ItemIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LETTER_TOTAL_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LETTER_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LETTER_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LETTER_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LETTER_TOTAL_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LETTER_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_LetterInfo>            m_arrayLetterInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LETTER_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_LETTER_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ELetterNetResult        m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LINK_BOARD_LOCK_ACK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_LINK_BOARD_LOCK_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_LinkBoardInfo                 m_LinkBoardInfo;                                          // 0x0028(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_LINK_BOARD_LOCK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LINK_BOARD_LOCK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LINK_TEST_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_LINK_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_LinkBoardIndex;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LinkSlotNumber;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<unsigned char>                              m_arrEmblemIndex;                                         // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LINK_CHARGE_SUMMON_COUNT_ACK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_LINK_CHARGE_SUMMON_COUNT_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_LinkBoardInfo                 m_LinkBoardInfo;                                          // 0x0028(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_LINK_TEST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_LINK_TEST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_LinkBoardIndex;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_LinkSlotNumber;                                         // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                m_TestCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_LinkTestSlotInfo>      m_arrayLinkTestSlotInfo;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LINK_PRESET_CHANGE_ACK
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_LINK_PRESET_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Preset;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_LinkBoardInfo>         m_arrayLinkBoardInfo;                                     // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LinkSlotInfo>          m_arrayLinkSlotInfo;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LinkBindInfo>          m_arrayLinkBindInfo;                                      // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LinkSlotBindInfo>      m_arrayLinkSlotBindInfo;                                  // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LINK_CHARGE_SUMMON_COUNT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LINK_CHARGE_SUMMON_COUNT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LINK_BOARD_INIT_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_LINK_BOARD_INIT_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_LinkBoardInfo                 m_LinkBoardInfo;                                          // 0x0028(0x0030) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_LinkSlotInfo>          m_arrayLinkSlotInfo;                                      // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LinkBindInfo>          m_arrayLinkBindInfo;                                      // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LinkSlotBindInfo>      m_arrayLinkSlotBindInfo;                                  // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LINK_PRESET_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LINK_PRESET_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Preset;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LINK_BOARD_INIT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LINK_BOARD_INIT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LINK_OPTION_CHANGE_ACK
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_LINK_OPTION_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_LinkBoardInfo                 m_LinkBoardInfo;                                          // 0x0028(0x0030) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_LinkSlotInfo>          m_arrayLinkSlotInfo;                                      // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LinkBindInfo>          m_arrayLinkBindInfo;                                      // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LinkSlotBindInfo>      m_arrayLinkSlotBindInfo;                                  // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LINK_OPTION_CHANGE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LINK_OPTION_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_BoardIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_UnlockOrder;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsUseCash;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LINK_BOARD_ACTIVE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LINK_BOARD_ACTIVE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_LinkBoardInfo>         m_arrayLinkBoardInfo;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LINK_TOTAL_INFO_ACK
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_LINK_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Preset;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_LinkBoardInfo>         m_arrayLinkBoardInfo;                                     // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LinkSlotInfo>          m_arrayLinkSlotInfo;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LinkBindInfo>          m_arrayLinkBindInfo;                                      // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_LinkSlotBindInfo>      m_arrayLinkSlotBindInfo;                                  // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_ITEM_COLLECTION_HIDE_ADD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ITEM_COLLECTION_HIDE_ADD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_CollectionIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LINK_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_LINK_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ELinkNetResult          m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LINK_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LINK_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_ORDER_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_ORDER_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PlayerOrder>           m_arrayPlayerOrder;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_ORDER_CHANGE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_ORDER_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey1;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey2;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_DELETE_CANCEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_DELETE_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_DELETE_CANCEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_DELETE_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_DELETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_DELETE_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_DELETE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_DELETE_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_DeleteTime;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDeleteReservation;                                    // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_DELETE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_DELETE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_DELETE_VALID_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_DELETE_VALID_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerDeleteDelayHour;                                  // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsGuildJoinApply;                                       // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_DELETE_VALID_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_DELETE_VALID_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_CREATE_ACK
// 0x0120 (0x0148 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_CREATE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PlayerSimpleInfo              m_PlayerSimpleInfo;                                       // 0x0028(0x0120) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_CREATE_SYN
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_CREATE_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_CustomizingPreset;                                      // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	TArray<unsigned char>                              m_arrayCustomizingType;                                   // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayCustomizingColor;                                  // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayCustomizingGauge;                                  // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_MAP_ENTER_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_MAP_ENTER_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_PrevMapIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EnterMapIndex;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_MAP_ENTER_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_MAP_ENTER_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.UserResource
// 0x0030
struct FCommonSource_UserResource
{
	int64_t                                            m_Cash;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_Gold;                                                   // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Mileage;                                                // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CashMileage;                                            // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SealedEssence;                                          // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	int64_t                                            m_BuyCash;                                                // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_FreeCash;                                               // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.UserShopPoint
// 0x0008
struct FCommonSource_UserShopPoint
{
	int                                                m_DuelShopPoint;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildShopPoint;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.UserExtendInfo
// 0x0008
struct FCommonSource_UserExtendInfo
{
	bool                                               m_IsReviewDisplay;                                        // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_WarehouseExpandCount;                                   // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_OfflineHuntingRemainTime;                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.UserInfo
// 0x0050
struct FCommonSource_UserInfo
{
	unsigned char                                      m_Newbie;                                                 // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_VipLevel;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_VipExp;                                                 // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_UserResource                  m_UserResource;                                           // 0x0010(0x0030) (Edit, BlueprintVisible)
	struct FCommonSource_UserShopPoint                 m_UserShopPoint;                                          // 0x0040(0x0008) (Edit, BlueprintVisible)
	struct FCommonSource_UserExtendInfo                m_UserExtendInfo;                                         // 0x0048(0x0008) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_SELECT_ACK
// 0x01D8 (0x0200 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_SELECT_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_UserInfo                      m_UserInfo;                                               // 0x0028(0x0050) (Edit, BlueprintVisible)
	struct FCommonSource_PlayerDetailInfo              m_PlayerInfo;                                             // 0x0078(0x0150) (Edit, BlueprintVisible)
	struct FCommonSource_OfflineHuntingInfo            m_OfflineHuntingInfo;                                     // 0x01C8(0x0028) (Edit, BlueprintVisible)
	int64_t                                            m_ChatTime;                                               // 0x01F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x01F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsResurrect;                                            // 0x01F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x01FA(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOBBY_PLAYER_SELECT_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LOBBY_PLAYER_SELECT_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ControllerFlag;                                         // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOBBY_ENTER_ACK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_LOBBY_ENTER_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_PlayerSlotExtendCount;                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_PlayerSimpleInfo>      m_arrayPlayerSimpleInfo;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsOfflineHunting;                                       // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOnlyLobbyEnter;                                       // 0x0042(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0043(0x0005) MISSED OFFSET
	struct FString                                     m_ServerGroupName;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LOBBY_ENTER_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOBBY_ENTER_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOBBY_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_LOBBY_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ELobbyNetResult         m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_AGREE_PRIVATEINFORMATION_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_AGREE_PRIVATEINFORMATION_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ELoginNetResult         m_Result;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_AGREE_PRIVATEINFORMATION_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_AGREE_PRIVATEINFORMATION_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_DELETE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_DELETE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ELoginNetResult         m_Result;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_DELETE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_DELETE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_KAKAO_AUTH_CONFIRM_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_KAKAO_AUTH_CONFIRM_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ELoginNetResult         m_Result;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_KAKAO_AUTH_CONFIRM_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_KAKAO_AUTH_CONFIRM_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_SecondPassword;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_KAKAO_AUTH_START_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_KAKAO_AUTH_START_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ELoginNetResult         m_Result;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_KAKAO_AUTH_START_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_KAKAO_AUTH_START_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_UPDATE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_UPDATE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ELoginNetResult         m_Result;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_UPDATE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_UPDATE_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_SecondPassword;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_AUTH_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_AUTH_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ELoginNetResult         m_Result;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SecondPasswordFailCount;                                // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	float                                              m_SecondPasswordLimitedRemainTime;                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_AUTH_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_AUTH_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_SecondPassword;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_LOAD_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_LOAD_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAgreePrivateInformation;                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSecondPassword;                                       // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SecondPasswordFailCount;                                // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002B(0x0001) MISSED OFFSET
	float                                              m_SecondPasswordLimitedRemainTime;                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_CREATE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_CREATE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ELoginNetResult         m_Result;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SECONDPASSWORD_CREATE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CL_LOGIN_SECONDPASSWORD_CREATE_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_SecondPassword;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_KAKAO_ADVANCE_RESERVATION_FIND_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CL_LOGIN_KAKAO_ADVANCE_RESERVATION_FIND_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PlayerName;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_KAKAO_ADVANCE_RESERVATION_FIND_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CL_LOGIN_KAKAO_ADVANCE_RESERVATION_FIND_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerId;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_PLAYERLIST_ORDER_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_PLAYERLIST_ORDER_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PlayerOrder>           m_arrayPlayerOrder;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_PLAYERLIST_ORDER_CHANGE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_PLAYERLIST_ORDER_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey1;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey2;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_PLAYERLIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_PLAYERLIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ServerPlayerInfo>      m_arrayPlayerInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_PLAYERLIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_PLAYERLIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CL_LOGIN_WITHDRAW_CANCEL_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CL_LOGIN_WITHDRAW_CANCEL_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CL_LOGIN_WITHDRAW_CANCEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_WITHDRAW_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_UserDBKey;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LOGIN_WITHDRAW_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LOGIN_WITHDRAW_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LOGIN_WITHDRAW_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LOGIN_WITHDRAW_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LOGIN_WITHDRAW_CHECK_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOGIN_WITHDRAW_CHECK_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_IsOtherDevicePlaying;                                   // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOGIN_WITHDRAW_CHECK_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LOGIN_WITHDRAW_CHECK_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_DeviceID;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LOGIN_FACEBOOK_UNLINK_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LOGIN_FACEBOOK_UNLINK_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LOGIN_FACEBOOK_UNLINK_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LOGIN_FACEBOOK_UNLINK_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LOGIN_LINK_LOAD_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOGIN_LINK_LOAD_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EAccountType            m_AccountType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOGIN_LINK_LOAD_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_LOGIN_LINK_LOAD_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EAccountType            m_AccountType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_AccountID;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LOGIN_LINK_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_LOGIN_LINK_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EAccountType            m_AccountType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_IsOtherAccount;                                         // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FString                                     m_NickName;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_UserLevel;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_IsLinkAlready;                                          // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOGIN_KAKAO_LINK_SYN
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_LOGIN_KAKAO_LINK_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_AccessToken;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PlayerId;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EAccountType            m_AccountType;                                            // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOGIN_GOOGLE_LINK_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_LOGIN_GOOGLE_LINK_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_ServerAuthCode;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LOGIN_FACEBOOK_LINK_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_LOGIN_FACEBOOK_LINK_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_AccessToken;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_UserID;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_LOGIN_APPLE_LINK_SYN
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_LOGIN_APPLE_LINK_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerId;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_BundleID;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PublicKeyUrl;                                           // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Signature;                                              // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Salt;                                                   // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_Timestamp;                                              // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_LOGIN_OFFLINE_HUNTING_TIME_CHANGED_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOGIN_OFFLINE_HUNTING_TIME_CHANGED_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_OfflineHuntingRemainTime;                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOGIN_OFFLINE_HUNTING_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LOGIN_OFFLINE_HUNTING_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LOGIN_OFFLINE_HUNTING_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LOGIN_OFFLINE_HUNTING_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LOGIN_USER_FORCE_KICK_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_LOGIN_USER_FORCE_KICK_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EForceKick              m_ForceKick;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOGIN_USER_LOGOUT_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_LOGIN_USER_LOGOUT_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_LOGIN_NAK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_LOGIN_NAK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsReconnect;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_RequestProtocol;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ELoginNetResult         m_ErrorCode;                                              // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOGIN_GAMESERVER_RECONNECT_CMD
// 0x0068 (0x0090 - 0x0028)
struct FCommonSource_CG_LOGIN_GAMESERVER_RECONNECT_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PlayerReconnectInfo           m_PlayerReconnectInfo;                                    // 0x0028(0x0068) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_LOGIN_GAMESERVER_AUTH_ACK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_LOGIN_GAMESERVER_AUTH_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsReconnect;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_AccountDBKey;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_UserDBKey;                                              // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_EncodeAccountID;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ObjectSerial;                                           // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ObserverLevel;                                          // 0x0055(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0056(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_LOGIN_GAMESERVER_AUTH_SYN
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_LOGIN_GAMESERVER_AUTH_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsReconnect;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_UserDBKey;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GameAuthSerial;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsRemoteV4;                                             // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	struct FString                                     m_RemoteIP;                                               // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_LastTagNumber;                                          // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDeviceGrade            m_DeviceGrade;                                            // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0055(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0056(0x0002) MISSED OFFSET
	int                                                m_MapIndex;                                               // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_WAIT_CANCEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_WAIT_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SelectServerID;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_WAIT_CANCEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_WAIT_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SelectServerID;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_SELECT_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_SELECT_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_SELECT_REQUEST_CMD
// 0x0068 (0x0090 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_SELECT_REQUEST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_AccountDBKey;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_UserDBKey;                                              // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GameAuthSerial;                                         // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     m_GateServerIP;                                           // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GateServerPort;                                         // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FString                                     m_ChattingServerIP;                                       // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ChattingServerPort;                                     // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsRefund;                                               // 0x0074(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_MarketRefundInfo>      m_arrayMarketRefund;                                      // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsMultiConnectPortCheck;                                // 0x0088(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_SELECT_WAIT_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_SELECT_WAIT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MyWaitingOrder;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_SELECT_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_SELECT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_AccessKey;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_MERGE_FIX_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_MERGE_FIX_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_FixServerID;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_FixCoolTime;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	int64_t                                            m_FixNextTime;                                            // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ServerMergeInfo>       m_arrayServerMergeInfo;                                   // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_MERGE_FIX_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_MERGE_FIX_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_FixServerID;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_AccessKey;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_MERGE_INFO_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_MERGE_INFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_FixServerID;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_FixCoolTime;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	int64_t                                            m_FixNextTime;                                            // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ServerMergeInfo>       m_arrayServerMergeInfo;                                   // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_MERGE_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_MERGE_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_INFO_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_INFO_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ServerChangeInfo>      m_arrayServerInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_LIST_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_LIST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_RecentServerID;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ServerSelectInfo>      m_arrayServerInfo;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ServerAccountInfo>     m_arrayAccountInfo;                                       // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_SERVER_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CL_LOGIN_SERVER_LIST_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_Language;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_ZILONG_AUTH_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CL_LOGIN_ZILONG_AUTH_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_EncodeAccountID;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CL_LOGIN_ZILONG_AUTH_SYN
// 0x0128 (0x0150 - 0x0028)
struct FCommonSource_CL_LOGIN_ZILONG_AUTH_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Opcode;                                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_ChannelId;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Data;                                                   // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Operators;                                              // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_LoginUserInfo                 m_LoginUserInfo;                                          // 0x0068(0x00E8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CL_LOGIN_KAKAO_AUTH_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CL_LOGIN_KAKAO_AUTH_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_EncodeAccountID;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsGoogleLink;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAppleLink;                                            // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFacebookLink;                                         // 0x003A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsKakaoLink;                                            // 0x003B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_KAKAO_AUTH_SYN
// 0x0108 (0x0130 - 0x0028)
struct FCommonSource_CL_LOGIN_KAKAO_AUTH_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_AccessToken;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PlayerId;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_LoginUserInfo                 m_LoginUserInfo;                                          // 0x0048(0x00E8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CL_LOGIN_FACEBOOK_AUTH_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CL_LOGIN_FACEBOOK_AUTH_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_EncodeAccountID;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsGoogleLink;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAppleLink;                                            // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFacebookLink;                                         // 0x003A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsKakaoLink;                                            // 0x003B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_FACEBOOK_AUTH_SYN
// 0x0108 (0x0130 - 0x0028)
struct FCommonSource_CL_LOGIN_FACEBOOK_AUTH_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_AccessToken;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_UserID;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_LoginUserInfo                 m_LoginUserInfo;                                          // 0x0048(0x00E8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CL_LOGIN_APPLE_AUTH_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CL_LOGIN_APPLE_AUTH_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_EncodeAccountID;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsGoogleLink;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAppleLink;                                            // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFacebookLink;                                         // 0x003A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsKakaoLink;                                            // 0x003B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_APPLE_AUTH_SYN
// 0x0140 (0x0168 - 0x0028)
struct FCommonSource_CL_LOGIN_APPLE_AUTH_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PublicKeyUrl;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_Signature;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PlayerId;                                               // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_BundleID;                                               // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_Timestamp;                                              // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Salt;                                                   // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_LoginUserInfo                 m_LoginUserInfo;                                          // 0x0080(0x00E8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CL_LOGIN_GOOGLE_AUTH_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CL_LOGIN_GOOGLE_AUTH_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_EncodeAccountID;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsGoogleLink;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAppleLink;                                            // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFacebookLink;                                         // 0x003A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsKakaoLink;                                            // 0x003B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_GOOGLE_AUTH_SYN
// 0x00F8 (0x0120 - 0x0028)
struct FCommonSource_CL_LOGIN_GOOGLE_AUTH_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_ServerAuthCode;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_LoginUserInfo                 m_LoginUserInfo;                                          // 0x0038(0x00E8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CL_LOGIN_GUEST_AUTH_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CL_LOGIN_GUEST_AUTH_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_EncodeAccountID;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsGoogleLink;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAppleLink;                                            // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFacebookLink;                                         // 0x003A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsKakaoLink;                                            // 0x003B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CL_LOGIN_GUEST_AUTH_SYN
// 0x00F8 (0x0120 - 0x0028)
struct FCommonSource_CL_LOGIN_GUEST_AUTH_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_GuestID;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_LoginUserInfo                 m_LoginUserInfo;                                          // 0x0038(0x00E8) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CL_LOGIN_NAK
// 0x0068 (0x0090 - 0x0028)
struct FCommonSource_CL_LOGIN_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ELoginNetResult         m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EAccountType            m_AccountType;                                            // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	int64_t                                            m_UserDBKey;                                              // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_WithdrawCancelCount;                                    // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	int64_t                                            m_BlockEndDate;                                           // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_BlockRemainTime;                                        // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	int64_t                                            m_WithdrawTime;                                           // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_BlockReason;                                            // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_AccountID;                                              // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EAbuseReportType        m_ReportType;                                             // 0x0088(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_OBSERVER_PORTAL_WARP_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_OBSERVER_PORTAL_WARP_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_OBSERVER_PORTAL_WARP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_OBSERVER_PORTAL_WARP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ChannelIndex;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_OBSERVER_WARP_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_OBSERVER_WARP_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_OBSERVER_WARP_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_OBSERVER_WARP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_MAP_VOID_DUNGEON_STATE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_VOID_DUNGEON_STATE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EVoidDungeonState       m_VoidDungeonState;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_MAP_DONE_TARGET_POINT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_DONE_TARGET_POINT_CMD : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayTargetSpawnIndex;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MAP_FAVORITES_EXCHANGE_ORDER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_FAVORITES_EXCHANGE_ORDER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_FAVORITES_EXCHANGE_ORDER_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_FAVORITES_EXCHANGE_ORDER_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_BaseOrderNo;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetOrderNo;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_FAVORITES_CHECK_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_FAVORITES_CHECK_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_FAVORITES_CHECK_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_MAP_FAVORITES_CHECK_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_MapFavoriteInfo               m_MapFavoriteInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible)
	bool                                               m_IsDelete;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_FAVORITES_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_FAVORITES_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_MapFavoriteInfo>       m_arrayMapFavoriteInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MAP_FAVORITES_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_FAVORITES_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_FAVORITES_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_FAVORITES_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_SOUND_PLAY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_SOUND_PLAY_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_SequenceIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_OBJECT_SPEECH_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_OBJECT_SPEECH_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_SpawnSpeechInfo>       m_arraySpawnSpeechInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MAP_CHANGE_BATTLE_TIME_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_MAP_CHANGE_BATTLE_TIME_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainFreeBattleTime;                                   // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainChargeBattleTime;                                 // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainWorldChargeBattleTime;                            // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RemainFixedChargeBattleTime;                            // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RemainWorldFixedChargeBattleTime;                       // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_MAP_BARRIER_ACTIVE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_MAP_BARRIER_ACTIVE_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_BarrierName;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsActive;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_PORTAL_AREA_CREATE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_PORTAL_AREA_CREATE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PortalInfo>            m_arrayPortalInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MAP_PHASING_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_MAP_PHASING_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_PhasingName;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MAP_CAMERA_MODE_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_CAMERA_MODE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGameCameraMode         m_CameraMode;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_CAMERA_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_CAMERA_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_CameraName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MAP_CUTSCENE_END_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_CUTSCENE_END_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_CUTSCENE_END_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_CUTSCENE_END_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_CutSceneName;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MAP_CUTSCENE_START_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_MAP_CUTSCENE_START_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_CutSceneName;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRealTime;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsStart;                                                // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_AREA_ENTER_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_AREA_ENTER_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_AreaIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_AREA_ENTER_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_AREA_ENTER_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_AreaIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_MAP_REALMWAR_WARP_ENTER_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_MAP_REALMWAR_WARP_ENTER_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWarpType               m_WarpType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FVector                                     m_Pos;                                                    // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Angle;                                                  // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AirVehicleIndex;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_REALMWAR_WARP_ENTER_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_MAP_REALMWAR_WARP_ENTER_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWarpType               m_WarpType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FVector                                     m_Pos;                                                    // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Angle;                                                  // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AirVehicleIndex;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_REALMWAR_WARP_ENTER_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_REALMWAR_WARP_ENTER_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_REALMWAR_WARP_REQUEST_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_MAP_REALMWAR_WARP_REQUEST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWarpType               m_WarpType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FVector                                     m_Pos;                                                    // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Angle;                                                  // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AirVehicleIndex;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_WARP_ENTER_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_MAP_WARP_ENTER_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWarpType               m_WarpType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FVector                                     m_Pos;                                                    // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Angle;                                                  // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AirVehicleIndex;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_WARP_ENTER_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_WARP_ENTER_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_WARP_REQUEST_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_MAP_WARP_REQUEST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWarpType               m_WarpType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FVector                                     m_Pos;                                                    // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Angle;                                                  // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AirVehicleIndex;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_APPEAR_IMAGE_OBJECT_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_MAP_APPEAR_IMAGE_OBJECT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_CastleIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ImagePlayerInfo>       m_arrayImageObject;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MAP_DISAPPEAR_OBJECT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_DISAPPEAR_OBJECT_CMD : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayObjectSerial;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MAP_APPEAR_OBJECT_CMD
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_MAP_APPEAR_OBJECT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ReferencedPlayerSerial;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_AppearNpcInfo>         m_arrayNpcInfo;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_AppearPlayerInfo>      m_arrayPlayerInfo;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_AppearSkillObjectInfo> m_arraySkillObjectInfo;                                   // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_AppearInteractObjectInfo> m_arrayInteractObjectInfo;                                // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MAP_EXIT_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_EXIT_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_EXIT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_EXIT_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsEscape;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_ENTER_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_MAP_ENTER_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_MapSerial;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x003C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LastMapIndex;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_ENTER_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_ENTER_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_ENTER_REQUEST_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_MAP_ENTER_REQUEST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_LookAtAngle;                                            // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_MaxChannelCount;                                        // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ChannelIndex;                                           // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                m_PlayerCount;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWarpType               m_WarpType;                                               // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_MOVE_READY_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_MOVE_READY_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsSuccess;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MapIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DungeonDifficulty;                                      // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_MOVE_READY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_MOVE_READY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_MOVE_READY_REQUEST_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_MOVE_READY_REQUEST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_CHANNEL_MOVE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_CHANNEL_MOVE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_CHANNEL_MOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_CHANNEL_MOVE_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ChannelIndex;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_PORTAL_RESURRECTION_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_PORTAL_RESURRECTION_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_PORTAL_RESURRECTION_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MAP_PORTAL_RESURRECTION_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsUseCash;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_PORTAL_MOVE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MAP_PORTAL_MOVE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MAP_PORTAL_MOVE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MAP_PORTAL_MOVE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EPortalType             m_PortalType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_PortalIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DungeonDifficulty;                                      // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEscape;                                               // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MAP_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_MAP_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EMapNetResult           m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ANGLE_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_ANGLE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Angle;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_TURN_START_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_TURN_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Direction;                                              // 0x0038(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MOVE_SKILL_OBJECT_BOARD_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_MOVE_SKILL_OBJECT_BOARD_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_BoarderSerial;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SkillObjectSerial;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MOVE_SKILL_OBJECT_BOARD_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MOVE_SKILL_OBJECT_BOARD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SkillObjectSerial;                                      // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_MOVE_AIR_VEHICLE_FAST_GLIDE_END_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MOVE_AIR_VEHICLE_FAST_GLIDE_END_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MOVE_AIR_VEHICLE_FAST_GLIDE_END_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MOVE_AIR_VEHICLE_FAST_GLIDE_END_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MOVE_AIR_VEHICLE_FAST_GLIDE_START_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MOVE_AIR_VEHICLE_FAST_GLIDE_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MOVE_AIR_VEHICLE_FAST_GLIDE_START_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MOVE_AIR_VEHICLE_FAST_GLIDE_START_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MOVE_VEHICLE_END_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MOVE_VEHICLE_END_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MOVE_VEHICLE_END_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MOVE_VEHICLE_END_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_VehicleIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MOVE_VEHICLE_START_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MOVE_VEHICLE_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleIndex;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERideType               m_RideType;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_MOVE_VEHICLE_START_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MOVE_VEHICLE_START_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_VehicleIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MOVE_PLAYER_SERVER_STOP_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MOVE_PLAYER_SERVER_STOP_CMD : public FCommonSource_BaseProtocol
{
	struct FVector                                     m_CurPos;                                                 // 0x0028(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerRandom;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_MOVE_SERVER_STOP_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_MOVE_SERVER_STOP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EMoveType               m_MoveType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FVector                                     m_StopPos;                                                // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerCaseSerial;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSendAround;                                           // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MOVE_START_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_MOVE_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EMoveType               m_MoveType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EMoveState              m_MoveState;                                              // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	struct FVector                                     m_CurPos;                                                 // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Direction;                                              // 0x003C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Angle;                                                  // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ClientState;                                            // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MOVE_START_L210_SYN
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_MOVE_START_L210_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EMoveType               m_MoveType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EMoveState              m_MoveState;                                              // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                m_MapIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Direction;                                              // 0x003C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Angle;                                                  // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ClientState;                                            // 0x004C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSend;                                                 // 0x004D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	int                                                m_ServerRandom;                                           // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MOVE_NAK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_MOVE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EMoveNetResult          m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                m_MapIndex;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_CurPos;                                                 // 0x0040(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_ServerPos;                                              // 0x004C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SERVER_MESSAGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SERVER_MESSAGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MessageIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FString>                             m_arrayStr;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_MARKET_REVIEW_CHECK_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MARKET_REVIEW_CHECK_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsChecked;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MARKET_REVIEW_CHECK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MARKET_REVIEW_CHECK_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsChecked;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MARKET_REVIEW_DISPLAY_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_MARKET_REVIEW_DISPLAY_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsReviewDisplay;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_MARKET_REVIEW_DISPLAY_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_MARKET_REVIEW_DISPLAY_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_MARK_DELETE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_MARK_DELETE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_MarkInfo                      m_MarkInfo;                                               // 0x0028(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_MARK_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_MARK_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_MarkInfo>              m_arrayMarkInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_NOTICE_CONFIRM_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_NOTICE_CONFIRM_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_NOTICE_CONFIRM_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_NOTICE_CONFIRM_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_NoticeInfo                    m_NoticeInfo;                                             // 0x0028(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_NOTICE_DELETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_NOTICE_DELETE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ENoticeType             m_NoticeType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_NOTICE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_NOTICE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_NoticeInfo>            m_arrayNoticeInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_NOTICE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_NOTICE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ENoticeNetResult        m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_LIGHT_ILLUSION_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_OBJECT_LIGHT_ILLUSION_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxCount;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CurCount;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActivated;                                            // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_MAXHP_USING_CURHP_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_OBJECT_MAXHP_USING_CURHP_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaxHpUsingCurHp;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_OBJECT_TARGET_CHANGE_CMD
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_OBJECT_TARGET_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FCommonSource_TargetInfo                    m_TargetInfo;                                             // 0x0030(0x0058) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_OBJECT_DEAD_ANIMATION_START_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_OBJECT_DEAD_ANIMATION_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_CONTROLLERFLAG_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_OBJECT_CONTROLLERFLAG_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ControllerFlag;                                         // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_SELECT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_OBJECT_SELECT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsMannerMode;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_SELECT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_OBJECT_SELECT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_PHASE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_OBJECT_PHASE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPhaseType              m_PhaseType;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLastPhase;                                            // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_DROP_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_OBJECT_DROP_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsSendAround;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MonsterSerial;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_OwnerObjectSerial;                                      // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_GameItemInfo>          m_arrayItemInfo;                                          // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_AGGRO_ICON_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_AGGRO_ICON_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAggroIcon;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_STATE_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_OBJECT_STATE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TargetSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EObjectState            m_ObjectState;                                            // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_FACTION_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_OBJECT_FACTION_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_FactionInfo                   m_Faction;                                                // 0x002C(0x0008) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_ANIMATION_START_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_OBJECT_ANIMATION_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_AniName;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_OBJECT_VEHICLE_HP_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_OBJECT_VEHICLE_HP_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CurVehicleHp;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_ABSORB_SHIELD_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_OBJECT_ABSORB_SHIELD_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AbsorbShield;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_MP_SHIELD_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_OBJECT_MP_SHIELD_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MpShield;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_SHIELD_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_OBJECT_SHIELD_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CurShield;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_HPMP_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_OBJECT_HPMP_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CurHp;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsRegen;                                                // 0x003C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_OBJECT_PARAM_CHANGE_CMD
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_OBJECT_PARAM_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSendAround;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsMoveSpeedChanged;                                     // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	TArray<struct FCommonSource_ParamInfo>             m_arrayParam;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ParamInfo>             m_arrayOtherParam;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ParamMaxInfo>          m_arrayMaxParam;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_OBJECT_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_OBJECT_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EObjectNetResult        m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_MAXHP_USING_CURHP_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_MAXHP_USING_CURHP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_MaxHpUsingCurHp;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MOVEABLE_STATE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MOVEABLE_STATE_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_MoveAbleSettedOn;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MASTER_TARGET_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MASTER_TARGET_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_MASTER_TARGET_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MASTER_TARGET_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_MASTER_TARGET_LIST_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PARTY_MASTER_TARGET_LIST_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ScanInfo>              m_arrayScan;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_AVATAR_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_AVATAR_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AvatarIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MASTER_TARGET_LIST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_MASTER_TARGET_LIST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_MASTER_TARGET_LIST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PARTY_MASTER_TARGET_LIST_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ScanInfo>              m_arrayScan;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PARTY_MOVE_TO_MASTER_GOLD_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MOVE_TO_MASTER_GOLD_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_NeedGold;                                               // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MOVE_TO_MASTER_GOLD_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_MOVE_TO_MASTER_GOLD_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_MOVE_TO_MASTER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_MOVE_TO_MASTER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_MOVE_TO_MASTER_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_MOVE_TO_MASTER_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_LOCK_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_PARTY_LOCK_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PartyInfo                     m_PartyInfo;                                              // 0x0028(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PARTY_LOCK_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_PARTY_LOCK_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PartyInfo                     m_PartyInfo;                                              // 0x0028(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PARTY_LOCK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_LOCK_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsLock;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_DUNGEON_DOING_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_DUNGEON_DOING_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_DungeonSerial;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_READYSTATE_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_READYSTATE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsReadyState;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EReadyStateChangeReason m_ChangeReason;                                           // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_READYSTATE_CHANGE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_READYSTATE_CHANGE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_MASTER_AUTO_PARTY_STATE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MASTER_AUTO_PARTY_STATE_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAutoParty;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_CONNECT_STATE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_CONNECT_STATE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsConnected;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_VEHICLE_HP_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_VEHICLE_HP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleHp;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_ABSORB_SHIELD_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_ABSORB_SHIELD_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AbsorbShield;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_MP_SHIELD_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_MP_SHIELD_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MpShield;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_SHIELD_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_SHIELD_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Shield;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_HPMP_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_HPMP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerCaseSerial;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MemberSerial;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MaxHp;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CurHp;                                                  // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_MaxMp;                                                  // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_LEVEL_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_LEVEL_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_POSITION_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_POSITION_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x0030(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_DESTROY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_DESTROY_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EPartyDestroyReason     m_DestroyReason;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_DESTROY_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_DESTROY_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_LEAVE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_LEAVE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPartyKick              m_PartyKick;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_FORCE_KICK_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_FORCE_KICK_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_FORCE_KICK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_FORCE_KICK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MemberSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_LEAVE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_LEAVE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_LEAVE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_LEAVE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_MASTER_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MASTER_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MasterSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MasterServerID;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_MASTER_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_MASTER_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MasterSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MasterServerID;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_AUTOMATCHING_CANCEL_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_AUTOMATCHING_CANCEL_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EAutoMachingCancelReason m_CancelReason;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_AUTOMATCHING_CANCEL_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_AUTOMATCHING_CANCEL_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_AUTOMATCHING_CANCEL_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_AUTOMATCHING_CANCEL_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_AUTOMATCHING_START_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_AUTOMATCHING_START_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_DungeonIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Difficulty;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_AUTOMATCHING_START_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_AUTOMATCHING_START_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_DungeonIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Difficulty;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_AUTOMATCHING_START_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_AUTOMATCHING_START_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_DungeonIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Difficulty;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_REGISTER_CANCEL_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_REGISTER_CANCEL_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_REGISTER_CANCEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_REGISTER_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_DungeonIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Difficulty;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_REGISTER_CANCEL_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_REGISTER_CANCEL_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_REGISTER_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_REGISTER_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_DungeonIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Difficulty;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_REGISTER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_REGISTER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_REGISTER_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_REGISTER_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_DungeonIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Difficulty;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_REGISTER_LIST_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_REGISTER_LIST_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_REGISTER_LIST_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_PARTY_REGISTER_LIST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_DungeonIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_PartySimpleInfo>       m_arrayPartySimpleInfo;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsLast;                                                 // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_REGISTER_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_REGISTER_LIST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_DungeonIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_Difficulty;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_MEMBER_ADD_CMD
// 0x0090 (0x00B8 - 0x0028)
struct FCommonSource_CG_PARTY_MEMBER_ADD_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PartyMemberInfo               m_MemberInfo;                                             // 0x0028(0x0088) (Edit, BlueprintVisible)
	bool                                               m_IsAutoParty;                                            // 0x00B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_JOIN_CMD
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_PARTY_JOIN_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PartyInfo                     m_PartyInfo;                                              // 0x0028(0x0040) (Edit, BlueprintVisible)
	bool                                               m_IsAutoParty;                                            // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_JOIN_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_JOIN_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_PartySerial;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_INVITE_REQUEST_DELETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_INVITE_REQUEST_DELETE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_RequesterSerial;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResponderSerial;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTY_INVITE_RESPONSE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PARTY_INVITE_RESPONSE_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_ResponderName;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsAccept;                                               // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_INVITE_RESPONSE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTY_INVITE_RESPONSE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_RequesterSerial;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAccept;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_INVITE_REQUEST_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_PARTY_INVITE_REQUEST_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_RequesterSerial;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_RequesterName;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ResponderSerial;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     m_ResponderName;                                          // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_DungeonIndex;                                           // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DungeonDifficulty;                                      // 0x005C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDungeonDoing;                                         // 0x005D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAutoParty;                                            // 0x005E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x005F(0x0001) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_INVITE_REQUEST_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PARTY_INVITE_REQUEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ResponderSerial;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PARTY_INVITE_LIST_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_PARTY_INVITE_LIST_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EPartyInviteTab         m_PartyInviteTab;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_FindName;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsNextPage;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTY_INVITE_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PARTY_INVITE_LIST_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EPartyInviteTab         m_PartyInviteTab;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_InvitePlayerInfo>      m_arrayInvitePlayer;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PARTY_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTY_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTY_PLAYER_SELECT_INFO_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_PARTY_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PartyInfo                     m_PartyInfo;                                              // 0x0028(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PARTY_TOTAL_INFO_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_PARTY_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PartyInfo                     m_PartyInfo;                                              // 0x0028(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PARTY_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PARTY_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EPartyNetResult         m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_TEST_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_TEST_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsSuccess;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_TEST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_TEST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_LOSE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_LOSE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PartyDungeonInfo              m_MapInfo;                                                // 0x0028(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_WIN_CMD
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_WIN_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PartyDungeonInfo              m_MapInfo;                                                // 0x0028(0x0018) (Edit, BlueprintVisible)
	struct FCommonSource_ClearRankInfo                 m_ClearRankInfo;                                          // 0x0040(0x000C) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FString                                     m_BossKillerName;                                         // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_PartyDungeonIndividualRewardInfo> m_arrayIndividualRewardInfo;                              // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_MOVE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_MOVE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_MOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_MOVE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_MapSerial;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_CREATE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_CREATE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_CREATE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_CREATE_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_DungeonDifficulty;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_TOTAL_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_ENTRANCE_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_ENTRANCE_INFO_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_DungeonOpen;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_RemainEntranceCount;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EPartyDungeonNetResult  m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PENALTY_RESTORE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PENALTY_RESTORE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_PenaltyDBSlot;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EResourceType           m_MeterialType;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PENALTY_RESTORE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PENALTY_RESTORE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_PenaltyDBSlot;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EDeathPenaltyRestoreType m_DethPenaltyRestoreType;                                 // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PENALTY_TOTAL_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_PENALTY_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PlayerPenalty>         m_arrayPenaltyInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_DailyRestoreCount;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DailyFreeRestoreCount;                                  // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResurrectionCostIndex;                                  // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PENALTY_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PENALTY_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PENALTY_CHECK_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PENALTY_CHECK_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsPenaltyExist;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_DailyRestoreCount;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DailyFreeRestoreCount;                                  // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResurrectionCostIndex;                                  // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PENALTY_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PENALTY_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EPenaltyNetResult       m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_SKILL_AUTO_TRAINING_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PET_SKILL_AUTO_TRAINING_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_PetIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainSkillEnableExpireTime;                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSuccess;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_SKILL_TRAINING_EXPIRE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_SKILL_TRAINING_EXPIRE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_PetIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_SKILL_ACTIVE_AUTO_TRAINING_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PET_SKILL_ACTIVE_AUTO_TRAINING_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PARTYDUNGEON_TOTAL_INFO_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_PARTYDUNGEON_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	float                                              m_ResetRemainTime;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_PartyDungeonInfo>      m_arrayMap;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_EnterTicketInfo               m_EnterTicketInfo;                                        // 0x0040(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PET_SKILL_ACTIVE_AUTO_TRAINING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_SKILL_ACTIVE_AUTO_TRAINING_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsActive;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_SKILL_TRAINING_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_SKILL_TRAINING_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_PetIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainSkillEnableExpireTime;                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PET_SKILL_TRAINING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_SKILL_TRAINING_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_PetIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_GUARDIAN_BOARD_RESETTIME_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PET_GUARDIAN_BOARD_RESETTIME_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PET_GUARDIAN_BOARD_CHANGE_ACK
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_PET_GUARDIAN_BOARD_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EPetType                m_BoardPetType;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetGuardianBoardGrade  m_BoardGrade;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetGuardianBoardResetType m_BoardResetType;                                         // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
	struct FCommonSource_PetGuardianBoardInfo          m_ResetBoardInfo;                                         // 0x0030(0x0040) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PET_GUARDIAN_BOARD_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_GUARDIAN_BOARD_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ChangeItemIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetType                m_BoardPetType;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetGuardianBoardGrade  m_BoardGrade;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetGuardianBoardResetType m_BoardResetType;                                         // 0x002E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_GUARDIAN_BOARD_GUARD_START_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_GUARDIAN_BOARD_GUARD_START_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EPetType                m_BoardPetType;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetGuardianBoardGrade  m_BoardGrade;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_GUARDIAN_BOARD_GUARD_START_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_GUARDIAN_BOARD_GUARD_START_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EPetType                m_BoardPetType;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetGuardianBoardGrade  m_BoardGrade;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_GUARDIAN_BOARD_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PET_GUARDIAN_BOARD_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PetGuardianBoardInfo>  m_arrayGuardianBoardInfo;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PET_GUARDIAN_BOARD_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PET_GUARDIAN_BOARD_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PET_DECIDE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_DECIDE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_PetIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_DECIDE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_DECIDE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_DecideSlotIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_DECIDE_DELETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_DECIDE_DELETE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_DelteSlotIndex;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_DECIDE_ADD_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PET_DECIDE_ADD_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PetDecideInfo                 m_PetChangeInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PET_DRAW_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PET_DRAW_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PetDecideInfo                 m_PetChangeInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PET_DRAW_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_DRAW_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SlotIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetType                m_SelectedPetType;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_RANDOM_BOX_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_PET_RANDOM_BOX_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayPetSerial;                                         // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PET_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PET_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PetInfo                       m_PetInfo;                                                // 0x0028(0x0014) (Edit, BlueprintVisible)
	int                                                m_ReasonIndex;                                            // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PET_COMPOSE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PET_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EItemGrade              m_ItemGrade;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayPet;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PET_BUNDLE_COMPOSE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_PET_BUNDLE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PetComposeInfo>        m_arrayPetComposeInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_CG_PET_COMPOSE_ACK>    m_arrayPetCompose;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PET_BUNDLE_COMPOSE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PET_BUNDLE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PET_EQUIP_CHANGE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_EQUIP_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EPetEquipParts          m_FromEquipParts;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetEquipParts          m_ToEquipParts;                                           // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_EQUIP_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_EQUIP_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EPetEquipParts          m_FromEquipParts;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetEquipParts          m_ToEquipParts;                                           // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_EQUIP_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PET_EQUIP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetEquipParts          m_PetEquipParts;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                m_EquipPetIndex;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldPetIndex;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PET_EQUIP_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_EQUIP_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_PetIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetEquipParts          m_PetEquipParts;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_EQUIP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PET_EQUIP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_PetIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPetEquipParts          m_PetEquipParts;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PET_COMPOSE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PET_COMPOSE_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ItemCountInfo>         m_arrayPet;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PET_EXPIRE_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PET_EXPIRE_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PET_EXPIRE_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PET_EXPIRE_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PetInfo>               m_arrayPet;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PET_PLAYER_SELECT_INFO_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_PET_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_EquipMainPetIndex;                                      // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EquipSubPetIndex1;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EquipSubPetIndex2;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActiveAutoPetTraining;                                // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_PetInfo>               m_arrayPet;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_PetDecideInfo>         m_arrayPetDecide;                                         // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PET_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PET_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EPetNetResult           m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_CHASE_POS_CHECK_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PK_CHASE_POS_CHECK_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_CHASE_POS_CHECK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_CHASE_POS_CHECK_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PK_WARP_NOTICE_SLAYER_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PK_WARP_NOTICE_SLAYER_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PK_CHANGE_SLAYER_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_CHANGE_SLAYER_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSlayer;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_MY_RANKING_CMD
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_PK_MY_RANKING_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PkRankingInfo                 m_MyPkRankingInfo;                                        // 0x0028(0x0060) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PK_RANKING_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PK_RANKING_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_PkRankingInfo>         m_arrayRankingInfo;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PK_RANKING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_RANKING_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_REGISTER_MAIN_WATCH_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PK_REGISTER_MAIN_WATCH_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsMainWatch;                                            // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_REGISTER_MAIN_WATCH_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PK_REGISTER_MAIN_WATCH_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsMainWatch;                                            // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_WATCH_DELETE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_WATCH_DELETE_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PK_WATCH_DELETE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_WATCH_DELETE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PK_WATCH_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PK_WATCH_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PkWatchInfo>           m_arrayWatchInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PK_WATCH_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PK_WATCH_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PK_SLAYER_CHASE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_SLAYER_CHASE_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PK_SLAYER_CHASE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_SLAYER_CHASE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PK_CHASE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PK_CHASE_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PkDBKey;                                                // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RemainChaseCount;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_CHASE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_CHASE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PkDBKey;                                                // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PK_SLAYER_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PK_SLAYER_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PkSlayerInfo>          m_arrayPkSlayerInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsNextPage;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_SLAYER_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_SLAYER_LIST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PK_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_PkInfo>                m_arrayPkInfo;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsLoginSlayer;                                          // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_WHATCH_PLAYER_LOGIN_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PK_WHATCH_PLAYER_LOGIN_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PK_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_LIST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_TAUNT_CMD
// 0x0090 (0x00B8 - 0x0028)
struct FCommonSource_CG_PK_TAUNT_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PkTauntPlayerInfo             m_KillerPlayerInfo;                                       // 0x0028(0x0058) (Edit, BlueprintVisible)
	struct FCommonSource_PkTauntTargetInfo             m_TargetPlayerInfo;                                       // 0x0080(0x0020) (Edit, BlueprintVisible)
	struct FString                                     m_Comment;                                                // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CommentCode;                                            // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_TAUNT_ACK
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_PK_TAUNT_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_PkTauntTargetInfo             m_TargetPlayerInfo;                                       // 0x0028(0x0020) (Edit, BlueprintVisible)
	struct FString                                     m_Comment;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CommentCode;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_TAUNT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_TAUNT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_TargetSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_TAUNT_EDIT_COMMENT_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PK_TAUNT_EDIT_COMMENT_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Comment;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PK_TAUNT_EDIT_COMMENT_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PK_TAUNT_EDIT_COMMENT_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Comment;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PK_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PK_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_TauntComment;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PK_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PK_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PK_BRUTAL_COOLTIME_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_BRUTAL_COOLTIME_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAssist;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_RemainBrutalCoolTime;                                   // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PK_CHANGE_BRUTAL_TIME_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_CHANGE_BRUTAL_TIME_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ChangeBrutalTime;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_CHANGE_BRUTAL_STATE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PK_CHANGE_BRUTAL_STATE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EPkBrutalState          m_PkBrutalState;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PK_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PK_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EPkNetResult            m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_CONTENTS_WORLD_CONTROL_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PLAYER_CONTENTS_WORLD_CONTROL_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ContentsWorldControlInfo> m_arrayContentsWorldControlInfo;                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_MIMIR_ONOFF_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PLAYER_MIMIR_ONOFF_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsMimirOn;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_MIMIR_ONOFF_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PLAYER_MIMIR_ONOFF_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsMimirOn;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_LOGOUT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PLAYER_LOGOUT_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFriend;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsGuildMember;                                          // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_LOGIN_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_PLAYER_LOGIN_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsFriend;                                               // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsGuildMember;                                          // 0x0041(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_SECURITY_LOG_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_SECURITY_LOG_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_SECURITY_LOG_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PLAYER_SECURITY_LOG_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ESecurityLogType        m_SecurityLogType;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_Value;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Log;                                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_GET_ESCAPECOUNT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PLAYER_GET_ESCAPECOUNT_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RemainEscapeCount;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_INDEX_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PLAYER_INDEX_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_PlayerIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_GM_CHEAT_WARPTOPLAYER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_GM_CHEAT_WARPTOPLAYER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_GM_CHEAT_WARPTOPLAYER_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PLAYER_GM_CHEAT_WARPTOPLAYER_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_GM_CHEAT_PLAYERKICK_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_GM_CHEAT_PLAYERKICK_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_GM_CHEAT_PLAYERKICK_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PLAYER_GM_CHEAT_PLAYERKICK_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_GM_CHEAT_EXCUTE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_GM_CHEAT_EXCUTE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_GM_CHEAT_EXCUTE_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_PLAYER_GM_CHEAT_EXCUTE_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_CheatIndex;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCheatOn;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FString                                     m_Parameter;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_GET_ESCAPECOUNT_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_GET_ESCAPECOUNT_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_CONTENTS_BLOCK_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PLAYER_CONTENTS_BLOCK_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ContentsBlockInfo>     m_arrayContentsBlockInfo;                                 // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_GM_CHEAT_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_GM_CHEAT_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_SLEEPMODE_CANCEL_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_SLEEPMODE_CANCEL_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_SLEEPMODE_CANCEL_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_SLEEPMODE_CANCEL_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_SLEEPMODE_START_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_SLEEPMODE_START_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_SLEEPMODE_START_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_SLEEPMODE_START_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_NAME_CHANGE_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_PLAYER_NAME_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_CUSOMIZING_CHANGE_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_PLAYER_CUSOMIZING_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FCommonSource_CustomizingInfo               m_CustomizingInfo;                                        // 0x0030(0x0038) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PLAYER_MY_RANKING_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PLAYER_MY_RANKING_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingType            m_RankingType;                                            // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                m_Ranking;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_GM_CHEAT_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PLAYER_GM_CHEAT_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_GMCheatInfo>           m_arrayGMCheat;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_BATTLEPOWER_MY_RANKING_CMD
// 0x0080 (0x00A8 - 0x0028)
struct FCommonSource_CG_PLAYER_BATTLEPOWER_MY_RANKING_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FCommonSource_PlayerBattlePowerRankingInfo  m_PlayerBattlePowerRankingInfo;                           // 0x0030(0x0078) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PLAYER_BATTLEPOWER_RANKING_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PLAYER_BATTLEPOWER_RANKING_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
	TArray<struct FCommonSource_PlayerBattlePowerRankingInfo> m_arrayRankingInfo;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_BATTLEPOWER_RANKING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PLAYER_BATTLEPOWER_RANKING_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_LEVEL_MY_RANKING_CMD
// 0x0080 (0x00A8 - 0x0028)
struct FCommonSource_CG_PLAYER_LEVEL_MY_RANKING_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FCommonSource_PlayerLevelRankingInfo        m_PlayerLevelRankingInfo;                                 // 0x0030(0x0078) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PLAYER_LEVEL_RANKING_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PLAYER_LEVEL_RANKING_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
	TArray<struct FCommonSource_PlayerLevelRankingInfo> m_arrayRankingInfo;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_LEVEL_RANKING_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PLAYER_LEVEL_RANKING_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingDivision        m_RankingDivision;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x002A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_CURRENT_LEVEL_BATTLEPOWER_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PLAYER_CURRENT_LEVEL_BATTLEPOWER_CMD : public FCommonSource_BaseProtocol
{
	float                                              m_CurrentBattlePower;                                     // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PLAYER_NAME_CHANGE_HISTORY_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PLAYER_NAME_CHANGE_HISTORY_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_OTHER_PLAYER_INFO_CMD
// 0x0160 (0x0188 - 0x0028)
struct FCommonSource_CG_PLAYER_OTHER_PLAYER_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_OtherPlayerInfo               m_OtherPlayerInfo;                                        // 0x0028(0x0160) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_PLAYER_NAME_CHANGE_HISTORY_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_PLAYER_NAME_CHANGE_HISTORY_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FString>                             m_arrayPlayerNameChangeHistory;                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_PlayerName;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_OTHER_PLAYER_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_PLAYER_OTHER_PLAYER_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_PLAYER_OTHER_PLAYER_INFO_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PLAYER_OTHER_PLAYER_INFO_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_PLAYER_CHANGE_CLASS_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PLAYER_CHANGE_CLASS_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PLAYER_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_PLAYER_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EPlayerNetResult        m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.RepeatQuestInfo
// 0x0030
struct FCommonSource_RepeatQuestInfo
{
	int                                                m_QuestIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EQuestType              m_QuestType;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EQuestState             m_QuestState;                                             // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                m_ClearCount;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardItem;                                        // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FVector>                             m_arrayAutoPathPos;                                       // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_INVASIONQUEST_REFRESH_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_QUEST_INVASIONQUEST_REFRESH_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RefreshCount;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_RepeatQuestInfo>       m_arrayAcceptableInvasionQuestInfo;                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_INVASIONQUEST_REFRESH_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_QUEST_INVASIONQUEST_REFRESH_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_QUEST_INVASIONQUEST_LIST_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_QUEST_INVASIONQUEST_LIST_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RefreshCount;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_FinishCount;                                            // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                m_CurrentBadge;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RepeatQuestInfo>       m_arrayInvasionQuestInfo;                                 // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_INVASIONQUEST_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_QUEST_INVASIONQUEST_LIST_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RefreshCount;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_FinishCount;                                            // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                m_CurrentBadge;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RepeatQuestInfo>       m_arrayInvasionQuestInfo;                                 // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_INVASIONQUEST_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_QUEST_INVASIONQUEST_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_QUEST_OBSERVE_OBJECT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_OBSERVE_OBJECT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_OBSERVE_OBJECT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_OBSERVE_OBJECT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_TUTORIAL_CLEAR_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_TUTORIAL_CLEAR_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ETutorialQuestType      m_TutorialQuestType;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_TUTORIAL_CLEAR_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_TUTORIAL_CLEAR_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ETutorialQuestType      m_TutorialQuestType;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_TALK_NPC_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_TALK_NPC_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_NpcSerial;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_TALK_NPC_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_TALK_NPC_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_NpcSerial;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChoiceLink;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_QUEST_REPEATQUEST_ITEM_REFRESH_ACK
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_QUEST_REPEATQUEST_ITEM_REFRESH_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_PrevQuestIndex;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ChapterNumber;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RefreshCount;                                           // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	struct FCommonSource_RepeatQuestInfo               m_AcceptableRepeatQuestInfo;                              // 0x0030(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_QUEST_REPEATQUEST_ITEM_REFRESH_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_REPEATQUEST_ITEM_REFRESH_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ChapterNumber;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_QuestIndex;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_QUEST_REPEATQUEST_ADD_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_QUEST_REPEATQUEST_ADD_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ChapterNumber;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_RepeatQuestInfo               m_AcceptableRepeatQuestInfo;                              // 0x0030(0x0030) (Edit, BlueprintVisible)
	unsigned char                                      m_DoingRepeatQuestCount;                                  // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_REPEATQUEST_EXTEND_COUNT_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_REPEATQUEST_EXTEND_COUNT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_RepeatQuestExtendCount;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_REPEATQUEST_REFRESH_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_QUEST_REPEATQUEST_REFRESH_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ChapterNumber;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_AcceptQuestCount;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DoingQuestCount;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RefreshCount;                                           // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_RepeatQuestInfo>       m_arrayAcceptableRepeatQuestInfo;                         // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_REPEATQUEST_REFRESH_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_REPEATQUEST_REFRESH_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ChapterNumber;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_REPEATQUEST_LIST_ACK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_QUEST_REPEATQUEST_LIST_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ChapterNumber;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_AcceptQuestCount;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DoingQuestCount;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RefreshCount;                                           // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                m_CurrentBadge;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RepeatQuestInfo>       m_arrayRepeatQuestInfo;                                   // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_RepeatQuestExtendCount;                                 // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_REPEATQUEST_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_REPEATQUEST_LIST_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ChapterNumber;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_CANCEL_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_CANCEL_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_QuestIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_CANCEL_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_CANCEL_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_QuestIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_FINISH_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_QUEST_FINISH_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_QuestIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayItemSerial;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_FINISH_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_FINISH_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_QuestIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SelectIndex;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_FAIL_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_FAIL_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_QuestIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.QuestDoingInfo
// 0x0038
struct FCommonSource_QuestDoingInfo
{
	int                                                m_QuestIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EQuestType              m_QuestType;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EQuestState             m_QuestState;                                             // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                m_ClearCount;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChoiceLink;                                             // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             m_arrayAutoPathPos;                                       // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_ObjectAngle;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardItem;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_CHANGE_CMD
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_QUEST_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_QuestDoingInfo                m_QuestInfo;                                              // 0x0028(0x0038) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_QUEST_ITEM_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_QUEST_ITEM_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayQuestItemIndex;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_ADD_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_QUEST_ADD_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsServerStart;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_QuestDoingInfo                m_QuestInfo;                                              // 0x0030(0x0038) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_QUEST_DELETE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_QUEST_DELETE_CMD : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayQuestIndex;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_ACCEPT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_ACCEPT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_QuestIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_ACCEPT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUEST_ACCEPT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_QuestIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NpcSerial;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_QUEST_REPEATQUEST_INFO_CMD
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_QUEST_REPEATQUEST_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RepeatQuestInfo>       m_arrayRepeatQuestInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_AcceptQuestCount;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DoingQuestCount;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              m_arrayRefreshCount;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_RepeatQuestExtendCount;                                 // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.QuestNextInfo
// 0x0020
struct FCommonSource_QuestNextInfo
{
	int                                                m_QuestIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EQuestType              m_QuestType;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	TArray<struct FVector>                             m_arrayAutoPathPos;                                       // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              m_ObjectAngle;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUEST_NEXT_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_QUEST_NEXT_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_QuestNextInfo>         m_arrayQuestNextInfo;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.QuestFinishInfo
// 0x000C
struct FCommonSource_QuestFinishInfo
{
	int                                                m_QuestIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EQuestType              m_QuestType;                                              // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RepeatCount;                                            // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                m_ChoiceLink;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_QUEST_FINISH_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_QUEST_FINISH_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_QuestFinishInfo>       m_arrayQuestFinishInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_DOING_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_QUEST_DOING_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_QuestDoingInfo>        m_arrayQuestDoingInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUEST_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_QUEST_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EQuestNetResult         m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUICKSLOT_COMBO_SKILL_AUTO_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_COMBO_SKILL_AUTO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAuto;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUICKSLOT_COMBO_SKILL_AUTO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_COMBO_SKILL_AUTO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAuto;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUICKSLOT_AUTO_REGISTER_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_AUTO_REGISTER_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_QUICKSLOT_AUTO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_AUTO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_QuickSlotInfo>         m_arrayQuickSlot;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUICKSLOT_AUTO_REGISTER_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_AUTO_REGISTER_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_QuickSlotInfo                 m_QuickSlotInfo;                                          // 0x0028(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_QUICKSLOT_AUTO_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_AUTO_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_QuickSlotInfo                 m_QuickSlotInfo;                                          // 0x0028(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_QUICKSLOT_REGISTER_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_REGISTER_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EQuickSlotType          m_QuickSlotType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_QuickSlotInfo>         m_arrayQuickSlotInfo;                                     // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUICKSLOT_REGISTER_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_REGISTER_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EQuickSlotType          m_QuickSlotType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_QuickSlotInfo>         m_arrayQuickSlotInfo;                                     // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUICKSLOT_SKILL_PRESET_SELECT_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_SKILL_PRESET_SELECT_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ESkillPreset            m_SkillPreset;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_QuickSlotInfo>         m_arrayQuickSlotInfo;                                     // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayAutoComboSkillIndex;                               // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_QUICKSLOT_SKILL_PRESET_SELECT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_SKILL_PRESET_SELECT_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ESkillPreset            m_SkillPreset;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUICKSLOT_PLAYER_SELECT_INFO_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_QuickSlotInfo>         m_arrayQuickSlotInfo;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayAutoComboSkillIndex;                               // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ESkillPreset            m_SkillPreset;                                            // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_QUICKSLOT_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_QUICKSLOT_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EQuickSlotNetResult     m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_CAPTUREFLAG_REGISTER_ACTION_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_CAPTUREFLAG_REGISTER_ACTION_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERealmwarSide           m_RealmwarSide;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActionStart;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_CAPTUREFLAG_REGISTER_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_REALMWAR_CAPTUREFLAG_REGISTER_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ERealmwarSide           m_RealmwarSide;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                m_CaptureFlagCount;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectSerial;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_CAPTUREFLAG_ATTACHED_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_CAPTUREFLAG_ATTACHED_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAttached;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_MAP_ENTER_READY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_MAP_ENTER_READY_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
};

// ScriptStruct CommonSource.RealmwarRankerInfo
// 0x0058
struct FCommonSource_RealmwarRankerInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Ranking;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_RankingPoint;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0038(0x0014) (Edit, BlueprintVisible)
	int                                                KillCount;                                                // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CaptureFlagCount;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_REALMWAR_HISTORY_DETAIL_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_REALMWAR_HISTORY_DETAIL_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERealmwarRankType       m_RankType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MyRanking;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MyRankingPoint;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RealmwarRankerInfo>    m_arrayMySideRankerInfo;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_REALMWAR_HISTORY_DETAIL_INFO_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_REALMWAR_HISTORY_DETAIL_INFO_SYN : public FCommonSource_BaseProtocol
{
	int64_t                                            m_RealmwarDBIdx;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERealmwarSide           m_RealmwarSide;                                           // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERealmwarRankType       m_RankType;                                               // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0032(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0033(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.RealmwarRecordInfo
// 0x0030
struct FCommonSource_RealmwarRecordInfo
{
	int64_t                                            m_RealmwarDBIdx;                                          // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonNum;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonSubNum;                                           // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChannelNum;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERealmwarSide           m_WinSide;                                                // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	int                                                m_AesirKillCount;                                         // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VanirKillCount;                                         // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayStartTime;                                          // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AesirCaptureFlagCount;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                VanirCaptureFlagCount;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.RealmwarRankerDetailInfo
// 0x00C0
struct FCommonSource_RealmwarRankerDetailInfo
{
	int                                                m_ObjectSerial;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_KillRanking;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_KillPoint;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LastKillTime;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DamagedRanking;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	int64_t                                            m_DamagedPoint;                                           // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LastDamagedTime;                                        // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DamageRanking;                                          // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	int64_t                                            m_DamagePoint;                                            // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LastDamageTime;                                         // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_HealRanking;                                            // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_HealPoint;                                              // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LastHealTime;                                           // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0078(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0088(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	int64_t                                            m_LastHp;                                                 // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_LastMp;                                                 // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CaptureFlagRanking;                                     // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_CaptureFlagPoint;                                       // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	int64_t                                            m_LastCaptureFlagTime;                                    // 0x00B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.RealmwarHistoryInfo
// 0x0058
struct FCommonSource_RealmwarHistoryInfo
{
	FCommonSource_CommonSource_ERealmwarSide           m_MyRealmwarSide;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FCommonSource_RealmwarRecordInfo            m_RealmwarRecordInfo;                                     // 0x0008(0x0030) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_RealmwarRankerDetailInfo> m_arrayAesirTopRankerInfo;                                // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RealmwarRankerDetailInfo> m_arrayVanirTopRankerInfo;                                // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_REALMWAR_HISTORY_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_REALMWAR_HISTORY_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RealmwarHistoryInfo>   m_arrayHistoryInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_REALMWAR_HISTORY_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_HISTORY_LIST_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsNextPage;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.RealmwarSeasonRankerInfo
// 0x0058
struct FCommonSource_RealmwarSeasonRankerInfo
{
	int                                                m_SeasonRanking;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerIndex;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonPoint;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0040(0x0014) (Edit, BlueprintVisible)
	FCommonSource_CommonSource_EGrade                  m_ContentsGrade;                                          // 0x0054(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_SEASON_RANKING_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_REALMWAR_SEASON_RANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EClassType              m_ClassType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MySeasonRanking;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MySeasonPoint;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RealmwarSeasonRankerInfo> m_arrayRankerInfo;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_REALMWAR_SEASON_RANKING_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_SEASON_RANKING_INFO_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EClassType              m_ClassType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.RealmwarSeasonRewardInfo
// 0x0010
struct FCommonSource_RealmwarSeasonRewardInfo
{
	int                                                m_SeasonNumber;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERealmwarSeasonGrade    m_SeasonGrade;                                            // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_SeasonPoint;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardCoin;                                             // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_REALMWAR_SEASON_REWARD_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_REALMWAR_SEASON_REWARD_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RealmwarSeasonRewardInfo      m_SeasonRewardInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.RealmwarTotalInfo
// 0x0024
struct FCommonSource_RealmwarTotalInfo
{
	FCommonSource_CommonSource_ERealmwarSeasonGrade    m_SeasonGrade;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_SeasonRanking;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonPoint;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RealmwarCoin;                                           // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonNumber;                                           // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonSubNumber;                                        // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsStartRealmwar;                                        // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              m_NextRemainTime;                                         // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_SeasonRemainTime;                                       // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_REALMWAR_TOTAL_INFO_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_REALMWAR_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RealmwarTotalInfo             m_RealmwarTotalInfo;                                      // 0x0028(0x0024) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_REALMWAR_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.RealmwarRewardInfo
// 0x0048
struct FCommonSource_RealmwarRewardInfo
{
	FCommonSource_CommonSource_ERealmwarFinishState    m_FinishState;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     m_LastKiller;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentSeasonPoint;                                     // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResultSeasonPoint;                                      // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERealmwarRankType       m_MyBestRankType;                                         // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	int                                                m_MyBestRanking;                                          // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BestRankingSeasonPoint;                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_WinSeasonPoint;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LastKillSeasonPoint;                                    // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardRealmwarCoin;                                     // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardItem;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardItemCount;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFlagRule;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                m_MyFlagDonePoint;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.RealmwarFinishResultInfo
// 0x0014
struct FCommonSource_RealmwarFinishResultInfo
{
	FCommonSource_CommonSource_ERealmwarFinishRuleState m_RealmwarFinishRuleState;                                // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_AesirKillCount;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VanirKillCount;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AesirCaptureFlagCount;                                  // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VanirCaptureFlagCount;                                  // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_REALMWAR_RESULT_CMD
// 0x0060 (0x0088 - 0x0028)
struct FCommonSource_CG_REALMWAR_RESULT_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RealmwarRewardInfo            m_RealmwarRewardInfo;                                     // 0x0028(0x0048) (Edit, BlueprintVisible)
	struct FCommonSource_RealmwarFinishResultInfo      m_RealmwarFinishResultInfo;                               // 0x0070(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_MULTIKILL_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_REALMWAR_MULTIKILL_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_PlayerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ERealmwarSide           m_RealmwarSide;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                m_KillCount;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_REALMWAR_RANKING_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_REALMWAR_RANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERealmwarRankType       m_RankType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MyRanking;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MyRankingPoint;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RealmwarRankerInfo>    m_arrayMySideRankerInfo;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_REALMWAR_RANKING_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_RANKING_INFO_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERealmwarRankType       m_RankType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_BASECAMP_KICK_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_BASECAMP_KICK_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_RemainTime;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_BASECAMP_KICK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_BASECAMP_KICK_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_RemainTime;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.RealmwarDoingInfo
// 0x0048
struct FCommonSource_RealmwarDoingInfo
{
	FCommonSource_CommonSource_ERealmwarState          m_RealmwarState;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_AesirKillCount;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VanirKillCount;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AesirLeftPlayerCount;                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VanirLeftPlayerCount;                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyKillRanking;                                          // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyKillPoint;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyLeaderObjectSerial;                                   // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyDeathCount;                                           // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RealmwarRankerInfo>    m_arrayKillRankerInfo;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsFlagRule;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                m_AesirCaptureFlagCount;                                  // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VanirCaptureFlagCount;                                  // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyCaptureFlagCount;                                     // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_REALMWAR_CHANGE_INFO_CMD
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_REALMWAR_CHANGE_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RealmwarDoingInfo             m_RealmwarDoingInfo;                                      // 0x0028(0x0048) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_REALMWAR_BUFFGAIN_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_REALMWAR_BUFFGAIN_CMD : public FCommonSource_BaseProtocol
{
	struct FString                                     m_BuffGainPlayerName;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ERealmwarSide           m_RealmwarSide;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                m_BuffIndex;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_REALMWAR_ENTER_INFO_CMD
// 0x0130 (0x0158 - 0x0028)
struct FCommonSource_CG_REALMWAR_ENTER_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_SeasonNumber;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonSubNumber;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_LastAttendIdx;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_PlayerSimpleInfo              m_SeasonWinnerStatueInfo;                                 // 0x0038(0x0120) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_REALMWAR_SIDE_INFO_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_SIDE_INFO_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERealmwarSide           m_RealmwarSide;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_FINISH_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_REALMWAR_FINISH_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_REALMWAR_START_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_START_CMD : public FCommonSource_BaseProtocol
{
	float                                              m_ReaminTime;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EnterCount;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_REALMWAR_ATTEND_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_ATTEND_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAttend;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERealmwarAttendReason   m_AttendReason;                                           // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_CANCELED_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_REALMWAR_CANCELED_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_REALMWAR_ATTEND_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_REALMWAR_ATTEND_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAttend;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_LastAttendIdx;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_REALMWAR_ATTEND_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_REALMWAR_ATTEND_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsAttend;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_REALMWAR_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_REALMWAR_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ERealmwarNetResult      m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RELICGAMBLE_LIST_ADD_CMD
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_RELICGAMBLE_LIST_ADD_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RewardInfo                    m_RelicItemInfo;                                          // 0x0028(0x0030) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_RewardInfo>            m_arrayRelicItemHistory;                                  // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RELIC_GAMBLE_TEST_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_RELIC_GAMBLE_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_GambleIndex;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TestCount;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartCount;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SelectCount;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_RELIC_GAMBLE_TEST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_RELIC_GAMBLE_TEST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RelicTestResult>       m_arrayRelicTest;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CurrentCount;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RELICGAMBLE_CONFIRM_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_RELICGAMBLE_CONFIRM_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_RelicGambleIndex;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSuccess;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ResultPosition;                                         // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RELICGAMBLE_CONFIRM_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_RELICGAMBLE_CONFIRM_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_RelicGambleIndex;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<unsigned char>                              m_arraySelectedPosition;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.RelicGambleInfo
// 0x0018
struct FCommonSource_RelicGambleInfo
{
	int                                                m_RelicGambleIndex;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RefreshCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RelicGambleReward>     m_arrayRewardInfo;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RELICGAMBLE_REFRESH_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_RELICGAMBLE_REFRESH_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RelicGambleInfo               m_Info;                                                   // 0x0028(0x0018) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_RELICGAMBLE_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_RELICGAMBLE_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RelicGambleInfo>       m_arrayRelicGambleInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RELICGAMBLE_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_RELICGAMBLE_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_RELICGAMBLE_REFRESH_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RELICGAMBLE_REFRESH_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_RelicGambleIndex;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.RuneSlotAttributeInfo
// 0x0002
struct FCommonSource_RuneSlotAttributeInfo
{
	unsigned char                                      m_RuneSlot;                                               // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERuneAttribute          m_RuneAttribute;                                          // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_RUNE_SLOT_ATTRIBUTE_CHANGE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RUNE_SLOT_ATTRIBUTE_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RuneSlotAttributeInfo         m_RuneSlotAttributeInfo;                                  // 0x0028(0x0002) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RELICGAMBLE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_RELICGAMBLE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ERelicGambleNetResult   m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_SLOT_ATTRIBUTE_CHANGE_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_RUNE_SLOT_ATTRIBUTE_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERuneType               m_RuneType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<unsigned char>                              m_arrayLockSlot;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RUNE_SLOT_ATTRIBUTE_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_RUNE_SLOT_ATTRIBUTE_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_PRESET_SELECT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_PRESET_SELECT_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RuneSetPreset;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_PRESET_SELECT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_PRESET_SELECT_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RuneSetPreset;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_LOCK_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_LOCK_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERuneSetOption          m_LockSetOption;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEnchantLock;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_LOCK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_LOCK_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERuneSetOption          m_LockSetOption;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_SLOT_ATTRIBUTE_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_RUNE_SLOT_ATTRIBUTE_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RuneSlotAttributeInfo> m_arrayRuneSlotAttributeInfo;                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.RuneSetEnchantTestProbResult
// 0x0010
struct FCommonSource_RuneSetEnchantTestProbResult
{
	int                                                m_EnchantProb;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Count;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Success;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Prob;                                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.RuneSetEnchantTestResult
// 0x0020
struct FCommonSource_RuneSetEnchantTestResult
{
	int                                                m_EnchantStep;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Count;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Success;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_Prob;                                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        m_arrayRuneSetOptionEnchantCount;                         // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_TEST_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_TEST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_TestCount;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaxEnchantStepCount;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_RuneSetEnchantTestResult> m_arrayResult;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RuneSetEnchantTestProbResult> m_arrayResultProb;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_TEST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_TEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_TestCount;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_RESET_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_RESET_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_RuneEnchantCount;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERuneSetOption          m_RuneSetOption;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RuneEnchantStep;                                        // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSuccess;                                              // 0x002E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_SYN : public FCommonSource_BaseProtocol
{
	TArray<FCommonSource_CommonSource_ERuneSetOption>  m_arrayLockSet;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.RuneSetEnchantInfo
// 0x000C
struct FCommonSource_RuneSetEnchantInfo
{
	FCommonSource_CommonSource_ERuneSetOption          m_RuneSetOption;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_EnchantStep;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsEnchantLock;                                          // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_TOTAL_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_RuneEnchantCount;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_RuneSetEnchantInfo>    m_arrayRuneSetEnchantInfo;                                // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_RuneSetPreset;                                          // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.RuneEquipInfo
// 0x0014
struct FCommonSource_RuneEquipInfo
{
	FCommonSource_CommonSource_ERunePreset             m_RunePreset;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RuneEquipSlot;                                          // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_RuneIndex;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_RuneGrade;                                              // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERuneSetOption          m_RuneSetOption;                                          // 0x0009(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	int                                                m_DeleteRuneIndex;                                        // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_DeleteRuneGrade;                                        // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERuneSetOption          m_DeleteRuneSetOption;                                    // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0012(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0013(0x0001) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_LOCK_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_RUNE_LOCK_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsEquipLock;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RuneEquipSlot;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	struct FCommonSource_RuneInfo                      m_RuneInfo;                                               // 0x002C(0x0010) (Edit, BlueprintVisible)
	struct FCommonSource_RuneEquipInfo                 m_RuneEquipInfo;                                          // 0x003C(0x0014) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_RUNE_SET_ENCHANT_RESET_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_RUNE_SET_ENCHANT_RESET_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_RUNE_LOCK_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_RUNE_LOCK_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsEquipLock;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_RuneEquipSlot;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                m_RuneIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_RuneGrade;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERuneSetOption          m_RuneSetOption;                                          // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0032(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0033(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_PRESET_SELECT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RUNE_PRESET_SELECT_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERunePreset             m_RunePreset;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_PRESET_SELECT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RUNE_PRESET_SELECT_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERunePreset             m_RunePreset;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_RANDOM_BOX_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_RUNE_RANDOM_BOX_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RuneInfo>              m_arrayRewardInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RUNE_EXCHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_RUNE_EXCHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RuneInfo                      m_RuneInfo;                                               // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_RUNE_EXCHANGE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_RUNE_EXCHANGE_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RuneInfo                      m_RuneInfo;                                               // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_RUNE_UPGRADE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_RUNE_UPGRADE_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsSuccess;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FCommonSource_RuneInfo                      m_RuneInfo;                                               // 0x002C(0x0010) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.RuneGradeComposeInfo
// 0x0008
struct FCommonSource_RuneGradeComposeInfo
{
	FCommonSource_CommonSource_EGrade                  m_Grade;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ComposeCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.RuneComposeInfo
// 0x0018
struct FCommonSource_RuneComposeInfo
{
	FCommonSource_CommonSource_EGrade                  m_Grade;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_RuneInfo>              m_arrayRune;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RUNE_BUNDLE_COMPOSE_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_RUNE_BUNDLE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RuneGradeComposeInfo>  m_arrayGradeComposeInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RuneComposeInfo>       m_arrayComposeInfo;                                       // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ItemCount;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_UPGRADE_SYN
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_RUNE_UPGRADE_SYN : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RuneInfo                      m_MainRuneInfo;                                           // 0x0028(0x0010) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_RuneInfo>              m_arrayMaterialRune;                                      // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RUNE_BUNDLE_COMPOSE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_RUNE_BUNDLE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_RUNE_COMPOSE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_RUNE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RuneInfo>              m_arrayRune;                                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RUNE_COMPOSE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_RUNE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGrade                  m_RuneGrade;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_RuneInfo>              m_arrayRune;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ItemCount;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_UNEQUIP_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_RUNE_UNEQUIP_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_RUNE_UNEQUIP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_RUNE_UNEQUIP_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RuneEquipSlot;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_EQUIP_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_RUNE_EQUIP_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_RUNEEQUIP_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_RUNEEQUIP_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_RuneEquipInfo                 m_RuneEquipInfo;                                          // 0x0028(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_RUNE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERewardReason           m_RewardReason;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FCommonSource_RuneInfo                      m_RuneInfo;                                               // 0x002C(0x0010) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_EQUIP_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_RUNE_EQUIP_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_RuneEquipSlot;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_RuneIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_RuneGrade;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERuneSetOption          m_RuneSetOption;                                          // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_RUNE_TOTAL_INFO_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_RUNE_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERunePreset             m_RunePreset;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_RuneInfo>              m_arrayRune;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_RuneEquipInfo>         m_arrayRuneEquip;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_RUNE_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_RUNE_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_RUNE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_RUNE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ERuneNetResult          m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_PARTY_DUNGEON_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_PARTY_DUNGEON_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCanPlay;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_PARTY_DUNGEON_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_PARTY_DUNGEON_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_DISMANTLE_ITEM_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_DISMANTLE_ITEM_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCanPlay;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_DISMANTLE_ITEM_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_DISMANTLE_ITEM_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_CONSUMABLE_BUY_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_CONSUMABLE_BUY_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCanPlay;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_CONSUMABLE_BUY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_CONSUMABLE_BUY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_QUEST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_QUEST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_QUEST_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_QUEST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_QuestIndex;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_DUNGEON_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_DUNGEON_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ScheduleDungeonIndex;                                   // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_DUNGEON_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_DUNGEON_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ScheduleStatusInfo
// 0x0010
struct FCommonSource_ScheduleStatusInfo
{
	int                                                m_ScheduleIndex;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EScheduleReason         m_ScheduleReason;                                         // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                m_UseCount;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_UseResourcePrice;                                       // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SCHEDULER_RESULT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SCHEDULER_RESULT_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ScheduleStatusInfo>    m_arrayScheduleStatusInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SCHEDULER_CONTINUE_CMD
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SCHEDULER_CONTINUE_CMD : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_SCHEDULER_PLAY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SCHEDULER_PLAY_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ScheduleIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_QUIT_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SCHEDULER_QUIT_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ScheduleStatusInfo>    m_arrayScheduleStatusInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SCHEDULER_QUIT_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SCHEDULER_QUIT_SYN : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayScheduleIndex;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsPause;                                                // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_START_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SCHEDULER_START_ACK : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayScheduleIndex;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ScheduleDungeonInfo
// 0x0008
struct FCommonSource_ScheduleDungeonInfo
{
	int                                                m_ScheduleDungeonIndex;                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ScheduleExtraInfo
// 0x0028
struct FCommonSource_ScheduleExtraInfo
{
	int                                                m_WarpHPPercent;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ResurrectionCount;                                      // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsRecoveryExp;                                          // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	TArray<FCommonSource_CommonSource_EItemGrade>      m_ArrayDismantleItemGrade;                                // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PartyDungeonMapIndex;                                   // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_PartyDungeonDifficulty;                                 // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SCHEDULER_START_SYN
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_SCHEDULER_START_SYN : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayScheduleIndex;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ScheduleDungeonInfo>   m_arrayDungeonInfo;                                       // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_ScheduleExtraInfo             m_ExtraInfo;                                              // 0x0048(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.ScheduleInfo
// 0x000C
struct FCommonSource_ScheduleInfo
{
	int                                                m_ScheduleIndex;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EScheduleState          m_ScheduleState;                                          // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EScheduleReason         m_ScheduleReason;                                         // 0x0005(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                m_RemainCount;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SCHEDULER_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SCHEDULER_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ScheduleInfo>          m_arrayScheduleInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SCHEDULER_TOTAL_INFO_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SCHEDULER_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{
	TArray<int>                                        m_arrayScheduleDungeonIndex;                              // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SCHEDULER_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SCHEDULER_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ESchedulerNetResult     m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.SealedStoneEnchantOption
// 0x000C
struct FCommonSource_SealedStoneEnchantOption
{
	int                                                m_Level;                                                  // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MeterialItemCount;                                      // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsTranscendence;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_ENCHANTOPTION_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_ENCHANTOPTION_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_SealedStoneEnchantOption> m_arrayEnchantOption;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_ENCHANTOPTION_CHANGE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_ENCHANTOPTION_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_SealedStoneEnchantOption> m_arrayEnchantOption;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_ENCHANTOPTION_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_ENCHANTOPTION_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_SealedStoneEnchantOption> m_arrayEnchantOption;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.UserSealedStoneInfo
// 0x0028
struct FCommonSource_UserSealedStoneInfo
{
	FCommonSource_CommonSource_ESealedStoneType        m_SealedStoneType;                                        // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_Level;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsTranscendence;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_ParamInfo>             m_arrayBuffParam;                                         // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_BuffTime;                                               // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_TRANSCENDENCE_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_TRANSCENDENCE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_UserSealedStoneInfo           m_SealedStoneInfo;                                        // 0x0028(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_TRANSCENDENCE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_TRANSCENDENCE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ESealedStoneType        m_SealedStoneType;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_TRANSCENDENCE_ACTIVATION_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_TRANSCENDENCE_ACTIVATION_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ESealedStoneType        m_SealedStoneType;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SEALEDESSENCE_USE_ACTIVE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SEALEDESSENCE_USE_ACTIVE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_SEALEDESSENCE_USE_ACTIVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SEALEDESSENCE_USE_ACTIVE_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsActive;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.UserSealedEssenceInfo
// 0x0028
struct FCommonSource_UserSealedEssenceInfo
{
	int                                                m_TotalBuffTime;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ParamInfo>             m_arrayTotalBuffParam;                                    // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ParamInfo>             m_arraySetBuffParam;                                      // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SEALEDESSENCE_INFO_CHANGE_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_SEALEDESSENCE_INFO_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_UserSealedEssenceInfo         m_SealedEssenceInfo;                                      // 0x0028(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SEALEDESSENCE_USE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SEALEDESSENCE_USE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_SEALEDESSENCE_USE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SEALEDESSENCE_USE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_SEALEDESSENCE_GET_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SEALEDESSENCE_GET_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SealedEssenceCount;                                     // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SEALEDESSENCE_GET_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SEALEDESSENCE_GET_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SealedEssenceCount;                                     // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MaterialItemIndex;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_ENCHANT_ACK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_ENCHANT_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ESealedStoneEnchantType m_SealedStoneEnchantType;                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_UserSealedStoneInfo           m_SealedStoneInfo;                                        // 0x0030(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_ENCHANT_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_ENCHANT_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ESealedStoneType        m_SealedStoneType;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MaterialItemIndex;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ProbControlItemCount;                                   // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_ACTIVE_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_ACTIVE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_UserSealedStoneInfo           m_SealedStoneInfo;                                        // 0x0028(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_ACTIVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_ACTIVE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ESealedStoneType        m_SealedStoneType;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MaterialItemIndex;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_ACTIVE_POSSIBLE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_ACTIVE_POSSIBLE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ESealedStoneType        m_SealedStoneType;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_PLAYER_SELECT_INFO_CMD
// 0x0038 (0x0060 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_UserSealedStoneInfo>   m_arrayUserSealedStoneInfo;                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_UserSealedEssenceInfo         m_SealedEssenceInfo;                                      // 0x0038(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.ServerGroupDefineInfo
// 0x0008
struct FCommonSource_ServerGroupDefineInfo
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_NeedJoinGuildLevel;                                     // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SERVER_GROUPDATA_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SERVER_GROUPDATA_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ServerGroupDefineInfo> m_arrayGroupDataInfo;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SEALEDSTONE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SEALEDSTONE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ESealedStoneNetResult   m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SERVERINVASION_OBJECT_DESTROY_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_OBJECT_DESTROY_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_InvasionObjectInfoIndex;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SERVERINVASION_OBJECT_DEAD_NOTICE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_OBJECT_DEAD_NOTICE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_InvasionObjectInfoIndex;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_OBJECT_DEAD_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_OBJECT_DEAD_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_InvasionObjectInfoIndex;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_KillerName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsHideNickname;                                         // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SERVERINVASION_OBJECT_READY_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_OBJECT_READY_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_InvasionObjectInfoIndex;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_SpawnRemainTime;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_OBJECT_CREATE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_OBJECT_CREATE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_InvasionObjectInfoIndex;                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsShowMessage;                                          // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SERVERINVASION_INGAME_INFO_CHANGE_MYSERVER_APPLIED_GUILD_COUNT_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_INGAME_INFO_CHANGE_MYSERVER_APPLIED_GUILD_COUNT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MyServerAppliedGuildCount;                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ServerInvasionAttackUserExistInfo
// 0x0008
struct FCommonSource_ServerInvasionAttackUserExistInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AttackUserCount;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_INGAME_INFO_CHANGE_ATTACK_USER_EXIST_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_INGAME_INFO_CHANGE_ATTACK_USER_EXIST_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ServerInvasionAttackUserExistInfo> m_arrayAttackUserExistInfo;                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_INGAME_INFO_CHANGE_BANNEDTIME_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_INGAME_INFO_CHANGE_BANNEDTIME_CMD : public FCommonSource_BaseProtocol
{
	int64_t                                            m_RemainInvasionBannedTime;                               // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_INGAME_INFO_CMD
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_INGAME_INFO_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EServerInvasionUserType m_ServerInvasionUserType;                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_ServerInvasionEnterOrder;                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerInvasionGuildEnterOrder;                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_KillCount;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AttackKillCount;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DefenceKillCount;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AssistCount;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DeathCount;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PKPoint;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_RemainInvasionBannedTime;                               // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PartNum;                                                // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyServerAppliedGuildCount;                              // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ServerInvasionAttackUserExistInfo> m_arrayAttackUserExistInfo;                               // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_INGAME_INFO_CHANGE_KILLCOUNT_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_INGAME_INFO_CHANGE_KILLCOUNT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_KillCount;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AttackKillCount;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DefenceKillCount;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_AssistCount;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DeathCount;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PKPoint;                                                // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ServerInvasionPossibleServerInfo
// 0x0018
struct FCommonSource_ServerInvasionPossibleServerInfo
{
	struct FString                                     m_GroupName;                                              // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsPossible;                                             // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SERVERINVASION_POSSIBLE_SERVER_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_POSSIBLE_SERVER_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ServerInvasionPossibleServerInfo> m_arrayPossibleServerInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_POSSIBLE_SERVER_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_POSSIBLE_SERVER_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_SERVERINVASION_PK_MYINFO_CMD
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_PK_MYINFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_WorldDungeonPKInfo            m_MyPkRankingInfo;                                        // 0x0028(0x0058) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_PK_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_PK_LIST_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<struct FCommonSource_WorldDungeonPKInfo>    m_arrayWorldDungeonPK;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_APPLY_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_APPLY_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SERVERINVASION_PK_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_PK_LIST_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SERVERINVASION_APPLY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_APPLY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ServerInvasionServerInfo
// 0x0020
struct FCommonSource_ServerInvasionServerInfo
{
	int                                                m_SeverID;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ApplyGuildCount;                                        // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ServerInvasionServerGroupInfo
// 0x0020
struct FCommonSource_ServerInvasionServerGroupInfo
{
	struct FString                                     m_GroupName;                                              // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ServerInvasionServerInfo> m_arrayServerInfo;                                        // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_SERVER_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_SERVER_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ServerInvasionServerGroupInfo> m_arrayServerGroupInfo;                                   // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_SERVER_LIST_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_SERVER_LIST_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_SERVERINVASION_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.ServerInvasionStateInfo
// 0x0020
struct FCommonSource_ServerInvasionStateInfo
{
	FCommonSource_CommonSource_EServerInvasionState    m_ServerInvasionState;                                    // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	int64_t                                            m_RemainTime;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ApplyServerName;                                        // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ServerInvasionEnterGuildMemberInfo
// 0x0018
struct FCommonSource_ServerInvasionEnterGuildMemberInfo
{
	struct FString                                     m_PlayerName;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_Level;                                                  // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ObjectIndex;                                            // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_INFO_CMD
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ServerInvasionStateInfo       m_ServerInvasionStateInfo;                                // 0x0028(0x0020) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_ServerInvasionEnterGuildMemberInfo> m_arrayEnterGuildMemberInfo;                              // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ServerInvasionQuestFinishCount;                         // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	int64_t                                            m_RemainInvasionBannedTime;                               // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildMemberCount;                                       // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ServerInvasionMessageInfo
// 0x0028
struct FCommonSource_ServerInvasionMessageInfo
{
	FCommonSource_CommonSource_EServerInvasionMessageType m_ServerInvasionMessageType;                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     m_ApplyPlayerName;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_ApplyServerName;                                        // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_MESSAGE_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_MESSAGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ServerInvasionMessageInfo     m_ServerInvasionMessageInfo;                              // 0x0028(0x0028) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_STATE_INFO_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_STATE_INFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ServerInvasionStateInfo       m_ServerInvasionStateInfo;                                // 0x0028(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SERVERINVASION_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EServerInvasionNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SERVERINVASION_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SERVERINVASION_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_SERVER_MIGRATION_TIME_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SERVER_MIGRATION_TIME_CMD : public FCommonSource_BaseProtocol
{
	float                                              m_StartRemainTime;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_EndRemainTime;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SERVER_MIGRATION_START_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SERVER_MIGRATION_START_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_SERVER_MIGRATION_START_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SERVER_MIGRATION_START_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ServerID;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_ItemSerial;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ServerMigrationPlayerInfo
// 0x0020
struct FCommonSource_ServerMigrationPlayerInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     m_PlayerName;                                             // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVER_MIGRATION_USER_INFO_ACK
// 0x00B8 (0x00E0 - 0x0028)
struct FCommonSource_CG_SERVER_MIGRATION_USER_INFO_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_StartUnixTime;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndUnixTime;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ServerMigrationPlayerInfo> m_arrayPlayerInfo;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayCheckGuild;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayCheckGuildJoinApply;                               // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayCheckLetter;                                       // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_CheckExchange1;                                         // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_CheckExchange2;                                         // 0x0079(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x007A(0x0006) MISSED OFFSET
	TArray<int64_t>                                    m_arrayCheckCashShop;                                     // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayCheckDeathPenalty;                                 // 0x0090(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_CheckTown;                                              // 0x00A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	TArray<int64_t>                                    m_arrayCheckEquipPreset1;                                 // 0x00A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int64_t>                                    m_arrayCheckEquipPreset2;                                 // 0x00B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_CheckHistory;                                           // 0x00C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00C9(0x0003) MISSED OFFSET
	float                                              m_HistoryRemainTime;                                      // 0x00CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int64_t>                                    m_arrayCheckCastleWarMercenary;                           // 0x00D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVER_MIGRATION_USER_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SERVER_MIGRATION_USER_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.ServerMigrationServerGroupInfo
// 0x0018
struct FCommonSource_ServerMigrationServerGroupInfo
{
	int                                                m_ServerGroup;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_ServerGroupName;                                        // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ServerMigrationServerInfo
// 0x0020
struct FCommonSource_ServerMigrationServerInfo
{
	int                                                m_ServerGroup;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ServerID;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ServerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EServerMigrationServerState m_ServerState;                                            // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                m_PlayerCount;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SERVER_MIGRATION_SERVER_LIST_INFO_ACK
// 0x0048 (0x0070 - 0x0028)
struct FCommonSource_CG_SERVER_MIGRATION_SERVER_LIST_INFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_MyServerGroup;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ServerMigrationServerGroupInfo> m_arrayServerGroupInfo;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ServerMigrationServerInfo> m_arrayServerInfo;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ServerMigrationServerInfo> m_arrayRecommendServerInfo;                               // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayTargetServer;                                      // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SERVER_MIGRATION_SERVER_LIST_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SERVER_MIGRATION_SERVER_LIST_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_SERVER_MIGRATION_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SERVER_MIGRATION_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EServerMigrationNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDSHADOWDUNGEON_BOSS_PREPARE_SPAWN_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLDSHADOWDUNGEON_BOSS_PREPARE_SPAWN_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BossIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RemainingTime;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDSHADOWDUNGEON_TIER_RESET_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLDSHADOWDUNGEON_TIER_RESET_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_ChangeTierIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_ChangeHellPoint;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Ranking;                                                // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDSHADOWDUNGEON_TIER_RESET_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_WORLDSHADOWDUNGEON_TIER_RESET_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_WORLDSHADOWDUNGEON_ACTIVATE_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_WORLDSHADOWDUNGEON_ACTIVATE_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsActivate;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_StartTime;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ActivatePlusPointPercent;                               // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemDropBonusPercent;                                   // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPointTakeEnabled;                                     // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBossSpawn;                                            // 0x0049(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsFinalBossKilled;                                      // 0x004A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x004B(0x0005) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_ANONYMOUS_INFO_CHANGE_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_ANONYMOUS_INFO_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.ShadowSeasonRankerInfo
// 0x0058
struct FCommonSource_ShadowSeasonRankerInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerIndex;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonGradeIndex;                                       // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonRanking;                                          // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonPoint;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0040(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_SEASON_RANKING_INFO_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_SEASON_RANKING_INFO_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ClassType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MySeasonRanking;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MySeasonPoint;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ShadowSeasonRankerInfo> m_arrayRankerInfo;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_SEASON_RANKING_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_SEASON_RANKING_INFO_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ClassType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_ELITEMONSTER_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_ELITEMONSTER_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsActive;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ShadowDungeonBossInfo
// 0x0068
struct FCommonSource_ShadowDungeonBossInfo
{
	int                                                m_SpawnIndex;                                             // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapIndex;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_BossIndex;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	int64_t                                            m_SpawnTime;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_RemainTime;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAlive;                                                // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	struct FCommonSource_GuildDisplayInfo              m_GuildDisplayInfo;                                       // 0x0020(0x0040) (Edit, BlueprintVisible)
	bool                                               m_IsActivateSpawn;                                        // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_BOSS_STATE_CHANGE_CMD
// 0x0068 (0x0090 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_BOSS_STATE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ShadowDungeonBossInfo         m_ShadowDungeonBossInfo;                                  // 0x0028(0x0068) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_BOSS_INFO_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_BOSS_INFO_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EMapType                m_MapType;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_ShadowDungeonBossInfo> m_arrayShadowDungeonBossInfo;                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_BOSS_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_BOSS_INFO_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EMapType                m_MapType;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_ACTIVATE_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_ACTIVATE_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsActivate;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              m_RemainTime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_StartTime;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ActivatePlusPointPercent;                               // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemDropBonusPercent;                                   // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPointTakeEnabled;                                     // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBossSpawn;                                            // 0x0049(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x004A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_TIER_CHANGE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_TIER_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChangeTierIndex;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ShadowDungeonRankInfo
// 0x0020
struct FCommonSource_ShadowDungeonRankInfo
{
	int                                                m_SeasonGradeIndex;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonRanking;                                          // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonPoint;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ShadowCoin;                                             // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_SeasonNumber;                                           // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSeasonDoing;                                          // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	float                                              m_SeasonRemainTime;                                       // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PrevSeasonGradeIndex;                                   // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ShadowDungeonMapInfo
// 0x0020
struct FCommonSource_ShadowDungeonMapInfo
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOpen;                                                 // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              m_RemainOpenTime;                                         // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ShadowActiveInfo
// 0x0028
struct FCommonSource_ShadowActiveInfo
{
	FCommonSource_CommonSource_EMapType                m_MapType;                                                // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsActive;                                               // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              m_RemainOpenTime;                                         // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_StartTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ActivatePlusPointPercent;                               // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemDropBonusPercent;                                   // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsPointTakeEnabled;                                     // 0x0020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsBossSpawn;                                            // 0x0021(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0022(0x0002) MISSED OFFSET
	int                                                m_MaxEliteSpawnGroupCount;                                // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.ShadowDungeonInfo
// 0x0050
struct FCommonSource_ShadowDungeonInfo
{
	struct FCommonSource_ShadowDungeonMapInfo          m_ShadowDungeonMapInfo;                                   // 0x0000(0x0020) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_ShadowActiveInfo>      m_arrayShadowActiveInfo;                                  // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_ShadowDungeonBossInfo> m_arrayShadowDungeonBossInfo;                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_MapState>              m_arrayShadowDungeonServiceState;                         // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_TOTAL_INFO_ACK
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_ShadowDungeonRankInfo         m_ShadowDungeonRankInfo;                                  // 0x0028(0x0020) (Edit, BlueprintVisible)
	TArray<struct FCommonSource_ShadowDungeonInfo>     m_arrayShadowDungeonInfo;                                 // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_ShadowDungeonRankInfo         m_WorldShadowDungeonRankInfo;                             // 0x0058(0x0020) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_SHADOWDUNGEON_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SHADOWDUNGEON_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EShadowDungeonNetResult m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.ShopInfo
// 0x0008
struct FCommonSource_ShopInfo
{
	int                                                m_ShopItemIndex;                                          // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ItemCount;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SHOP_GUILDSHOP_COUNT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SHOP_GUILDSHOP_COUNT_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ShopInfo>              m_arrayGuildShopInfo;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SHOP_BATCH_BUYINFO_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SHOP_BATCH_BUYINFO_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ShopInfo>              m_arrayBulkBuyInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SHOP_BATCH_BUYINFO_CHANGE_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SHOP_BATCH_BUYINFO_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_NpcSerial;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NoneNpcShopIndex;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ShopInfo>              m_arrayBulkBuyInfo;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SHOP_BATCH_BUYINFO_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SHOP_BATCH_BUYINFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_NpcSerial;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ShopIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_ShopInfo>              m_arrayBulkBuyInfo;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SHOP_BATCH_BUYINFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SHOP_BATCH_BUYINFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_NpcSerial;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NoneNpcShopIndex;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SHOP_BATCH_BUY_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SHOP_BATCH_BUY_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ShopInfo>              m_arrayShopInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SHOP_BATCH_BUY_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SHOP_BATCH_BUY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_NpcSerial;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NoneNpcShopIndex;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SHOP_BUY_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SHOP_BUY_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ShopInfo>              m_arrayShopInfo;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SHOP_BUY_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SHOP_BUY_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_NpcSerial;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NoneNpcShopIndex;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_ShopInfo                      m_ShopInfo;                                               // 0x0030(0x0008) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SHOP_TOTAL_INFO_ACK
// 0x0050 (0x0078 - 0x0028)
struct FCommonSource_CG_SHOP_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_NpcSerial;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ShopIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyBadge;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyGuildCoin;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MyRealmwarCoin;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ResetRemainTime;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_ResetWeeklyRemainTime;                                  // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ShopInfo>              m_arrayShopInfo;                                          // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_MyCastlewarCoin;                                        // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_ShopInfo>              m_arrayBulkBuyInfo;                                       // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_CastleWarContinueDefenseWinCount;                       // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_InvasionCurrency;                                       // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SHOP_TOTAL_INFO_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SHOP_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_NpcSerial;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NoneNpcShopIndex;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_SHOP_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SHOP_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EShopNetResult          m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_SET_DETECT_TARGET_SKILL_OBJECT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_SET_DETECT_TARGET_SKILL_OBJECT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDetectTargetSkillObject;                              // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_SET_DETECT_TARGET_SKILL_OBJECT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_SET_DETECT_TARGET_SKILL_OBJECT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_TRANSCEND_RESTORE_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_SKILL_TRANSCEND_RESTORE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FCommonSource_SkillInfo                     m_SkillInfo;                                              // 0x0030(0x0038) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SKILL_TRANSCEND_RESTORE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_TRANSCEND_RESTORE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_TRANSCEND_RESET_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_SKILL_TRANSCEND_RESET_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FCommonSource_SkillInfo                     m_SkillInfo;                                              // 0x0030(0x0038) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SKILL_TRANSCEND_ACK
// 0x0040 (0x0068 - 0x0028)
struct FCommonSource_CG_SKILL_TRANSCEND_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ESkillTranscendResultType m_SkillTranscendResultType;                               // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FCommonSource_SkillInfo                     m_SkillInfo;                                              // 0x0030(0x0038) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_SKILL_TRANSCEND_RESET_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_TRANSCEND_RESET_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_TRANSCEND_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_TRANSCEND_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_SUMMON_NOTIFY_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_SKILL_SUMMON_NOTIFY_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_AttackerSerial;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     m_OwnerName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_SummonName;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SKILL_SET_USE_FIRST_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_SET_USE_FIRST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsUseFirst;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_SET_AUTO_TARGET_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_SET_AUTO_TARGET_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAutoTarget;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_SET_USE_FIRST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_SET_USE_FIRST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsUseFirst;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_SET_AUTO_TARGET_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_SET_AUTO_TARGET_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsAutoTarget;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_ENCHANT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_ENCHANT_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_OldSkillEnchantLevel;                                   // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_SkillEnchantLevel;                                      // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ESkillEnchantResult     m_SkillEnchantResult;                                     // 0x002E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_ENCHANT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_SKILL_ENCHANT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SkillIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_SKILL_LEARN_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SKILL_LEARN_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_SkillInfo>             m_arraySkillInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SKILL_PLAYER_SELECT_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_SKILL_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_SkillInfo>             m_arraySkillInfo;                                         // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SKILL_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SKILL_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_ESkillNetResult         m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                m_ClientCaseSerial;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_PARAM_CHECK_L210_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_PARAM_CHECK_L210_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ParamType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_PARAM_CHECK_L210_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_PARAM_CHECK_L210_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_ParamType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_Double                        m_ParamValue;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_USER_PING_L210_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_USER_PING_L210_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_USER_PING_L210_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_USER_PING_L210_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_ServerRandom;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_USER_PING_L210_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_USER_PING_L210_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ServerRandom;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_USER_HEARTBEAT_NAME_CHANGER_L210_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_USER_HEARTBEAT_NAME_CHANGER_L210_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_USER_HEARTBEAT_NAME_CHANGER_L210_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_USER_HEARTBEAT_NAME_CHANGER_L210_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_USER_OBSERVE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_USER_OBSERVE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ObserverLevel;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_USER_XIGNCODE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_USER_XIGNCODE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_USER_XIGNCODE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_USER_XIGNCODE_SYN : public FCommonSource_BaseProtocol
{
	TArray<unsigned char>                              m_XigncodeData;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_USER_XIGNCODE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_USER_XIGNCODE_CMD : public FCommonSource_BaseProtocol
{
	TArray<unsigned char>                              m_XigncodeData;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_USER_HEARTBEAT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_USER_HEARTBEAT_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_ServerTime;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_USER_HEARTBEAT_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_USER_HEARTBEAT_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_USER_CHEAT_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_USER_CHEAT_ACK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Cheat;                                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_USER_CHEAT_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_USER_CHEAT_SYN : public FCommonSource_BaseProtocol
{
	struct FString                                     m_Cheat;                                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_SKILL_SUMMON_EFFECT_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_SKILL_SUMMON_EFFECT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_AttackerSerial;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_EffectTimeSec;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Angle;                                                  // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_Pos;                                                    // 0x0034(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_USER_RESOURCE_RANDOM_BOX_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_USER_RESOURCE_RANDOM_BOX_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ShopIndex;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.ResourceChangeInfo
// 0x0020
struct FCommonSource_ResourceChangeInfo
{
	FCommonSource_CommonSource_ERewardReason           m_RewardReason;                                           // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ReasonIndex;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EResourceType           m_ResourceType;                                           // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	int64_t                                            m_ChangeValue;                                            // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_ResultValue;                                            // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_USER_RESOURCE_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_USER_RESOURCE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_ResourceChangeInfo>    m_arrayResourceChange;                                    // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_USER_PLAYER_LEVEL_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_USER_PLAYER_LEVEL_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PlayerLevel;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_CurHp;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_CurMp;                                                  // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_USER_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_USER_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EUserNetResult          m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_COSTUME_GRADE_LIMIT_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_COSTUME_GRADE_LIMIT_CMD : public FCommonSource_BaseProtocol
{
	unsigned char                                      CostumeSkinType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_TRANSFORM_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_VEHICLE_TRANSFORM_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleIndex;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_IsVehicleTransform;                                     // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_TRANSFORM_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_VEHICLE_TRANSFORM_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_VEHICLE_TRANSFORM_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_TRANSFORM_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_VehicleIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsVehicleTransform;                                     // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsIncludeEffect;                                        // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_DECIDE_DELETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_DECIDE_DELETE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_DelteSlotIndex;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_DECIDE_ADD_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_VEHICLE_DECIDE_ADD_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_VehicleDecideInfo             m_VehicleChangeInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_VEHICLE_DECIDE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_DECIDE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_VehicleIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_DECIDE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_DECIDE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_DecideSlotIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_DRAW_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_VEHICLE_DRAW_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_VehicleDecideInfo             m_VehicleChangeInfo;                                      // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_VEHICLE_DRAW_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_DRAW_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SlotIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EVehicleType            m_VehicleType;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_WAY_POINT_GOLD_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_WAY_POINT_GOLD_ACK : public FCommonSource_BaseProtocol
{
	int64_t                                            m_NeedGold;                                               // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_VEHICLE_WAY_POINT_GOLD_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_WAY_POINT_GOLD_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_NaviVolumeAreaIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_WAY_POINT_MOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_WAY_POINT_MOVE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_NaviVolumeAreaIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_QuestIndex;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_VEHICLE_WAY_POINT_MOVE_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_VEHICLE_WAY_POINT_MOVE_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_VEHICLE_RANDOM_BOX_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_VEHICLE_RANDOM_BOX_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VEHICLE_SAVE_POINT_MOVE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_SAVE_POINT_MOVE_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_SavePointSlot;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_SAVE_POINT_MOVE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_SAVE_POINT_MOVE_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_SavePointSlot;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_EXCHANGE_ORDER_SAVE_POINT_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_VEHICLE_EXCHANGE_ORDER_SAVE_POINT_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_VEHICLE_EXCHANGE_ORDER_SAVE_POINT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_EXCHANGE_ORDER_SAVE_POINT_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_BaseOrderNo;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_TargetOrderNo;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_EDIT_SAVE_POINT_MEMO_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_VEHICLE_EDIT_SAVE_POINT_MEMO_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_SavePointOrderNo;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_Memo;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VEHICLE_EDIT_SAVE_POINT_MEMO_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_VEHICLE_EDIT_SAVE_POINT_MEMO_SYN : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_SavePointOrderNo;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     m_Memo;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VEHICLE_DELETE_SAVE_POINT_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_DELETE_SAVE_POINT_ACK : public FCommonSource_BaseProtocol
{
	unsigned char                                      m_SavePointOrderNo;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_DELETE_SAVE_POINT_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_DELETE_SAVE_POINT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SavePointOrderNo;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_ADD_SAVE_POINT_ACK
// 0x0030 (0x0058 - 0x0028)
struct FCommonSource_CG_VEHICLE_ADD_SAVE_POINT_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_SavePointInfo                 m_SavePointInfo;                                          // 0x0028(0x0030) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_VEHICLE_ADD_SAVE_POINT_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_VEHICLE_ADD_SAVE_POINT_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_NaviVolumeAreaIndex;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NaviAreaIndex;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_Memo;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VEHICLE_SAVE_POINT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_VEHICLE_SAVE_POINT_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_SavePointInfo>         m_arraySavePointInfo;                                     // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VEHICLE_CHANGE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_VEHICLE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_VehicleInfo>           m_arrayVehicleInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ReasonIndex;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.VehicleComposeInfo
// 0x0018
struct FCommonSource_VehicleComposeInfo
{
	unsigned char                                      m_ItemGrade;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ComposeCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        m_arrayVehicle;                                           // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.VehicleCountInfo
// 0x0008
struct FCommonSource_VehicleCountInfo
{
	int                                                m_VehicleIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_VEHICLE_BUNDLE_COMPOSE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_VEHICLE_BUNDLE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_VehicleComposeInfo>    m_arrayVehicleComposeInfo;                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_VehicleCountInfo>      m_arrayMaterialVehicleCountInfo;                          // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VEHICLE_BUNDLE_COMPOSE_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_VEHICLE_BUNDLE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_VEHICLE_COMPOSE_ACK
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_VEHICLE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_VehicleCountInfo>      m_arrayMaterialVehicleCountInfo;                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_VehicleInfo>           m_arrayVehicleInfo;                                       // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      m_MaxGrade;                                               // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_COMPOSE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_VEHICLE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_VehicleCountInfo>      m_arrayVehicleInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VEHICLE_UNEQUIP_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_UNEQUIP_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_VehicleIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_UNEQUIP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_UNEQUIP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_VehicleIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_EQUIP_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_EQUIP_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_VehicleIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldVehicleIndex;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_VEHICLE_TOTAL_INFO_ACK
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_VEHICLE_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_VEHICLE_EQUIP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_EQUIP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_VehicleIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_VEHICLE_TOTAL_INFO_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_VEHICLE_TOTAL_INFO_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_VehicleInfo>           m_arrayVehicleInfo;                                       // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_VehicleDecideInfo>     m_arrayVehicleDecideInfo;                                 // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VEHICLE_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_VEHICLE_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_VEHICLE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_VEHICLE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EVehicleNetResult       m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                m_ClientCaseSerial;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_DECIDE_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_DECIDE_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_WeaponShapeIndex;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_DECIDE_DELETE_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_DECIDE_DELETE_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_DelteSlotIndex;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_DECIDE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_DECIDE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_DecideSlotIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_DECIDE_ADD_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_DECIDE_ADD_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_WeaponShapeDecideInfo         m_WeaponShapeChangeInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_DRAW_CHANGE_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_DRAW_CHANGE_ACK : public FCommonSource_BaseProtocol
{
	struct FCommonSource_WeaponShapeDecideInfo         m_WeaponShaperChangeInfo;                                 // 0x0028(0x0010) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_DRAW_CHANGE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_DRAW_CHANGE_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SlotIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClassType              m_SelectedClassType;                                      // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_RANDOM_BOX_CMD
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_RANDOM_BOX_CMD : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_RewardInfo>            m_arrayRewardInfo;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<unsigned char>                              m_arrayWeaponShapeSerial;                                 // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.WeaponShapeGradeComposeInfo
// 0x0008
struct FCommonSource_WeaponShapeGradeComposeInfo
{
	FCommonSource_CommonSource_EGrade                  m_Grade;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_ComposeCount;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.WeaponShapeComposeInfo
// 0x0018
struct FCommonSource_WeaponShapeComposeInfo
{
	FCommonSource_CommonSource_EGrade                  m_Grade;                                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayWeaponShape;                                       // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_BUNDLE_COMPOSE_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_BUNDLE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_WeaponShapeGradeComposeInfo> m_arrayGradeComposeInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_WeaponShapeComposeInfo> m_arrayComposeInfo;                                       // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_VEHICLE_EQUIP_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_VEHICLE_EQUIP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_VehicleIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_OldVehicleIndex;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_BUNDLE_COMPOSE_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_BUNDLE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EClassType              m_ExclusionClassType;                                     // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_COMPOSE_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_COMPOSE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EGrade                  m_Grade;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayWeaponShape;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.WeaponShapeInfo
// 0x000C
struct FCommonSource_WeaponShapeInfo
{
	int                                                m_WeaponShapeIndex;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_WeaponShapeCount;                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DecideCount;                                            // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_COMPOSE_SYN
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_COMPOSE_SYN : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_WeaponShapeInfo>       m_arrayMaterialWeaponShape;                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_CHANGE_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_CHANGE_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_WeaponShapeInfo               m_WeaponShapeInfo;                                        // 0x0028(0x000C) (Edit, BlueprintVisible)
	int                                                m_ReasonIndex;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_LOOK_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_LOOK_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLook;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_LOOK_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_LOOK_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsLook;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_EQUIP_CMD
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_EQUIP_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_ObjectSerial;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EquipWeaponShapeIndex;                                  // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_LOOK_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_LOOK_SYN : public FCommonSource_BaseProtocol
{
	bool                                               m_IsLook;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_EQUIP_ACK
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_EQUIP_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_WeaponShapeIndex;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_EQUIP_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_EQUIP_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_WeaponShapeIndex;                                       // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_PLAYER_SELECT_INFO_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_PLAYER_SELECT_INFO_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_EquipWeaponShapeIndex;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_WeaponShapeIsLook;                                      // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<struct FCommonSource_WeaponShapeInfo>       m_arrayWeaponShape;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCommonSource_WeaponShapeDecideInfo> m_arrayWeaponShapeDecide;                                 // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WEAPONSHAPE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WEAPONSHAPE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EWeaponShapeNetResult   m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_WIN_REWARD_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_WIN_REWARD_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldDungeonNetResult  m_Result;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayRewardList;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_PK_COUNT_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_PK_COUNT_CMD : public FCommonSource_BaseProtocol
{
	int                                                m_MapIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_PkKillCount;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_NeedPkKillCount;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.WorldDungeonWinGuild
// 0x0090
struct FCommonSource_WorldDungeonWinGuild
{
	int                                                m_SeasonNum;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DungeonTier;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GroupID;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     m_GroupName;                                              // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ServerID;                                               // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_GuildDBKey;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0050(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildBattlePower;                                       // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	int64_t                                            m_ClearTime;                                              // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_WINGUILD_LIST_ACK
// 0x0020 (0x0048 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_WINGUILD_LIST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_SeasonNum;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Tier;                                                   // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsDungeonOpened;                                        // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_WorldDungeonWinGuild>  m_arrayWinGuildList;                                      // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_WINGUILD_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_WINGUILD_LIST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_SeasonNum;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Tier;                                                   // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_BOSS_CREATE_CMD
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_BOSS_CREATE_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EMonsterGrade           m_MonsterGrade;                                           // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<int>                                        m_arrayBossSpawnIndex;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.WorldDungeonEnterGuildMemberInfo
// 0x0020
struct FCommonSource_WorldDungeonEnterGuildMemberInfo
{
	int64_t                                            m_PlayerDBKey;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_PlayerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_Level;                                                  // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EClassType              m_PlayerClass;                                            // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGuildJob               m_GuildJob;                                               // 0x001D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_ENTER_GUILDMEMBER_CMD
// 0x0028 (0x0050 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_ENTER_GUILDMEMBER_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_WorldDungeonEnterGuildMemberInfo m_WorldDungeonEnterGuildMemberInfo;                       // 0x0028(0x0020) (Edit, BlueprintVisible)
	bool                                               m_IsLogin;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_ENTER_GUILDMEMBER_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_ENTER_GUILDMEMBER_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_WorldDungeonEnterGuildMemberInfo> m_arrayWorldDungeonEnterGuildMember;                      // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_ENTER_GUILDMEMBER_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_ENTER_GUILDMEMBER_LIST_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_PK_MYINFO_CMD
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_PK_MYINFO_CMD : public FCommonSource_BaseProtocol
{
	struct FCommonSource_WorldDungeonPKInfo            m_MyPkRankingInfo;                                        // 0x0028(0x0058) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_PK_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_PK_LIST_ACK : public FCommonSource_BaseProtocol
{
	int                                                m_Tier;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	TArray<struct FCommonSource_WorldDungeonPKInfo>    m_arrayWorldDungeonPK;                                    // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_PK_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_PK_LIST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_Tier;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_ERankingClassType       m_RankingClassType;                                       // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsNextPage;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.WorldDungeonGuildInfo
// 0x0070
struct FCommonSource_WorldDungeonGuildInfo
{
	int                                                m_GroupID;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Tier;                                                   // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_Ranking;                                                // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_TotalRanking;                                           // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GuildMarkInfo                 m_GuildMarkInfo;                                          // 0x0010(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	int64_t                                            m_GuildDBKey;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_ServerName;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GuildBattlePower;                                       // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_GuildLevel;                                             // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildMasterPlayerName;                                  // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ServerID;                                               // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MapChannelIndex;                                        // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.WorldDungeonCurStepInfo
// 0x0078
struct FCommonSource_WorldDungeonCurStepInfo
{
	struct FCommonSource_WorldDungeonGuildInfo         m_GuildInfo;                                              // 0x0000(0x0070) (Edit, BlueprintVisible)
	int                                                m_CurStep;                                                // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_GUILD_CURSTEP_LIST_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_GUILD_CURSTEP_LIST_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_WorldDungeonCurStepInfo> m_arrayWorldDungeonCurStep;                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_GUILD_CURSTEP_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_GUILD_CURSTEP_LIST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_Tier;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_GUILD_LIST_ACK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_GUILD_LIST_ACK : public FCommonSource_BaseProtocol
{
	bool                                               m_IsDoing;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                m_MaxChannelCount;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FCommonSource_WorldDungeonGuildInfo> m_arrayWorldDungeonGuild;                                 // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_GUILD_LIST_SYN
// 0x0008 (0x0030 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_GUILD_LIST_SYN : public FCommonSource_BaseProtocol
{
	int                                                m_Tier;                                                   // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_ShowAll;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_OPEN_INFO_CMD
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_OPEN_INFO_CMD : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldDungeonTier       m_Tier;                                                   // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOpen;                                                 // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	float                                              m_DungeonRemainOpenTime;                                  // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCanEnter;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsShowResult;                                           // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	int                                                m_EndSeason;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.WorldDungeonInfo
// 0x0070
struct FCommonSource_WorldDungeonInfo
{
	int                                                m_DungeonTier;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOpen;                                                 // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              m_DungeonRemainOpenTime;                                  // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DungeonMapIndex;                                        // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsCanEnter;                                             // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                m_MaxChannelCount;                                        // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_ChannelIndex;                                           // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_StartSeason;                                            // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_EndSeason;                                              // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FString                                     m_WinServerName;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_WinGuildName;                                           // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_WinPlayerName;                                          // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FCommonSource_GuildMarkInfo                 m_WinGuildMarkInfo;                                       // 0x0058(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData03[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_CURRENT_INFO_CMD
// 0x0078 (0x00A0 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_CURRENT_INFO_CMD : public FCommonSource_BaseProtocol
{
	bool                                               m_IsDoing;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FCommonSource_WorldDungeonInfo              m_WorldDungeonInfo;                                       // 0x0030(0x0070) (Edit, BlueprintVisible)
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_TOTAL_INFO_ACK
// 0x0010 (0x0038 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_TOTAL_INFO_ACK : public FCommonSource_BaseProtocol
{
	TArray<struct FCommonSource_WorldDungeonInfo>      m_arrayWorldDungeonInfo;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_TOTAL_INFO_SYN
// 0x0000 (0x0028 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_TOTAL_INFO_SYN : public FCommonSource_BaseProtocol
{

};

// ScriptStruct CommonSource.CG_WORLDDUNGEON_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLDDUNGEON_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EWorldDungeonNetResult  m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDWIDE_MOVE_ACK
// 0x0058 (0x0080 - 0x0028)
struct FCommonSource_CG_WORLDWIDE_MOVE_ACK : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	int64_t                                            m_UserDBKey;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GateServerIP;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GateServerPort;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FString                                     m_ChattingServerIP;                                       // 0x0058(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_ChattingServerPort;                                     // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_WorldWideGameAuthSerial;                                // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOnlyLobbyEnter;                                       // 0x0070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                m_MapIndex;                                               // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DungeonDifficulty;                                      // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideReason        m_WorldWideReason;                                        // 0x0079(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x007A(0x0002) MISSED OFFSET
	int                                                m_WorldWideReasonIndex;                                   // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.CG_WORLDWIDE_MOVE_SYN
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLDWIDE_MOVE_SYN : public FCommonSource_BaseProtocol
{
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOnlyLobbyEnter;                                       // 0x0029(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                m_MapIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DungeonDifficulty;                                      // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                m_SelectPortal;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsTownReturn;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IsCashPayment;                                            // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
};

// ScriptStruct CommonSource.CG_WORLDWIDE_NAK
// 0x0018 (0x0040 - 0x0028)
struct FCommonSource_CG_WORLDWIDE_NAK : public FCommonSource_BaseProtocol
{
	struct FString                                     m_RequestProtocol;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EWorldWideNetResult     m_ErrorCode;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.QuickSlot
// 0x0020
struct FCommonSource_QuickSlot
{
	TArray<int>                                        m_arraySkillSlot;                                         // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<int>                                        m_arrayPotionSlot;                                        // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.RuneAttributeInfo
// 0x0008
struct FCommonSource_RuneAttributeInfo
{
	FCommonSource_CommonSource_ERuneAttribute          m_RuneAttribute;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_RuneGrade;                                              // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_SetCount;                                               // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.RuneResonanceInfo
// 0x0008
struct FCommonSource_RuneResonanceInfo
{
	int                                                m_ResonanceGroupID;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_ResonanceGrade;                                         // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.RuneSetOptionInfo
// 0x0008
struct FCommonSource_RuneSetOptionInfo
{
	FCommonSource_CommonSource_ERuneSetOption          m_RuneSetOption;                                          // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EGrade                  m_RuneGrade;                                              // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                m_EnchantStep;                                            // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.UserLogInfo
// 0x0170
struct FCommonSource_UserLogInfo
{
	unsigned char                                      UnknownData00[0x170];                                     // 0x0000(0x0170) MISSED OFFSET
};

// ScriptStruct CommonSource.UserSimpleInfo
// 0x0028
struct FCommonSource_UserSimpleInfo
{
	struct FString                                     m_PlayerName;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_PlayerLevel;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     m_GuildName;                                              // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.EquipVehicleInfo
// 0x0008
struct FCommonSource_EquipVehicleInfo
{
	int                                                m_VehicleIndex;                                           // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_VehicleGrade;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.VehicleAdditionalOptionInfo
// 0x000C
struct FCommonSource_VehicleAdditionalOptionInfo
{
	FCommonSource_CommonSource_ECharParam              m_CharParam;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              m_ParamValue;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};

// ScriptStruct CommonSource.WeaponShapeEquipOption
// 0x000C
struct FCommonSource_WeaponShapeEquipOption
{
	FCommonSource_CommonSource_ESkillParam             m_SkillParam;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                m_SkillIndex;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              m_SkillValue;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.WorldDungeonWinReward
// 0x0020
struct FCommonSource_WorldDungeonWinReward
{
	int                                                m_ServerID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_PlayerDBKey;                                            // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_RewardIndex;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	int64_t                                            m_ExpireTime;                                             // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.WorldDungeonAllianceGuildInfo
// 0x0030
struct FCommonSource_WorldDungeonAllianceGuildInfo
{
	int64_t                                            m_GuildDBKey;                                             // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_GuildName;                                              // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FString                                     m_ServerName;                                             // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	FCommonSource_CommonSource_EWorldDungeonGuildAllianceState m_GuildAllianceState;                                     // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct CommonSource.EnterGuildListInfo
// 0x0018
struct FCommonSource_EnterGuildListInfo
{
	int                                                m_Tier;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_WorldDungeonGuildInfo> m_arrayEnterGuildList;                                    // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};

// ScriptStruct CommonSource.WorldDungeonTime
// 0x0018
struct FCommonSource_WorldDungeonTime
{
	int                                                m_MapIndex;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	int64_t                                            m_StartTime;                                              // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_EndTime;                                                // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct CommonSource.GUserMovePartyMoveInfo
// 0x0038
struct FCommonSource_GUserMovePartyMoveInfo
{
	int64_t                                            m_MoveBeforeServerPartySerial;                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MasterPlayerDBKey;                                      // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_MoveMemberCount;                                        // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	int64_t                                            m_EndTime;                                                // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_WorldPartySerial;                                       // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_MoveDungeonSerial;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_WorldPartyDungeonIndex;                                 // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_WorldPartyDungeonDifficulty;                            // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsLock;                                                 // 0x0035(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
};

// ScriptStruct CommonSource.GUserMoveInfo
// 0x01D0
struct FCommonSource_GUserMoveInfo
{
	int                                                m_ServerID;                                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     m_ServerName;                                             // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int64_t                                            m_AccountDBKey;                                           // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_UserDBKey;                                              // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_PlayerDBKey;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_DBIndex;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                m_LogDBIndex;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_EncodeAccountID;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	int                                                m_GameAuthSerial;                                         // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FCommonSource_LoginUserInfo                 m_LoginUserInfo;                                          // 0x0050(0x00E8) (Edit, BlueprintVisible)
	unsigned char                                      m_GMLevel;                                                // 0x0138(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0139(0x0003) MISSED OFFSET
	int                                                m_ReservationServerID;                                    // 0x013C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     m_ReservationPlayerName;                                  // 0x0140(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               m_IsRefund;                                               // 0x0150(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	int64_t                                            m_LastLogoutTime;                                         // 0x0158(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideType          m_WorldWideType;                                          // 0x0160(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsOnlyLobbyEnter;                                       // 0x0161(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0162(0x0002) MISSED OFFSET
	int                                                m_MapIndex;                                               // 0x0164(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_DungeonDifficulty;                                      // 0x0168(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0169(0x0003) MISSED OFFSET
	struct FVector                                     m_EnterPos;                                               // 0x016C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int64_t                                            m_GuildDBKey;                                             // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               m_IsSecondPassword;                                       // 0x0180(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_ObserverLevel;                                          // 0x0181(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x0182(0x0002) MISSED OFFSET
	int                                                m_EnterPortalIndex;                                       // 0x0184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_GUserMovePartyMoveInfo        m_UserMovePartyMoveInfo;                                  // 0x0188(0x0038) (Edit, BlueprintVisible)
	int                                                m_GoToDestWorldID;                                        // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	FCommonSource_CommonSource_EWorldWideReason        m_WorldWideReason;                                        // 0x01C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x01C5(0x0003) MISSED OFFSET
	int                                                m_WorldWideReasonIndex;                                   // 0x01C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x01CC(0x0004) MISSED OFFSET
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
