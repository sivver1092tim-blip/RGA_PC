#pragma once

// Name: , Version: 1.0.0

#ifdef _MSC_VER
	#pragma pack(push, 0x1)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class CommonSource.AchievementTable
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_AchievementTable : public UObject
{
public:
	class UCommonSource_AchievementInfoSheet*          m_AchievementInfoSheet;                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AchievementMissionSheet*       m_AchievementMissionSheet;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AchievementLevelSheet*         m_AchievementLevelSheet;                                  // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AchievementPeriodSheet*        m_AchievementPeriodSheet;                                 // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AchievementDefineSheet*        m_AchievementDefineSheet;                                 // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AchievementCompareGroupSheet*  m_AchievementCompareGroupSheet;                           // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementTable");
		return ptr;
	}

};


// Class CommonSource.AITable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_AITable : public UObject
{
public:
	class UCommonSource_AIParamSheet*                  m_AIParamSheet;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AISkillSelectorSheet*          m_AISkillSelectorSheet;                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AIPatternSheet*                m_AIPatternSheet;                                         // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AITreeSheet*                   m_AITreeSheet;                                            // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AITable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AITable");
		return ptr;
	}

};


// Class CommonSource.AlchemyTable
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_AlchemyTable : public UObject
{
public:
	class UCommonSource_AlchemyBoardInfoSheet*         m_AlchemyBoardInfoSheet;                                  // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AlchemyInfoSheet*              m_AlchemyInfoSheet;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AlchemyOptionCountSheet*       m_AlchemyOptionCountSheet;                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AlchemyOptionSheet*            m_AlchemyOptionSheet;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AlchemyDefineSheet*            m_AlchemyDefineSheet;                                     // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyTable");
		return ptr;
	}

};


// Class CommonSource.AnimationTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_AnimationTable : public UObject
{
public:
	class UCommonSource_AniInfoSheet*                  m_AniInfoSheet;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AnimationTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AnimationTable");
		return ptr;
	}

};


// Class CommonSource.AvatarTable
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_AvatarTable : public UObject
{
public:
	class UCommonSource_AvatarInfoSheet*               m_AvatarInfoSheet;                                        // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AvatarPoseSheet*               m_AvatarPoseSheet;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AvatarPoseDefineSheet*         m_AvatarPoseDefineSheet;                                  // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AvatarDialogueSheet*           m_AvatarDialogueSheet;                                    // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AvatarGradeSheet*              m_AvatarGradeSheet;                                       // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AvatarDefineSheet*             m_AvatarDefineSheet;                                      // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AdvancementSheet*              m_AdvancementSheet;                                       // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AvatarGaugeSheet*              m_AvatarGaugeSheet;                                       // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AvatarStatuePoseSheet*         m_AvatarStatuePoseSheet;                                  // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarTable");
		return ptr;
	}

};


// Class CommonSource.BalanceChangeTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_BalanceChangeTable : public UObject
{
public:
	class UCommonSource_MapDataChangeSheet*            m_MapDataChangeSheet;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomPackageChangeSheet*      m_RandomPackageChangeSheet;                               // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapDisplayCheckChangeSheet*    m_MapDisplayCheckChangeSheet;                             // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DropExpGoldChangeSheet*        m_DropExpGoldChangeSheet;                                 // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BalanceChangeTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BalanceChangeTable");
		return ptr;
	}

};


// Class CommonSource.BlessingTable
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingTable : public UObject
{
public:
	class UCommonSource_BlessingBoardInfoSheet*        m_BlessingBoardInfoSheet;                                 // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CompleteParamInfoSheet*        m_CompleteParamInfoSheet;                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BlessingSlotInfoSheet*         m_BlessingSlotInfoSheet;                                  // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BlessingStoneInfoSheet*        m_BlessingStoneInfoSheet;                                 // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BlessingStoneGradeSheet*       m_BlessingStoneGradeSheet;                                // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BlessingStoneOptionSheet*      m_BlessingStoneOptionSheet;                               // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SymbolProbSheet*               m_SymbolProbSheet;                                        // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BlessingSymbolCollectionSheet* m_BlessingSymbolCollectionSheet;                          // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BlessingSlotEnchantSheet*      m_BlessingSlotEnchantSheet;                               // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BlessingSlotEnchantOptionSheet* m_BlessingSlotEnchantOptionSheet;                         // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BlessingBoardSampleSheet*      m_BlessingBoardSampleSheet;                               // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BlessingDefineSheet*           m_BlessingDefineSheet;                                    // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingTable");
		return ptr;
	}

};


// Class CommonSource.CashShopTable
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_CashShopTable : public UObject
{
public:
	class UCommonSource_CashShopInfoSheet*             m_CashShopInfoSheet;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CashShopLimitPackageSheet*     m_CashShopLimitPackageSheet;                              // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CashShopDiscountInfoSheet*     m_CashShopDiscountInfoSheet;                              // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GetItemListSheet*              m_GetItemListSheet;                                       // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CashShopCategorySheet*         m_CashShopCategorySheet;                                  // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CashShopDefineSheet*           m_CashShopDefineSheet;                                    // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CashShopOdinPassPointSheet*    m_CashShopOdinPassPointSheet;                             // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CashPurchaseMileageSheet*      m_CashPurchaseMileageSheet;                               // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CashShopReplaceSheet*          m_CashShopReplaceSheet;                                   // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomGuaranteeSheet*          m_RandomGuaranteeSheet;                                   // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CashShopChainProductSheet*     m_CashShopChainProductSheet;                              // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopTable");
		return ptr;
	}

};


// Class CommonSource.CastlewarTable
// 0x0080 (0x00A8 - 0x0028)
class UCommonSource_CastlewarTable : public UObject
{
public:
	class UCommonSource_CastleInfoSheet*               m_CastleInfoSheet;                                        // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarDefineSheet*          m_CastlewarDefineSheet;                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MercenaryDefineSheet*          m_MercenaryDefineSheet;                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QualifierDefineSheet*          m_QualifierDefineSheet;                                   // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarAreaBuffSheet*        m_CastlewarAreaBuffSheet;                                 // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarRewardSheet*          m_CastlewarRewardSheet;                                   // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarCostumeSheet*         m_CastlewarCostumeSheet;                                  // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarBuffSheet*            m_CastlewarBuffSheet;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarDistributionSheet*    m_CastlewarDistributionSheet;                             // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarObjectSheet*          m_CastlewarObjectSheet;                                   // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MercenaryRewardRateSheet*      m_MercenaryRewardRateSheet;                               // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarDefenseBuffSheet*     m_CastlewarDefenseBuffSheet;                              // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarGuildBuffSheet*       m_CastlewarGuildBuffSheet;                                // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarObjectModifySheet*    m_CastlewarObjectModifySheet;                             // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarGuildVehicleSheet*    m_CastlewarGuildVehicleSheet;                             // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarDBSaveBuffIndexSheet* m_CastlewarDBSaveBuffIndexSheet;                          // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarTable");
		return ptr;
	}

};


// Class CommonSource.ChatTable
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_ChatTable : public UObject
{
public:
	class UCommonSource_GuildChatImotionSheet*         m_GuildChatImotionSheet;                                  // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ChatEmoticonSheet*             m_ChatEmoticonSheet;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ChatDefineSheet*               m_ChatDefineSheet;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChatTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChatTable");
		return ptr;
	}

};


// Class CommonSource.CinematicImgTextTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_CinematicImgTextTable : public UObject
{
public:
	class UCommonSource_NameImgTextSheet*              m_NameImgTextSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_NameIconTextSheet*             m_NameIconTextSheet;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CinemaSubtitlesSheet*          m_CinemaSubtitlesSheet;                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CinemaInfoSheet*               m_CinemaInfoSheet;                                        // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CinematicImgTextTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CinematicImgTextTable");
		return ptr;
	}

};


// Class CommonSource.ClassChangeTable
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_ClassChangeTable : public UObject
{
public:
	class UCommonSource_ClassChangeInfoSheet*          m_ClassChangeInfoSheet;                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillEnchantRewardSheet*       m_SkillEnchantRewardSheet;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ChangeGradeSheet*              m_ChangeGradeSheet;                                       // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ChangeItemGradeSheet*          m_ChangeItemGradeSheet;                                   // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemChangePartsSheet*          m_ItemChangePartsSheet;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ClassChangePossiblePacketSheet* m_ClassChangePossiblePacketSheet;                         // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ClassChangeDefineSheet*        m_ClassChangeDefineSheet;                                 // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillEnchantChangeGradeSheet*  m_SkillEnchantChangeGradeSheet;                           // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ClassChangeTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ClassChangeTable");
		return ptr;
	}

};


// Class CommonSource.CollectionTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_CollectionTable : public UObject
{
public:
	class UCommonSource_CollectionRewardInfoSheet*     m_CollectionRewardInfoSheet;                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CollectionCountTypeSheet*      m_CollectionCountTypeSheet;                               // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CollectionReplaceSheet*        m_CollectionReplaceSheet;                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CollectionDefineSheet*         m_CollectionDefineSheet;                                  // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionTable");
		return ptr;
	}

};


// Class CommonSource.CostumeTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_CostumeTable : public UObject
{
public:
	class UCommonSource_CostumeInfoSheet*              m_CostumeInfoSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CostumePoseSheet*              m_CostumePoseSheet;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CostumeDyeingColorSheet*       m_CostumeDyeingColorSheet;                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CostumeDyeingDefineSheet*      m_CostumeDyeingDefineSheet;                               // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CostumeTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CostumeTable");
		return ptr;
	}

};


// Class CommonSource.CustomizingTable
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_CustomizingTable : public UObject
{
public:
	class UCommonSource_CustomizingPresetSheet*        m_CustomizingPresetSheet;                                 // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CustomizingTypeSheet*          m_CustomizingTypeSheet;                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CustomizingColorSheet*         m_CustomizingColorSheet;                                  // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CustomizingGaugeSheet*         m_CustomizingGaugeSheet;                                  // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CustomizingPoseSheet*          m_CustomizingPoseSheet;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CustomizingCostumeSheet*       m_CustomizingCostumeSheet;                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingTable");
		return ptr;
	}

};


// Class CommonSource.DialogueTable
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_DialogueTable : public UObject
{
public:
	class UCommonSource_DialogueInfoSheet*             m_DialogueInfoSheet;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MainTalkTypeSheet*             m_MainTalkTypeSheet;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SubTalkTypeSheet*              m_SubTalkTypeSheet;                                       // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DialogueDefineSheet*           m_DialogueDefineSheet;                                    // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_NPCRandomTalkSheet*            m_NPCRandomTalkSheet;                                     // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DialogueTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DialogueTable");
		return ptr;
	}

};


// Class CommonSource.EnumTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_EnumTable : public UObject
{
public:
	class UCommonSource_EnumSheet*                     m_EnumSheet;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EnumTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EnumTable");
		return ptr;
	}

};


// Class CommonSource.EventTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_EventTable : public UObject
{
public:
	class UCommonSource_EnchantGameSheet*              m_EnchantGameSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EventTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EventTable");
		return ptr;
	}

};


// Class CommonSource.ExchangeTable
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ExchangeTable : public UObject
{
public:
	class UCommonSource_ExchangeCategorySheet*         m_ExchangeCategorySheet;                                  // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ExchangeSellingPriceSheet*     m_ExchangeSellingPriceSheet;                              // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ExchangeSortSheet*             m_ExchangeSortSheet;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ExchangeDefineSheet*           m_ExchangeDefineSheet;                                    // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ExchangeConditionCheckSheet*   m_ExchangeConditionCheckSheet;                            // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ExchangeEnchantAlertMultipleSheet* m_ExchangeEnchantAlertMultipleSheet;                      // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeTable");
		return ptr;
	}

};


// Class CommonSource.GlobalDefineTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_GlobalDefineTable : public UObject
{
public:
	class UCommonSource_DefineSheet*                   m_DefineSheet;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ResetTimeSheet*                m_ResetTimeSheet;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WeekIntervalSheet*             m_WeekIntervalSheet;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CoolTimeSheet*                 m_CoolTimeSheet;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GlobalDefineTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GlobalDefineTable");
		return ptr;
	}

};


// Class CommonSource.GuideTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_GuideTable : public UObject
{
public:
	class UCommonSource_GuideSheet*                    m_GuideSheet;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GachaOddsUrlSheet*             m_GachaOddsUrlSheet;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuideTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuideTable");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldTable
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_GuildBattlefieldTable : public UObject
{
public:
	class UCommonSource_GuildBattlefieldObjectDefineSheet* m_GuildBattlefieldObjectDefineSheet;                      // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildBattlefieldSpawnGroupSheet* m_GuildBattlefieldSpawnGroupSheet;                        // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildBattlefieldMonsterGroupSheet* m_GuildBattlefieldMonsterGroupSheet;                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildBattlefieldDoubleMonsterSheet* m_GuildBattlefieldDoubleMonsterSheet;                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildBattlefieldMatchingGroupSheet* m_GuildBattlefieldMatchingGroupSheet;                     // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildBattlefieldTimeDefineSheet* m_GuildBattlefieldTimeDefineSheet;                        // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildBattlefieldBattleTimeSheet* m_GuildBattlefieldBattleTimeSheet;                        // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildBattlefieldDefineSheet*   m_GuildBattlefieldDefineSheet;                            // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldTable");
		return ptr;
	}

};


// Class CommonSource.GuildDefenseTable
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildDefenseTable : public UObject
{
public:
	class UCommonSource_DefenseWaveInfoSheet*          m_DefenseWaveInfoSheet;                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_StatueInfoSheet*               m_StatueInfoSheet;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VehicleSummonPointInfoSheet*   m_VehicleSummonPointInfoSheet;                            // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DefenseSummonMonsterSheet*     m_DefenseSummonMonsterSheet;                              // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DefenseSummonMonsterAreaInfoSheet* m_DefenseSummonMonsterAreaInfoSheet;                      // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ChaseWayPointSheet*            m_ChaseWayPointSheet;                                     // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DefenseSummonVehicleSheet*     m_DefenseSummonVehicleSheet;                              // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_StatueBlessInfoSheet*          m_StatueBlessInfoSheet;                                   // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DropGuardianCoinSheet*         m_DropGuardianCoinSheet;                                  // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SupplementGuardianCoinSheet*   m_SupplementGuardianCoinSheet;                            // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DefenseGuideInfoSheet*         m_DefenseGuideInfoSheet;                                  // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildDefenseDefineSheet*       m_GuildDefenseDefineSheet;                                // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildDefenseTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildDefenseTable");
		return ptr;
	}

};


// Class CommonSource.GuildItemMakeTable
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_GuildItemMakeTable : public UObject
{
public:
	class UCommonSource_GuildItemMakeDefineSheet*      m_GuildItemMakeDefineSheet;                               // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildItemMakeSlotSheet*        m_GuildItemMakeSlotSheet;                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildItemMakeInfoSheet*        m_GuildItemMakeInfoSheet;                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildItemMakeCategorySheet*    m_GuildItemMakeCategorySheet;                             // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildItemMakeMaterialRewardSheet* m_GuildItemMakeMaterialRewardSheet;                       // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildItemMakeRedDotSheet*      m_GuildItemMakeRedDotSheet;                               // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeTable");
		return ptr;
	}

};


// Class CommonSource.GuildRaidTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_GuildRaidTable : public UObject
{
public:
	class UCommonSource_RaidInfoSheet*                 m_RaidInfoSheet;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RaidBuffSheet*                 m_RaidBuffSheet;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RaidSkillPrioritySheet*        m_RaidSkillPrioritySheet;                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildRaidDefineSheet*          m_GuildRaidDefineSheet;                                   // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildRaidTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildRaidTable");
		return ptr;
	}

};


// Class CommonSource.GuildStrongholdTable
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_GuildStrongholdTable : public UObject
{
public:
	class UCommonSource_StrongholdDefineSheet*         m_StrongholdDefineSheet;                                  // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_StrongholdInfoSheet*           m_StrongholdInfoSheet;                                    // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_StrongholdBuffSheet*           m_StrongholdBuffSheet;                                    // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_StrongholdBuffGroupSheet*      m_StrongholdBuffGroupSheet;                               // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_StrongholdBuffGroupSetSheet*   m_StrongholdBuffGroupSetSheet;                            // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_StrongholdBuffGroupSetPoolSheet* m_StrongholdBuffGroupSetPoolSheet;                        // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_StrongholdNotiSheet*           m_StrongholdNotiSheet;                                    // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_StrongholdRankingSheet*        m_StrongholdRankingSheet;                                 // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildStrongholdTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildStrongholdTable");
		return ptr;
	}

};


// Class CommonSource.GuildTable
// 0x0068 (0x0090 - 0x0028)
class UCommonSource_GuildTable : public UObject
{
public:
	class UCommonSource_GuildLevelSheet*               m_GuildLevelSheet;                                        // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildJobSheet*                 m_GuildJobSheet;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildTendencySheet*            m_GuildTendencySheet;                                     // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildMarkSheet*                m_GuildMarkSheet;                                         // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildMarkFrameColorSheet*      m_GuildMarkFrameColorSheet;                               // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildMarkBackgroundColorSheet* m_GuildMarkBackgroundColorSheet;                          // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildMarkEffectSheet*          m_GuildMarkEffectSheet;                                   // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildDonateSheet*              m_GuildDonateSheet;                                       // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildDefineSheet*              m_GuildDefineSheet;                                       // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildAllianceDefineSheet*      m_GuildAllianceDefineSheet;                               // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildAuctionDefineSheet*       m_GuildAuctionDefineSheet;                                // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildAuctionMonsterSheet*      m_GuildAuctionMonsterSheet;                               // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildOpenChattingSheet*        m_GuildOpenChattingSheet;                                 // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildTable");
		return ptr;
	}

};


// Class CommonSource.ImprintTable
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_ImprintTable : public UObject
{
public:
	class UCommonSource_ImprintStepSheet*              m_ImprintStepSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ImprintOptionSheet*            m_ImprintOptionSheet;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ImprintDefineSheet*            m_ImprintDefineSheet;                                     // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ImprintIconSheet*              m_ImprintIconSheet;                                       // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SpecializeStepSheet*           m_SpecializeStepSheet;                                    // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SpecializeOptionSheet*         m_SpecializeOptionSheet;                                  // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SpecializeDefineSheet*         m_SpecializeDefineSheet;                                  // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SpecializeIconSheet*           m_SpecializeIconSheet;                                    // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintTable");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonTable
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonTable : public UObject
{
public:
	class UCommonSource_InfinityDungeonAreaInfoSheet*  m_InfinityDungeonAreaInfoSheet;                           // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonFloorInfoSheet* m_InfinityDungeonFloorInfoSheet;                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonSeasonRewardSheet* m_InfinityDungeonSeasonRewardSheet;                       // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonBuffSheet*      m_InfinityDungeonBuffSheet;                               // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonSkillPrioritySheet* m_InfinityDungeonSkillPrioritySheet;                      // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonSettingSheet*   m_InfinityDungeonSettingSheet;                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonBattleTypeSheet* m_InfinityDungeonBattleTypeSheet;                         // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonMultiBossSettingSheet* m_InfinityDungeonMultiBossSettingSheet;                   // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonSummonSheet*    m_InfinityDungeonSummonSheet;                             // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonBalanceSheet*   m_InfinityDungeonBalanceSheet;                            // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonDefineSheet*    m_InfinityDungeonDefineSheet;                             // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonWeakenDefineSheet* m_InfinityDungeonWeakenDefineSheet;                       // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonTable");
		return ptr;
	}

};


// Class CommonSource.InputLimitTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_InputLimitTable : public UObject
{
public:
	class UCommonSource_InputLimitDefineSheet*         m_InputLimitDefineSheet;                                  // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InputLimitTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InputLimitTable");
		return ptr;
	}

};


// Class CommonSource.InteractTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_InteractTable : public UObject
{
public:
	class UCommonSource_InteractSheet*                 m_InteractSheet;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InteractTypeInfoSheet*         m_InteractTypeInfoSheet;                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InteractValidationDistanceSheet* m_InteractValidationDistanceSheet;                        // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AutoGatherInfoSheet*           m_AutoGatherInfoSheet;                                    // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InteractTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InteractTable");
		return ptr;
	}

};


// Class CommonSource.InternationalizationTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_InternationalizationTable : public UObject
{
public:
	class UCommonSource_CultureOptionSheet*            m_CultureOptionSheet;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CultureDLCBlockSheet*          m_CultureDLCBlockSheet;                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RegionOptionSheet*             m_RegionOptionSheet;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_StringTagInfoSheet*            m_StringTagInfoSheet;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InternationalizationTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InternationalizationTable");
		return ptr;
	}

};


// Class CommonSource.ItemTable
// 0x00E8 (0x0110 - 0x0028)
class UCommonSource_ItemTable : public UObject
{
public:
	class UCommonSource_ItemInfoSheet*                 m_ItemInfoSheet;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemEnchantSheet*              m_ItemEnchantSheet;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemEnchantMaterialSheet*      m_ItemEnchantMaterialSheet;                               // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemWorkmanshipCostSheet*      m_ItemWorkmanshipCostSheet;                               // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemWorkmanshipSheet*          m_ItemWorkmanshipSheet;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemRandomOptionSheet*         m_ItemRandomOptionSheet;                                  // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemSoulEnchantSheet*          m_ItemSoulEnchantSheet;                                   // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemSoulEffectSheet*           m_ItemSoulEffectSheet;                                    // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemBindSheet*                 m_ItemBindSheet;                                          // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemGradeInfoSheet*            m_ItemGradeInfoSheet;                                     // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemDefineSheet*               m_ItemDefineSheet;                                        // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PetInfoSheet*                  m_PetInfoSheet;                                           // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PetRandomOptionSheet*          m_PetRandomOptionSheet;                                   // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PetRandomOptionInfoSheet*      m_PetRandomOptionInfoSheet;                               // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemSlotSheet*                 m_ItemSlotSheet;                                          // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemMakeSheet*                 m_ItemMakeSheet;                                          // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemMakeCategorySheet*         m_ItemMakeCategorySheet;                                  // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemRecoveryCategorySheet*     m_ItemRecoveryCategorySheet;                              // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemMakeReplaceSheet*          m_ItemMakeReplaceSheet;                                   // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemDismantleSheet*            m_ItemDismantleSheet;                                     // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemSetSheet*                  m_ItemSetSheet;                                           // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemConsumeSheet*              m_ItemConsumeSheet;                                       // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemEquipSlotSheet*            m_ItemEquipSlotSheet;                                     // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemUseLimitSheet*             m_ItemUseLimitSheet;                                      // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemDropControlSheet*          m_ItemDropControlSheet;                                   // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DropControlGroupSheet*         m_DropControlGroupSheet;                                  // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DropControlServerGroupSheet*   m_DropControlServerGroupSheet;                            // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemSourceSheet*               m_ItemSourceSheet;                                        // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemReplacementSheet*          m_ItemReplacementSheet;                                   // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemTable");
		return ptr;
	}

};


// Class CommonSource.KakaoIndicatorTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_KakaoIndicatorTable : public UObject
{
public:
	class UCommonSource_ResourceIndicatorSheet*        m_ResourceIndicatorSheet;                                 // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemIndicatorSheet*            m_ItemIndicatorSheet;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ResourceTypeSheet*             m_ResourceTypeSheet;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_IndicatorItemTypeSheet*        m_IndicatorItemTypeSheet;                                 // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.KakaoIndicatorTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.KakaoIndicatorTable");
		return ptr;
	}

};


// Class CommonSource.LinkTable
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_LinkTable : public UObject
{
public:
	class UCommonSource_LinkBoardInfoSheet*            m_LinkBoardInfoSheet;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_LinkSlotInfoSheet*             m_LinkSlotInfoSheet;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_LinkEmblemInfoSheet*           m_LinkEmblemInfoSheet;                                    // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_LinkEmblemOptionSheet*         m_LinkEmblemOptionSheet;                                  // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_LinkEmblemCountOptionSheet*    m_LinkEmblemCountOptionSheet;                             // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CompleteLinkOptionSheet*       m_CompleteLinkOptionSheet;                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_LinkDefineSheet*               m_LinkDefineSheet;                                        // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_LinkResetPriceSheet*           m_LinkResetPriceSheet;                                    // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_LinkBonusCountSheet*           m_LinkBonusCountSheet;                                    // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkTable");
		return ptr;
	}

};


// Class CommonSource.LoadingTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_LoadingTable : public UObject
{
public:
	class UCommonSource_LoadingInfoSheet*              m_LoadingInfoSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ModelInfoSheet*                m_ModelInfoSheet;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_TipInfoSheet*                  m_TipInfoSheet;                                           // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_LoadingDefineSheet*            m_LoadingDefineSheet;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LoadingTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LoadingTable");
		return ptr;
	}

};


// Class CommonSource.MapTable
// 0x00D8 (0x0100 - 0x0028)
class UCommonSource_MapTable : public UObject
{
public:
	class UCommonSource_MapInfoSheet*                  m_MapInfoSheet;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapTypeSheet*                  m_MapTypeSheet;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PartyDungeonSheet*             m_PartyDungeonSheet;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PortalSheet*                   m_PortalSheet;                                            // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapDefineSheet*                m_MapDefineSheet;                                         // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RankScoreSheet*                m_RankScoreSheet;                                         // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ClearRankSheet*                m_ClearRankSheet;                                         // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WorldAreaSheet*                m_WorldAreaSheet;                                         // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_TownInfoSheet*                 m_TownInfoSheet;                                          // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AreaTypeInfoSheet*             m_AreaTypeInfoSheet;                                      // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DungeonInfoSheet*              m_DungeonInfoSheet;                                       // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapBossInfoSheet*              m_MapBossInfoSheet;                                       // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapAISelectSheet*              m_MapAISelectSheet;                                       // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapDisplayCkeckSheet*          m_MapDisplayCkeckSheet;                                   // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapGroupDisplayCheckSheet*     m_MapGroupDisplayCheckSheet;                              // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DungeonTimeSheet*              m_DungeonTimeSheet;                                       // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapEnterChargeSheet*           m_MapEnterChargeSheet;                                    // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DuelDungeonSheet*              m_DuelDungeonSheet;                                       // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DuelDungeonMapSheet*           m_DuelDungeonMapSheet;                                    // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CastlewarQualifierMapSheet*    m_CastlewarQualifierMapSheet;                             // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapTriggerSheet*               m_MapTriggerSheet;                                        // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InstanceServerMapTypeSheet*    m_InstanceServerMapTypeSheet;                             // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AreaBuffApplyObjectTypeSheet*  m_AreaBuffApplyObjectTypeSheet;                           // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AreaBuffApplyClassTypeSheet*   m_AreaBuffApplyClassTypeSheet;                            // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MultiMiniMapSheet*             m_MultiMiniMapSheet;                                      // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapColliderInfoSheet*          m_MapColliderInfoSheet;                                   // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildBattlefieldMapSheet*      m_GuildBattlefieldMapSheet;                               // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapTable");
		return ptr;
	}

};


// Class CommonSource.MessageTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_MessageTable : public UObject
{
public:
	class UCommonSource_MessageInfoSheet*              m_MessageInfoSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ServerMessageSheet*            m_ServerMessageSheet;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MessageTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MessageTable");
		return ptr;
	}

};


// Class CommonSource.MonsterTable
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_MonsterTable : public UObject
{
public:
	class UCommonSource_MonsterSheet*                  m_MonsterSheet;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BossInfoSheet*                 m_BossInfoSheet;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MonsterGroupIDSheet*           m_MonsterGroupIDSheet;                                    // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MonsterDefineSheet*            m_MonsterDefineSheet;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MonsterNotInAreaSheet*         m_MonsterNotInAreaSheet;                                  // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MonsterGradeSheet*             m_MonsterGradeSheet;                                      // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterTable");
		return ptr;
	}

};


// Class CommonSource.NoticeTable
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_NoticeTable : public UObject
{
public:
	class UCommonSource_NoticeInfoSheet*               m_NoticeInfoSheet;                                        // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ContentsControlSheet*          m_ContentsControlSheet;                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ContentSheet*                  m_ContentSheet;                                           // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ButtonLockSheet*               m_ButtonLockSheet;                                        // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_NoticeDefineSheet*             m_NoticeDefineSheet;                                      // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MarketReviewSheet*             m_MarketReviewSheet;                                      // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ContentLockSheet*              m_ContentLockSheet;                                       // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemControlSheet*              m_ItemControlSheet;                                       // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ExpirationInfoSheet*           m_ExpirationInfoSheet;                                    // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ContentsWorldControlSheet*     m_ContentsWorldControlSheet;                              // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ResourceControlSheet*          m_ResourceControlSheet;                                   // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NoticeTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NoticeTable");
		return ptr;
	}

};


// Class CommonSource.PacketErrorTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_PacketErrorTable : public UObject
{
public:
	class UCommonSource_PacketErrorSheet*              m_PacketErrorSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PacketErrorTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PacketErrorTable");
		return ptr;
	}

};


// Class CommonSource.ParamTable
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ParamTable : public UObject
{
public:
	class UCommonSource_CharParamSheet*                m_CharParamSheet;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillParamSheet*               m_SkillParamSheet;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_UnappliedCharParamSheet*       m_UnappliedCharParamSheet;                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BattlePowerParamSheet*         m_BattlePowerParamSheet;                                  // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BattlePowerVariableSheet*      m_BattlePowerVariableSheet;                               // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ParamDefineSheet*              m_ParamDefineSheet;                                       // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ParamTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ParamTable");
		return ptr;
	}

};


// Class CommonSource.PetTable
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_PetTable : public UObject
{
public:
	class UCommonSource_SoulPetInfoSheet*              m_SoulPetInfoSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PetGradeSheet*                 m_PetGradeSheet;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PetGuardianInfoSheet*          m_PetGuardianInfoSheet;                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PetGuardianConditionSheet*     m_PetGuardianConditionSheet;                              // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PetGuardianOptionSheet*        m_PetGuardianOptionSheet;                                 // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PetDefineSheet*                m_PetDefineSheet;                                         // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PetGuardianDifficultyInfoSheet* m_PetGuardianDifficultyInfoSheet;                         // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetTable");
		return ptr;
	}

};


// Class CommonSource.PlayerTable
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_PlayerTable : public UObject
{
public:
	class UCommonSource_PlayerSheet*                   m_PlayerSheet;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PlayerLevelSheet*              m_PlayerLevelSheet;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PlayerStartStatusSheet*        m_PlayerStartStatusSheet;                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PlayerTendencySheet*           m_PlayerTendencySheet;                                    // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AIPlayerNameSheet*             m_AIPlayerNameSheet;                                      // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PlayerDefineSheet*             m_PlayerDefineSheet;                                      // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AIStatusSheet*                 m_AIStatusSheet;                                          // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AIPlayerAvatarSheet*           m_AIPlayerAvatarSheet;                                    // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AIPlayerItemSheet*             m_AIPlayerItemSheet;                                      // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ResurrectionCostSheet*         m_ResurrectionCostSheet;                                  // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PlayerDeletePenaltySheet*      m_PlayerDeletePenaltySheet;                               // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ResurrectionWaitTimeSheet*     m_ResurrectionWaitTimeSheet;                              // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PlayerClassOnOffSheet*         m_PlayerClassOnOffSheet;                                  // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PlayerSkillQuickSlotPosSheet*  m_PlayerSkillQuickSlotPosSheet;                           // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_IntegratedPresetControlSheet*  m_IntegratedPresetControlSheet;                           // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerTable");
		return ptr;
	}

};


// Class CommonSource.QuestTable
// 0x0098 (0x00C0 - 0x0028)
class UCommonSource_QuestTable : public UObject
{
public:
	class UCommonSource_QuestInfoSheet*                m_QuestInfoSheet;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RepeatQuestSheet*              m_RepeatQuestSheet;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RepeatQuestRewardBundleSheet*  m_RepeatQuestRewardBundleSheet;                           // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestVoiceSheet*               m_QuestVoiceSheet;                                        // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestMissionSheet*             m_QuestMissionSheet;                                      // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestItemInfoSheet*            m_QuestItemInfoSheet;                                     // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestChoiceSheet*              m_QuestChoiceSheet;                                       // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestActionSheet*              m_QuestActionSheet;                                       // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestDefineSheet*              m_QuestDefineSheet;                                       // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestSequenceSheet*            m_QuestSequenceSheet;                                     // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestTouchMaskSheet*           m_QuestTouchMaskSheet;                                    // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RepeatQuestGradeRateSheet*     m_RepeatQuestGradeRateSheet;                              // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RepeatQuestMaxNumberSheet*     m_RepeatQuestMaxNumberSheet;                              // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RepeatQuestRefreshPriceSheet*  m_RepeatQuestRefreshPriceSheet;                           // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestGroupSheet*               m_QuestGroupSheet;                                        // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestBGSheet*                  m_QuestBGSheet;                                           // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_EventQuestInfoSheet*           m_EventQuestInfoSheet;                                    // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InvasionQuestSheet*            m_InvasionQuestSheet;                                     // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InvasionQuestRefreshPriceSheet* m_InvasionQuestRefreshPriceSheet;                         // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestTable");
		return ptr;
	}

};


// Class CommonSource.PkTable
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_PkTable : public UObject
{
public:
	class UCommonSource_PkBrutalStateSheet*            m_PkBrutalStateSheet;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PkSlayerScoreSheet*            m_PkSlayerScoreSheet;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PkMonsterKillCountSheet*       m_PkMonsterKillCountSheet;                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PkAbnormalResistSheet*         m_PkAbnormalResistSheet;                                  // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PkSlayerPenaltySheet*          m_PkSlayerPenaltySheet;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PkDefineSheet*                 m_PkDefineSheet;                                          // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PkAssistDefineSheet*           m_PkAssistDefineSheet;                                    // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PKRandomTauntMessageSheet*     m_PKRandomTauntMessageSheet;                              // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkTable");
		return ptr;
	}

};


// Class CommonSource.RandomChoiceTable
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomChoiceTable : public UObject
{
public:
	class UCommonSource_RandomChoiceGradeSheet*        m_RandomChoiceGradeSheet;                                 // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomChoiceAvatarSheet*       m_RandomChoiceAvatarSheet;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomChoiceVehicleSheet*      m_RandomChoiceVehicleSheet;                               // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomChoiceWeaponShapeSheet*  m_RandomChoiceWeaponShapeSheet;                           // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomChoicePetSheet*          m_RandomChoicePetSheet;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoiceTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoiceTable");
		return ptr;
	}

};


// Class CommonSource.RandomOptionTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_RandomOptionTable : public UObject
{
public:
	class UCommonSource_RandomOptionSheet*             m_RandomOptionSheet;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomOptionTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomOptionTable");
		return ptr;
	}

};


// Class CommonSource.RandomPackageTable
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_RandomPackageTable : public UObject
{
public:
	class UCommonSource_DropPackageSheet*              m_DropPackageSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RepeatQuestPackageSheet*       m_RepeatQuestPackageSheet;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_QuestPackageSheet*             m_QuestPackageSheet;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemPackageSheet*              m_ItemPackageSheet;                                       // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MapPackageSheet*               m_MapPackageSheet;                                        // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RelicGamblePackageSheet*       m_RelicGamblePackageSheet;                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_TreasurePackageSheet*          m_TreasurePackageSheet;                                   // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InfinityDungeonPackageSheet*   m_InfinityDungeonPackageSheet;                            // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_GuildBattlefieldPackageSheet*  m_GuildBattlefieldPackageSheet;                           // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomPackageTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomPackageTable");
		return ptr;
	}

};


// Class CommonSource.RankingTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_RankingTable : public UObject
{
public:
	class UCommonSource_RankingBuffSheet*              m_RankingBuffSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RankingDefineSheet*            m_RankingDefineSheet;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RankingTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RankingTable");
		return ptr;
	}

};


// Class CommonSource.RealmwarTable
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_RealmwarTable : public UObject
{
public:
	class UCommonSource_RealmwarRankRewardSheet*       m_RealmwarRankRewardSheet;                                // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RealmwarSeasonRankSheet*       m_RealmwarSeasonRankSheet;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RealmwarDefineSheet*           m_RealmwarDefineSheet;                                    // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RealmwarKillCountMsgSheet*     m_RealmwarKillCountMsgSheet;                              // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RealmwarInteractRandomBuffSheet* m_RealmwarInteractRandomBuffSheet;                        // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RealmwarInteractRewardSheet*   m_RealmwarInteractRewardSheet;                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RealmwarInteractFactionSheet*  m_RealmwarInteractFactionSheet;                           // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarTable");
		return ptr;
	}

};


// Class CommonSource.RelicGambleTable
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RelicGambleTable : public UObject
{
public:
	class UCommonSource_RelicGambleInfoSheet*          m_RelicGambleInfoSheet;                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RelicGambleRewardBundleSheet*  m_RelicGambleRewardBundleSheet;                           // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RelicGambleRewardEnchantSheet* m_RelicGambleRewardEnchantSheet;                          // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RelicGambleCostSheet*          m_RelicGambleCostSheet;                                   // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RelicGambleRefreshPriceSheet*  m_RelicGambleRefreshPriceSheet;                           // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleTable");
		return ptr;
	}

};


// Class CommonSource.ResourceTable
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ResourceTable : public UObject
{
public:
	class UCommonSource_ResourceIconSheet*             m_ResourceIconSheet;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ResourceInfoSheet*             m_ResourceInfoSheet;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ContentsIconSheet*             m_ContentsIconSheet;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WorldMapTotalViewSheet*        m_WorldMapTotalViewSheet;                                 // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PlayerIconSheet*               m_PlayerIconSheet;                                        // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceTable");
		return ptr;
	}

};


// Class CommonSource.RuneTable
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_RuneTable : public UObject
{
public:
	class UCommonSource_RuneDefineSheet*               m_RuneDefineSheet;                                        // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RuneInfoSheet*                 m_RuneInfoSheet;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RuneOpenLevelSheet*            m_RuneOpenLevelSheet;                                     // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RuneGradeSheet*                m_RuneGradeSheet;                                         // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RuneSetSheet*                  m_RuneSetSheet;                                           // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RuneSetEnchantDefineSheet*     m_RuneSetEnchantDefineSheet;                              // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RuneSetEnchantValueSheet*      m_RuneSetEnchantValueSheet;                               // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RuneAttributeDefineSheet*      m_RuneAttributeDefineSheet;                               // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RuneAttributeSheet*            m_RuneAttributeSheet;                                     // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RuneAttributeOptionSheet*      m_RuneAttributeOptionSheet;                               // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneTable");
		return ptr;
	}

};


// Class CommonSource.SchedulerTable
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_SchedulerTable : public UObject
{
public:
	class UCommonSource_SchedulerInfoSheet*            m_SchedulerInfoSheet;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SchedulerDungeonInfoSheet*     m_SchedulerDungeonInfoSheet;                              // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SchedulerBlockInfoSheet*       m_SchedulerBlockInfoSheet;                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SchedulerDismantleItemSheet*   m_SchedulerDismantleItemSheet;                            // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SchedulerDefineSheet*          m_SchedulerDefineSheet;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerTable");
		return ptr;
	}

};


// Class CommonSource.RandomBoxTable
// 0x0088 (0x00B0 - 0x0028)
class UCommonSource_RandomBoxTable : public UObject
{
public:
	class UCommonSource_RandomBoxDropSheet*            m_RandomBoxDropSheet;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxRepeatQuestSheet*     m_RandomBoxRepeatQuestSheet;                              // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxQuestSheet*           m_RandomBoxQuestSheet;                                    // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxAvatarSheet*          m_RandomBoxAvatarSheet;                                   // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxWeaponShapeSheet*     m_RandomBoxWeaponShapeSheet;                              // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxCostumeSheet*         m_RandomBoxCostumeSheet;                                  // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxVehicleSheet*         m_RandomBoxVehicleSheet;                                  // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxItemSheet*            m_RandomBoxItemSheet;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxRuneSheet*            m_RandomBoxRuneSheet;                                     // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxGoodsSheet*           m_RandomBoxGoodsSheet;                                    // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxBlessingStoneSheet*   m_RandomBoxBlessingStoneSheet;                            // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SelectBoxItemSheet*            m_SelectBoxItemSheet;                                     // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxRelicGambleRewardItemSheet* m_RandomBoxRelicGambleRewardItemSheet;                    // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxInfinityDungeonSheet* m_RandomBoxInfinityDungeonSheet;                          // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxGuildBattlefieldSheet* m_RandomBoxGuildBattlefieldSheet;                         // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_RandomBoxPetSheet*             m_RandomBoxPetSheet;                                      // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ExceptCheckGroupIDSheet*       m_ExceptCheckGroupIDSheet;                                // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxTable");
		return ptr;
	}

};


// Class CommonSource.ServerInvasionTable
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_ServerInvasionTable : public UObject
{
public:
	class UCommonSource_ServerInvasionBuffSheet*       m_ServerInvasionBuffSheet;                                // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MovableMapsSheet*              m_MovableMapsSheet;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ServerInvasionTimeSheet*       m_ServerInvasionTimeSheet;                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ServerInvasionBlockInfoSheet*  m_ServerInvasionBlockInfoSheet;                           // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InvasionPkPointSheet*          m_InvasionPkPointSheet;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InvasionObjectInfoSheet*       m_InvasionObjectInfoSheet;                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InvasionObjectPointSheet*      m_InvasionObjectPointSheet;                               // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ServerInvasionCostumeSheet*    m_ServerInvasionCostumeSheet;                             // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ServerInvasionDefineSheet*     m_ServerInvasionDefineSheet;                              // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ServerInvasionEnterOrderColorSheet* m_ServerInvasionEnterOrderColorSheet;                     // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InvasionPKRandomTauntMessageSheet* m_InvasionPKRandomTauntMessageSheet;                      // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionTable");
		return ptr;
	}

};


// Class CommonSource.ShadowDungeonTable
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShadowDungeonTable : public UObject
{
public:
	class UCommonSource_ShadowTierSheet*               m_ShadowTierSheet;                                        // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShadowActiveTimeSheet*         m_ShadowActiveTimeSheet;                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShadowDungeonMapSettingSheet*  m_ShadowDungeonMapSettingSheet;                           // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShadowDungeonTeleportItemSheet* m_ShadowDungeonTeleportItemSheet;                         // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShadowDungeonDefineSheet*      m_ShadowDungeonDefineSheet;                               // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShadowMonsterPointSheet*       m_ShadowMonsterPointSheet;                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShadowPkPointSheet*            m_ShadowPkPointSheet;                                     // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShadowPkPenaltySheet*          m_ShadowPkPenaltySheet;                                   // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShadowPkPointInfoSheet*        m_ShadowPkPointInfoSheet;                                 // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AbyssFloorBossSpawnSheet*      m_AbyssFloorBossSpawnSheet;                               // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AbyssFloorEliteSpawnInfoSheet* m_AbyssFloorEliteSpawnInfoSheet;                          // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AbyssFloorEliteSpawnSheet*     m_AbyssFloorEliteSpawnSheet;                              // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowDungeonTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowDungeonTable");
		return ptr;
	}

};


// Class CommonSource.ShopTable
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ShopTable : public UObject
{
public:
	class UCommonSource_ShopItemInfoSheet*             m_ShopItemInfoSheet;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShopInfoSheet*                 m_ShopInfoSheet;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShopTabInfoSheet*              m_ShopTabInfoSheet;                                       // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_NoneNpcShopInfoSheet*          m_NoneNpcShopInfoSheet;                                   // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ShopItemBuyGradeSheet*         m_ShopItemBuyGradeSheet;                                  // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShopTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShopTable");
		return ptr;
	}

};


// Class CommonSource.SkillTable
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_SkillTable : public UObject
{
public:
	class UCommonSource_SkillInfoSheet*                m_SkillInfoSheet;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PassiveInfoSheet*              m_PassiveInfoSheet;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_EffectInfoSheet*               m_EffectInfoSheet;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BuffTypeSheet*                 m_BuffTypeSheet;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BuffInfoSheet*                 m_BuffInfoSheet;                                          // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PlayerSkillSheet*              m_PlayerSkillSheet;                                       // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillEnchantSheet*             m_SkillEnchantSheet;                                      // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_HitAreaAdjustSheet*            m_HitAreaAdjustSheet;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillDefineSheet*              m_SkillDefineSheet;                                       // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CommonPlayerSkillSheet*        m_CommonPlayerSkillSheet;                                 // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTable");
		return ptr;
	}

};


// Class CommonSource.SealedStoneTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_SealedStoneTable : public UObject
{
public:
	class UCommonSource_SealedStoneInfoSheet*          m_SealedStoneInfoSheet;                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SealedStoneEnchantSheet*       m_SealedStoneEnchantSheet;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SealedStoneDefineSheet*        m_SealedStoneDefineSheet;                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SealedStoneSetOpenSheet*       m_SealedStoneSetOpenSheet;                                // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneTable");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendTable
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_SkillTranscendTable : public UObject
{
public:
	class UCommonSource_SkillTranscendDefineSheet*     m_SkillTranscendDefineSheet;                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillTranscendOptionTypeSheet* m_SkillTranscendOptionTypeSheet;                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillTranscendInfoSheet*       m_SkillTranscendInfoSheet;                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillTranscendBuffSheet*       m_SkillTranscendBuffSheet;                                // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillTranscendNeedGroupSheet*  m_SkillTranscendNeedGroupSheet;                           // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillTranscendSuccessGroupSheet* m_SkillTranscendSuccessGroupSheet;                        // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillTranscendResetSheet*      m_SkillTranscendResetSheet;                               // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillTranscendRestoreSheet*    m_SkillTranscendRestoreSheet;                             // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillTranscendChangeStringDescSheet* m_SkillTranscendChangeStringDescSheet;                    // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendTable");
		return ptr;
	}

};


// Class CommonSource.SoundTable
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_SoundTable : public UObject
{
public:
	class UCommonSource_QuestVoiceSoundSheet*          m_QuestVoiceSoundSheet;                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SoundDefineSheet*              m_SoundDefineSheet;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SoundWaveLengthSheet*          m_SoundWaveLengthSheet;                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SoundTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SoundTable");
		return ptr;
	}

};


// Class CommonSource.SpawnTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_SpawnTable : public UObject
{
public:
	class UCommonSource_SpawnInfoSheet*                m_SpawnInfoSheet;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ObjectDisposeSheet*            m_ObjectDisposeSheet;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_FastSpawnSheet*                m_FastSpawnSheet;                                         // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MaxSpawnDelaySheet*            m_MaxSpawnDelaySheet;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpawnTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpawnTable");
		return ptr;
	}

};


// Class CommonSource.VehicleTable
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_VehicleTable : public UObject
{
public:
	class UCommonSource_VehicleInfoSheet*              m_VehicleInfoSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VehicleGradeSheet*             m_VehicleGradeSheet;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VehicleUpgradeSheet*           m_VehicleUpgradeSheet;                                    // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_FlySpotSheet*                  m_FlySpotSheet;                                           // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BattleVehicleInfoSheet*        m_BattleVehicleInfoSheet;                                 // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_BattleVehicleTypeSheet*        m_BattleVehicleTypeSheet;                                 // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VehicleRandomBoxSheet*         m_VehicleRandomBoxSheet;                                  // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VehicleDefineSheet*            m_VehicleDefineSheet;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VehicleGaugeSheet*             m_VehicleGaugeSheet;                                      // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleTable");
		return ptr;
	}

};


// Class CommonSource.TriggerTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_TriggerTable : public UObject
{
public:
	class UCommonSource_TriggerInfoSheet*              m_TriggerInfoSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_TriggerActionSheet*            m_TriggerActionSheet;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TriggerTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TriggerTable");
		return ptr;
	}

};


// Class CommonSource.VoidSummonerTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_VoidSummonerTable : public UObject
{
public:
	class UCommonSource_VoidSummonerInfoSheet*         m_VoidSummonerInfoSheet;                                  // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VoidSummonsMonsterSheet*       m_VoidSummonsMonsterSheet;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VoidSummonsMonsterDamagePercentSheet* m_VoidSummonsMonsterDamagePercentSheet;                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VoidSummonerDefineSheet*       m_VoidSummonerDefineSheet;                                // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VoidSummonerTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VoidSummonerTable");
		return ptr;
	}

};


// Class CommonSource.VolumeAreaTable
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_VolumeAreaTable : public UObject
{
public:
	class UCommonSource_VolumeAreaInfoSheet*           m_VolumeAreaInfoSheet;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_NaviVolumeAreaInfoSheet*       m_NaviVolumeAreaInfoSheet;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_NaviVolumeAreaVerticesInfoSheet* m_NaviVolumeAreaVerticesInfoSheet;                        // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VolumeAreaTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VolumeAreaTable");
		return ptr;
	}

};


// Class CommonSource.WorldBossTable
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_WorldBossTable : public UObject
{
public:
	class UCommonSource_WorldBossInfoSheet*            m_WorldBossInfoSheet;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WorldBossDefineSheet*          m_WorldBossDefineSheet;                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WorldBossRewardSheet*          m_WorldBossRewardSheet;                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldBossTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldBossTable");
		return ptr;
	}

};


// Class CommonSource.AchievementInfoRecord
// 0x00A8 (0x00D0 - 0x0028)
class UCommonSource_AchievementInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DetailDesc;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AchievementShareType;                                     // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AchievementCategory;                                      // 0x004D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               InfiniteType;                                             // 0x004E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x004F(0x0001) MISSED OFFSET
	int                                                Group;                                                    // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                sort;                                                     // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PrevAchievementIndex;                                     // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AchievementMissionType;                                   // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	int                                                MissionX;                                                 // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionY;                                                 // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionZ;                                                 // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionN;                                                 // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardPoint;                                              // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardExp;                                                // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              RewardResourceType;                                       // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        rewardIndex;                                              // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RewardCount;                                              // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IconName;                                                 // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     GoogleAchievement;                                        // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               ContentsOff;                                              // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementInfoRecord");
		return ptr;
	}

};


// Class CommonSource.AchievementInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AchievementInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_AchievementInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementInfoSheet");
		return ptr;
	}


	class UCommonSource_AchievementInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AchievementMissionRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_AchievementMissionRecord : public UObject
{
public:
	unsigned char                                      AchievementMissionType;                                   // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                descCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AchievementClearCountType;                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      XCompareType;                                             // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      YCompareType;                                             // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ZCompareType;                                             // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UsePercentText;                                           // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SelectPrepare;                                            // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0036(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementMissionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementMissionRecord");
		return ptr;
	}

};


// Class CommonSource.WeaponShapeTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_WeaponShapeTable : public UObject
{
public:
	class UCommonSource_WeaponShapeInfoSheet*          m_WeaponShapeInfoSheet;                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WeaponShapeGradeSheet*         m_WeaponShapeGradeSheet;                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WeaponShapeDefineSheet*        m_WeaponShapeDefineSheet;                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WeaponShapeEffectChangeSheet*  m_WeaponShapeEffectChangeSheet;                           // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeTable");
		return ptr;
	}

};


// Class CommonSource.AchievementMissionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AchievementMissionSheet : public UObject
{
public:
	TArray<class UCommonSource_AchievementMissionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementMissionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementMissionSheet");
		return ptr;
	}


	class UCommonSource_AchievementMissionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AchievementLevelRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_AchievementLevelRecord : public UObject
{
public:
	int                                                Level;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NextExp;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxEquipCost;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<unsigned char>                              CharParam;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      PlusValue;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementLevelRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementLevelRecord");
		return ptr;
	}

};


// Class CommonSource.AchievementLevelSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AchievementLevelSheet : public UObject
{
public:
	TArray<class UCommonSource_AchievementLevelRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementLevelSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementLevelSheet");
		return ptr;
	}


	class UCommonSource_AchievementLevelRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AchievementPeriodRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_AchievementPeriodRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                RewardCoolTime;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementPeriodRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementPeriodRecord");
		return ptr;
	}

};


// Class CommonSource.AchievementDefineRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_AchievementDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCardSlotCount;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SetCardCount;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SavePeriod;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChampionsSavePeriod;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementDefineRecord");
		return ptr;
	}

};


// Class CommonSource.AchievementPeriodSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AchievementPeriodSheet : public UObject
{
public:
	TArray<class UCommonSource_AchievementPeriodRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementPeriodSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementPeriodSheet");
		return ptr;
	}


	class UCommonSource_AchievementPeriodRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AchievementDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AchievementDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_AchievementDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementDefineSheet");
		return ptr;
	}


	class UCommonSource_AchievementDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AchievementCompareGroupRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_AchievementCompareGroupRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                CompareIndex;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementCompareGroupRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementCompareGroupRecord");
		return ptr;
	}

};


// Class CommonSource.AchievementCompareGroupSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AchievementCompareGroupSheet : public UObject
{
public:
	TArray<class UCommonSource_AchievementCompareGroupRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AchievementCompareGroupSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AchievementCompareGroupSheet");
		return ptr;
	}


	class UCommonSource_AchievementCompareGroupRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AIParamRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_AIParamRecord : public UObject
{
public:
	int                                                ObjectIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                AITreeID;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PerceptRange;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AggroRange;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewindRange;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SearchEnemyType;                                          // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      KitingType;                                               // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0052(0x0002) MISSED OFFSET
	int                                                KitingValue;                                              // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsKitingHit;                                              // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                KitingescapeTime;                                         // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KitingProb;                                               // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KitingRadius;                                             // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KitingWaitingTime;                                        // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KitingCoolTime;                                           // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KitingDistance;                                           // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsScatterChase;                                           // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	int                                                ScatterAngle;                                             // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChasingCoolTime;                                          // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIParamRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIParamRecord");
		return ptr;
	}

};


// Class CommonSource.AIParamSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AIParamSheet : public UObject
{
public:
	TArray<class UCommonSource_AIParamRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIParamSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIParamSheet");
		return ptr;
	}


	class UCommonSource_AIParamRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AISkillSelectorRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_AISkillSelectorRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                skilllevel;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SelectProb;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<unsigned char>                              PhaseType;                                                // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      TargetHitCondType;                                        // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	int64_t                                            TargetHitCondValue;                                       // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TargetHitCondBuffType;                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AISkillSelectorRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AISkillSelectorRecord");
		return ptr;
	}

};


// Class CommonSource.AISkillSelectorSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AISkillSelectorSheet : public UObject
{
public:
	TArray<class UCommonSource_AISkillSelectorRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AISkillSelectorSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AISkillSelectorSheet");
		return ptr;
	}


	class UCommonSource_AISkillSelectorRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AIPatternSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AIPatternSheet : public UObject
{
public:
	TArray<class UCommonSource_AIPatternRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIPatternSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIPatternSheet");
		return ptr;
	}


	class UCommonSource_AIPatternRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AITreeRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_AITreeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AITreeID;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     NodeName;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ParentIndex;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     ParentName;                                               // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      BTNodeRole;                                               // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BTNodeType;                                               // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	int                                                LinkTreeID;                                               // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChildIndex;                                               // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsInversed;                                               // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BTAIState;                                                // 0x0065(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BTTargetType;                                             // 0x0066(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0067(0x0001) MISSED OFFSET
	float                                              Distance;                                                 // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                hpPercent;                                                // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                IndexValue;                                               // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TypeValue;                                                // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               isValue;                                                  // 0x0075(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0076(0x0002) MISSED OFFSET
	int                                                Once;                                                     // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Rate;                                                     // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AITreeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AITreeRecord");
		return ptr;
	}

};


// Class CommonSource.AIPatternRecord
// 0x0080 (0x00A8 - 0x0028)
class UCommonSource_AIPatternRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     MonsterName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ObjectIndex;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsRepeat;                                                 // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAndCheck;                                               // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x005A(0x0006) MISSED OFFSET
	TArray<unsigned char>                              AIPatternCondType;                                        // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        CondValue;                                                // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      AIPatternActionType;                                      // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	TArray<int64_t>                                    ActionIndex;                                              // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ActionProb;                                               // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIPatternRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIPatternRecord");
		return ptr;
	}

};


// Class CommonSource.AITreeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AITreeSheet : public UObject
{
public:
	TArray<class UCommonSource_AITreeRecord*>          arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AITreeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AITreeSheet");
		return ptr;
	}


	class UCommonSource_AITreeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AlchemyBoardInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AlchemyBoardInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_AlchemyBoardInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyBoardInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyBoardInfoSheet");
		return ptr;
	}


	class UCommonSource_AlchemyBoardInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AlchemyInfoRecord
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AlchemyInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BoardIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AlchemyGroup;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AlchemyType;                                              // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AlchemyInputCount;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AlchemyGroupProbRate;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AlchemyOptionGroup;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AlchemyOptionCountGroup;                                  // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InputResourceType;                                        // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	int                                                NeedInputCost;                                            // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FString                                     AlchemyColor;                                             // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IconName;                                                 // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     AlchemyInputColor;                                        // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyInfoRecord");
		return ptr;
	}

};


// Class CommonSource.AlchemyInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AlchemyInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_AlchemyInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyInfoSheet");
		return ptr;
	}


	class UCommonSource_AlchemyInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AlchemyOptionCountRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_AlchemyOptionCountRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        OptionCount;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyOptionCountRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyOptionCountRecord");
		return ptr;
	}

};


// Class CommonSource.AlchemyOptionCountSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AlchemyOptionCountSheet : public UObject
{
public:
	TArray<class UCommonSource_AlchemyOptionCountRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyOptionCountSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyOptionCountSheet");
		return ptr;
	}


	class UCommonSource_AlchemyOptionCountRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AlchemyOptionRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_AlchemyOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AlchemyOptionGroup;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                Prob;                                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SetValueUnit;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<float>                                      SetValue;                                                 // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        GroupProb;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      HeatingPlusValue;                                         // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyOptionRecord");
		return ptr;
	}

};


// Class CommonSource.AlchemyDefineRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_AlchemyDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaterialResourceType;                                     // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                MaterialItemIndex;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedMaterialCount;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HeatingResourceType;                                      // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                HeatingItemIndex;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        HeatingCost;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      HeatingProb;                                              // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                AlchemyBuffTime;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BaseAlchemyGroupCount;                                    // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HeatingCostRewardIndex;                                   // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<int>                                        HeatingCostReward;                                        // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyDefineRecord");
		return ptr;
	}

};


// Class CommonSource.AlchemyDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AlchemyDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_AlchemyDefineRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyDefineSheet");
		return ptr;
	}


	class UCommonSource_AlchemyDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AlchemyOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AlchemyOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_AlchemyOptionRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyOptionSheet");
		return ptr;
	}


	class UCommonSource_AlchemyOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AniInfoRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_AniInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     ObjectName;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ObjectIndex;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AniType;                                                  // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                SkillIndex;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MotionScale;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MotionTime;                                               // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageNotify;                                             // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BuffNotify;                                               // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CreateNotify;                                             // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HitAreaNotify;                                            // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HitFreezeTime;                                            // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TeleportStartTime;                                        // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TeleportEndTime;                                          // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AniInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AniInfoRecord");
		return ptr;
	}

};


// Class CommonSource.AreaInfoRecord
// 0x0068 (0x0090 - 0x0028)
class UCommonSource_AreaInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MapIndex;                                                 // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NaviVolumeAreaIndex;                                      // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AreaType;                                                 // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsActive;                                                 // 0x0055(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PortalOwnerType;                                          // 0x0056(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0057(0x0001) MISSED OFFSET
	float                                              CharacterAngle;                                           // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AreaAngle;                                                // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LBottomX;                                                 // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LBottomY;                                                 // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LBottomZ;                                                 // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RTopX;                                                    // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RTopY;                                                    // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RTopZ;                                                    // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            BuffIndex;                                                // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaBuffApplyIndex;                                       // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaBuffApplyClassIndex;                                  // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TriggerGroupID;                                           // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ObjFaction;                                               // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBuffIndexActivity;                                      // 0x008D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x008E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AreaInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AreaInfoRecord");
		return ptr;
	}

};


// Class CommonSource.AlchemyBoardInfoRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_AlchemyBoardInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OpenCondition;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	int64_t                                            BuffIndex;                                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsOpen;                                                   // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AlchemyBoardInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AlchemyBoardInfoRecord");
		return ptr;
	}

};


// Class CommonSource.AreaTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_AreaTable : public UObject
{
public:
	class UCommonSource_AreaInfoSheet*                 m_AreaInfoSheet;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AreaTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AreaTable");
		return ptr;
	}

};


// Class CommonSource.AreaInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AreaInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_AreaInfoRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AreaInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AreaInfoSheet");
		return ptr;
	}


	class UCommonSource_AreaInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AutoBotSettingInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AutoBotSettingInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_AutoBotSettingInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AutoBotSettingInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AutoBotSettingInfoSheet");
		return ptr;
	}


	class UCommonSource_AutoBotSettingInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AutoBotSettingTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_AutoBotSettingTable : public UObject
{
public:
	class UCommonSource_AutoBotSettingInfoSheet*       m_AutoBotSettingInfoSheet;                                // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AutoBotSettingTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AutoBotSettingTable");
		return ptr;
	}

};


// Class CommonSource.AvatarInfoRecord
// 0x0130 (0x0158 - 0x0028)
class UCommonSource_AvatarInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                sort;                                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ClassChangeEnabled;                                       // 0x0036(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0037(0x0001) MISSED OFFSET
	int                                                MatchingGroup;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopRandomChoiceGrade;                                // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	TArray<unsigned char>                              MainCharParam;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      MainPlusValue;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              SubCharParam;                                             // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      SubPlusValue;                                             // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              AddCharParam;                                             // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      AddPlusValue;                                             // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsHelmet;                                                 // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BodyModelName;                                            // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PoseGroup;                                                // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	struct FString                                     HeadModelName;                                            // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               HairVisible;                                              // 0x00E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               FaceVisible;                                              // 0x00E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x00E2(0x0006) MISSED OFFSET
	struct FString                                     WeaponModelName;                                          // 0x00E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              WeaponLAddX;                                              // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponLAddY;                                              // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponLAddZ;                                              // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponRAddX;                                              // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponRAddY;                                              // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponRAddZ;                                              // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponBowAddX;                                            // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponBowAddY;                                            // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponBowAddZ;                                            // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSubAddX;                                            // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSubAddY;                                            // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponSubAddZ;                                            // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponExtraAddX;                                          // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponExtraAddY;                                          // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WeaponExtraAddZ;                                          // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	struct FString                                     WingModelName;                                            // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               WingVisible;                                              // 0x0148(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x0149(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x014A(0x0002) MISSED OFFSET
	int                                                ExpireTime;                                               // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHideList;                                               // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarInfoRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AvatarInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_AvatarInfoRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarInfoSheet");
		return ptr;
	}


	class UCommonSource_AvatarInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AvatarPoseRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_AvatarPoseRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PoseGroup;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     PoseAnimName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               WeaponAdd;                                                // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               NoWeaponPose;                                             // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	struct FString                                     SocketWeaponPoseAnimName;                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarPoseRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarPoseRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarPoseSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AvatarPoseSheet : public UObject
{
public:
	TArray<class UCommonSource_AvatarPoseRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarPoseSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarPoseSheet");
		return ptr;
	}


	class UCommonSource_AvatarPoseRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AutoBotSettingInfoRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_AutoBotSettingInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                Level;                                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AvartarID;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        VehicleID;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ItemID;                                                   // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ItemEnchant;                                              // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AutoBotSettingInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AutoBotSettingInfoRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarPoseDefineRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_AvatarPoseDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PoseGroup;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               PoseSeparateEnabled;                                      // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarPoseDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarPoseDefineRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarPoseDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AvatarPoseDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_AvatarPoseDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarPoseDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarPoseDefineSheet");
		return ptr;
	}


	class UCommonSource_AvatarPoseDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AvatarDialogueRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_AvatarDialogueRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Dialogue;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarDialogueRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarDialogueRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarDialogueSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AvatarDialogueSheet : public UObject
{
public:
	TArray<class UCommonSource_AvatarDialogueRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarDialogueSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarDialogueSheet");
		return ptr;
	}


	class UCommonSource_AvatarDialogueRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AvatarGradeRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_AvatarGradeRecord : public UObject
{
public:
	unsigned char                                      grade;                                                    // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                AvatarBoxGroupID;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RandomShiftGroupID;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AvatarCouponBoxGroupID;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ComposeNeedCount;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<int>                                        DecidePrice;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsOptionalReplacement;                                    // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarGradeRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarDefineRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_AvatarDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxComposeCount;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxShiftCount;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NeedChangeGrade;                                          // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                AvatarChangeExpireDay;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ImprintItemIndex;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ImprintBlessItemIndex;                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AvatarExpConstantD;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AvatarExpConstantE;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsImprintOpen;                                            // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	int                                                ImprintOpenQuest;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MythMaxShiftCount;                                        // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BundleComposeMaxGrade;                                    // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                BundleComposeMaxCount;                                    // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarDefineRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AvatarDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_AvatarDefineRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarDefineSheet");
		return ptr;
	}


	class UCommonSource_AvatarDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AdvancementRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_AdvancementRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FString                                     ImageName;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AdvancementRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AdvancementRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AvatarGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_AvatarGradeRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarGradeSheet");
		return ptr;
	}


	class UCommonSource_AvatarGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AvatarGaugeRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_AvatarGaugeRecord : public UObject
{
public:
	unsigned char                                      CharParam;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                MaxValue;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarGaugeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarGaugeRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarGaugeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AvatarGaugeSheet : public UObject
{
public:
	TArray<class UCommonSource_AvatarGaugeRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarGaugeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarGaugeSheet");
		return ptr;
	}


	class UCommonSource_AvatarGaugeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AvatarStatuePoseRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_AvatarStatuePoseRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FString                                     PoseAnimName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     SocketWeaponPoseAnimName;                                 // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarStatuePoseRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarStatuePoseRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarStatuePoseSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AvatarStatuePoseSheet : public UObject
{
public:
	TArray<class UCommonSource_AvatarStatuePoseRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarStatuePoseSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarStatuePoseSheet");
		return ptr;
	}


	class UCommonSource_AvatarStatuePoseRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapDataChangeRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_MapDataChangeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     ServerGroupName;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MapIndex;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LevelModify;                                              // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAccuracyModify;                                        // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAvoidanceModify;                                       // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxHpPercentModify;                                       // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DamagePercentModify;                                      // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CloseAbsoluteReductionPercentModify;                      // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RangeAbsoluteReductionPercentModify;                      // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MagicAbsoluteReductionPercentModify;                      // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RecommendBattlePower;                                     // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedBattlePower;                                          // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedPlayerLevelMin;                                       // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedPlayerLevelMax;                                       // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapDataChangeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapDataChangeRecord");
		return ptr;
	}

};


// Class CommonSource.MapDataChangeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapDataChangeSheet : public UObject
{
public:
	TArray<class UCommonSource_MapDataChangeRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapDataChangeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapDataChangeSheet");
		return ptr;
	}


	class UCommonSource_MapDataChangeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomPackageChangeRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RandomPackageChangeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     ServerGroupName;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                dropPackageGroupID;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TArray<int>                                        RandomBoxDropGroupID;                                     // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomPackageChangeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomPackageChangeRecord");
		return ptr;
	}

};


// Class CommonSource.RandomPackageChangeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomPackageChangeSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomPackageChangeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomPackageChangeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomPackageChangeSheet");
		return ptr;
	}


	class UCommonSource_RandomPackageChangeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapDisplayCheckChangeRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_MapDisplayCheckChangeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     ServerGroupName;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MapDisplayCheckIndex;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        DisplayItemIndex;                                         // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapDisplayCheckChangeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapDisplayCheckChangeRecord");
		return ptr;
	}

};


// Class CommonSource.MapDisplayCheckChangeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapDisplayCheckChangeSheet : public UObject
{
public:
	TArray<class UCommonSource_MapDisplayCheckChangeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapDisplayCheckChangeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapDisplayCheckChangeSheet");
		return ptr;
	}


	class UCommonSource_MapDisplayCheckChangeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DropExpGoldChangeRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_DropExpGoldChangeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     ServerGroupName;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                DropIndex;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DropPercentModify;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropExpGoldChangeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropExpGoldChangeRecord");
		return ptr;
	}

};


// Class CommonSource.DropExpGoldChangeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DropExpGoldChangeSheet : public UObject
{
public:
	TArray<class UCommonSource_DropExpGoldChangeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropExpGoldChangeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropExpGoldChangeSheet");
		return ptr;
	}


	class UCommonSource_DropExpGoldChangeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AniInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AniInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_AniInfoRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AniInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AniInfoSheet");
		return ptr;
	}


	class UCommonSource_AniInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BlessingBoardInfoRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_BlessingBoardInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OpenCondition;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CompleteSetGroup;                                         // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SymbolGroup;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SymbolChangeLock;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SlotEnchantLock;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingBoardInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingBoardInfoRecord");
		return ptr;
	}

};


// Class CommonSource.BlessingBoardInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingBoardInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_BlessingBoardInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingBoardInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingBoardInfoSheet");
		return ptr;
	}


	class UCommonSource_BlessingBoardInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CompleteParamInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_CompleteParamInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BoardIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	TArray<float>                                      grade;                                                    // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SlotEnchantNameCode;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SlotEnchantCharParam;                                     // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	TArray<float>                                      SlotEnchant;                                              // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CompleteParamInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CompleteParamInfoRecord");
		return ptr;
	}

};


// Class CommonSource.BlessingSlotInfoRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_BlessingSlotInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BoardIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ColumnGroup;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RowsGroup;                                                // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      slotNum;                                                  // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DefaultOpen;                                              // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                UnlockOrder;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnlockResourceType;                                       // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                UnlockResourceIndex;                                      // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UnlockCost;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingSlotInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingSlotInfoRecord");
		return ptr;
	}

};


// Class CommonSource.CompleteParamInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CompleteParamInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_CompleteParamInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CompleteParamInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CompleteParamInfoSheet");
		return ptr;
	}


	class UCommonSource_CompleteParamInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BlessingSlotInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingSlotInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_BlessingSlotInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingSlotInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingSlotInfoSheet");
		return ptr;
	}


	class UCommonSource_BlessingSlotInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BlessingStoneInfoRecord
// 0x0070 (0x0098 - 0x0028)
class UCommonSource_BlessingStoneInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlessingStoneType;                                        // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	int                                                BossGroup;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlessingStoneBlockType;                                   // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlessingStoneRotationType;                                // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	TArray<unsigned char>                              OffsetX;                                                  // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              OffsetY;                                                  // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MoveStartSlotNum;                                         // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ViewPoint;                                                // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FormChangeGroup;                                          // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FormChangeFailProb;                                       // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BasicOptionGroup;                                         // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UniqueOptionGroup;                                        // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddSymbolCount;                                           // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SymbolGroup;                                              // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	struct FString                                     ItemImage;                                                // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingStoneInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingStoneInfoRecord");
		return ptr;
	}

};


// Class CommonSource.BlessingStoneGradeRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_BlessingStoneGradeRecord : public UObject
{
public:
	unsigned char                                      grade;                                                    // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FString                                     GradeBG;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ReleaseGold;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FormChangeGold;                                           // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessingStoneGroupID;                                     // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessingStoneBossGroupID;                                 // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaterialDropProb;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaterialDropCountMin;                                     // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaterialDropCountMax;                                     // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExchangeNeedGold;                                         // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExchangeNeedItemCount;                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingStoneGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingStoneGradeRecord");
		return ptr;
	}

};


// Class CommonSource.BlessingStoneGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingStoneGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_BlessingStoneGradeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingStoneGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingStoneGradeSheet");
		return ptr;
	}


	class UCommonSource_BlessingStoneGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BlessingStoneOptionRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_BlessingStoneOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OptionGroup;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                Prob;                                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      SetValue;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        GroupProb;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingStoneOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingStoneOptionRecord");
		return ptr;
	}

};


// Class CommonSource.BlessingStoneOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingStoneOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_BlessingStoneOptionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingStoneOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingStoneOptionSheet");
		return ptr;
	}


	class UCommonSource_BlessingStoneOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SymbolProbRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_SymbolProbRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SymbolGroup;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlessingSymbolType;                                       // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                Prob;                                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SymbolProbRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SymbolProbRecord");
		return ptr;
	}

};


// Class CommonSource.SymbolProbSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SymbolProbSheet : public UObject
{
public:
	TArray<class UCommonSource_SymbolProbRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SymbolProbSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SymbolProbSheet");
		return ptr;
	}


	class UCommonSource_SymbolProbRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BlessingSymbolCollectionRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_BlessingSymbolCollectionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BoardIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlessingSymbolType;                                       // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                CollectionCount;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              CharParam;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      PlusValue;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingSymbolCollectionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingSymbolCollectionRecord");
		return ptr;
	}

};


// Class CommonSource.BlessingSymbolCollectionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingSymbolCollectionSheet : public UObject
{
public:
	TArray<class UCommonSource_BlessingSymbolCollectionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingSymbolCollectionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingSymbolCollectionSheet");
		return ptr;
	}


	class UCommonSource_BlessingSymbolCollectionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BlessingSlotEnchantRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_BlessingSlotEnchantRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantStep;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantSuccessProb;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantGreatSuccessProb;                                  // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantFailureProb;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantGreatFailureProb;                                  // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantSuperGreatFailureProb;                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingSlotEnchantRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingSlotEnchantRecord");
		return ptr;
	}

};


// Class CommonSource.BlessingStoneInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingStoneInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_BlessingStoneInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingStoneInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingStoneInfoSheet");
		return ptr;
	}


	class UCommonSource_BlessingStoneInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BlessingSlotEnchantOptionRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_BlessingSlotEnchantOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BoardIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlessingEnchantRowColmnType;                              // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<float>                                      SlotEnchant;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingSlotEnchantOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingSlotEnchantOptionRecord");
		return ptr;
	}

};


// Class CommonSource.BlessingSlotEnchantOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingSlotEnchantOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_BlessingSlotEnchantOptionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingSlotEnchantOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingSlotEnchantOptionSheet");
		return ptr;
	}


	class UCommonSource_BlessingSlotEnchantOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BlessingBoardSampleRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_BlessingBoardSampleRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SampleSerial;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        slotIndex;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                StoneNum;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StoneIndex;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlessingStoneBlockType;                                   // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlessingStoneRotationType;                                // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x004A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingBoardSampleRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingBoardSampleRecord");
		return ptr;
	}

};


// Class CommonSource.BlessingBoardSampleSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingBoardSampleSheet : public UObject
{
public:
	TArray<class UCommonSource_BlessingBoardSampleRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingBoardSampleSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingBoardSampleSheet");
		return ptr;
	}


	class UCommonSource_BlessingBoardSampleRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BlessingSlotEnchantSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingSlotEnchantSheet : public UObject
{
public:
	TArray<class UCommonSource_BlessingSlotEnchantRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingSlotEnchantSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingSlotEnchantSheet");
		return ptr;
	}


	class UCommonSource_BlessingSlotEnchantRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BlessingDefineRecord
// 0x0070 (0x0098 - 0x0028)
class UCommonSource_BlessingDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ComposeNeedCount;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxComposeResultCount;                                    // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                BundleComposeMaxCount;                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ComposeBonusItemIndex;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FormChangeNeedCount;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SymbolChangeResourceType;                                 // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                SymbolChangeItemIndex;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SymbolChangeItemNeedCount;                                // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SymbolChangeCountReset;                                   // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	int                                                SymbolChangeLimitCount;                                   // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SymbolChangeAuto;                                         // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      LockResourceType;                                         // 0x0055(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0056(0x0002) MISSED OFFSET
	int                                                LockResourceIndex;                                        // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BundleComposeMaxGrade;                                    // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	TArray<int>                                        SymbolChangeLockPrice;                                    // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SlotEnchantItemIndex;                                     // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SlotEnchantItemNeedCount;                                 // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ExchangeMinGrade;                                         // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	int                                                ExchangeItemIndex;                                        // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SlotEnchantLockResourceType;                              // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	int                                                SlotEnchantLockResourceIndex;                             // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        SlotEnchantLockPrice;                                     // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingDefineRecord");
		return ptr;
	}

};


// Class CommonSource.BlessingDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BlessingDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_BlessingDefineRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BlessingDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BlessingDefineSheet");
		return ptr;
	}


	class UCommonSource_BlessingDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CashShopInfoRecord
// 0x0090 (0x00B8 - 0x0028)
class UCommonSource_CashShopInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsVisible;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSale;                                                   // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopMainCategory;                                     // 0x004A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopSubCategory;                                      // 0x004B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopBonusProductType;                                 // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      sort;                                                     // 0x004D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopUIType;                                           // 0x004E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x004F(0x0001) MISSED OFFSET
	int                                                AddShopIndex;                                             // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedShopIndex;                                            // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopBuyLimitType;                                     // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopBuyLimitPeriodType;                               // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopBuyLimitGuildJob;                                 // 0x005A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x005B(0x0001) MISSED OFFSET
	int                                                BuyLimitCount;                                            // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ProductID_AOS;                                            // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ProductID_IOS;                                            // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsMultipleBuy;                                            // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAtOnceBuy;                                              // 0x0081(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopPriceType;                                        // 0x0082(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0083(0x0001) MISSED OFFSET
	float                                              AosPrice;                                                 // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IosPrice;                                                 // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ProductBindType;                                          // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ProductResourceType;                                      // 0x008D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x008E(0x0002) MISSED OFFSET
	int                                                ProductIndex;                                             // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ProductCount;                                             // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     IconName;                                                 // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ReqFinishQuestIndex;                                      // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EffectValue;                                              // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BgEffectValue;                                            // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopExclusiveProductType;                             // 0x00B4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopExternalType;                                     // 0x00B5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopOdinPassType;                                     // 0x00B6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RandomGuaranteeType;                                      // 0x00B7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopInfoRecord");
		return ptr;
	}

};


// Class CommonSource.CashShopInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CashShopInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_CashShopInfoRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopInfoSheet");
		return ptr;
	}


	class UCommonSource_CashShopInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CashShopLimitPackageRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_CashShopLimitPackageRecord : public UObject
{
public:
	int                                                PackageIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     PackageName;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                CashShopIndex;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     RewardName;                                               // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsExtraReward;                                            // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NeedDay;                                                  // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	int                                                NeedLevel;                                                // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedQuest;                                                // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuyResourceType;                                          // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	int                                                BuyResourceIndex;                                         // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuyResourceCount;                                         // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FreeResourceType;                                         // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                FreeResourceIndex;                                        // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FreeResourceCount;                                        // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopLimitPackageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopLimitPackageRecord");
		return ptr;
	}

};


// Class CommonSource.CashShopLimitPackageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CashShopLimitPackageSheet : public UObject
{
public:
	TArray<class UCommonSource_CashShopLimitPackageRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopLimitPackageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopLimitPackageSheet");
		return ptr;
	}


	class UCommonSource_CashShopLimitPackageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CashShopDiscountInfoRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_CashShopDiscountInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      CashShopPriceType;                                        // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              AosPrice;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IosPrice;                                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AosDiscountPrice;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IosDiscountPrice;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopDiscountInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopDiscountInfoRecord");
		return ptr;
	}

};


// Class CommonSource.CashShopDiscountInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CashShopDiscountInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_CashShopDiscountInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopDiscountInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopDiscountInfoSheet");
		return ptr;
	}


	class UCommonSource_CashShopDiscountInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GetItemListRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_GetItemListRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ProductResourceType;                                      // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                ProductIndex;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopMainCategory;                                     // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopSubCategory;                                      // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0036(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GetItemListRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GetItemListRecord");
		return ptr;
	}

};


// Class CommonSource.CashShopCategoryRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_CashShopCategoryRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopMainCategory;                                     // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopSubCategory;                                      // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopCategoryRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopCategoryRecord");
		return ptr;
	}

};


// Class CommonSource.CashShopCategorySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CashShopCategorySheet : public UObject
{
public:
	TArray<class UCommonSource_CashShopCategoryRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopCategorySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopCategorySheet");
		return ptr;
	}


	class UCommonSource_CashShopCategoryRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CashShopDefineRecord
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_CashShopDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MileageForCash;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     CurrencySymbol;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                DecimalPoint;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BillingTokenTimer;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedOdinPassClearCash;                                    // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BillingAosPcTimer;                                        // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     BannerImageDefault1;                                      // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BannerImageDefault2;                                      // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BannerImageDefault3;                                      // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BannerImageDefault4;                                      // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsReplaceProductForMileage;                               // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	int                                                BonusCashDescCode;                                        // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BonusCashNeedLevel;                                       // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChinaBillingConfirmTimer;                                 // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopDefineRecord");
		return ptr;
	}

};


// Class CommonSource.CashShopDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CashShopDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_CashShopDefineRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopDefineSheet");
		return ptr;
	}


	class UCommonSource_CashShopDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CashShopOdinPassPointRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CashShopOdinPassPointRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedPoint;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopOdinPassPointRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopOdinPassPointRecord");
		return ptr;
	}

};


// Class CommonSource.CashShopOdinPassPointSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CashShopOdinPassPointSheet : public UObject
{
public:
	TArray<class UCommonSource_CashShopOdinPassPointRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopOdinPassPointSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopOdinPassPointSheet");
		return ptr;
	}


	class UCommonSource_CashShopOdinPassPointRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CashPurchaseMileageRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CashPurchaseMileageRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopMainCategory;                                     // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopSubCategory;                                      // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	float                                              PurchasePrice;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CashMileage;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashPurchaseMileageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashPurchaseMileageRecord");
		return ptr;
	}

};


// Class CommonSource.CashPurchaseMileageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CashPurchaseMileageSheet : public UObject
{
public:
	TArray<class UCommonSource_CashPurchaseMileageRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashPurchaseMileageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashPurchaseMileageSheet");
		return ptr;
	}


	class UCommonSource_CashPurchaseMileageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CashShopReplaceRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CashShopReplaceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MainProductCashShopIndex;                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReplaceProductCashShopIndex;                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopReplaceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopReplaceRecord");
		return ptr;
	}

};


// Class CommonSource.CashShopReplaceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CashShopReplaceSheet : public UObject
{
public:
	TArray<class UCommonSource_CashShopReplaceRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopReplaceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopReplaceSheet");
		return ptr;
	}


	class UCommonSource_CashShopReplaceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AdvancementSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AdvancementSheet : public UObject
{
public:
	TArray<class UCommonSource_AdvancementRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AdvancementSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AdvancementSheet");
		return ptr;
	}


	class UCommonSource_AdvancementRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomGuaranteeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomGuaranteeSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomGuaranteeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomGuaranteeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomGuaranteeSheet");
		return ptr;
	}


	class UCommonSource_RandomGuaranteeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CashShopChainProductRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CashShopChainProductRecord : public UObject
{
public:
	int                                                ChainProductIndex;                                        // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChainProductOrder;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FirstCashShopIndex;                                       // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopChainProductRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopChainProductRecord");
		return ptr;
	}

};


// Class CommonSource.CashShopChainProductSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CashShopChainProductSheet : public UObject
{
public:
	TArray<class UCommonSource_CashShopChainProductRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CashShopChainProductSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CashShopChainProductSheet");
		return ptr;
	}


	class UCommonSource_CashShopChainProductRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastleInfoRecord
// 0x0088 (0x00B0 - 0x0028)
class UCommonSource_CastleInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     SymbolName;                                               // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SameServerMinTaxRate;                                     // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AnotherServerMinTaxRate;                                  // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SameServerMaxTaxRate;                                     // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AnotherServerMaxTaxRate;                                  // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                bossIndex;                                                // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubBossIndex;                                             // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WarpDistance;                                             // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	TArray<int>                                        DoorIndex;                                                // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        BridgeIndex;                                              // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                WinRewardPoint;                                           // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WinRewardItemIndex;                                       // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WinRewardItemCount;                                       // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FailRewardPoint;                                          // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FailRewardItemIndex;                                      // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FailRewardItemCount;                                      // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastleInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastleInfoRecord");
		return ptr;
	}

};


// Class CommonSource.CastleInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastleInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_CastleInfoRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastleInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastleInfoSheet");
		return ptr;
	}


	class UCommonSource_CastleInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarDefineRecord
// 0x00B0 (0x00D8 - 0x0028)
class UCommonSource_CastlewarDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                JoinGuildCount;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedBidPlayerLevel;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedBidGuildJoinTime;                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinBiddingPrice;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CanBidGuildCount;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxHistoryListCount;                                      // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HistoryPeriod;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AttackTownPortalIndex;                                    // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapExitSecond;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxPageLimit;                                             // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BiddingPriceHideRanking;                                  // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SameServerTaxRate;                                        // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AnotherServerTaxRate;                                     // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	int                                                CastlewarEnterMinute;                                     // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedCastlewarEnterPlayerLevel;                            // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SystemTaxRate;                                            // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedRankingBiddingPrice;                                  // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              QualifierRefundPercent;                                   // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedJoinGuildLevel;                                       // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedQualifierGuildCount;                                  // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BidEndNoticeTime;                                         // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReductionTaxPercent;                                      // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildEnterLimit;                                          // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CastlewarNoneNpcShopIndex;                                // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedCastlewarShopGuildJoinTime;                           // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBountyTax;                                              // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x008D(0x0003) MISSED OFFSET
	int                                                ReductionBountyTaxPercent;                                // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResurrectionPrice;                                        // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResurrectionAddPrice;                                     // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectModifyAttackAbsoluteValue;                          // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectModifyDefenseAbsoluteValue;                         // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxAttackGuildVehicleConcurrentCount;                     // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxDefenseGuildVehicleConcurrentCount;                    // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ForceBossDeadWarpSecond;                                  // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TaxDistributionWaitTime;                                  // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TaxDistributionCancelUnableTime;                          // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinTaxDistributionValue;                                  // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRelationCoolTime;                                    // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AllianceResponseWaitingTime;                              // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AttackTargetStartTime;                                    // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AttackTargetEndTime;                                      // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TargetWorldGuildLimit;                                    // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CastleGuildLimit;                                         // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DefaultCastleTargetGuildCount;                            // 0x00D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarDefineRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarDefineSheet");
		return ptr;
	}


	class UCommonSource_CastlewarDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomGuaranteeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_RandomGuaranteeRecord : public UObject
{
public:
	unsigned char                                      RandomGuaranteeType;                                      // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                MaxCount;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RandomBoxGroupID;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsResetCount;                                             // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0036(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomGuaranteeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomGuaranteeRecord");
		return ptr;
	}

};


// Class CommonSource.MercenaryDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MercenaryDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_MercenaryDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MercenaryDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MercenaryDefineSheet");
		return ptr;
	}


	class UCommonSource_MercenaryDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QualifierDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_QualifierDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerWaitTime;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReadyTime;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                QualifierBattleTime;                                      // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EndTime;                                                  // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GoalKillCount;                                            // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnterMaxCount;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QualifierDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QualifierDefineRecord");
		return ptr;
	}

};


// Class CommonSource.QualifierDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QualifierDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_QualifierDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QualifierDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QualifierDefineSheet");
		return ptr;
	}


	class UCommonSource_QualifierDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarAreaBuffRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_CastlewarAreaBuffRecord : public UObject
{
public:
	int                                                AreaIndex;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int64_t>                                    BuffIndex;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarAreaBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarAreaBuffRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarAreaBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarAreaBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarAreaBuffRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarAreaBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarAreaBuffSheet");
		return ptr;
	}


	class UCommonSource_CastlewarAreaBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarRewardRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_CastlewarRewardRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Ranking;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardPoint;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardProb;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardItemIndex;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardItemCount;                                          // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarRewardRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarRewardRecord");
		return ptr;
	}

};


// Class CommonSource.MercenaryDefineRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_MercenaryDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxDefenseMercenaryCount;                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxAttackMercenaryCount;                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinBountyCash;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxGuildApplyCount;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxPlayerApplyCount;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedLevel;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HistoryPeriod;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxBountyCash;                                            // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MercenaryDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MercenaryDefineRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarCostumeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CastlewarCostumeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CastleIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                CostumeIndex;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarCostumeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarCostumeRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarCostumeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarCostumeSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarCostumeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarCostumeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarCostumeSheet");
		return ptr;
	}


	class UCommonSource_CastlewarCostumeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarRewardSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarRewardSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarRewardRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarRewardSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarRewardSheet");
		return ptr;
	}


	class UCommonSource_CastlewarRewardRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarBuffRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarBuffSheet");
		return ptr;
	}


	class UCommonSource_CastlewarBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarDistributionRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CastlewarDistributionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Ranking;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DifferentialRate;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarDistributionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarDistributionRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarBuffRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_CastlewarBuffRecord : public UObject
{
public:
	int                                                ObjectIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int64_t>                                    BuffIndex;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarBuffRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarDistributionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarDistributionSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarDistributionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarDistributionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarDistributionSheet");
		return ptr;
	}


	class UCommonSource_CastlewarDistributionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarObjectRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_CastlewarObjectRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CastleIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectIndex;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ObjectModifyEnabled;                                      // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                ObjectModifyGroupIndex;                                   // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               NeutralObjectTargetEnabled;                               // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDBSave;                                                 // 0x003D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarObjectRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarObjectRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarObjectSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarObjectSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarObjectRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarObjectSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarObjectSheet");
		return ptr;
	}


	class UCommonSource_CastlewarObjectRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MercenaryRewardRateRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_MercenaryRewardRateRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Ranking;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BountyCashRate;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MercenaryRewardRateRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MercenaryRewardRateRecord");
		return ptr;
	}

};


// Class CommonSource.MercenaryRewardRateSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MercenaryRewardRateSheet : public UObject
{
public:
	TArray<class UCommonSource_MercenaryRewardRateRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MercenaryRewardRateSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MercenaryRewardRateSheet");
		return ptr;
	}


	class UCommonSource_MercenaryRewardRateRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarDefenseBuffRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CastlewarDefenseBuffRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ContinueDefenseWinCount;                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DefenseBuffAddValue;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarDefenseBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarDefenseBuffRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarDefenseBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarDefenseBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarDefenseBuffRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarDefenseBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarDefenseBuffSheet");
		return ptr;
	}


	class UCommonSource_CastlewarDefenseBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarGuildBuffRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_CastlewarGuildBuffRecord : public UObject
{
public:
	int                                                ObjectIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int64_t>                                    BuffIndex;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarGuildBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarGuildBuffRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarObjectModifyRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_CastlewarObjectModifyRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectModifyMin;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectModifyMax;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DamagePercentModify;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxHpPercentModify;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LevelModify;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CloseAbsoluteReductionPercentModify;                      // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RangeAbsoluteReductionPercentModify;                      // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MagicAbsoluteReductionPercentModify;                      // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAccuracyModify;                                        // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAvoidanceModify;                                       // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarObjectModifyRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarObjectModifyRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarObjectModifySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarObjectModifySheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarObjectModifyRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarObjectModifySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarObjectModifySheet");
		return ptr;
	}


	class UCommonSource_CastlewarObjectModifyRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarGuildVehicleRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_CastlewarGuildVehicleRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                vehicleIndex;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarGuildVehicleRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarGuildVehicleRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarGuildVehicleSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarGuildVehicleSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarGuildVehicleRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarGuildVehicleSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarGuildVehicleSheet");
		return ptr;
	}


	class UCommonSource_CastlewarGuildVehicleRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarDBSaveBuffIndexRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CastlewarDBSaveBuffIndexRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            BuffIndex;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarDBSaveBuffIndexRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarDBSaveBuffIndexRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarDBSaveBuffIndexSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarDBSaveBuffIndexSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarDBSaveBuffIndexRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarDBSaveBuffIndexSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarDBSaveBuffIndexSheet");
		return ptr;
	}


	class UCommonSource_CastlewarDBSaveBuffIndexRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildChatImotionRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_GuildChatImotionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Type;                                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     SpecificWord;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildChatImotionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildChatImotionRecord");
		return ptr;
	}

};


// Class CommonSource.GuildChatImotionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildChatImotionSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildChatImotionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildChatImotionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildChatImotionSheet");
		return ptr;
	}


	class UCommonSource_GuildChatImotionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ChatEmoticonRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_ChatEmoticonRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        NameCode;                                                 // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IconName;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChatEmoticonRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChatEmoticonRecord");
		return ptr;
	}

};


// Class CommonSource.ChatEmoticonSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ChatEmoticonSheet : public UObject
{
public:
	TArray<class UCommonSource_ChatEmoticonRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChatEmoticonSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChatEmoticonSheet");
		return ptr;
	}


	class UCommonSource_ChatEmoticonRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ChatDefineRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_ChatDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxChatMessageSize;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChatFrequency;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxMemoriedChatCount;                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OverlapFrequency;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxOverlapChatCount;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChatBanTime;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AccumulateTime;                                           // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxChatBanTime;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildChatExpireTime;                                      // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildChatListCount;                                       // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AllChatCoolTime;                                          // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GroupChatMaxCreate;                                       // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GroupChatMaxGuild;                                        // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GroupChatMaxExtinctTimer;                                 // 0x005A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x005B(0x0001) MISSED OFFSET
	int                                                AnonymousStringIndex;                                     // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               GuildGroupChatContentClose;                               // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	int                                                DailyTranslateCount;                                      // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ServerInvasionAnonymousStringIndex;                       // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChatDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChatDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ChatDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ChatDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ChatDefineRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChatDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChatDefineSheet");
		return ptr;
	}


	class UCommonSource_ChatDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CheatServerRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_CheatServerRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Command;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Description;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Category;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FString>                             Param;                                                    // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Example;                                                  // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CheatServerRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CheatServerRecord");
		return ptr;
	}

};


// Class CommonSource.CheatClientRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_CheatClientRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Command;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Description;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Category;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FString>                             Param;                                                    // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Example;                                                  // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CheatClientRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CheatClientRecord");
		return ptr;
	}

};


// Class CommonSource.CheatClientSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CheatClientSheet : public UObject
{
public:
	TArray<class UCommonSource_CheatClientRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CheatClientSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CheatClientSheet");
		return ptr;
	}


	class UCommonSource_CheatClientRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CheatTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CheatTable : public UObject
{
public:
	class UCommonSource_CheatServerSheet*              m_CheatServerSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CheatClientSheet*              m_CheatClientSheet;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CheatTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CheatTable");
		return ptr;
	}

};


// Class CommonSource.CheatServerSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CheatServerSheet : public UObject
{
public:
	TArray<class UCommonSource_CheatServerRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CheatServerSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CheatServerSheet");
		return ptr;
	}


	class UCommonSource_CheatServerRecord* GetRecord(int64_t ID);
};


// Class CommonSource.NameImgTextRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_NameImgTextRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     ImgName;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SubNameCode;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MainNameCode;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MonsterIndex;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NameImgTextRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NameImgTextRecord");
		return ptr;
	}

};


// Class CommonSource.NameImgTextSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NameImgTextSheet : public UObject
{
public:
	TArray<class UCommonSource_NameImgTextRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NameImgTextSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NameImgTextSheet");
		return ptr;
	}


	class UCommonSource_NameImgTextRecord* GetRecord(int64_t ID);
};


// Class CommonSource.NameIconTextRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_NameIconTextRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     BgImg;                                                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IconImg;                                                  // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SubNameCode;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MainNameCode;                                             // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NameIconTextRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NameIconTextRecord");
		return ptr;
	}

};


// Class CommonSource.NameIconTextSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NameIconTextSheet : public UObject
{
public:
	TArray<class UCommonSource_NameIconTextRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NameIconTextSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NameIconTextSheet");
		return ptr;
	}


	class UCommonSource_NameIconTextRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CinemaSubtitlesSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CinemaSubtitlesSheet : public UObject
{
public:
	TArray<class UCommonSource_CinemaSubtitlesRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CinemaSubtitlesSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CinemaSubtitlesSheet");
		return ptr;
	}


	class UCommonSource_CinemaSubtitlesRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CinemaInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_CinemaInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CinemaIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     CinemaName;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CinemaInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CinemaInfoRecord");
		return ptr;
	}

};


// Class CommonSource.CinemaSubtitlesRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_CinemaSubtitlesRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CinemaIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubtitleString;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EndTime;                                                  // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FString                                     DialogSoundName;                                          // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CinemaSubtitlesRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CinemaSubtitlesRecord");
		return ptr;
	}

};


// Class CommonSource.ClassChangeInfoRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_ClassChangeInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ClassChangeInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ClassChangeInfoRecord");
		return ptr;
	}

};


// Class CommonSource.CinemaInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CinemaInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_CinemaInfoRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CinemaInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CinemaInfoSheet");
		return ptr;
	}


	class UCommonSource_CinemaInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ClassChangeInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ClassChangeInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ClassChangeInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ClassChangeInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ClassChangeInfoSheet");
		return ptr;
	}


	class UCommonSource_ClassChangeInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillEnchantRewardRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_SkillEnchantRewardRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SkillType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassChangeActionType;                                    // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	TArray<int>                                        EnchantLevel;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        TranscendLevel;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillEnchantRewardRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillEnchantRewardRecord");
		return ptr;
	}

};


// Class CommonSource.SkillEnchantRewardSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillEnchantRewardSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillEnchantRewardRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillEnchantRewardSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillEnchantRewardSheet");
		return ptr;
	}


	class UCommonSource_SkillEnchantRewardRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ChangeGradeRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ChangeGradeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassChangeType;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	int                                                ChangeCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        ChangePrice;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SkillEnchantReward;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillTranscendReward;                                     // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChangeGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChangeGradeRecord");
		return ptr;
	}

};


// Class CommonSource.ChangeGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ChangeGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_ChangeGradeRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChangeGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChangeGradeSheet");
		return ptr;
	}


	class UCommonSource_ChangeGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ChangeItemGradeRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ChangeItemGradeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassChangeType;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsExpireItemPrice;                                        // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChangeCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        ChangePrice;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChangeItemGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChangeItemGradeRecord");
		return ptr;
	}

};


// Class CommonSource.ChangeItemGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ChangeItemGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_ChangeItemGradeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChangeItemGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChangeItemGradeSheet");
		return ptr;
	}


	class UCommonSource_ChangeItemGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemChangePartsSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemChangePartsSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemChangePartsRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemChangePartsSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemChangePartsSheet");
		return ptr;
	}


	class UCommonSource_ItemChangePartsRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ClassChangePossiblePacketRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ClassChangePossiblePacketRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     packetName;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsException;                                              // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ClassChangePossiblePacketRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ClassChangePossiblePacketRecord");
		return ptr;
	}

};


// Class CommonSource.ClassChangePossiblePacketSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ClassChangePossiblePacketSheet : public UObject
{
public:
	TArray<class UCommonSource_ClassChangePossiblePacketRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ClassChangePossiblePacketSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ClassChangePossiblePacketSheet");
		return ptr;
	}


	class UCommonSource_ClassChangePossiblePacketRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemChangePartsRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ItemChangePartsRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassChangeItemGroup;                                     // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassChangeActionType;                                    // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChangePrice;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemChangePartsRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemChangePartsRecord");
		return ptr;
	}

};


// Class CommonSource.ClassChangeDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ClassChangeDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ClassChangeDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ClassChangeDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ClassChangeDefineSheet");
		return ptr;
	}


	class UCommonSource_ClassChangeDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillEnchantChangeGradeRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_SkillEnchantChangeGradeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SkillType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SkillGrade;                                               // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SkillEnchantType;                                         // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsKeepEnabled;                                            // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KeepLevel;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        ChangePrice;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillEnchantChangeGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillEnchantChangeGradeRecord");
		return ptr;
	}

};


// Class CommonSource.ClassChangeDefineRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ClassChangeDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ClassChangeTicket;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChangeItemIndex;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAvatarChange;                                           // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsWeaponShapeChange;                                      // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsItemChange;                                             // 0x0036(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSkillChange;                                            // 0x0037(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCostumeChange;                                          // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                ClassChangeCount;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ClassChangePlayerLevel;                                   // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ClassChangeQuestIndex;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAvatarJobChange;                                        // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsWeaponShapeJobChange;                                   // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsItemJobChange;                                          // 0x004A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSkillJobChange;                                         // 0x004B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCostumeJobChange;                                       // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsJobChangeAvatarSwap;                                    // 0x004D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsJobChangeWeaponShapeSwap;                               // 0x004E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x004F(0x0001) MISSED OFFSET
	int                                                JobChangeAvatarSwapCount;                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                JobChangeWeaponShapeSwapCount;                            // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ClassChangeDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ClassChangeDefineRecord");
		return ptr;
	}

};


// Class CommonSource.SkillEnchantChangeGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillEnchantChangeGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillEnchantChangeGradeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillEnchantChangeGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillEnchantChangeGradeSheet");
		return ptr;
	}


	class UCommonSource_SkillEnchantChangeGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CollectionRewardInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CollectionRewardInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_CollectionRewardInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionRewardInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionRewardInfoSheet");
		return ptr;
	}


	class UCommonSource_CollectionRewardInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CollectionCountTypeRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_CollectionCountTypeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               Enabled;                                                  // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionType;                                           // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionGrade;                                          // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionApplyType;                                      // 0x004A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionCount;                                          // 0x004B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<unsigned char>                              CharParam;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      PlusValue;                                                // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionCountTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionCountTypeRecord");
		return ptr;
	}

};


// Class CommonSource.CollectionRewardInfoRecord
// 0x0070 (0x0098 - 0x0028)
class UCommonSource_CollectionRewardInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionType;                                           // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionCategory;                                       // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionPeriod;                                         // 0x0046(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0047(0x0001) MISSED OFFSET
	int                                                DisplayOrder;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionSeason;                                         // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionCount;                                          // 0x004D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	TArray<int>                                        CollectionIndex;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              EnchantStep;                                              // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              CharParam;                                                // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      PlusValue;                                                // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               ContentsOff;                                              // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0091(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionRewardInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionRewardInfoRecord");
		return ptr;
	}

};


// Class CommonSource.CollectionCountTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CollectionCountTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_CollectionCountTypeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionCountTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionCountTypeSheet");
		return ptr;
	}


	class UCommonSource_CollectionCountTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CollectionReplaceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CollectionReplaceSheet : public UObject
{
public:
	TArray<class UCommonSource_CollectionReplaceRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionReplaceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionReplaceSheet");
		return ptr;
	}


	class UCommonSource_CollectionReplaceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CollectionDefineRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CollectionDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FavoriteMaxCount;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EventRotationCount;                                       // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EventRotationPeriod;                                      // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxRotationCount;                                         // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0033(0x0001) MISSED OFFSET
	int                                                MaxMultiEnrollCount;                                      // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionDefineRecord");
		return ptr;
	}

};


// Class CommonSource.CollectionDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CollectionDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_CollectionDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionDefineSheet");
		return ptr;
	}


	class UCommonSource_CollectionDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CollectionReplaceRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_CollectionReplaceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemCategory;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionPeriod;                                         // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	TArray<int>                                        ReplaceItemIndex;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              EnchantStep;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RustyKeyProb;                                             // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionReplaceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionReplaceRecord");
		return ptr;
	}

};


// Class CommonSource.CostumeInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CostumeInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_CostumeInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CostumeInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CostumeInfoSheet");
		return ptr;
	}


	class UCommonSource_CostumeInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CostumePoseRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CostumePoseRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                PoseGroup;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CostumePoseRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CostumePoseRecord");
		return ptr;
	}

};


// Class CommonSource.CostumePoseSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CostumePoseSheet : public UObject
{
public:
	TArray<class UCommonSource_CostumePoseRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CostumePoseSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CostumePoseSheet");
		return ptr;
	}


	class UCommonSource_CostumePoseRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CostumeInfoRecord
// 0x01B0 (0x01D8 - 0x0028)
class UCommonSource_CostumeInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CostumeGroup;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MatchingGroup;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DyeingColorGroup;                                         // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DyeingEnaled;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BHeadPartsEnabled;                                        // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	int                                                sort;                                                     // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	int                                                ExpireTime;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<unsigned char>                              MainCharParam;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      MainPlusValue;                                            // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              SubCharParam;                                             // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      SubPlusValue;                                             // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              AddCharParam;                                             // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      AddPlusValue;                                             // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      CostumeType;                                              // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PoseGroup;                                                // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	struct FString                                     BodyModelName;                                            // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     HeadModelName;                                            // 0x00E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     SpcialBodyModelName;                                      // 0x00F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               SpecialBodyEnabled;                                       // 0x0100(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HairVisible;                                              // 0x0101(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               FaceVisible;                                              // 0x0102(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x5];                                       // 0x0103(0x0005) MISSED OFFSET
	struct FString                                     Weapon01ModelName;                                        // 0x0108(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              Weapon01LAddX;                                            // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01LAddY;                                            // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01LAddZ;                                            // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01RAddX;                                            // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01RAddY;                                            // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01RAddZ;                                            // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01BowAddX;                                          // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01BowAddY;                                          // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01BowAddZ;                                          // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01SubAddX;                                          // 0x013C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01SubAddY;                                          // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01SubAddZ;                                          // 0x0144(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01ExtraAddX;                                        // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01ExtraAddY;                                        // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon01ExtraAddZ;                                        // 0x0150(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
	struct FString                                     Weapon02ModelName;                                        // 0x0158(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              Weapon02LAddX;                                            // 0x0168(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02LAddY;                                            // 0x016C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02LAddZ;                                            // 0x0170(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02RAddX;                                            // 0x0174(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02RAddY;                                            // 0x0178(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02RAddZ;                                            // 0x017C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02BowAddX;                                          // 0x0180(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02BowAddY;                                          // 0x0184(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02BowAddZ;                                          // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02SubAddX;                                          // 0x018C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02SubAddY;                                          // 0x0190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02SubAddZ;                                          // 0x0194(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02ExtraAddX;                                        // 0x0198(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02ExtraAddY;                                        // 0x019C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Weapon02ExtraAddZ;                                        // 0x01A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x01A4(0x0004) MISSED OFFSET
	struct FString                                     SlotImage;                                                // 0x01A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     WeaponHitParticle;                                        // 0x01B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     VehicleModelName;                                         // 0x01C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CostumeInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CostumeInfoRecord");
		return ptr;
	}

};


// Class CommonSource.GetItemListSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GetItemListSheet : public UObject
{
public:
	TArray<class UCommonSource_GetItemListRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GetItemListSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GetItemListSheet");
		return ptr;
	}


	class UCommonSource_GetItemListRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CostumeDyeingColorSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CostumeDyeingColorSheet : public UObject
{
public:
	TArray<class UCommonSource_CostumeDyeingColorRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CostumeDyeingColorSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CostumeDyeingColorSheet");
		return ptr;
	}


	class UCommonSource_CostumeDyeingColorRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CostumeDyeingDefineRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_CostumeDyeingDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HeadDyeingResourceType;                                   // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                HeadDyeingPriceIndex;                                     // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HeadDyeingPriceCount;                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HeadDyeingSuccessProb;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BodyDyeingResourceType;                                   // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                BodyDyeingPriceIndex;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BodyDyeingPriceCount;                                     // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BodyDyeingSuccessProb;                                    // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DyeingResetResourceType;                                  // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	int                                                DyeingResetPriceIndex;                                    // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DyeingResetPriceCount;                                    // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CostumeDyeingDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CostumeDyeingDefineRecord");
		return ptr;
	}

};


// Class CommonSource.CostumeDyeingColorRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_CostumeDyeingColorRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DyeingColorGroup;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     DyeingColor;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Prob;                                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CostumeDyeingColorRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CostumeDyeingColorRecord");
		return ptr;
	}

};


// Class CommonSource.CustomizingPresetRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_CustomizingPresetRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                SubIndex;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               Enabled;                                                  // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<unsigned char>                              CustomizingType;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              CustomizingColor;                                         // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              customizingGauge;                                         // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingPresetRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingPresetRecord");
		return ptr;
	}

};


// Class CommonSource.CustomizingPresetSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CustomizingPresetSheet : public UObject
{
public:
	TArray<class UCommonSource_CustomizingPresetRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingPresetSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingPresetSheet");
		return ptr;
	}


	class UCommonSource_CustomizingPresetRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CustomizingTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CustomizingTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_CustomizingTypeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingTypeSheet");
		return ptr;
	}


	class UCommonSource_CustomizingTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CustomizingColorRecord
// 0x0090 (0x00B8 - 0x0028)
class UCommonSource_CustomizingColorRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CustomizingColor;                                         // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                SubIndex;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     MainColor;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              MainBrightness;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FString                                     SpecColor;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     SpecSubColor;                                             // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              SpecBrightness;                                           // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FString                                     FresnelColor;                                             // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              FresnelBrightness;                                        // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	struct FString                                     BeardColor;                                               // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              BeardBrightness;                                          // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	struct FString                                     IconColor;                                                // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingColorRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingColorRecord");
		return ptr;
	}

};


// Class CommonSource.CustomizingColorSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CustomizingColorSheet : public UObject
{
public:
	TArray<class UCommonSource_CustomizingColorRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingColorSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingColorSheet");
		return ptr;
	}


	class UCommonSource_CustomizingColorRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CustomizingGaugeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CustomizingGaugeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      customizingGauge;                                         // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                StartValue;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EndValue;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingGaugeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingGaugeRecord");
		return ptr;
	}

};


// Class CommonSource.CustomizingTypeRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_CustomizingTypeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CustomizingType;                                          // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                SubIndex;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ModelName;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x004D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingTypeRecord");
		return ptr;
	}

};


// Class CommonSource.CustomizingGaugeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CustomizingGaugeSheet : public UObject
{
public:
	TArray<class UCommonSource_CustomizingGaugeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingGaugeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingGaugeSheet");
		return ptr;
	}


	class UCommonSource_CustomizingGaugeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CustomizingPoseSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CustomizingPoseSheet : public UObject
{
public:
	TArray<class UCommonSource_CustomizingPoseRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingPoseSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingPoseSheet");
		return ptr;
	}


	class UCommonSource_CustomizingPoseRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CustomizingPoseRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_CustomizingPoseRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     PoseIcon;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PoseAnimation;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingPoseRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingPoseRecord");
		return ptr;
	}

};


// Class CommonSource.CustomizingCostumeRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_CustomizingCostumeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     CostumeIcon;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                CostumeRes;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingCostumeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingCostumeRecord");
		return ptr;
	}

};


// Class CommonSource.CustomizingCostumeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CustomizingCostumeSheet : public UObject
{
public:
	TArray<class UCommonSource_CustomizingCostumeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CustomizingCostumeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CustomizingCostumeSheet");
		return ptr;
	}


	class UCommonSource_CustomizingCostumeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QualitySettingRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_QualitySettingRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Resolution;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Texture;                                                  // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FPS;                                                      // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Shadow;                                                   // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Effect;                                                   // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QualitySettingRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QualitySettingRecord");
		return ptr;
	}

};


// Class CommonSource.CostumeDyeingDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CostumeDyeingDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_CostumeDyeingDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CostumeDyeingDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CostumeDyeingDefineSheet");
		return ptr;
	}


	class UCommonSource_CostumeDyeingDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QualitySettingSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QualitySettingSheet : public UObject
{
public:
	TArray<class UCommonSource_QualitySettingRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QualitySettingSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QualitySettingSheet");
		return ptr;
	}


	class UCommonSource_QualitySettingRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AndroidSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AndroidSheet : public UObject
{
public:
	TArray<class UCommonSource_AndroidRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AndroidSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AndroidSheet");
		return ptr;
	}


	class UCommonSource_AndroidRecord* GetRecord(int64_t ID);
};


// Class CommonSource.IOSRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_IOSRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     DeviceModel;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      AntiAliasingQuality;                                      // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PostProcessQuality;                                       // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TextureQuality;                                           // 0x0042(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EffectsQuality;                                           // 0x0043(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FPSQuality;                                               // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.IOSRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.IOSRecord");
		return ptr;
	}

};


// Class CommonSource.IOSSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_IOSSheet : public UObject
{
public:
	TArray<class UCommonSource_IOSRecord*>             arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.IOSSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.IOSSheet");
		return ptr;
	}


	class UCommonSource_IOSRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DeviceOptionTable
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_DeviceOptionTable : public UObject
{
public:
	class UCommonSource_QualitySettingSheet*           m_QualitySettingSheet;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AndroidSheet*                  m_AndroidSheet;                                           // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_IOSSheet*                      m_IOSSheet;                                               // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DeviceOptionTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DeviceOptionTable");
		return ptr;
	}

};


// Class CommonSource.AndroidRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_AndroidRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     DeviceModel;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      AntiAliasingQuality;                                      // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PostProcessQuality;                                       // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TextureQuality;                                           // 0x0042(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EffectsQuality;                                           // 0x0043(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FPSQuality;                                               // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AndroidRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AndroidRecord");
		return ptr;
	}

};


// Class CommonSource.DialogueInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DialogueInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_DialogueInfoRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DialogueInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DialogueInfoSheet");
		return ptr;
	}


	class UCommonSource_DialogueInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MainTalkTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MainTalkTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_MainTalkTypeRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MainTalkTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MainTalkTypeSheet");
		return ptr;
	}


	class UCommonSource_MainTalkTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SubTalkTypeRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_SubTalkTypeRecord : public UObject
{
public:
	int                                                SubTalkType;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SubTalkTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SubTalkTypeRecord");
		return ptr;
	}

};


// Class CommonSource.SubTalkTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SubTalkTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_SubTalkTypeRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SubTalkTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SubTalkTypeSheet");
		return ptr;
	}


	class UCommonSource_SubTalkTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DialogueDefineRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_DialogueDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Durationtime;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CoolTime;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DialogueDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DialogueDefineRecord");
		return ptr;
	}

};


// Class CommonSource.DialogueDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DialogueDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_DialogueDefineRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DialogueDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DialogueDefineSheet");
		return ptr;
	}


	class UCommonSource_DialogueDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MainTalkTypeRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_MainTalkTypeRecord : public UObject
{
public:
	int                                                MainTalkType;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MainTalkTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MainTalkTypeRecord");
		return ptr;
	}

};


// Class CommonSource.DialogueInfoRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_DialogueInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                QuestIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShowDistance;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsShow;                                                   // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              Probability;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MainTalkType;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<unsigned char>                              SubTalkType;                                              // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        TalkString;                                               // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DialogueInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DialogueInfoRecord");
		return ptr;
	}

};


// Class CommonSource.DropExpRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_DropExpRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      DropType;                                                 // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MonsterGrade;                                             // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                ApplyLevel;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ValueA;                                                   // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ValueB;                                                   // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ValueC;                                                   // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ValueD;                                                   // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinMaxRangeRate;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropExpRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropExpRecord");
		return ptr;
	}

};


// Class CommonSource.DropExpSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DropExpSheet : public UObject
{
public:
	TArray<class UCommonSource_DropExpRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropExpSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropExpSheet");
		return ptr;
	}


	class UCommonSource_DropExpRecord* GetRecord(int64_t ID);
};


// Class CommonSource.NPCRandomTalkSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NPCRandomTalkSheet : public UObject
{
public:
	TArray<class UCommonSource_NPCRandomTalkRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NPCRandomTalkSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NPCRandomTalkSheet");
		return ptr;
	}


	class UCommonSource_NPCRandomTalkRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DropLevelPenaltyRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_DropLevelPenaltyRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LevelDiff;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpPercent;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GoldPercent;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ColorR;                                                   // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ColorG;                                                   // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ColorB;                                                   // 0x003A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x003B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropLevelPenaltyRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropLevelPenaltyRecord");
		return ptr;
	}

};


// Class CommonSource.DropLevelPenaltySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DropLevelPenaltySheet : public UObject
{
public:
	TArray<class UCommonSource_DropLevelPenaltyRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropLevelPenaltySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropLevelPenaltySheet");
		return ptr;
	}


	class UCommonSource_DropLevelPenaltyRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DropPartyPenaltyRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_DropPartyPenaltyRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LevelDiff;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpPercent;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GoldPercent;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ColorR;                                                   // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ColorG;                                                   // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ColorB;                                                   // 0x003A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x003B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropPartyPenaltyRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropPartyPenaltyRecord");
		return ptr;
	}

};


// Class CommonSource.DropPartyPenaltySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DropPartyPenaltySheet : public UObject
{
public:
	TArray<class UCommonSource_DropPartyPenaltyRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropPartyPenaltySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropPartyPenaltySheet");
		return ptr;
	}


	class UCommonSource_DropPartyPenaltyRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DropPartyBonusRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_DropPartyBonusRecord : public UObject
{
public:
	int                                                MemberCount;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpPercent;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GoldPercent;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropPartyBonusRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropPartyBonusRecord");
		return ptr;
	}

};


// Class CommonSource.DropPartyBonusSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DropPartyBonusSheet : public UObject
{
public:
	TArray<class UCommonSource_DropPartyBonusRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropPartyBonusSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropPartyBonusSheet");
		return ptr;
	}


	class UCommonSource_DropPartyBonusRecord* GetRecord(int64_t ID);
};


// Class CommonSource.EmotionInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_EmotionInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      EmotionType;                                              // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              MotionTime;                                               // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EmotionInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EmotionInfoRecord");
		return ptr;
	}

};


// Class CommonSource.EmotionInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_EmotionInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_EmotionInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EmotionInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EmotionInfoSheet");
		return ptr;
	}


	class UCommonSource_EmotionInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DropTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_DropTable : public UObject
{
public:
	class UCommonSource_DropExpSheet*                  m_DropExpSheet;                                           // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DropLevelPenaltySheet*         m_DropLevelPenaltySheet;                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DropPartyPenaltySheet*         m_DropPartyPenaltySheet;                                  // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_DropPartyBonusSheet*           m_DropPartyBonusSheet;                                    // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropTable");
		return ptr;
	}

};


// Class CommonSource.EmotionDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_EmotionDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_EmotionDefineRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EmotionDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EmotionDefineSheet");
		return ptr;
	}


	class UCommonSource_EmotionDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.EmotionDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_EmotionDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CastleLordEmotionEffectRange1;                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CastleLordEmotionEffectRange2;                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReactEmotionIdleComebackTime;                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     TransformBattlePoseIcon;                                  // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EmotionDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EmotionDefineRecord");
		return ptr;
	}

};


// Class CommonSource.EmotionTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_EmotionTable : public UObject
{
public:
	class UCommonSource_EmotionInfoSheet*              m_EmotionInfoSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_EmotionDefineSheet*            m_EmotionDefineSheet;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EmotionTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EmotionTable");
		return ptr;
	}

};


// Class CommonSource.EnumRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_EnumRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Enum;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                EnumIndex;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EnumRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EnumRecord");
		return ptr;
	}

};


// Class CommonSource.EnumSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_EnumSheet : public UObject
{
public:
	TArray<class UCommonSource_EnumRecord*>            arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EnumSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EnumSheet");
		return ptr;
	}


	class UCommonSource_EnumRecord* GetRecord(int64_t ID);
};


// Class CommonSource.EnchantGameRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_EnchantGameRecord : public UObject
{
public:
	int                                                Step;                                                     // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Velocity;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartHitPos;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EndHitPos;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartGreatHitPos;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EndGreatHitPos;                                           // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxLength;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EnchantGameRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EnchantGameRecord");
		return ptr;
	}

};


// Class CommonSource.EnchantGameSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_EnchantGameSheet : public UObject
{
public:
	TArray<class UCommonSource_EnchantGameRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EnchantGameSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EnchantGameSheet");
		return ptr;
	}


	class UCommonSource_EnchantGameRecord* GetRecord(int64_t ID);
};


// Class CommonSource.NPCRandomTalkRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_NPCRandomTalkRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        TalkString;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NPCRandomTalkRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NPCRandomTalkRecord");
		return ptr;
	}

};


// Class CommonSource.ExchangeSellingPriceRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_ExchangeSellingPriceRecord : public UObject
{
public:
	unsigned char                                      ItemGrade;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                MinSellingPrice;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeSellingPriceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeSellingPriceRecord");
		return ptr;
	}

};


// Class CommonSource.ExchangeCategoryRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_ExchangeCategoryRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name_1;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      Group_1;                                                  // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                NameCode_1;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name_2;                                                   // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      Group_2;                                                  // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                NameCode_2;                                               // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReqClassType;                                             // 0x0061(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0062(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeCategoryRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeCategoryRecord");
		return ptr;
	}

};


// Class CommonSource.ExchangeSellingPriceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ExchangeSellingPriceSheet : public UObject
{
public:
	TArray<class UCommonSource_ExchangeSellingPriceRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeSellingPriceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeSellingPriceSheet");
		return ptr;
	}


	class UCommonSource_ExchangeSellingPriceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ExchangeSortRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_ExchangeSortRecord : public UObject
{
public:
	unsigned char                                      ItemType;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                SortLevel;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeSortRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeSortRecord");
		return ptr;
	}

};


// Class CommonSource.ExchangeSortSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ExchangeSortSheet : public UObject
{
public:
	TArray<class UCommonSource_ExchangeSortRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeSortSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeSortSheet");
		return ptr;
	}


	class UCommonSource_ExchangeSortRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ExchangeCategorySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ExchangeCategorySheet : public UObject
{
public:
	TArray<class UCommonSource_ExchangeCategoryRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeCategorySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeCategorySheet");
		return ptr;
	}


	class UCommonSource_ExchangeCategoryRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ExchangeDefineRecord
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_ExchangeDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinWaitTime;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxWaitTime;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxWaitModifier;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlusModifier;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxRegistWaitTime;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxRegisterCount;                                         // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RegisterFeeModifier;                                      // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RegisterFeeIncreaseModifier;                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SellingDay;                                               // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TaxIncreasePercent;                                       // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CountPerPage;                                             // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinStatisticsCount;                                       // 0x0055(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SystemBuyAverageCount;                                    // 0x0056(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0057(0x0001) MISSED OFFSET
	int                                                NeedSaleOpenLevel;                                        // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedSaleQuestIndex;                                       // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MainTabNameCode;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpireTime;                                               // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpireLetterNameCode;                                     // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxFavoritesCount;                                        // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxPrice;                                                 // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxRegisterItemCount;                                     // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxMultiBuyCount;                                         // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSaveSearchHistory;                                     // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MultiSelectExceptCount;                                   // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedBuyLevel;                                             // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedBuyLevelPriceLimit;                                   // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DBLoadRegistTime;                                         // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ConditionCheckCount;                                      // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExchangeClosedTime;                                       // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuyAlertCheckMutiple;                                     // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ExchangeConditionCheckRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ExchangeConditionCheckRecord : public UObject
{
public:
	unsigned char                                      ExchangeConditionCheckType;                               // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                N;                                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsRequired;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUse;                                                    // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeConditionCheckRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeConditionCheckRecord");
		return ptr;
	}

};


// Class CommonSource.ExchangeConditionCheckSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ExchangeConditionCheckSheet : public UObject
{
public:
	TArray<class UCommonSource_ExchangeConditionCheckRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeConditionCheckSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeConditionCheckSheet");
		return ptr;
	}


	class UCommonSource_ExchangeConditionCheckRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ExchangeEnchantAlertMultipleSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ExchangeEnchantAlertMultipleSheet : public UObject
{
public:
	TArray<class UCommonSource_ExchangeEnchantAlertMultipleRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeEnchantAlertMultipleSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeEnchantAlertMultipleSheet");
		return ptr;
	}


	class UCommonSource_ExchangeEnchantAlertMultipleRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CommonFilteringInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_CommonFilteringInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Filtering;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CommonFilteringInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CommonFilteringInfoRecord");
		return ptr;
	}

};


// Class CommonSource.CommonFilteringInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CommonFilteringInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_CommonFilteringInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CommonFilteringInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CommonFilteringInfoSheet");
		return ptr;
	}


	class UCommonSource_CommonFilteringInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ExchangeEnchantAlertMultipleRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_ExchangeEnchantAlertMultipleRecord : public UObject
{
public:
	unsigned char                                      ItemType;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<float>                                      EnchanteMultiple;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeEnchantAlertMultipleRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeEnchantAlertMultipleRecord");
		return ptr;
	}

};


// Class CommonSource.NameFilteringInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_NameFilteringInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Filtering;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NameFilteringInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NameFilteringInfoRecord");
		return ptr;
	}

};


// Class CommonSource.NameFilteringInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NameFilteringInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_NameFilteringInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NameFilteringInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NameFilteringInfoSheet");
		return ptr;
	}


	class UCommonSource_NameFilteringInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ExceptionFilteringInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_ExceptionFilteringInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Filtering;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExceptionFilteringInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExceptionFilteringInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ExceptionFilteringInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ExceptionFilteringInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ExceptionFilteringInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExceptionFilteringInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExceptionFilteringInfoSheet");
		return ptr;
	}


	class UCommonSource_ExceptionFilteringInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.FilteringTable
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_FilteringTable : public UObject
{
public:
	class UCommonSource_CommonFilteringInfoSheet*      m_CommonFilteringInfoSheet;                               // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_NameFilteringInfoSheet*        m_NameFilteringInfoSheet;                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ExceptionFilteringInfoSheet*   m_ExceptionFilteringInfoSheet;                            // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FilteringTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FilteringTable");
		return ptr;
	}

};


// Class CommonSource.FormulaItemTypeRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_FormulaItemTypeRecord : public UObject
{
public:
	unsigned char                                      ItemType;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                ModifierD;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FormulaItemTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FormulaItemTypeRecord");
		return ptr;
	}

};


// Class CommonSource.FormulaItemTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_FormulaItemTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_FormulaItemTypeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FormulaItemTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FormulaItemTypeSheet");
		return ptr;
	}


	class UCommonSource_FormulaItemTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.FormulaItemEnchantRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_FormulaItemEnchantRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	TArray<int>                                        EnchantStep;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FormulaItemEnchantRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FormulaItemEnchantRecord");
		return ptr;
	}

};


// Class CommonSource.FormulaTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_FormulaTable : public UObject
{
public:
	class UCommonSource_FormulaItemTypeSheet*          m_FormulaItemTypeSheet;                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_FormulaItemEnchantSheet*       m_FormulaItemEnchantSheet;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FormulaTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FormulaTable");
		return ptr;
	}

};


// Class CommonSource.FriendDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_FriendDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CountPerPage;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxRecommendCount;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxFriendCount;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxFavoriteCount;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCautionTime;                                           // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxApplyTime;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FriendDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FriendDefineRecord");
		return ptr;
	}

};


// Class CommonSource.FriendDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_FriendDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_FriendDefineRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FriendDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FriendDefineSheet");
		return ptr;
	}


	class UCommonSource_FriendDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.FormulaItemEnchantSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_FormulaItemEnchantSheet : public UObject
{
public:
	TArray<class UCommonSource_FormulaItemEnchantRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FormulaItemEnchantSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FormulaItemEnchantSheet");
		return ptr;
	}


	class UCommonSource_FormulaItemEnchantRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerCheatRecord
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                QuestIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemGroupID;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleGroupID;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AvatarGroupID;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CollectionGroupID;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillGroupID;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WeaponShapeGroupID;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PetGroupID;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Gold;                                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Cash;                                                     // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RealmwarCoin;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Badge;                                                    // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildCoin;                                                // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MimirWisdom;                                              // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     guildName;                                                // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ImprintGroupID;                                           // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SealedStoneGroupID;                                       // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LinkGroupID;                                              // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SetParamGroupID;                                          // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerCheatRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerCheatRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerCheatSheet");
		return ptr;
	}


	class UCommonSource_PlayerCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemCheatRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ItemCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemIndex;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     ItemName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ItemEnchantStep;                                          // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                count;                                                    // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsEquip;                                                  // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUse;                                                    // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0052(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemCheatRecord");
		return ptr;
	}

};


// Class CommonSource.ItemCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemCheatRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemCheatSheet");
		return ptr;
	}


	class UCommonSource_ItemCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.FriendTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_FriendTable : public UObject
{
public:
	class UCommonSource_FriendDefineSheet*             m_FriendDefineSheet;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FriendTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FriendTable");
		return ptr;
	}

};


// Class CommonSource.ExchangeDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ExchangeDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ExchangeDefineRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExchangeDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExchangeDefineSheet");
		return ptr;
	}


	class UCommonSource_ExchangeDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VehicleCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VehicleCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_VehicleCheatRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleCheatSheet");
		return ptr;
	}


	class UCommonSource_VehicleCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AvatarCheatRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_AvatarCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                avatarIndex;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     AvatarName;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsEquip;                                                  // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarCheatRecord");
		return ptr;
	}

};


// Class CommonSource.VehicleCheatRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_VehicleCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                vehicleIndex;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     VehicleName;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsEquip;                                                  // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleCheatRecord");
		return ptr;
	}

};


// Class CommonSource.AvatarCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AvatarCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_AvatarCheatRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AvatarCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AvatarCheatSheet");
		return ptr;
	}


	class UCommonSource_AvatarCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CollectionCheatRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_CollectionCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CollectionIndex;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     CollectionName;                                           // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionCheatRecord");
		return ptr;
	}

};


// Class CommonSource.CollectionCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CollectionCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_CollectionCheatRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CollectionCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CollectionCheatSheet");
		return ptr;
	}


	class UCommonSource_CollectionCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarGuildBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarGuildBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarGuildBuffRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarGuildBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarGuildBuffSheet");
		return ptr;
	}


	class UCommonSource_CastlewarGuildBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WeaponShapeCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WeaponShapeCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_WeaponShapeCheatRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeCheatSheet");
		return ptr;
	}


	class UCommonSource_WeaponShapeCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ImprintCheatRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ImprintCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                imprintStep;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ImprintOptionIndex;                                       // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintCheatRecord");
		return ptr;
	}

};


// Class CommonSource.ImprintCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ImprintCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_ImprintCheatRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintCheatSheet");
		return ptr;
	}


	class UCommonSource_ImprintCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SealedStoneCheatRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_SealedStoneCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SealedStoneType;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                Level;                                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneCheatRecord");
		return ptr;
	}

};


// Class CommonSource.SkillCheatRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_SkillCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     SkillName;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                EnchantLevel;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsEquip;                                                  // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillCheatRecord");
		return ptr;
	}

};


// Class CommonSource.SealedStoneCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SealedStoneCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_SealedStoneCheatRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneCheatSheet");
		return ptr;
	}


	class UCommonSource_SealedStoneCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PetCheatRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_PetCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PetType;                                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                petIndex;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     PetName;                                                  // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsEquip;                                                  // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetCheatRecord");
		return ptr;
	}

};


// Class CommonSource.PetCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_PetCheatRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetCheatSheet");
		return ptr;
	}


	class UCommonSource_PetCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LinkCheatRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_LinkCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LinkBoardIndex;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SlotNumber;                                               // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EmblemType;                                               // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	int                                                EmblemInex;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkCheatRecord");
		return ptr;
	}

};


// Class CommonSource.LinkCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LinkCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_LinkCheatRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkCheatSheet");
		return ptr;
	}


	class UCommonSource_LinkCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SetParamCheatRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_SetParamCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SetParamIndex;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ParamValue;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SetParamCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SetParamCheatRecord");
		return ptr;
	}

};


// Class CommonSource.SetParamCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SetParamCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_SetParamCheatRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SetParamCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SetParamCheatSheet");
		return ptr;
	}


	class UCommonSource_SetParamCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StringRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_StringRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StringRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StringRecord");
		return ptr;
	}

};


// Class CommonSource.StringSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StringSheet : public UObject
{
public:
	TArray<class UCommonSource_StringRecord*>          arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StringSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StringSheet");
		return ptr;
	}


	class UCommonSource_StringRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MessageCoolTimeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_MessageCoolTimeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MessageCode;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CoolTime;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MessageCoolTimeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MessageCoolTimeRecord");
		return ptr;
	}

};


// Class CommonSource.FullSettingTable
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_FullSettingTable : public UObject
{
public:
	class UCommonSource_PlayerCheatSheet*              m_PlayerCheatSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ItemCheatSheet*                m_ItemCheatSheet;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VehicleCheatSheet*             m_VehicleCheatSheet;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_AvatarCheatSheet*              m_AvatarCheatSheet;                                       // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_CollectionCheatSheet*          m_CollectionCheatSheet;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SkillCheatSheet*               m_SkillCheatSheet;                                        // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WeaponShapeCheatSheet*         m_WeaponShapeCheatSheet;                                  // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ImprintCheatSheet*             m_ImprintCheatSheet;                                      // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SealedStoneCheatSheet*         m_SealedStoneCheatSheet;                                  // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PetCheatSheet*                 m_PetCheatSheet;                                          // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_LinkCheatSheet*                m_LinkCheatSheet;                                         // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_SetParamCheatSheet*            m_SetParamCheatSheet;                                     // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FullSettingTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FullSettingTable");
		return ptr;
	}

};


// Class CommonSource.ColorDefineRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ColorDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     DefaultColor;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ChangeColor;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               ContentsOff;                                              // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ColorDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ColorDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ColorDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ColorDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ColorDefineRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ColorDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ColorDefineSheet");
		return ptr;
	}


	class UCommonSource_ColorDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GameStringTable
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_GameStringTable : public UObject
{
public:
	class UCommonSource_StringSheet*                   m_StringSheet;                                            // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_MessageCoolTimeSheet*          m_MessageCoolTimeSheet;                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ColorDefineSheet*              m_ColorDefineSheet;                                       // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GameStringTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GameStringTable");
		return ptr;
	}

};


// Class CommonSource.WeaponShapeCheatRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_WeaponShapeCheatRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                WeaponShapeIndex;                                         // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     WeaponShapeName;                                          // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsEquip;                                                  // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeCheatRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeCheatRecord");
		return ptr;
	}

};


// Class CommonSource.DefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DefineSheet : public UObject
{
public:
	TArray<class UCommonSource_DefineRecord*>          arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefineSheet");
		return ptr;
	}


	class UCommonSource_DefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ResetTimeRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_ResetTimeRecord : public UObject
{
public:
	unsigned char                                      ResetTimeType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BelongToPlayer;                                           // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<int>                                        MonthResetDay;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ResetDayOfWeek;                                           // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<int>                                        ResetHour;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ResetMinute;                                              // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResetTimeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResetTimeRecord");
		return ptr;
	}

};


// Class CommonSource.DefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_DefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Desc;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              Value;                                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefineRecord");
		return ptr;
	}

};


// Class CommonSource.ResetTimeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ResetTimeSheet : public UObject
{
public:
	TArray<class UCommonSource_ResetTimeRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResetTimeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResetTimeSheet");
		return ptr;
	}


	class UCommonSource_ResetTimeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WeekIntervalRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_WeekIntervalRecord : public UObject
{
public:
	unsigned char                                      ResetTimeType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                WeekIntervalReset;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartYear;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartMonth;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartDay;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeekIntervalRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeekIntervalRecord");
		return ptr;
	}

};


// Class CommonSource.SkillCheatSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillCheatSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillCheatRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillCheatSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillCheatSheet");
		return ptr;
	}


	class UCommonSource_SkillCheatRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CoolTimeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CoolTimeSheet : public UObject
{
public:
	TArray<class UCommonSource_CoolTimeRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CoolTimeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CoolTimeSheet");
		return ptr;
	}


	class UCommonSource_CoolTimeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuideRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_GuideRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuideType;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     guideKey;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BBSType;                                                  // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     topicKey;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuideRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuideRecord");
		return ptr;
	}

};


// Class CommonSource.GuideSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuideSheet : public UObject
{
public:
	TArray<class UCommonSource_GuideRecord*>           arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuideSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuideSheet");
		return ptr;
	}


	class UCommonSource_GuideRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GachaOddsUrlRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_GachaOddsUrlRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     URL;                                                      // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BBSType;                                                  // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     topicKey;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GachaOddsUrlRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GachaOddsUrlRecord");
		return ptr;
	}

};


// Class CommonSource.GachaOddsUrlSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GachaOddsUrlSheet : public UObject
{
public:
	TArray<class UCommonSource_GachaOddsUrlRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GachaOddsUrlSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GachaOddsUrlSheet");
		return ptr;
	}


	class UCommonSource_GachaOddsUrlRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildBattlefieldObjectDefineRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_GuildBattlefieldObjectDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ObjectSpawnCount;                                         // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AltarSpawnCount;                                          // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxAltarSpawnCount;                                       // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	int                                                MaxObjectSpawnCount;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxObjectPossessCount;                                    // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                MaxObjectPossessTime;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectDeleteAlertTime;                                    // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectDropLimitTime;                                      // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectDropAlertTime;                                      // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectDropRadius;                                         // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsLastBoxAltarEnabled;                                    // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	int                                                LastBoxAltarCount;                                        // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LastBoxAltarIndicateCount;                                // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAltarReset;                                             // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldObjectDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldObjectDefineRecord");
		return ptr;
	}

};


// Class CommonSource.CoolTimeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_CoolTimeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CoolTimeType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	float                                              Value;                                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CoolTimeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CoolTimeRecord");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldSpawnGroupRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_GuildBattlefieldSpawnGroupRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BoxSpawnIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AltarSpawnIndex;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldSpawnGroupRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldSpawnGroupRecord");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldSpawnGroupSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildBattlefieldSpawnGroupSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildBattlefieldSpawnGroupRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldSpawnGroupSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldSpawnGroupSheet");
		return ptr;
	}


	class UCommonSource_GuildBattlefieldSpawnGroupRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildBattlefieldObjectDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildBattlefieldObjectDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildBattlefieldObjectDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldObjectDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldObjectDefineSheet");
		return ptr;
	}


	class UCommonSource_GuildBattlefieldObjectDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WeekIntervalSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WeekIntervalSheet : public UObject
{
public:
	TArray<class UCommonSource_WeekIntervalRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeekIntervalSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeekIntervalSheet");
		return ptr;
	}


	class UCommonSource_WeekIntervalRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildBattlefieldMonsterGroupSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildBattlefieldMonsterGroupSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildBattlefieldMonsterGroupRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMonsterGroupSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMonsterGroupSheet");
		return ptr;
	}


	class UCommonSource_GuildBattlefieldMonsterGroupRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildBattlefieldDoubleMonsterRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_GuildBattlefieldDoubleMonsterRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        MonsterObjectIndex;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MonsterGradeString;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldDoubleMonsterRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldDoubleMonsterRecord");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldDoubleMonsterSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildBattlefieldDoubleMonsterSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildBattlefieldDoubleMonsterRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldDoubleMonsterSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldDoubleMonsterSheet");
		return ptr;
	}


	class UCommonSource_GuildBattlefieldDoubleMonsterRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildBattlefieldMatchingGroupRecord
// 0x0088 (0x00B0 - 0x0028)
class UCommonSource_GuildBattlefieldMatchingGroupRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupTier;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupSubTier;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupNameCode;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     GroupIcon;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     GroupColorCode;                                           // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                GroupProportion;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NormalItemObjectGroup;                                    // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RareItemObjectGroup;                                      // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RareItemObjectProb;                                       // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WinnerRewardGroup;                                        // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<int>                                        RewardItemGroup;                                          // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RewardItemCount;                                          // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RewardGuildCoin;                                          // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RewardGuildContribution;                                  // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMatchingGroupRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMatchingGroupRecord");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldMatchingGroupSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildBattlefieldMatchingGroupSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildBattlefieldMatchingGroupRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMatchingGroupSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMatchingGroupSheet");
		return ptr;
	}


	class UCommonSource_GuildBattlefieldMatchingGroupRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildBattlefieldMonsterGroupRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_GuildBattlefieldMonsterGroupRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffMonsterSpawnGroup;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffMonsterSpawnIndex;                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffMonsterSpawnType;                                     // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                MonsterBuffIndex;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsStrongBuffMonster;                                      // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                MonsterGradeString;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMonsterGroupRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMonsterGroupRecord");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldTimeDefineRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_GuildBattlefieldTimeDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BattlePartLimitGuildCount;                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResetWeekType;                                            // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParticipationStartResetDayOfWeek;                         // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	int                                                ParticipationStartHour;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ParticipationStartMin;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParticipationEndResetDayOfWeek;                           // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                ParticipationEndHour;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ParticipationEndMin;                                      // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MatchingStartResetDayOfWeek;                              // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                MatchingStartHour;                                        // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MatchingStartMin;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MatchingEndResetDayOfWeek;                                // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	int                                                MatchingEndHour;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MatchingEndMin;                                           // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldTimeDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldTimeDefineRecord");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldTimeDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildBattlefieldTimeDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildBattlefieldTimeDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldTimeDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldTimeDefineSheet");
		return ptr;
	}


	class UCommonSource_GuildBattlefieldTimeDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildBattlefieldBattleTimeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_GuildBattlefieldBattleTimeRecord : public UObject
{
public:
	int                                                PartNum;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BattleStartResetDayOfWeek;                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                BattleStartHour;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BattleStartMin;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldBattleTimeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldBattleTimeRecord");
		return ptr;
	}

};


// Class CommonSource.MessageCoolTimeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MessageCoolTimeSheet : public UObject
{
public:
	TArray<class UCommonSource_MessageCoolTimeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MessageCoolTimeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MessageCoolTimeSheet");
		return ptr;
	}


	class UCommonSource_MessageCoolTimeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildBattlefieldDefineRecord
// 0x0090 (0x00B8 - 0x0028)
class UCommonSource_GuildBattlefieldDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinGuildMemberCount;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxGuildMemberCount;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedGuildJointime;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinGuildCount;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BattleTime;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerWaitTime;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReentryWaitTime;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TeleportCoolTime;                                         // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KickOutTime;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SearchRadius;                                             // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BoxInteractMessageCycle;                                  // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AltarInteractMessageCycle;                                // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShowMessageTime;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ArrowStepFirstRange;                                      // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ArrowStepSecondRange;                                     // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ArrowStepThirdRange;                                      // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FastReturnRadius;                                         // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FastReturnCheckTime;                                      // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FastReturnMaxCount;                                       // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FastReturnSpeed;                                          // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsTeleportEnabled;                                        // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPossessPlayerMark;                                      // 0x0081(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsArrowEnabled;                                           // 0x0082(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0083(0x0001) MISSED OFFSET
	int                                                BoxBuffIndex;                                             // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MatchHistoryPeriod;                                       // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResultExitDelay;                                          // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WinRewardRank;                                            // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	TArray<int>                                        WeakBuffMonsterTimer;                                     // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                StrongBuffMonsterTimer;                                   // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxWeakBuffMonsterCount;                                  // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BarrierObjectIndex;                                       // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldDefineRecord");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldBattleTimeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildBattlefieldBattleTimeSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildBattlefieldBattleTimeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldBattleTimeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldBattleTimeSheet");
		return ptr;
	}


	class UCommonSource_GuildBattlefieldBattleTimeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DefenseWaveInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DefenseWaveInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_DefenseWaveInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefenseWaveInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefenseWaveInfoSheet");
		return ptr;
	}


	class UCommonSource_DefenseWaveInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StatueInfoRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_StatueInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Stage;                                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StatueSpawnIndex;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StatueInteractIndex;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StatueBlessSlot;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StatueBlessChoiceSlot;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessAppraisalCost;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessIncreaseCost;                                        // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessRerollCost;                                          // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessDeleteCost;                                          // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     StatueImage;                                              // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     StatueMinimapIcon;                                        // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SummonAggroPoint;                                         // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StatueInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StatueInfoRecord");
		return ptr;
	}

};


// Class CommonSource.StatueInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StatueInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_StatueInfoRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StatueInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StatueInfoSheet");
		return ptr;
	}


	class UCommonSource_StatueInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VehicleSummonPointInfoRecord
// 0x0068 (0x0090 - 0x0028)
class UCommonSource_VehicleSummonPointInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Stage;                                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleChoiceSlot;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleAppearCost;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleAppearPlusCost;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleRerollCost;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        VehicleAreaIndex;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        VehicleSpawnName;                                         // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FString>                             VehicleSpawnIcon;                                         // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DefenseCannonSpawnIndex;                                  // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FString>                             DefenseCannonSpawnIcon;                                   // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleSummonPointInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleSummonPointInfoRecord");
		return ptr;
	}

};


// Class CommonSource.VehicleSummonPointInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VehicleSummonPointInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_VehicleSummonPointInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleSummonPointInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleSummonPointInfoSheet");
		return ptr;
	}


	class UCommonSource_VehicleSummonPointInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DefenseSummonMonsterRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_DefenseSummonMonsterRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaIndex;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MonsterGrade;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                ObjectLevel;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        ObjIndex;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ObjCount;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefenseSummonMonsterRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefenseSummonMonsterRecord");
		return ptr;
	}

};


// Class CommonSource.DefenseSummonMonsterSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DefenseSummonMonsterSheet : public UObject
{
public:
	TArray<class UCommonSource_DefenseSummonMonsterRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefenseSummonMonsterSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefenseSummonMonsterSheet");
		return ptr;
	}


	class UCommonSource_DefenseSummonMonsterRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DefenseSummonMonsterAreaInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_DefenseSummonMonsterAreaInfoRecord : public UObject
{
public:
	int                                                AreaIndex;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpawnName;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     SpawnMinimapIcon;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefenseSummonMonsterAreaInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefenseSummonMonsterAreaInfoRecord");
		return ptr;
	}

};


// Class CommonSource.DefenseSummonMonsterAreaInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DefenseSummonMonsterAreaInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_DefenseSummonMonsterAreaInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefenseSummonMonsterAreaInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefenseSummonMonsterAreaInfoSheet");
		return ptr;
	}


	class UCommonSource_DefenseSummonMonsterAreaInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ChaseWayPointRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ChaseWayPointRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaIndex;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WayPoint;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WayPointX;                                                // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WayPointY;                                                // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WayPointZ;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PatrolType;                                               // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	float                                              WaitTimeSec;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChaseWayPointRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChaseWayPointRecord");
		return ptr;
	}

};


// Class CommonSource.ChaseWayPointSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ChaseWayPointSheet : public UObject
{
public:
	TArray<class UCommonSource_ChaseWayPointRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ChaseWayPointSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ChaseWayPointSheet");
		return ptr;
	}


	class UCommonSource_ChaseWayPointRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildBattlefieldDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildBattlefieldDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildBattlefieldDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldDefineSheet");
		return ptr;
	}


	class UCommonSource_GuildBattlefieldDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DefenseSummonVehicleSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DefenseSummonVehicleSheet : public UObject
{
public:
	TArray<class UCommonSource_DefenseSummonVehicleRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefenseSummonVehicleSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefenseSummonVehicleSheet");
		return ptr;
	}


	class UCommonSource_DefenseSummonVehicleRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StatueBlessInfoRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_StatueBlessInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessAppearStage;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessProb;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffIndex;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FString                                     BlessButtonImage;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      grade;                                                    // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StatueBlessInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StatueBlessInfoRecord");
		return ptr;
	}

};


// Class CommonSource.StatueBlessInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StatueBlessInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_StatueBlessInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StatueBlessInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StatueBlessInfoSheet");
		return ptr;
	}


	class UCommonSource_StatueBlessInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DropGuardianCoinRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_DropGuardianCoinRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Stage;                                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartSectionWaveGroup;                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EndSectionWaveGroup;                                      // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              MonsterGrade;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DropCoin;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropGuardianCoinRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropGuardianCoinRecord");
		return ptr;
	}

};


// Class CommonSource.DropGuardianCoinSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DropGuardianCoinSheet : public UObject
{
public:
	TArray<class UCommonSource_DropGuardianCoinRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropGuardianCoinSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropGuardianCoinSheet");
		return ptr;
	}


	class UCommonSource_DropGuardianCoinRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DefenseSummonVehicleRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_DefenseSummonVehicleRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BattleVehicleGrade;                                       // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                Stage;                                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleProb;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleSummonTime;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BattleVehicleIndex;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleInteractIndex;                                     // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleLevel;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AddMoveSpeed;                                             // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     VehicleIconImage;                                         // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefenseSummonVehicleRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefenseSummonVehicleRecord");
		return ptr;
	}

};


// Class CommonSource.DefenseGuideInfoRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_DefenseGuideInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ImageName;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                descCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefenseGuideInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefenseGuideInfoRecord");
		return ptr;
	}

};


// Class CommonSource.DefenseGuideInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DefenseGuideInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_DefenseGuideInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefenseGuideInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefenseGuideInfoSheet");
		return ptr;
	}


	class UCommonSource_DefenseGuideInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DefenseWaveInfoRecord
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DefenseWaveInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Stage;                                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WaveGroup;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubWave;                                                  // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsWait;                                                   // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBoss;                                                   // 0x003D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	int                                                BossCount;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WaveProceedTime;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        MonsterSummonID;                                          // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MonsterSummonStartTime;                                   // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MonsterSummonCount;                                       // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MonsterSummonTimeInteraval;                               // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DefenseWaveInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DefenseWaveInfoRecord");
		return ptr;
	}

};


// Class CommonSource.GuildDefenseDefineRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_GuildDefenseDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildDefenseWeekResetDay;                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildDefenseWeekResetHour;                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GuildDefenseEntranceCount;                                // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GuildDefenseMaxChargeCount;                               // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GuildDefenseWeeklyEntranceCount;                          // 0x0036(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0037(0x0001) MISSED OFFSET
	int                                                GuildDefenseBannedDay;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GuildDefenseStartCountdown;                               // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      WaveCallCooltime;                                         // 0x003D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	int                                                BossAggroResetTime;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AutoBattleRangeSetting;                                   // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleAutoAttackRangeSetting;                            // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CannonAutoAttackRangeSetting;                             // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleSelectLimitTime;                                   // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxWaveSpeed;                                             // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	int                                                WaveSpeedBuffIndex;                                       // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GuideTextTime;                                            // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ChangeWaveDelayTextTime;                                  // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BattleVehicleSkillTootipSkillRate;                        // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ResultUICloseDelayTime;                                   // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildDefenseDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildDefenseDefineRecord");
		return ptr;
	}

};


// Class CommonSource.SupplementGuardianCoinRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_SupplementGuardianCoinRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Stage;                                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WaveGroup;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubWave;                                                  // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SupplementCoin;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SupplementGuardianCoinRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SupplementGuardianCoinRecord");
		return ptr;
	}

};


// Class CommonSource.GuildDefenseDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildDefenseDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildDefenseDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildDefenseDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildDefenseDefineSheet");
		return ptr;
	}


	class UCommonSource_GuildDefenseDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildItemMakeDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_GuildItemMakeDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResetDayOfWeek;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                ResetHour;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxDayCount;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxHistoryCount;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HistoryExpireDay;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ImmediatelyCompleteCash;                                  // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffNeedGuildJoinDay;                                     // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeDefineRecord");
		return ptr;
	}

};


// Class CommonSource.GuildItemMakeDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildItemMakeDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildItemMakeDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeDefineSheet");
		return ptr;
	}


	class UCommonSource_GuildItemMakeDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildItemMakeSlotRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_GuildItemMakeSlotRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Slot;                                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedGuildLevel;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeSlotRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeSlotRecord");
		return ptr;
	}

};


// Class CommonSource.GuildItemMakeSlotSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildItemMakeSlotSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildItemMakeSlotRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeSlotSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeSlotSheet");
		return ptr;
	}


	class UCommonSource_GuildItemMakeSlotRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildItemMakeInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildItemMakeInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildItemMakeInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeInfoSheet");
		return ptr;
	}


	class UCommonSource_GuildItemMakeInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildItemMakeCategoryRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_GuildItemMakeCategoryRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name_1;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      Group_1;                                                  // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                NameCode_1;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name_2;                                                   // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                EmptyCode;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Group_2;                                                  // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	int                                                NameCode_2;                                               // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemCategory;                                             // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x0065(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReqClassType;                                             // 0x0066(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0067(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeCategoryRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeCategoryRecord");
		return ptr;
	}

};


// Class CommonSource.GuildItemMakeInfoRecord
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_GuildItemMakeInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemIndex;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            BuffIndex;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     IconName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      Group_1;                                                  // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Group_2;                                                  // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x004A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReqClassType;                                             // 0x004B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                sort;                                                     // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MakeTime;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MakeCount;                                                // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxWeekCount;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCastleWarSeasonCount;                                  // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedGuildLevel;                                           // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCastleWarAttack;                                        // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCastleWarDefense;                                       // 0x0065(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0066(0x0002) MISSED OFFSET
	int                                                CastleWarContinueDefenseWinCount;                         // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<int>                                        MaterialIndex;                                            // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MaterialEnchant;                                          // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MaterialCount;                                            // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeInfoRecord");
		return ptr;
	}

};


// Class CommonSource.GuildItemMakeCategorySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildItemMakeCategorySheet : public UObject
{
public:
	TArray<class UCommonSource_GuildItemMakeCategoryRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeCategorySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeCategorySheet");
		return ptr;
	}


	class UCommonSource_GuildItemMakeCategoryRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildItemMakeMaterialRewardRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_GuildItemMakeMaterialRewardRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                ItemIndex;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardGuildContribution;                                  // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardGuildCoin;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeMaterialRewardRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeMaterialRewardRecord");
		return ptr;
	}

};


// Class CommonSource.SupplementGuardianCoinSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SupplementGuardianCoinSheet : public UObject
{
public:
	TArray<class UCommonSource_SupplementGuardianCoinRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SupplementGuardianCoinSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SupplementGuardianCoinSheet");
		return ptr;
	}


	class UCommonSource_SupplementGuardianCoinRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildItemMakeMaterialRewardSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildItemMakeMaterialRewardSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildItemMakeMaterialRewardRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeMaterialRewardSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeMaterialRewardSheet");
		return ptr;
	}


	class UCommonSource_GuildItemMakeMaterialRewardRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildItemMakeRedDotRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_GuildItemMakeRedDotRecord : public UObject
{
public:
	unsigned char                                      ItemType;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeRedDotRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeRedDotRecord");
		return ptr;
	}

};


// Class CommonSource.GuildItemMakeRedDotSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildItemMakeRedDotSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildItemMakeRedDotRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildItemMakeRedDotSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildItemMakeRedDotSheet");
		return ptr;
	}


	class UCommonSource_GuildItemMakeRedDotRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RaidInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RaidInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_RaidInfoRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RaidInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RaidInfoSheet");
		return ptr;
	}


	class UCommonSource_RaidInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RaidInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_RaidInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PreconditionStage;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               EnableVote;                                               // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                BuffGroupIndex;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<int>                                        RewardRandomPackageGroupID;                               // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RewardGroupMemberCondition;                               // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RaidInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RaidInfoRecord");
		return ptr;
	}

};


// Class CommonSource.RaidSkillPriorityRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_RaidSkillPriorityRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillGroup;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Priority;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillDesc;                                                // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RaidSkillPriorityRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RaidSkillPriorityRecord");
		return ptr;
	}

};


// Class CommonSource.RaidSkillPrioritySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RaidSkillPrioritySheet : public UObject
{
public:
	TArray<class UCommonSource_RaidSkillPriorityRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RaidSkillPrioritySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RaidSkillPrioritySheet");
		return ptr;
	}


	class UCommonSource_RaidSkillPriorityRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildRaidDefineRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_GuildRaidDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaidWeekResetDay;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaidWeekResetHour;                                   // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GuildRaidEntranceCount;                                   // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GuildRaidMaxChargeCount;                                  // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GuildRaidWeeklyEntranceCount;                             // 0x0036(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0037(0x0001) MISSED OFFSET
	int                                                GuildRaidBannedDay;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffSelectCount;                                          // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffSelectTime;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffChangeCount;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffChangeResourceType;                                   // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<int>                                        BuffChangeResourceCount;                                  // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                AutoOutWaitTime;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonStartYear;                                          // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonStartMonth;                                         // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonStartDay;                                           // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildRaidDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildRaidDefineRecord");
		return ptr;
	}

};


// Class CommonSource.GuildRaidDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildRaidDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildRaidDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildRaidDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildRaidDefineSheet");
		return ptr;
	}


	class UCommonSource_GuildRaidDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RaidBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RaidBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_RaidBuffRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RaidBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RaidBuffSheet");
		return ptr;
	}


	class UCommonSource_RaidBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StrongholdDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StrongholdDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_StrongholdDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdDefineSheet");
		return ptr;
	}


	class UCommonSource_StrongholdDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StrongholdDefineRecord
// 0x0090 (0x00B8 - 0x0028)
class UCommonSource_StrongholdDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxProclaimCount;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NeedProclaimGuildJob;                                     // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                FreeForAllProclaimTime;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ProclaimWaitTime;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FreeForAllProclaimWaitTime;                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReadyTime;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BattleTime;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ProtectTime;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NeedGiveUpGuildJob;                                       // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResetDayOfWeek;                                           // 0x004D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	int                                                ResetHour;                                                // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NeedUpgradeBuffGuildJob;                                  // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	int                                                BuffIndex;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PointValue1;                                              // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PointValue2;                                              // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PointValue3;                                              // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            MaxPoint;                                                 // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NotifyDistance;                                           // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinSpawnDistance;                                         // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSpawnDistance;                                         // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedGuildLevel;                                           // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NoConnectionPeriod;                                       // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResurrectionWaitBaseTime;                                 // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResurrectionWaitAddTime;                                  // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResurrectionWaitMaxTime;                                  // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GuideTextTime;                                            // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GuideTextWaitTime;                                        // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSeason;                                                 // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsRandomBuff;                                             // 0x0099(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFirstReward;                                            // 0x009A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x009B(0x0001) MISSED OFFSET
	int                                                DoingDistance;                                            // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FirstRewardCount;                                         // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFreeForAll;                                             // 0x00A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00A5(0x0003) MISSED OFFSET
	int                                                FreeForAllCount;                                          // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFlagDestory;                                            // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsGuardMonster;                                           // 0x00AD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x00AE(0x0002) MISSED OFFSET
	float                                              BattleDefeatMinusPoint;                                   // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAirliftShift;                                           // 0x00B4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDestructionMode;                                        // 0x00B5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDeathPenalty;                                           // 0x00B6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x00B7(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdDefineRecord");
		return ptr;
	}

};


// Class CommonSource.RaidBuffRecord
// 0x0070 (0x0098 - 0x0028)
class UCommonSource_RaidBuffRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffGroup;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffOrder;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                SkillIndex;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FString                                     SkillName;                                                // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Prob;                                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TArray<int>                                        SetValue;                                                 // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        SetSkillIndex;                                            // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        SetProb;                                                  // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     OptionImage;                                              // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RaidBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RaidBuffRecord");
		return ptr;
	}

};


// Class CommonSource.StrongholdInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StrongholdInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_StrongholdInfoRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdInfoSheet");
		return ptr;
	}


	class UCommonSource_StrongholdInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StrongholdBuffRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_StrongholdBuffRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StrongholdInfoIndex;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffGroupSet;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffGroupSetPool;                                         // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdBuffRecord");
		return ptr;
	}

};


// Class CommonSource.StrongholdBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StrongholdBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_StrongholdBuffRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdBuffSheet");
		return ptr;
	}


	class UCommonSource_StrongholdBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StrongholdBuffGroupRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_StrongholdBuffGroupRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              ParamValue;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	int64_t                                            NeedPoint;                                                // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     BuffIconName;                                             // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupRecord");
		return ptr;
	}

};


// Class CommonSource.StrongholdInfoRecord
// 0x0090 (0x00B8 - 0x0028)
class UCommonSource_StrongholdInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	int64_t                                            MaxDailyPoint;                                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NaviVolumeAreaIndex;                                      // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxBuffCount;                                             // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FlagSpawnIndex;                                           // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FlagMonsterIndex;                                         // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FlagInteractSpawnIndex;                                   // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FlagInteractIndex;                                        // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FlagObjectLevel;                                          // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	TArray<int>                                        HuntingGroundNameCode;                                    // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                GuardMonsterLevel;                                        // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	TArray<int>                                        GuardSpawnIndex;                                          // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            FirstRewardBuffPoint;                                     // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ImageName;                                                // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdInfoRecord");
		return ptr;
	}

};


// Class CommonSource.StrongholdBuffGroupSetRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_StrongholdBuffGroupSetRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        BuffGroup;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupSetRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupSetRecord");
		return ptr;
	}

};


// Class CommonSource.StrongholdBuffGroupSetPoolRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_StrongholdBuffGroupSetPoolRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        BuffGroupSet;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupSetPoolRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupSetPoolRecord");
		return ptr;
	}

};


// Class CommonSource.StrongholdBuffGroupSetSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StrongholdBuffGroupSetSheet : public UObject
{
public:
	TArray<class UCommonSource_StrongholdBuffGroupSetRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupSetSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupSetSheet");
		return ptr;
	}


	class UCommonSource_StrongholdBuffGroupSetRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StrongholdNotiRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_StrongholdNotiRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PushTitle;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PushText;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdNotiRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdNotiRecord");
		return ptr;
	}

};


// Class CommonSource.StrongholdNotiSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StrongholdNotiSheet : public UObject
{
public:
	TArray<class UCommonSource_StrongholdNotiRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdNotiSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdNotiSheet");
		return ptr;
	}


	class UCommonSource_StrongholdNotiRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StrongholdRankingRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_StrongholdRankingRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KillScore;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DamagedScore;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DamageScore;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HealScore;                                                // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdRankingRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdRankingRecord");
		return ptr;
	}

};


// Class CommonSource.StrongholdRankingSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StrongholdRankingSheet : public UObject
{
public:
	TArray<class UCommonSource_StrongholdRankingRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdRankingSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdRankingSheet");
		return ptr;
	}


	class UCommonSource_StrongholdRankingRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildLevelRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_GuildLevelRecord : public UObject
{
public:
	int                                                Level;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NextExp;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddMaxMemberCount;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AddContributionPercent;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              GuildJob;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        AddMemberCount;                                           // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                BuffIndex;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Step;                                                     // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ContentsType;                                             // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	int                                                ExpExtractionCost;                                        // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildLevelRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildLevelRecord");
		return ptr;
	}

};


// Class CommonSource.StrongholdBuffGroupSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StrongholdBuffGroupSheet : public UObject
{
public:
	TArray<class UCommonSource_StrongholdBuffGroupRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupSheet");
		return ptr;
	}


	class UCommonSource_StrongholdBuffGroupRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildJobRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_GuildJobRecord : public UObject
{
public:
	unsigned char                                      GuildJob;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     IconName;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     JobColor;                                                 // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MemberCount;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ApplyAcceptPermission;                                    // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ExpelPermission;                                          // 0x0055(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ChangeJobPermission;                                      // 0x0056(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ConfiguratoinPermission;                                  // 0x0057(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               RaidPermission;                                           // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               GuildMarkPermission;                                      // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SetGuildRaiderPermission;                                 // 0x005A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SetHostileGuildPermission;                                // 0x005B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CreateGuildAlliancePermission;                            // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               GroupChatAdmin;                                           // 0x005D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               GroupChatWrite;                                           // 0x005E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               GuildDefensePermission;                                   // 0x005F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               GuildItemMakePermission;                                  // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               GuildNameChangePermission;                                // 0x0061(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CastlewarQualifierSelectPermission;                       // 0x0062(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CastlewarPermission;                                      // 0x0063(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BidRankingDownNoticePermission;                           // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CastlewarMercenaryPermission;                             // 0x0065(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CastlewarTargetSettingPermission;                         // 0x0066(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CastlewarWorldSettingPermission;                          // 0x0067(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               InvasionServerChoicePermission;                           // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildJobRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildJobRecord");
		return ptr;
	}

};


// Class CommonSource.GuildJobSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildJobSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildJobRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildJobSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildJobSheet");
		return ptr;
	}


	class UCommonSource_GuildJobRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StrongholdBuffGroupSetPoolSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StrongholdBuffGroupSetPoolSheet : public UObject
{
public:
	TArray<class UCommonSource_StrongholdBuffGroupSetPoolRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupSetPoolSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StrongholdBuffGroupSetPoolSheet");
		return ptr;
	}


	class UCommonSource_StrongholdBuffGroupSetPoolRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildTendencySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildTendencySheet : public UObject
{
public:
	TArray<class UCommonSource_GuildTendencyRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildTendencySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildTendencySheet");
		return ptr;
	}


	class UCommonSource_GuildTendencyRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildMarkRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_GuildMarkRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     GuildMarkEmblemIconName;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     GuildMarkFrameIconName;                                   // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                OpenLevel;                                                // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUserMakeMark;                                           // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUseGuildMark;                                           // 0x0055(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0056(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildMarkRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildMarkRecord");
		return ptr;
	}

};


// Class CommonSource.GuildMarkSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildMarkSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildMarkRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildMarkSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildMarkSheet");
		return ptr;
	}


	class UCommonSource_GuildMarkRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildMarkFrameColorRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_GuildMarkFrameColorRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildLevelEnd;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              R;                                                        // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              G;                                                        // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              B;                                                        // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              A;                                                        // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildMarkFrameColorRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildMarkFrameColorRecord");
		return ptr;
	}

};


// Class CommonSource.GuildMarkFrameColorSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildMarkFrameColorSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildMarkFrameColorRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildMarkFrameColorSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildMarkFrameColorSheet");
		return ptr;
	}


	class UCommonSource_GuildMarkFrameColorRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildMarkBackgroundColorRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_GuildMarkBackgroundColorRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      R;                                                        // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      G;                                                        // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      B;                                                        // 0x0046(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0047(0x0001) MISSED OFFSET
	float                                              A;                                                        // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FString                                     ColorString;                                              // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildMarkBackgroundColorRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildMarkBackgroundColorRecord");
		return ptr;
	}

};


// Class CommonSource.GuildMarkBackgroundColorSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildMarkBackgroundColorSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildMarkBackgroundColorRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildMarkBackgroundColorSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildMarkBackgroundColorSheet");
		return ptr;
	}


	class UCommonSource_GuildMarkBackgroundColorRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildMarkEffectRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_GuildMarkEffectRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildMarkEffectRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildMarkEffectRecord");
		return ptr;
	}

};


// Class CommonSource.GuildLevelSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildLevelSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildLevelRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildLevelSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildLevelSheet");
		return ptr;
	}


	class UCommonSource_GuildLevelRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildMarkEffectSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildMarkEffectSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildMarkEffectRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildMarkEffectSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildMarkEffectSheet");
		return ptr;
	}


	class UCommonSource_GuildMarkEffectRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildDonateRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_GuildDonateRecord : public UObject
{
public:
	unsigned char                                      DonateType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                ResourceCount;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardGuildContribution;                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardGuildCoin;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        RewardItemIndex;                                          // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildDonateRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildDonateRecord");
		return ptr;
	}

};


// Class CommonSource.GuildDonateSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildDonateSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildDonateRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildDonateSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildDonateSheet");
		return ptr;
	}


	class UCommonSource_GuildDonateRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildDefineRecord
// 0x0098 (0x00C0 - 0x0028)
class UCommonSource_GuildDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CreateGold;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxMemberCount;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxJoinApplyCount;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxJoinApplyWaitingCount;                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxGuildNameSize;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                JoinPendingPeriod;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CountPerPage;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RejoinLimitTime;                                          // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MasterNoConnectionPeriod;                                 // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NoConnectionPeriod;                                       // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DonateCount;                                              // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        AddMonsterKillContribution;                               // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ContributionDisplayRanking;                               // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InviteRecommendCount;                                     // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TendencyCount;                                            // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxDailyGuildContribution;                                // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaiderOpenLevel;                                     // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaiderLimitTime;                                     // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildCount;                                               // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AttendanceGuildCoin;                                      // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AttendanceContribution;                                   // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               GuildAuctionOpen;                                         // 0x0084(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0085(0x0003) MISSED OFFSET
	int                                                GuildRaiderDestroyTime;                                   // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GuildRaiderApplyTime;                                     // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GroupChatUseLevel;                                        // 0x008D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x008E(0x0002) MISSED OFFSET
	int                                                GuildNameResetTime;                                       // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GuildNameChangePriceType;                                 // 0x0094(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0095(0x0003) MISSED OFFSET
	int                                                GuildNameChangeCost;                                      // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaidSkipLevelRange;                                  // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaidSkipLevelDownRange;                              // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsGuildDungeonEnterLimitRule;                             // 0x00A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00A5(0x0003) MISSED OFFSET
	int                                                GuildExpExtractionLimit;                                  // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildExpExtractionLimitDay;                               // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildExpTransferTicket;                                   // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DefaultGuildMarkIndex;                                    // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuileDefenseSkipLevelRange;                               // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildDefenseSkipLevelDownRange;                           // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildDefineRecord");
		return ptr;
	}

};


// Class CommonSource.GuildAllianceDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_GuildAllianceDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CreateGold;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxAllianceCount;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxHostileCount;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildAlliance_ApplyTime;                                  // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WorldGuildAlliance_ApplyTime;                             // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CountPerPage;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildAllianceReApplyWaitingTimeSec;                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildAllianceDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildAllianceDefineRecord");
		return ptr;
	}

};


// Class CommonSource.GuildAuctionDefineRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_GuildAuctionDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WaitingHour;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SellingHour;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpireDay;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinBidPrice;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxBidPrice;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CountPerPage;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                BidLimitTime;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WarningPrice;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildBossContributionApplyTime;                           // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildAuctionDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildAuctionDefineRecord");
		return ptr;
	}

};


// Class CommonSource.GuildAuctionDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildAuctionDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildAuctionDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildAuctionDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildAuctionDefineSheet");
		return ptr;
	}


	class UCommonSource_GuildAuctionDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildAuctionMonsterRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_GuildAuctionMonsterRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Group;                                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MonsterIndex;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaNameCode;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ItemGrade;                                                // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildAuctionMonsterRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildAuctionMonsterRecord");
		return ptr;
	}

};


// Class CommonSource.GuildDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildDefineRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildDefineSheet");
		return ptr;
	}


	class UCommonSource_GuildDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildAllianceDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildAllianceDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildAllianceDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildAllianceDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildAllianceDefineSheet");
		return ptr;
	}


	class UCommonSource_GuildAllianceDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildAuctionMonsterSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildAuctionMonsterSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildAuctionMonsterRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildAuctionMonsterSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildAuctionMonsterSheet");
		return ptr;
	}


	class UCommonSource_GuildAuctionMonsterRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildOpenChattingSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildOpenChattingSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildOpenChattingRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildOpenChattingSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildOpenChattingSheet");
		return ptr;
	}


	class UCommonSource_GuildOpenChattingRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ImprintStepRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_ImprintStepRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SlotGroupID;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                OptionCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        OptionGroup;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SuccessProb;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<int>                                        GroupProb;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PageGroup;                                                // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CompleteCharParam;                                        // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	TArray<float>                                      SetValue;                                                 // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintStepRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintStepRecord");
		return ptr;
	}

};


// Class CommonSource.ImprintStepSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ImprintStepSheet : public UObject
{
public:
	TArray<class UCommonSource_ImprintStepRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintStepSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintStepSheet");
		return ptr;
	}


	class UCommonSource_ImprintStepRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ImprintOptionRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ImprintOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OptionGroup;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                Prob;                                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      SetValue;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintOptionRecord");
		return ptr;
	}

};


// Class CommonSource.ImprintOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ImprintOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_ImprintOptionRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintOptionSheet");
		return ptr;
	}


	class UCommonSource_ImprintOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ImprintDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ImprintDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxImprintStep;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ImprintItemIndex;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedMeterialCount;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsImprintOpen;                                            // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                ImprintOpenQuest;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ImprintPresetSetting;                                     // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ImprintDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ImprintDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ImprintDefineRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintDefineSheet");
		return ptr;
	}


	class UCommonSource_ImprintDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ImprintIconRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ImprintIconRecord : public UObject
{
public:
	unsigned char                                      CharParam;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     ParamIconName;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ParamIconColor;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintIconRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintIconRecord");
		return ptr;
	}

};


// Class CommonSource.ImprintIconSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ImprintIconSheet : public UObject
{
public:
	TArray<class UCommonSource_ImprintIconRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ImprintIconSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ImprintIconSheet");
		return ptr;
	}


	class UCommonSource_ImprintIconRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SpecializeStepRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_SpecializeStepRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SlotGroupID;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                OptionCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        OptionGroup;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SuccessProb;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<int>                                        GroupProb;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PageGroup;                                                // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CompleteCharParam;                                        // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	TArray<float>                                      SetValue;                                                 // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpecializeStepRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpecializeStepRecord");
		return ptr;
	}

};


// Class CommonSource.SpecializeStepSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SpecializeStepSheet : public UObject
{
public:
	TArray<class UCommonSource_SpecializeStepRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpecializeStepSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpecializeStepSheet");
		return ptr;
	}


	class UCommonSource_SpecializeStepRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SpecializeOptionRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_SpecializeOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OptionGroup;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpecializeBuffType;                                       // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Prob;                                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<int>                                        SetSkillLevel;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpecializeOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpecializeOptionRecord");
		return ptr;
	}

};


// Class CommonSource.SpecializeDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_SpecializeDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSpecializeStep;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpecializeItemIndex;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedMeterialCount;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSpecializeOpen;                                         // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                SpecializeOpenQuest;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SpecializePresetSetting;                                  // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                BuffIndex;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpecializeDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpecializeDefineRecord");
		return ptr;
	}

};


// Class CommonSource.SpecializeDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SpecializeDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_SpecializeDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpecializeDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpecializeDefineSheet");
		return ptr;
	}


	class UCommonSource_SpecializeDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SpecializeIconRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_SpecializeIconRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpecializeBuffType;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpecializeTarget;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     FactionName;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     FactionIconColor;                                         // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpecializeIconRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpecializeIconRecord");
		return ptr;
	}

};


// Class CommonSource.SpecializeIconSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SpecializeIconSheet : public UObject
{
public:
	TArray<class UCommonSource_SpecializeIconRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpecializeIconSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpecializeIconSheet");
		return ptr;
	}


	class UCommonSource_SpecializeIconRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonAreaInfoRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_InfinityDungeonAreaInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonGroup;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FloorArea;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FString                                     AreaName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MapIndex;                                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AreaHide;                                                 // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	int                                                AreaHideCancel;                                           // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaPassStart;                                            // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PartyMemberCount;                                         // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               PartyChallengeCountEnabled;                               // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	struct FString                                     AreaBackgroundName;                                       // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               AreaOpenAlarm;                                            // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonAreaInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonAreaInfoRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonAreaInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonAreaInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonAreaInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonAreaInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonAreaInfoSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonAreaInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonFloorInfoRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_InfinityDungeonFloorInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonGroup;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FloorArea;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                PreconditionFloor;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RecommendBattlePower;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FloorGroup;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FirstClearRewardGroup;                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuaranteedRewardGroup;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardDisplayCheck;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffMainGroup;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               PartyEnabled;                                             // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FString                                     BackgroundImage;                                          // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               ShowTerrace;                                              // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ClearAlert;                                               // 0x0069(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x006A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonFloorInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonFloorInfoRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonFloorInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonFloorInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonFloorInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonFloorInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonFloorInfoSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonFloorInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SpecializeOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SpecializeOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_SpecializeOptionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpecializeOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpecializeOptionSheet");
		return ptr;
	}


	class UCommonSource_SpecializeOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonSeasonRewardSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonSeasonRewardSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonSeasonRewardRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSeasonRewardSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSeasonRewardSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonSeasonRewardRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonSeasonRewardRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_InfinityDungeonSeasonRewardRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonGroup;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FloorMin;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FloorMax;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonRewardGroup;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonBuffRewardIndex;                                    // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSeasonRewardRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSeasonRewardRecord");
		return ptr;
	}

};


// Class CommonSource.GuildOpenChattingRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_GuildOpenChattingRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     OpenChattingUrl;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ChatIconName;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               ContentsOff;                                              // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildOpenChattingRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildOpenChattingRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonBuffRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBuffSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonSkillPriorityRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_InfinityDungeonSkillPriorityRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillGroup;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Priority;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillDesc;                                                // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSkillPriorityRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSkillPriorityRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonSkillPrioritySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonSkillPrioritySheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonSkillPriorityRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSkillPrioritySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSkillPrioritySheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonSkillPriorityRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonSettingRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_InfinityDungeonSettingRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonGroup;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FloorGroup;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BattleType;                                               // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                SummonMainGroup;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BalanceMainGroup;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SummonRepeatEnabled;                                      // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSettingRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSettingRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonSettingSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonSettingSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonSettingRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSettingSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSettingSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonSettingRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonBuffRecord
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_InfinityDungeonBuffRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffMainGroup;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OptionGroup;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                SkillIndex;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FString                                     SkillName;                                                // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Prob;                                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TArray<int>                                        SetValue;                                                 // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        SetSkillIndex;                                            // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        SetProb;                                                  // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     OptionImage;                                              // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               DisplayCheck;                                             // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBuffRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonBattleTypeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_InfinityDungeonBattleTypeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BattleType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BossMonsterKillEnabled;                                   // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               EntireMonsterKillEnabled;                                 // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SurvivalTimeCheckEnabled;                                 // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SurvivalNeedTime;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BattleTypeTime;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBattleTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBattleTypeRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonMultiBossSettingRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_InfinityDungeonMultiBossSettingRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SizeOrder;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              LeftOverrideScale;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RightOverrideScale;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CenterOverrideScale;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonMultiBossSettingRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonMultiBossSettingRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonMultiBossSettingSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonMultiBossSettingSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonMultiBossSettingRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonMultiBossSettingSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonMultiBossSettingSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonMultiBossSettingRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonSummonRecord
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonSummonRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonMainGroup;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonSubGroup;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaIndex;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MainBossIndex;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SummonIntervalType;                                       // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                SummonInterval;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonWaveInterval;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        MonsterIndex;                                             // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MonsterLevel;                                             // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              InfinityDungeonMonsterType;                               // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MonsterCount;                                             // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSummonRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSummonRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonSummonSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonSummonSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonSummonRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSummonSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonSummonSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonSummonRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonBalanceRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_InfinityDungeonBalanceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BalanceMainGroup;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BalanceSubGroup;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InfinityDungeonMonsterType;                               // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                MaxHpPercent;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DamagePercent;                                            // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAccuracyAdd;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CriticalChancePercent;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CriticalDamageAddPercent;                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAvoidanceAdd;                                          // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CloseReductionDecreasePercent;                            // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RangeReductionDecreasePercent;                            // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MagicReductionDecreasePercent;                            // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CloseDamageAbsoluteReductionPercent;                      // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RangeDamageAbsoluteReductionPercent;                      // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MagicDamageAbsoluteReductionPercent;                      // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AbnormalResistPercent;                                    // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShockResistPercent;                                       // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int64_t>                                    KillAfterBuffIndex;                                       // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBalanceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBalanceRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonBalanceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonBalanceSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonBalanceRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBalanceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBalanceSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonBalanceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonDefineSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonWeakenDefineRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_InfinityDungeonWeakenDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReductionSize;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             WeakenTextHexColor;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonWeakenDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonWeakenDefineRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonWeakenDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonWeakenDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonWeakenDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonWeakenDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonWeakenDefineSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonWeakenDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InformGuideRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_InformGuideRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TriggerActionIndex;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     GuideImage;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                GuideText;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NextInformIndex;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AutoSkipTime;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InformGuideDelayTime;                                     // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InformGuideRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InformGuideRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonDefineRecord
// 0x0098 (0x00C0 - 0x0028)
class UCommonSource_InfinityDungeonDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonResetDay;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonResetWaitTime;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SeasonSettingType;                                        // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                DungeonResetCount;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DungeonResetResourceType;                                 // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                DungeonResetResourceIndex;                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonResetResourceCount;                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonResetStartFloor;                                   // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffSelectCount;                                          // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BuffSelectOverlapEnabled;                                 // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffComfirmType;                                          // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0052(0x0002) MISSED OFFSET
	int                                                BuffComfirmCount;                                         // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffChangeResourceType;                                   // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                BuffChangeResourceIndex;                                  // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffChangeResourceCount;                                  // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffChangeType;                                           // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	int                                                BuffChangeCount;                                          // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               RankingPopupOutput;                                       // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	int                                                AutoStartWaitTime;                                        // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AutoOutWaitTime;                                          // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AutoEnterStartWaitTime;                                   // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonLoseWaitingTime;                                   // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonStayPermissionTime;                                // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               FinalFloorUI;                                             // 0x0084(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PartyChallengeType;                                       // 0x0085(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x0086(0x0002) MISSED OFFSET
	int                                                PartyChallengeCount;                                      // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ReChallengeEnabled;                                       // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PartyEntryCondition;                                      // 0x008D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x008E(0x0002) MISSED OFFSET
	int                                                SeasonStartYear;                                          // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonStartMonth;                                         // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonStartDay;                                           // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonStartHour;                                          // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CreationMonsterLimit;                                     // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxRankLimit;                                             // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFisrtSeasonPass;                                        // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	int                                                BuffAutoSelectTime;                                       // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AbsoulteAreaOpenTime;                                     // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonCashResetCount;                                    // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonMainGroup;                                          // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonDefineRecord");
		return ptr;
	}

};


// Class CommonSource.InformGuideTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_InformGuideTable : public UObject
{
public:
	class UCommonSource_InformGuideSheet*              m_InformGuideSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InformGuideTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InformGuideTable");
		return ptr;
	}

};


// Class CommonSource.InputLimitDefineRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_InputLimitDefineRecord : public UObject
{
public:
	unsigned char                                      InputType;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                InputMinLength;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InputMaxLength;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InputSubMaxLength;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InputLimitDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InputLimitDefineRecord");
		return ptr;
	}

};


// Class CommonSource.InputLimitDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InputLimitDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_InputLimitDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InputLimitDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InputLimitDefineSheet");
		return ptr;
	}


	class UCommonSource_InputLimitDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InputInfoRecord
// 0x0068 (0x0090 - 0x0028)
class UCommonSource_InputInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ContentsType;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                NameCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Type;                                                     // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Category;                                                 // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ActionName;                                               // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              Scale;                                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FString                                     KeyName;                                                  // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Comment;                                                  // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bShift;                                                   // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCtrl;                                                    // 0x0089(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAlt;                                                     // 0x008A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x008B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InputInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InputInfoRecord");
		return ptr;
	}

};


// Class CommonSource.InputInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InputInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_InputInfoRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InputInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InputInfoSheet");
		return ptr;
	}


	class UCommonSource_InputInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InputDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_InputDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Category;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InputDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InputDefineRecord");
		return ptr;
	}

};


// Class CommonSource.InputDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InputDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_InputDefineRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InputDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InputDefineSheet");
		return ptr;
	}


	class UCommonSource_InputDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InfinityDungeonBattleTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonBattleTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonBattleTypeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBattleTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonBattleTypeSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonBattleTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InteractRecord
// 0x0080 (0x00A8 - 0x0028)
class UCommonSource_InteractRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InteractType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	float                                              InteractTime;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InteractText;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      IsAttackTarget;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CancelByAttack;                                           // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsMaintain;                                               // 0x003A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InteractMotionType;                                       // 0x003B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InteractCount;                                            // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InteractCountType;                                        // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                ReqDoingQuestIndex;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReqFinishQuestIndex;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ReqGuildMaster;                                           // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPlayerSave;                                             // 0x004D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUserSave;                                               // 0x004E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSameTime;                                               // 0x004F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardQuestIndex;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardGold;                                               // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardItemIndex;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardRandomPackageGroupID;                               // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardRandomBoxGroupID;                                   // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	int64_t                                            RewardBuffIndex;                                          // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardBuffMessageIndex;                                   // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GreatProb;                                                // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GreateRewardRandomPackageGroupID;                         // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GreateRewardRandomBoxGroupID;                             // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedItemIndex;                                            // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUseItem;                                                // 0x0084(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0085(0x0003) MISSED OFFSET
	int                                                NeedItemCount;                                            // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffType;                                                 // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsNeedBuf;                                                // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	int                                                RewardObjectIndex;                                        // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ActivateSpawnIndex;                                       // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TargetObjectIndex;                                        // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PortalIndex;                                              // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InteractRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InteractRecord");
		return ptr;
	}

};


// Class CommonSource.InteractSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InteractSheet : public UObject
{
public:
	TArray<class UCommonSource_InteractRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InteractSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InteractSheet");
		return ptr;
	}


	class UCommonSource_InteractRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InteractTypeInfoRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_InteractTypeInfoRecord : public UObject
{
public:
	unsigned char                                      InteractType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     MinimapIconName;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     WorldMapIconName;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InteractTypeInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InteractTypeInfoRecord");
		return ptr;
	}

};


// Class CommonSource.InteractTypeInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InteractTypeInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_InteractTypeInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InteractTypeInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InteractTypeInfoSheet");
		return ptr;
	}


	class UCommonSource_InteractTypeInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InputTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_InputTable : public UObject
{
public:
	class UCommonSource_InputInfoSheet*                m_InputInfoSheet;                                         // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_InputDefineSheet*              m_InputDefineSheet;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InputTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InputTable");
		return ptr;
	}

};


// Class CommonSource.InteractValidationDistanceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InteractValidationDistanceSheet : public UObject
{
public:
	TArray<class UCommonSource_InteractValidationDistanceRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InteractValidationDistanceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InteractValidationDistanceSheet");
		return ptr;
	}


	class UCommonSource_InteractValidationDistanceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InteractValidationDistanceRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_InteractValidationDistanceRecord : public UObject
{
public:
	unsigned char                                      InteractType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              InteractDistanceRange;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InteractValidationDistanceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InteractValidationDistanceRecord");
		return ptr;
	}

};


// Class CommonSource.AutoGatherInfoRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_AutoGatherInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                searchDistance;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GatherTime;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                IdleDistance;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TeleportDistance;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CoolTime;                                                 // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MoveSpeed_Advance;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AutoGatherInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AutoGatherInfoRecord");
		return ptr;
	}

};


// Class CommonSource.AutoGatherInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AutoGatherInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_AutoGatherInfoRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AutoGatherInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AutoGatherInfoSheet");
		return ptr;
	}


	class UCommonSource_AutoGatherInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CultureOptionRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_CultureOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UserCountry;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CultureGroup;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Language;                                                 // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CultureOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CultureOptionRecord");
		return ptr;
	}

};


// Class CommonSource.CultureDLCBlockRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_CultureDLCBlockRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      nation;                                                   // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBlock;                                                  // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CultureOnly;                                              // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CultureDLCBlockRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CultureDLCBlockRecord");
		return ptr;
	}

};


// Class CommonSource.CultureDLCBlockSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CultureDLCBlockSheet : public UObject
{
public:
	TArray<class UCommonSource_CultureDLCBlockRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CultureDLCBlockSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CultureDLCBlockSheet");
		return ptr;
	}


	class UCommonSource_CultureDLCBlockRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CultureOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CultureOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_CultureOptionRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CultureOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CultureOptionSheet");
		return ptr;
	}


	class UCommonSource_CultureOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RegionOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RegionOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_RegionOptionRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RegionOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RegionOptionSheet");
		return ptr;
	}


	class UCommonSource_RegionOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StringTagInfoRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_StringTagInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Language;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               VerticalBarTag;                                           // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StringTagInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StringTagInfoRecord");
		return ptr;
	}

};


// Class CommonSource.StringTagInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StringTagInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_StringTagInfoRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StringTagInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StringTagInfoSheet");
		return ptr;
	}


	class UCommonSource_StringTagInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemInfoRecord
// 0x00C0 (0x00E8 - 0x0028)
class UCommonSource_ItemInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsLive;                                                   // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemCategory;                                             // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x004A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x004B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemDestroyType;                                          // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsItemNotice;                                             // 0x004D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Step;                                                     // 0x004E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReqClassType;                                             // 0x004F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ClassChangeEnabled;                                       // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                MatchingGroup;                                            // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChangeItem;                                               // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxStack;                                                 // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int64_t>                                    GetValue;                                                 // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                DropGroup;                                                // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SaleGold;                                                 // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsGetLetterAllReward;                                     // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BindCategory;                                             // 0x0079(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x007A(0x0002) MISSED OFFSET
	int                                                DecompositionID;                                          // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpireTime;                                               // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpireReplaceItemIndex;                                   // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpireReplaceItemCount;                                   // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemSeasonType;                                           // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MainCharParam;                                            // 0x008D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x008E(0x0002) MISSED OFFSET
	int                                                MainParamValue;                                           // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	TArray<unsigned char>                              FixedOptionCharParam;                                     // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      FixedOptionPlusValue;                                     // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IconName;                                                 // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ModelName;                                                // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsImmediateUse;                                           // 0x00D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00D9(0x0003) MISSED OFFSET
	int                                                QuickGroup;                                               // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x00E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ItemInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemInfoRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemInfoSheet");
		return ptr;
	}


	class UCommonSource_ItemInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemEnchantRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_ItemEnchantRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                DetailID;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantStep;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantProb;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<float>                                      PlusMainValue;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              EnchantOptionCharParam;                                   // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      EnchantOptionPlusValue;                                   // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                BlessEnchantProb;                                         // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CurseEnchantProb;                                         // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemEnchantRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemEnchantRecord");
		return ptr;
	}

};


// Class CommonSource.ItemEnchantSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemEnchantSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemEnchantRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemEnchantSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemEnchantSheet");
		return ptr;
	}


	class UCommonSource_ItemEnchantRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InformGuideSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InformGuideSheet : public UObject
{
public:
	TArray<class UCommonSource_InformGuideRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InformGuideSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InformGuideSheet");
		return ptr;
	}


	class UCommonSource_InformGuideRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemEnchantMaterialSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemEnchantMaterialSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemEnchantMaterialRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemEnchantMaterialSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemEnchantMaterialSheet");
		return ptr;
	}


	class UCommonSource_ItemEnchantMaterialRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemWorkmanshipCostRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ItemWorkmanshipCostRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemCategory;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                NeedGold;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OptionCount;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        GroupProb;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        BlessGroupProb;                                           // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemWorkmanshipCostRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemWorkmanshipCostRecord");
		return ptr;
	}

};


// Class CommonSource.ItemWorkmanshipCostSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemWorkmanshipCostSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemWorkmanshipCostRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemWorkmanshipCostSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemWorkmanshipCostSheet");
		return ptr;
	}


	class UCommonSource_ItemWorkmanshipCostRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemWorkmanshipRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_ItemWorkmanshipRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ItemCategory;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                OptionSlot;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x004A(0x0002) MISSED OFFSET
	int                                                Prob;                                                     // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      SetValue;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemWorkmanshipRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemWorkmanshipRecord");
		return ptr;
	}

};


// Class CommonSource.ItemEnchantMaterialRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ItemEnchantMaterialRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                NeedGold;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantMaterialItemIndex;                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessEnchantMaterialItemIndex;                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CurseEnchantMaterialItemIndex;                            // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OdinEnchantMaterialItemIndex;                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ThorEnchantMaterialItemIndex;                             // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ThorEnchantStepLimit;                                     // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                ParamChangeItemIndex;                                     // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParamChangeMinStep;                                       // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParamChangeMaxStep;                                       // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0052(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemEnchantMaterialRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemEnchantMaterialRecord");
		return ptr;
	}

};


// Class CommonSource.ItemWorkmanshipSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemWorkmanshipSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemWorkmanshipRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemWorkmanshipSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemWorkmanshipSheet");
		return ptr;
	}


	class UCommonSource_ItemWorkmanshipRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemRandomOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemRandomOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemRandomOptionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemRandomOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemRandomOptionSheet");
		return ptr;
	}


	class UCommonSource_ItemRandomOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemRandomOptionRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_ItemRandomOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                DetailID;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnchantStep;                                              // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	int                                                Prob;                                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<float>                                      SetValue;                                                 // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        GroupProb;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemRandomOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemRandomOptionRecord");
		return ptr;
	}

};


// Class CommonSource.ItemSoulEnchantSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemSoulEnchantSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemSoulEnchantRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemSoulEnchantSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemSoulEnchantSheet");
		return ptr;
	}


	class UCommonSource_ItemSoulEnchantRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemSoulEffectRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ItemSoulEffectRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemSoulType;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                Prob;                                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                PlusValue;                                                // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedCount;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxStack;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemSoulEffectRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemSoulEffectRecord");
		return ptr;
	}

};


// Class CommonSource.ItemSoulEffectSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemSoulEffectSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemSoulEffectRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemSoulEffectSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemSoulEffectSheet");
		return ptr;
	}


	class UCommonSource_ItemSoulEffectRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemBindRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ItemBindRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGetMode;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BindCategory;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bindType;                                                 // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	int                                                BindProb;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemBindRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemBindRecord");
		return ptr;
	}

};


// Class CommonSource.ItemBindSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemBindSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemBindRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemBindSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemBindSheet");
		return ptr;
	}


	class UCommonSource_ItemBindRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemSoulEnchantRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ItemSoulEnchantRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnchantStep_Min;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnchantStep_Max;                                          // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnchantSoulCount_Min;                                     // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnchantSoulCount_Middle;                                  // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnchantSoulCount_Max;                                     // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                GroupProb_Min;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupProb_Middle;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupProb_Max;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemSoulEnchantRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemSoulEnchantRecord");
		return ptr;
	}

};


// Class CommonSource.GuildTendencyRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_GuildTendencyRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     TintColor;                                                // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildTendencyRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildTendencyRecord");
		return ptr;
	}

};


// Class CommonSource.ItemGradeInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemGradeInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemGradeInfoRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemGradeInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemGradeInfoSheet");
		return ptr;
	}


	class UCommonSource_ItemGradeInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemDefineRecord
// 0x0080 (0x00A8 - 0x0028)
class UCommonSource_ItemDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HPPoisonCoolTime;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RandomOptionItemIndex;                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WorkmanshipMaterialIndex;                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessWorkmanshipMaterialIndex;                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxEnchantStep;                                           // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MakeFavoriteMax;                                          // 0x003D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	float                                              MakingTime;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MakeExItemDismantleId;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        EnchantEffect;                                            // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MaxMimirWisdom;                                           // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MimirWisdomConstantD;                                     // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        MimirWisdomConstantE;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BoxItemBindType;                                          // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	int                                                StackItemMakeMax;                                         // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      LogItemGrade;                                             // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                EnchantNoticeStep;                                        // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnchantNoticeGrade;                                       // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	int                                                OdinEnchantMaxCount;                                      // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ThorEnchantMaxCount;                                      // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TreasureChestUseMax;                                      // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TreasureChestExpireTime;                                  // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MigrationTicketIndex;                                     // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PetOptionResourceType;                                    // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	int                                                PetOptionChangeNeedCount;                                 // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PetOptionMaterialIndex;                                   // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PetOptionMaterialNeedCount;                               // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParamChangeMaxCount;                                  // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ItemDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemDefineRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemDefineSheet");
		return ptr;
	}


	class UCommonSource_ItemDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PetInfoRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_PetInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                searchDistance;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GatherTime;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                IdleDistance;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TeleportDistance;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CoolTime;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MoveSpeed_Advance;                                        // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     BpPath;                                                   // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     OptionSoundPath;                                          // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ItemGradeInfoRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_ItemGradeInfoRecord : public UObject
{
public:
	unsigned char                                      ItemGrade;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxEnchantStep;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     IconBgName;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IconBgName_Circle;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IconBgName_Rect;                                          // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     TextColor;                                                // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemGradeInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemGradeInfoRecord");
		return ptr;
	}

};


// Class CommonSource.PetRandomOptionRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_PetRandomOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ItemCategory;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                OptionSlot;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x004A(0x0002) MISSED OFFSET
	int                                                Prob;                                                     // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      SetValue;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetRandomOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetRandomOptionRecord");
		return ptr;
	}

};


// Class CommonSource.PetRandomOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetRandomOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_PetRandomOptionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetRandomOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetRandomOptionSheet");
		return ptr;
	}


	class UCommonSource_PetRandomOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PetRandomOptionInfoRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_PetRandomOptionInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemCategory;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                OptionCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        GroupProb;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetRandomOptionInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetRandomOptionInfoRecord");
		return ptr;
	}

};


// Class CommonSource.PetInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_PetInfoRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetInfoSheet");
		return ptr;
	}


	class UCommonSource_PetInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemSlotRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_ItemSlotRecord : public UObject
{
public:
	unsigned char                                      StorageType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                DefaultSlotCount;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSlotCount;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpandSlotCount;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedCash;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemSlotRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemSlotRecord");
		return ptr;
	}

};


// Class CommonSource.PetRandomOptionInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetRandomOptionInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_PetRandomOptionInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetRandomOptionInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetRandomOptionInfoSheet");
		return ptr;
	}


	class UCommonSource_PetRandomOptionInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemMakeRecord
// 0x0070 (0x0098 - 0x0028)
class UCommonSource_ItemMakeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemIndex;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TabGroupType;                                             // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsGameEvent;                                              // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemMark;                                                 // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReqClassType;                                             // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	int                                                sort;                                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MakeProb;                                                 // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessMakeProb;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MakeCount;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MakeBindType;                                             // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlessType;                                                // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x004A(0x0002) MISSED OFFSET
	int                                                BlessID;                                                  // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedGold;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedMimirWisdom;                                          // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        MaterialItemIndex;                                        // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ItemEnchant;                                              // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MaterialItemCount;                                        // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ReplaceGroup;                                             // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemMakeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemMakeRecord");
		return ptr;
	}

};


// Class CommonSource.ItemMakeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemMakeSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemMakeRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemMakeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemMakeSheet");
		return ptr;
	}


	class UCommonSource_ItemMakeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemMakeCategoryRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ItemMakeCategoryRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TabGroupType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                NameCode_1;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EmptyCode;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Group_2;                                                  // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                NameCode_2;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemCategory;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReqClassType;                                             // 0x0042(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0043(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemMakeCategoryRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemMakeCategoryRecord");
		return ptr;
	}

};


// Class CommonSource.ItemMakeCategorySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemMakeCategorySheet : public UObject
{
public:
	TArray<class UCommonSource_ItemMakeCategoryRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemMakeCategorySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemMakeCategorySheet");
		return ptr;
	}


	class UCommonSource_ItemMakeCategoryRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemSlotSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemSlotSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemSlotRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemSlotSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemSlotSheet");
		return ptr;
	}


	class UCommonSource_ItemSlotRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemRecoveryCategoryRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_ItemRecoveryCategoryRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name_1;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ItemGrade;                                                // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                NameCode_1;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name_2;                                                   // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                EmptyCode;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Group_2;                                                  // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	int                                                NameCode_2;                                               // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemCategory;                                             // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x0065(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReqClassType;                                             // 0x0066(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0067(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemRecoveryCategoryRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemRecoveryCategoryRecord");
		return ptr;
	}

};


// Class CommonSource.ItemRecoveryCategorySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemRecoveryCategorySheet : public UObject
{
public:
	TArray<class UCommonSource_ItemRecoveryCategoryRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemRecoveryCategorySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemRecoveryCategorySheet");
		return ptr;
	}


	class UCommonSource_ItemRecoveryCategoryRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemMakeReplaceRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_ItemMakeReplaceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaterialItemIndex;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemEnchant;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaterialItemCount;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemMakeReplaceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemMakeReplaceRecord");
		return ptr;
	}

};


// Class CommonSource.ItemMakeReplaceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemMakeReplaceSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemMakeReplaceRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemMakeReplaceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemMakeReplaceSheet");
		return ptr;
	}


	class UCommonSource_ItemMakeReplaceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemDismantleSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemDismantleSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemDismantleRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemDismantleSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemDismantleSheet");
		return ptr;
	}


	class UCommonSource_ItemDismantleRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemSetRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_ItemSetRecord : public UObject
{
public:
	int                                                SetGroup;                                                 // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        SetItemIndex;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        SetItemCount;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              CharParam;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      PlusValue;                                                // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemSetRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemSetRecord");
		return ptr;
	}

};


// Class CommonSource.ItemSetSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemSetSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemSetRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemSetSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemSetSheet");
		return ptr;
	}


	class UCommonSource_ItemSetRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemConsumeRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ItemConsumeRecord : public UObject
{
public:
	unsigned char                                      ItemType;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParentsItemType;                                          // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AvailableFactionType;                                     // 0x002A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002B(0x0001) MISSED OFFSET
	float                                              CoolTime;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDBSave;                                                 // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               isAuto;                                                   // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsQuickSlot;                                              // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsMultipleUse;                                            // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxUseCount;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               MaxUseCountAutoSetting;                                   // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ItemLockDisable;                                          // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AlwaysAvailable;                                          // 0x003A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsShadowDungeonUse;                                       // 0x003B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsWorldDungeonUse;                                        // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCastlewarMapUse;                                        // 0x003D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCastlewarQualifierMapUse;                               // 0x003E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsGuildBattlefieldUse;                                    // 0x003F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UseAreaVolumType;                                         // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                ExtraErrorMessageUse;                                     // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsShadowDungeonAbyssFloorUse;                             // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemConsumeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemConsumeRecord");
		return ptr;
	}

};


// Class CommonSource.ItemConsumeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemConsumeSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemConsumeRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemConsumeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemConsumeSheet");
		return ptr;
	}


	class UCommonSource_ItemConsumeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemDismantleRecord
// 0x0070 (0x0098 - 0x0028)
class UCommonSource_ItemDismantleRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DetailID;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemCategory;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnchantStep;                                              // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	TArray<int>                                        Material;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Prob;                                                     // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<int>                                        MaterialCount;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SubMaterial;                                              // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubMinCount;                                              // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubMaxCount;                                              // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubEnchantMaterial;                                       // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        SubEnchantMaterialCount;                                  // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                OnlyDismantleMaterial;                                    // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	TArray<int>                                        OnlyDismantleCount;                                       // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemDismantleRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemDismantleRecord");
		return ptr;
	}

};


// Class CommonSource.ItemEquipSlotSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemEquipSlotSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemEquipSlotRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemEquipSlotSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemEquipSlotSheet");
		return ptr;
	}


	class UCommonSource_ItemEquipSlotRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemUseLimitSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemUseLimitSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemUseLimitRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemUseLimitSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemUseLimitSheet");
		return ptr;
	}


	class UCommonSource_ItemUseLimitRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemEquipSlotRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ItemEquipSlotRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SlotNumber;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                EquipLevel;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemEquipSlotRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemEquipSlotRecord");
		return ptr;
	}

};


// Class CommonSource.ItemDropControlRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ItemDropControlRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ServerGroupID;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      WorldMatchingContentsType;                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DropControlType;                                          // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DropControlValue;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemGrade;                                                // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PeriodType;                                               // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	int                                                PeriodValue;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DropControl_Max;                                          // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DropControl_Count;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DropControl_ProbValue;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemDropControlRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemDropControlRecord");
		return ptr;
	}

};


// Class CommonSource.ItemDropControlSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemDropControlSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemDropControlRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemDropControlSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemDropControlSheet");
		return ptr;
	}


	class UCommonSource_ItemDropControlRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DropControlGroupRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_DropControlGroupRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DropControlGroup;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                ItemIndex;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropControlGroupRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropControlGroupRecord");
		return ptr;
	}

};


// Class CommonSource.DropControlGroupSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DropControlGroupSheet : public UObject
{
public:
	TArray<class UCommonSource_DropControlGroupRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropControlGroupSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropControlGroupSheet");
		return ptr;
	}


	class UCommonSource_DropControlGroupRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemUseLimitRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ItemUseLimitRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NeedPlayerLevel;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxAvailableLevel;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedQuest;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemUseLimitRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemUseLimitRecord");
		return ptr;
	}

};


// Class CommonSource.DropControlServerGroupSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DropControlServerGroupSheet : public UObject
{
public:
	TArray<class UCommonSource_DropControlServerGroupRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropControlServerGroupSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropControlServerGroupSheet");
		return ptr;
	}


	class UCommonSource_DropControlServerGroupRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DropControlServerGroupRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_DropControlServerGroupRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ServerGroupID;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SessionType;                                              // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropControlServerGroupRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropControlServerGroupRecord");
		return ptr;
	}

};


// Class CommonSource.ItemSourceRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ItemSourceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemIndex;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemSourceType;                                           // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemSourceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemSourceRecord");
		return ptr;
	}

};


// Class CommonSource.ItemSourceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemSourceSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemSourceRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemSourceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemSourceSheet");
		return ptr;
	}


	class UCommonSource_ItemSourceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemReplacementRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ItemReplacementRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeleteItemIndex;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReplaceItemIndex;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReplaceItemCount;                                         // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemReplacementRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemReplacementRecord");
		return ptr;
	}

};


// Class CommonSource.ResourceIndicatorSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ResourceIndicatorSheet : public UObject
{
public:
	TArray<class UCommonSource_ResourceIndicatorRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceIndicatorSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceIndicatorSheet");
		return ptr;
	}


	class UCommonSource_ResourceIndicatorRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemIndicatorRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ItemIndicatorRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      IndicatorItemType;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RewardReason;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	struct FString                                     reason;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               NeedConditionCheck;                                       // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemIndicatorRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemIndicatorRecord");
		return ptr;
	}

};


// Class CommonSource.ResourceIndicatorRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ResourceIndicatorRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RewardReason;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	struct FString                                     reason;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      KakaoLogSubReasonType;                                    // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      KakaoLogAttribute;                                        // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0042(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceIndicatorRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceIndicatorRecord");
		return ptr;
	}

};


// Class CommonSource.ResourceTypeRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_ResourceTypeRecord : public UObject
{
public:
	unsigned char                                      ResourceType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     Value;                                                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceTypeRecord");
		return ptr;
	}

};


// Class CommonSource.ResourceTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ResourceTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_ResourceTypeRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceTypeSheet");
		return ptr;
	}


	class UCommonSource_ResourceTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.IndicatorItemTypeRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_IndicatorItemTypeRecord : public UObject
{
public:
	unsigned char                                      ItemType;                                                 // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      IndicatorItemType;                                        // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.IndicatorItemTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.IndicatorItemTypeRecord");
		return ptr;
	}

};


// Class CommonSource.ItemReplacementSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemReplacementSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemReplacementRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemReplacementSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemReplacementSheet");
		return ptr;
	}


	class UCommonSource_ItemReplacementRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LetterBoxInfoRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_LetterBoxInfoRecord : public UObject
{
public:
	unsigned char                                      LetterType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                MessageCode;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SenderCode;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LetterBoxInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LetterBoxInfoRecord");
		return ptr;
	}

};


// Class CommonSource.LetterBoxInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LetterBoxInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_LetterBoxInfoRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LetterBoxInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LetterBoxInfoSheet");
		return ptr;
	}


	class UCommonSource_LetterBoxInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LetterDefineRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_LetterDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AccountLetterType;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     MessageBoxID;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                LoadCountAtOnce;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxReceiveCount;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSendCount;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedSendGold;                                             // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxLockCount;                                             // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LetterExpirationDay;                                      // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildItemMakeLetterExpirationDay;                         // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReplacementLetterExpirationDay;                           // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LetterDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LetterDefineRecord");
		return ptr;
	}

};


// Class CommonSource.LetterDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LetterDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_LetterDefineRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LetterDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LetterDefineSheet");
		return ptr;
	}


	class UCommonSource_LetterDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.IndicatorItemTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_IndicatorItemTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_IndicatorItemTypeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.IndicatorItemTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.IndicatorItemTypeSheet");
		return ptr;
	}


	class UCommonSource_IndicatorItemTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LinkBoardInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_LinkBoardInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LinkOpenLevel;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               LinkEnabled;                                              // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                OpenConditionBoard;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkBoardInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkBoardInfoRecord");
		return ptr;
	}

};


// Class CommonSource.LinkBoardInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LinkBoardInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_LinkBoardInfoRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkBoardInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkBoardInfoSheet");
		return ptr;
	}


	class UCommonSource_LinkBoardInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemIndicatorSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemIndicatorSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemIndicatorRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemIndicatorSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemIndicatorSheet");
		return ptr;
	}


	class UCommonSource_ItemIndicatorRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LetterBoxTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_LetterBoxTable : public UObject
{
public:
	class UCommonSource_LetterBoxInfoSheet*            m_LetterBoxInfoSheet;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_LetterDefineSheet*             m_LetterDefineSheet;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LetterBoxTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LetterBoxTable");
		return ptr;
	}

};


// Class CommonSource.LinkSlotInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_LinkSlotInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LinkBoardIndex;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SlotNumber;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                LinkCondition;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SlotEmblemGroup;                                          // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkSlotInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkSlotInfoRecord");
		return ptr;
	}

};


// Class CommonSource.LinkEmblemInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_LinkEmblemInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SlotEmblemGroup;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EmblemType;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                Prob;                                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        GradeProb;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                LinkEmblemOptionGroup;                                    // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                linkEmblemCountOptionGroup;                               // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     EmblemImageName;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkEmblemInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkEmblemInfoRecord");
		return ptr;
	}

};


// Class CommonSource.LinkEmblemInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LinkEmblemInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_LinkEmblemInfoRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkEmblemInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkEmblemInfoSheet");
		return ptr;
	}


	class UCommonSource_LinkEmblemInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LinkEmblemOptionRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_LinkEmblemOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LinkEmblemOptionGroup;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                Prob;                                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      SetValue;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkEmblemOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkEmblemOptionRecord");
		return ptr;
	}

};


// Class CommonSource.LinkEmblemOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LinkEmblemOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_LinkEmblemOptionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkEmblemOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkEmblemOptionSheet");
		return ptr;
	}


	class UCommonSource_LinkEmblemOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LinkSlotInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LinkSlotInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_LinkSlotInfoRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkSlotInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkSlotInfoSheet");
		return ptr;
	}


	class UCommonSource_LinkSlotInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LinkEmblemCountOptionRecord
// 0x0070 (0x0098 - 0x0028)
class UCommonSource_LinkEmblemCountOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                linkEmblemCountOptionGroup;                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LinkCount;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<unsigned char>                              NormalCharParam;                                          // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      SetValue;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              HeroCharParam;                                            // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      SetValue1;                                                // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              LegendCharParam;                                          // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      SetValue2;                                                // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkEmblemCountOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkEmblemCountOptionRecord");
		return ptr;
	}

};


// Class CommonSource.LinkEmblemCountOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LinkEmblemCountOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_LinkEmblemCountOptionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkEmblemCountOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkEmblemCountOptionSheet");
		return ptr;
	}


	class UCommonSource_LinkEmblemCountOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CompleteLinkOptionRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_CompleteLinkOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<float>                                      grade;                                                    // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CompleteLinkOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CompleteLinkOptionRecord");
		return ptr;
	}

};


// Class CommonSource.CompleteLinkOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CompleteLinkOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_CompleteLinkOptionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CompleteLinkOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CompleteLinkOptionSheet");
		return ptr;
	}


	class UCommonSource_CompleteLinkOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LinkDefineRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_LinkDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonLimitCount;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SummonResourceType;                                       // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                SummonResourceIndex;                                      // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonResourceCount;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChargePlusSummonCount;                                    // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ChargeResourceType;                                       // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                ChargeResourceIndex;                                      // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        ChargeResourceCount;                                      // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ChargeLimit;                                              // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      LimitSlotNumber;                                          // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	int                                                MinimumLinkCount;                                         // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ProbAdjustStartCount;                                     // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        EmblemSummonProbAdjust;                                   // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SummonReplaceCashCount;                                   // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      LinkPresetSetting;                                        // 0x007C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SummonCountReturnEnabled;                                 // 0x007D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x007E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkDefineRecord");
		return ptr;
	}

};


// Class CommonSource.LinkDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LinkDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_LinkDefineRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkDefineSheet");
		return ptr;
	}


	class UCommonSource_LinkDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LinkResetPriceRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_LinkResetPriceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UseSummonCount;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResetPrice;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkResetPriceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkResetPriceRecord");
		return ptr;
	}

};


// Class CommonSource.LinkResetPriceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LinkResetPriceSheet : public UObject
{
public:
	TArray<class UCommonSource_LinkResetPriceRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkResetPriceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkResetPriceSheet");
		return ptr;
	}


	class UCommonSource_LinkResetPriceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LinkBonusCountSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LinkBonusCountSheet : public UObject
{
public:
	TArray<class UCommonSource_LinkBonusCountRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkBonusCountSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkBonusCountSheet");
		return ptr;
	}


	class UCommonSource_LinkBonusCountRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LoadingInfoRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_LoadingInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ModelType;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                MonsterGroupID;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NPCGroupID;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TipGroupID;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LocationX;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LocationY;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LocationZ;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LoadingInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LoadingInfoRecord");
		return ptr;
	}

};


// Class CommonSource.LoadingInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LoadingInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_LoadingInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LoadingInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LoadingInfoSheet");
		return ptr;
	}


	class UCommonSource_LoadingInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ModelInfoRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ModelInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ModelType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                ModelIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ModelGroupID;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FString>                             ModelBP;                                                  // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ModelInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ModelInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ModelInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ModelInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ModelInfoRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ModelInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ModelInfoSheet");
		return ptr;
	}


	class UCommonSource_ModelInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.TipInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_TipInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TipGroup;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LevelLimit;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                stringCode;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               OnlyPCLoadingTip;                                         // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TipInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TipInfoRecord");
		return ptr;
	}

};


// Class CommonSource.TipInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_TipInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_TipInfoRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TipInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TipInfoSheet");
		return ptr;
	}


	class UCommonSource_TipInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LoadingDefineRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_LoadingDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LoadingAvaterPercent;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LoadingMonsterPercent;                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LoadingNPCPercent;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LoadingDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LoadingDefineRecord");
		return ptr;
	}

};


// Class CommonSource.MapInfoRecord
// 0x0140 (0x0168 - 0x0028)
class UCommonSource_MapInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapMainGroup;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TitleCode;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DetailDescCode;                                           // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     MapBG;                                                    // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     MiniMapImage;                                             // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Map3DModel;                                               // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      MapType;                                                  // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	int                                                ParentMapIndex;                                           // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MapDisplayOrder;                                          // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	int                                                MapGroup;                                                 // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Difficulty;                                               // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	int                                                MonsterMaxHpPercent;                                      // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MonsterDamagePercent;                                     // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxChannelUser;                                           // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ChapterNumber;                                            // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUseViewport;                                            // 0x00A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x00A2(0x0002) MISSED OFFSET
	int                                                SectorSize;                                               // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ViewportRadius;                                           // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ViewportAppearCount;                                      // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DestroyTime;                                              // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartPortalIndex;                                         // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EndPortalIndex;                                           // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReturnPortalIndex;                                        // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     MapName;                                                  // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TriggerIndex;                                             // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPKZone;                                                 // 0x00D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPKPenalty;                                              // 0x00D5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAutoParty;                                              // 0x00D6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsInstance;                                               // 0x00D7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPortalMove;                                             // 0x00D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCheckPortalMoveWarMode;                                 // 0x00D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSavePoint;                                              // 0x00DA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsRandomTeleport;                                         // 0x00DB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCheckDungeonEntranceCount;                              // 0x00DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnterTicketType;                                          // 0x00DD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x00DE(0x0002) MISSED OFFSET
	int                                                EnterTicketIndex;                                         // 0x00E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnterTicketCount;                                         // 0x00E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NeedQuestState;                                           // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00E9(0x0003) MISSED OFFSET
	int                                                NeedQuestIndex;                                           // 0x00EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RecommendBattlePower;                                     // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedBattlePower;                                          // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedPlayerLevelMin;                                       // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedPlayerLevelMax;                                       // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HasBoss;                                                  // 0x0100(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	int                                                RewardRandomPackageGroupID;                               // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FailRewardRandomPackageGroupID;                           // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardIndividualRandomPackageGroupID;                     // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChargeItemID;                                             // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FixedChargeItemID;                                        // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResetBattleTime;                                          // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFallingDamage;                                          // 0x011C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResetTimeType;                                            // 0x011D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPlanDrop;                                               // 0x011E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x1];                                       // 0x011F(0x0001) MISSED OFFSET
	int                                                DisplayCheckID;                                           // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DisplayBossCheckID;                                       // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               MapHide;                                                  // 0x0128(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	int                                                DungeonTimeID;                                            // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBuffCheck;                                              // 0x0130(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAreaBuffCheck;                                          // 0x0131(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x0132(0x0002) MISSED OFFSET
	int                                                EnterLimitCount;                                          // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ForceExitWaitTime;                                        // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCashResurrection;                                       // 0x013C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x013D(0x0003) MISSED OFFSET
	int                                                MaxCashResurrectionCount;                                 // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsGuildStronghold;                                        // 0x0144(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SlayerMapEntranceCheck;                                   // 0x0145(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x0146(0x0002) MISSED OFFSET
	int                                                SortOrder;                                                // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDeathPenalty;                                           // 0x014C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUseSameResourceMap;                                     // 0x014D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x2];                                       // 0x014E(0x0002) MISSED OFFSET
	struct FString                                     ReleaseAlarm;                                             // 0x0150(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsChargeReset;                                            // 0x0160(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x7];                                       // 0x0161(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapInfoRecord");
		return ptr;
	}

};


// Class CommonSource.LoadingDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_LoadingDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_LoadingDefineRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LoadingDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LoadingDefineSheet");
		return ptr;
	}


	class UCommonSource_LoadingDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_MapInfoRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapInfoSheet");
		return ptr;
	}


	class UCommonSource_MapInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.LinkBonusCountRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_LinkBonusCountRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DirectLinkCount;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NormalBonusCount;                                         // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HeroBonusCount;                                           // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      LegendBonusCount;                                         // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.LinkBonusCountRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.LinkBonusCountRecord");
		return ptr;
	}

};


// Class CommonSource.MapTypeRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_MapTypeRecord : public UObject
{
public:
	unsigned char                                      MapType;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCastlewarServer;                                        // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FCommonSource_Double                        PvPDamageCoefficient;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        PvPHealCoefficient;                                       // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        PvPShieldCoefficient;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        PvPMpShieldCoefficient;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSlayerPenalty;                                          // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUseToleranceAreaBuff;                                   // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               OfflineHuntingEnabled;                                    // 0x0052(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Anonymity;                                                // 0x0053(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapTypeRecord");
		return ptr;
	}

};


// Class CommonSource.MapTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_MapTypeRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapTypeSheet");
		return ptr;
	}


	class UCommonSource_MapTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PartyDungeonRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_PartyDungeonRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      Difficulty;                                               // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                PartyMonsterLevelPlus;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMaxHpPercent;                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterDamagePercent;                                // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RecommendBattlePower;                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardRandomPackageGroupID;                               // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardIndividualRandomPackageGroupID;                     // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PartyDungeonRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PartyDungeonRecord");
		return ptr;
	}

};


// Class CommonSource.PartyDungeonSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PartyDungeonSheet : public UObject
{
public:
	TArray<class UCommonSource_PartyDungeonRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PartyDungeonSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PartyDungeonSheet");
		return ptr;
	}


	class UCommonSource_PartyDungeonRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PortalRecord
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_PortalRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                StartNpcIndex;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartAreaIndex;                                           // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReturnAreaIndex;                                          // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedDoingQuestIndex;                                      // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DestMapIndex;                                             // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TArray<int>                                        DestAreaIndex;                                            // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DestMoveProb;                                             // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Cost;                                                     // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	struct FString                                     OpenPortal;                                               // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ClosePortal;                                              // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PortalRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PortalRecord");
		return ptr;
	}

};


// Class CommonSource.PortalSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PortalSheet : public UObject
{
public:
	TArray<class UCommonSource_PortalRecord*>          arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PortalSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PortalSheet");
		return ptr;
	}


	class UCommonSource_PortalRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapDefineRecord
// 0x0090 (0x00B8 - 0x0028)
class UCommonSource_MapDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapEnterWaitTime;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinChannelUserPercent;                                    // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinChannelGuildPercent;                                   // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	int                                                GuildRaidPage;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LoadingShowAvatarClassType;                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      LoadingShowAvatarClassGrade;                              // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                ChargeLimitBattleTime;                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RangeRandomTeleport;                                      // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DungeonPartyRenewTime;                                    // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FavoriteCount;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DungeonAutoStartTime;                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxEscapeCount;                                           // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonEntranceCount;                                     // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PartyDungeonOpenHour;                                     // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PartyDungeonCloseHour;                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResultPageRemainTime;                                     // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlanDropCoolTimeMin;                                      // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlanDropCoolTimeMax;                                      // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlanDropCoolMonsterKillCount;                             // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaidCloseDay;                                        // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaidCloseHour;                                       // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaidCloseMinute;                                     // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaidOpenHour;                                        // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRaidOpenMinute;                                      // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WorldDungeonStartMapIndex;                                // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChampionsDungeonStartMapIndex;                            // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StateNormal;                                              // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StateBusy;                                                // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildDefenseCloseDay;                                     // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildDefenseCloseHour;                                    // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildDefenseCloseMinute;                                  // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildDefenseOpenHour;                                     // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildDefenseOpenMinute;                                   // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPartyDungeonWorld;                                      // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	int                                                WorldEliteMatchingTime;                                   // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapDefineRecord");
		return ptr;
	}

};


// Class CommonSource.MapDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_MapDefineRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapDefineSheet");
		return ptr;
	}


	class UCommonSource_MapDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RankScoreRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_RankScoreRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ScoreType;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                ScoreValue;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinusScore;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RankScoreRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RankScoreRecord");
		return ptr;
	}

};


// Class CommonSource.RankScoreSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RankScoreSheet : public UObject
{
public:
	TArray<class UCommonSource_RankScoreRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RankScoreSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RankScoreSheet");
		return ptr;
	}


	class UCommonSource_RankScoreRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ClearRankRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ClearRankRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RankScore;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClearRank;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ClearRankRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ClearRankRecord");
		return ptr;
	}

};


// Class CommonSource.ClearRankSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ClearRankSheet : public UObject
{
public:
	TArray<class UCommonSource_ClearRankRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ClearRankSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ClearRankSheet");
		return ptr;
	}


	class UCommonSource_ClearRankRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldAreaRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_WorldAreaRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                UIDisplay;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReqMinPlayerLevel;                                        // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReqMaxPlayerLevel;                                        // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldAreaRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldAreaRecord");
		return ptr;
	}

};


// Class CommonSource.WorldAreaSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WorldAreaSheet : public UObject
{
public:
	TArray<class UCommonSource_WorldAreaRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldAreaSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldAreaSheet");
		return ptr;
	}


	class UCommonSource_WorldAreaRecord* GetRecord(int64_t ID);
};


// Class CommonSource.TownInfoRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_TownInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TownInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TownInfoRecord");
		return ptr;
	}

};


// Class CommonSource.TownInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_TownInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_TownInfoRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TownInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TownInfoSheet");
		return ptr;
	}


	class UCommonSource_TownInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AreaTypeInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_AreaTypeInfoRecord : public UObject
{
public:
	unsigned char                                      areaVolumType;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      AreaPkType;                                               // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsReturn;                                                 // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsWarp;                                                   // 0x0042(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAttack;                                                 // 0x0043(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPkAttack;                                               // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPKPenalty;                                              // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPkRecord;                                               // 0x0046(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsGuildMemberAttack;                                      // 0x0047(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSavePoint;                                              // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	int64_t                                            BuffIndex;                                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDiePenalty;                                             // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsNoName;                                                 // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AreaVehicleType;                                          // 0x005A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDisplayName;                                            // 0x005B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBrutalTime;                                             // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsKillMonsterSlayerScore;                                 // 0x005D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFixMonsterAttack;                                       // 0x005E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x005F(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AreaTypeInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AreaTypeInfoRecord");
		return ptr;
	}

};


// Class CommonSource.DungeonInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_DungeonInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TargetIndex;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaIndex;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GoalString;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBoss;                                                   // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DungeonInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DungeonInfoRecord");
		return ptr;
	}

};


// Class CommonSource.AreaTypeInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AreaTypeInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_AreaTypeInfoRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AreaTypeInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AreaTypeInfoSheet");
		return ptr;
	}


	class UCommonSource_AreaTypeInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapBossInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_MapBossInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        BossSpawnIndex;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ObjProb;                                                  // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapBossInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapBossInfoRecord");
		return ptr;
	}

};


// Class CommonSource.DungeonInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DungeonInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_DungeonInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DungeonInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DungeonInfoSheet");
		return ptr;
	}


	class UCommonSource_DungeonInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapBossInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapBossInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_MapBossInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapBossInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapBossInfoSheet");
		return ptr;
	}


	class UCommonSource_MapBossInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapAISelectRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_MapAISelectRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MapId;                                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Level;                                                    // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	TArray<int>                                        AIPlayerIndex;                                            // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapAISelectRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapAISelectRecord");
		return ptr;
	}

};


// Class CommonSource.MapDisplayCkeckRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_MapDisplayCkeckRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DisplayItemIndex;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapDisplayCkeckRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapDisplayCkeckRecord");
		return ptr;
	}

};


// Class CommonSource.MapDisplayCkeckSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapDisplayCkeckSheet : public UObject
{
public:
	TArray<class UCommonSource_MapDisplayCkeckRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapDisplayCkeckSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapDisplayCkeckSheet");
		return ptr;
	}


	class UCommonSource_MapDisplayCkeckRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapGroupDisplayCheckRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_MapGroupDisplayCheckRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapGroup;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              ResourceType;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ResourceIndex;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapGroupDisplayCheckRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapGroupDisplayCheckRecord");
		return ptr;
	}

};


// Class CommonSource.MapGroupDisplayCheckSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapGroupDisplayCheckSheet : public UObject
{
public:
	TArray<class UCommonSource_MapGroupDisplayCheckRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapGroupDisplayCheckSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapGroupDisplayCheckSheet");
		return ptr;
	}


	class UCommonSource_MapGroupDisplayCheckRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DungeonTimeRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_DungeonTimeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      StartHour;                                                // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      StartMin;                                                 // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                OpenTimeSec;                                              // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              OpenWeek;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                WeekInterval;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WeekStartYear;                                            // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WeekStartMonth;                                           // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WeekStartDay;                                             // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DungeonTimeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DungeonTimeRecord");
		return ptr;
	}

};


// Class CommonSource.MapAISelectSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapAISelectSheet : public UObject
{
public:
	TArray<class UCommonSource_MapAISelectRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapAISelectSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapAISelectSheet");
		return ptr;
	}


	class UCommonSource_MapAISelectRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapEnterChargeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_MapEnterChargeRecord : public UObject
{
public:
	int                                                MapGroup;                                                 // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResetTimeType;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                ChargeCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapEnterChargeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapEnterChargeRecord");
		return ptr;
	}

};


// Class CommonSource.MapEnterChargeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapEnterChargeSheet : public UObject
{
public:
	TArray<class UCommonSource_MapEnterChargeRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapEnterChargeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapEnterChargeSheet");
		return ptr;
	}


	class UCommonSource_MapEnterChargeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DuelDungeonRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_DuelDungeonRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxDuelCount;                                             // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinLimitUserCount;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxLimitUserCount;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DuelCountPerPage;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DuelMemberCountPerPage;                                   // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartReadyTime;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartMinPlayerNum;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartMinTeamNum;                                          // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartMinKillCount;                                        // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartMinPlayTime;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartBuffIndex;                                           // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CancelWaitingTime;                                        // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DuelDungeonRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DuelDungeonRecord");
		return ptr;
	}

};


// Class CommonSource.DuelDungeonSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DuelDungeonSheet : public UObject
{
public:
	TArray<class UCommonSource_DuelDungeonRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DuelDungeonSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DuelDungeonSheet");
		return ptr;
	}


	class UCommonSource_DuelDungeonRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DungeonTimeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DungeonTimeSheet : public UObject
{
public:
	TArray<class UCommonSource_DungeonTimeRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DungeonTimeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DungeonTimeSheet");
		return ptr;
	}


	class UCommonSource_DungeonTimeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DuelDungeonMapSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DuelDungeonMapSheet : public UObject
{
public:
	TArray<class UCommonSource_DuelDungeonMapRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DuelDungeonMapSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DuelDungeonMapSheet");
		return ptr;
	}


	class UCommonSource_DuelDungeonMapRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CastlewarQualifierMapRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_CastlewarQualifierMapRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        StartPotalIndex;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarQualifierMapRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarQualifierMapRecord");
		return ptr;
	}

};


// Class CommonSource.CastlewarQualifierMapSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CastlewarQualifierMapSheet : public UObject
{
public:
	TArray<class UCommonSource_CastlewarQualifierMapRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CastlewarQualifierMapSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CastlewarQualifierMapSheet");
		return ptr;
	}


	class UCommonSource_CastlewarQualifierMapRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapTriggerRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_MapTriggerRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TriggerIndex;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapTriggerRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapTriggerRecord");
		return ptr;
	}

};


// Class CommonSource.MapTriggerSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapTriggerSheet : public UObject
{
public:
	TArray<class UCommonSource_MapTriggerRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapTriggerSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapTriggerSheet");
		return ptr;
	}


	class UCommonSource_MapTriggerRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DuelDungeonMapRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_DuelDungeonMapRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        StartPotalIndex;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DuelDungeonMapRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DuelDungeonMapRecord");
		return ptr;
	}

};


// Class CommonSource.InstanceServerMapTypeRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_InstanceServerMapTypeRecord : public UObject
{
public:
	unsigned char                                      MapType;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UsePossible;                                              // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InstanceServerMapTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InstanceServerMapTypeRecord");
		return ptr;
	}

};


// Class CommonSource.InstanceServerMapTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InstanceServerMapTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_InstanceServerMapTypeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InstanceServerMapTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InstanceServerMapTypeSheet");
		return ptr;
	}


	class UCommonSource_InstanceServerMapTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AreaBuffApplyObjectTypeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_AreaBuffApplyObjectTypeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaBuffApplyIndex;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ObjectType;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AreaBuffApplyObjectTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AreaBuffApplyObjectTypeRecord");
		return ptr;
	}

};


// Class CommonSource.AreaBuffApplyObjectTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AreaBuffApplyObjectTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_AreaBuffApplyObjectTypeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AreaBuffApplyObjectTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AreaBuffApplyObjectTypeSheet");
		return ptr;
	}


	class UCommonSource_AreaBuffApplyObjectTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AreaBuffApplyClassTypeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_AreaBuffApplyClassTypeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaBuffApplyClassIndex;                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AreaBuffApplyClassTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AreaBuffApplyClassTypeRecord");
		return ptr;
	}

};


// Class CommonSource.MultiMiniMapRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_MultiMiniMapRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     MiniMapImage;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              MiniMapAngle;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MultiMiniMapRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MultiMiniMapRecord");
		return ptr;
	}

};


// Class CommonSource.AreaBuffApplyClassTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AreaBuffApplyClassTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_AreaBuffApplyClassTypeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AreaBuffApplyClassTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AreaBuffApplyClassTypeSheet");
		return ptr;
	}


	class UCommonSource_AreaBuffApplyClassTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MultiMiniMapSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MultiMiniMapSheet : public UObject
{
public:
	TArray<class UCommonSource_MultiMiniMapRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MultiMiniMapSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MultiMiniMapSheet");
		return ptr;
	}


	class UCommonSource_MultiMiniMapRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapColliderInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_MapColliderInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectIndex;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PosX;                                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PosY;                                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PosZ;                                                     // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ColliderType;                                             // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                Radius;                                                   // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Width;                                                    // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Height;                                                   // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Depth;                                                    // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCheckInternalCollision;                                 // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapColliderInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapColliderInfoRecord");
		return ptr;
	}

};


// Class CommonSource.MapColliderInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapColliderInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_MapColliderInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapColliderInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapColliderInfoSheet");
		return ptr;
	}


	class UCommonSource_MapColliderInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RegionOptionRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_RegionOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     ServiceType;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      nation;                                                   // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FString                                     ServerAddressKey;                                         // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                RegionStringIndex;                                        // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RegionOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RegionOptionRecord");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldMapSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildBattlefieldMapSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildBattlefieldMapRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMapSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMapSheet");
		return ptr;
	}


	class UCommonSource_GuildBattlefieldMapRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MessageInfoRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_MessageInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MessageCode;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CoolTime;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MessageInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MessageInfoRecord");
		return ptr;
	}

};


// Class CommonSource.MessageInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MessageInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_MessageInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MessageInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MessageInfoSheet");
		return ptr;
	}


	class UCommonSource_MessageInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.GuildBattlefieldMapRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_GuildBattlefieldMapRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        StartPotalIndex;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMapRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldMapRecord");
		return ptr;
	}

};


// Class CommonSource.ServerMessageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ServerMessageSheet : public UObject
{
public:
	TArray<class UCommonSource_ServerMessageRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerMessageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerMessageSheet");
		return ptr;
	}


	class UCommonSource_ServerMessageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ServerMessageRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ServerMessageRecord : public UObject
{
public:
	int                                                MessageIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MassageCode;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MessageVisualType;                                        // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerMessageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerMessageRecord");
		return ptr;
	}

};


// Class CommonSource.MonsterRecord
// 0x00A0 (0x00C8 - 0x0028)
class UCommonSource_MonsterRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                GroupID;                                                  // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MonsterGrade;                                             // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                ParentMonsterIndex;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	int64_t                                            MaxHpPercent;                                             // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DamagePercent;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAccuracyAdd;                                           // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CriticalChancePercent;                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CriticalDamageAddPercent;                                 // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DoubleAttackChancePercent;                                // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAvoidanceAdd;                                          // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CloseReductionDecreasePercent;                            // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RangeReductionDecreasePercent;                            // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MagicReductionDecreasePercent;                            // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CloseDamageAbsoluteReductionPercent;                      // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RangeDamageAbsoluteReductionPercent;                      // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MagicDamageAbsoluteReductionPercent;                      // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AbnormalResistPercent;                                    // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShockResistPercent;                                       // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CriticalChanceResistPercent;                              // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CriticalDamageReductionPercent;                           // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WaitTurnTime;                                             // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HPArmorGauge;                                             // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAniProb;                                               // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBrutalAttack;                                           // 0x00A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBossAppearEffect;                                       // 0x00A5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemDropOwnerType;                                        // 0x00A6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ShowBossEffect;                                           // 0x00A7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ImageName;                                                // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ExpPercent;                                               // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GoldPercent;                                              // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsForceDeadAni;                                           // 0x00C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsOutSideSkillPos;                                        // 0x00C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHitCount;                                               // 0x00C2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBossHpPhasePercent;                                     // 0x00C3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterRecord");
		return ptr;
	}

};


// Class CommonSource.BossInfoRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_BossInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                BossID;                                                   // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     ImageName;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TipCode;                                                  // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BossInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BossInfoRecord");
		return ptr;
	}

};


// Class CommonSource.BossInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BossInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_BossInfoRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BossInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BossInfoSheet");
		return ptr;
	}


	class UCommonSource_BossInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MonsterGroupIDRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_MonsterGroupIDRecord : public UObject
{
public:
	int                                                GroupID;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterGroupIDRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterGroupIDRecord");
		return ptr;
	}

};


// Class CommonSource.MonsterGroupIDSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MonsterGroupIDSheet : public UObject
{
public:
	TArray<class UCommonSource_MonsterGroupIDRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterGroupIDSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterGroupIDSheet");
		return ptr;
	}


	class UCommonSource_MonsterGroupIDRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MonsterDefineRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_MonsterDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BossHealthLine;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AppearPassiveMinMonsterGrade;                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                BossKillNoticeDistance;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ShieldGuageDisplayMinMonsterGrade;                        // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PeriodType;                                               // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	int                                                BlessedBossSpawnLimitCount;                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessedBossSpawnDuration;                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BlessedBossSpawnUnique;                                   // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                BlessedBossTotalSpawnLimitCount;                          // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterDefineRecord");
		return ptr;
	}

};


// Class CommonSource.MonsterDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MonsterDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_MonsterDefineRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterDefineSheet");
		return ptr;
	}


	class UCommonSource_MonsterDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MonsterNotInAreaRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_MonsterNotInAreaRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaIndex;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterNotInAreaRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterNotInAreaRecord");
		return ptr;
	}

};


// Class CommonSource.MonsterNotInAreaSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MonsterNotInAreaSheet : public UObject
{
public:
	TArray<class UCommonSource_MonsterNotInAreaRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterNotInAreaSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterNotInAreaSheet");
		return ptr;
	}


	class UCommonSource_MonsterNotInAreaRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MonsterGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MonsterGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_MonsterGradeRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterGradeSheet");
		return ptr;
	}


	class UCommonSource_MonsterGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.NoticeInfoRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_NoticeInfoRecord : public UObject
{
public:
	unsigned char                                      NoticeType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NoticeLevel;                                              // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NoticeInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NoticeInfoRecord");
		return ptr;
	}

};


// Class CommonSource.NoticeInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NoticeInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_NoticeInfoRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NoticeInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NoticeInfoSheet");
		return ptr;
	}


	class UCommonSource_NoticeInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MonsterGradeRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_MonsterGradeRecord : public UObject
{
public:
	unsigned char                                      MonsterGrade;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MonsterType;                                              // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDamagedVehicleEndMonsterGrade;                          // 0x002A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               KnockBack;                                                // 0x002B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Pull;                                                     // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ItemDropParam;                                            // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsApplyFriendSkill;                                       // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseAggroIcon;                                             // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               VisibleBuffEffect;                                        // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Blindness;                                                // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BossStatApply;                                            // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BossDeadEffect;                                           // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BossRewardDistance;                                       // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BossRewardRemainTick;                                     // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Fascinate;                                                // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanNotAttackBuff;                                         // 0x003A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Polymorph;                                                // 0x003B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               PlusMinHeightExtend;                                      // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDazed;                                                  // 0x003D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               EternalSleep;                                             // 0x003E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Exhausted;                                                // 0x003F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Aging;                                                    // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Fear;                                                     // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterGradeRecord");
		return ptr;
	}

};


// Class CommonSource.ContentsControlSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ContentsControlSheet : public UObject
{
public:
	TArray<class UCommonSource_ContentsControlRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ContentsControlSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ContentsControlSheet");
		return ptr;
	}


	class UCommonSource_ContentsControlRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ContentRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ContentRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                QuestIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ContentsType;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ExplainCode;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExplainCodeAdd;                                           // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MarkTypeGroup;                                            // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ContentRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ContentRecord");
		return ptr;
	}

};


// Class CommonSource.ContentSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ContentSheet : public UObject
{
public:
	TArray<class UCommonSource_ContentRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ContentSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ContentSheet");
		return ptr;
	}


	class UCommonSource_ContentRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ButtonLockRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ButtonLockRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ContentsType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                QuestIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ButtonLockType;                                           // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ButtonLockRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ButtonLockRecord");
		return ptr;
	}

};


// Class CommonSource.ButtonLockSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ButtonLockSheet : public UObject
{
public:
	TArray<class UCommonSource_ButtonLockRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ButtonLockSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ButtonLockSheet");
		return ptr;
	}


	class UCommonSource_ButtonLockRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ContentsControlRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_ContentsControlRecord : public UObject
{
public:
	unsigned char                                      ContentsType;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsClose;                                                  // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FString                                     ServiceType;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ContentsControlRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ContentsControlRecord");
		return ptr;
	}

};


// Class CommonSource.NoticeDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NoticeDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_NoticeDefineRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NoticeDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NoticeDefineSheet");
		return ptr;
	}


	class UCommonSource_NoticeDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MarketReviewRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_MarketReviewRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ReqQuestIndex;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReviewString;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MarketReviewRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MarketReviewRecord");
		return ptr;
	}

};


// Class CommonSource.NoticeDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_NoticeDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShowEventMarkTime;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChatLimitLevel;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     HelpRedirectURL;                                          // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NoticeDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NoticeDefineRecord");
		return ptr;
	}

};


// Class CommonSource.MarketReviewSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MarketReviewSheet : public UObject
{
public:
	TArray<class UCommonSource_MarketReviewRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MarketReviewSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MarketReviewSheet");
		return ptr;
	}


	class UCommonSource_MarketReviewRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ContentLockRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_ContentLockRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ContentsType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ButtonLockType;                                           // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MapType;                                                  // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ContentLockRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ContentLockRecord");
		return ptr;
	}

};


// Class CommonSource.ContentLockSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ContentLockSheet : public UObject
{
public:
	TArray<class UCommonSource_ContentLockRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ContentLockSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ContentLockSheet");
		return ptr;
	}


	class UCommonSource_ContentLockRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemControlSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemControlSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemControlRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemControlSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemControlSheet");
		return ptr;
	}


	class UCommonSource_ItemControlRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MonsterSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MonsterSheet : public UObject
{
public:
	TArray<class UCommonSource_MonsterRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MonsterSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MonsterSheet");
		return ptr;
	}


	class UCommonSource_MonsterRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemControlRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_ItemControlRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsClose;                                                  // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemControlRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemControlRecord");
		return ptr;
	}

};


// Class CommonSource.ExpirationInfoRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ExpirationInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffType;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CollectionPeriod;                                         // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HideExpirationInfo;                                       // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HideMoveButton;                                           // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ContentsType;                                             // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExpirationInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExpirationInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ExpirationInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ExpirationInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ExpirationInfoRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExpirationInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExpirationInfoSheet");
		return ptr;
	}


	class UCommonSource_ExpirationInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ContentsWorldControlSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ContentsWorldControlSheet : public UObject
{
public:
	TArray<class UCommonSource_ContentsWorldControlRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ContentsWorldControlSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ContentsWorldControlSheet");
		return ptr;
	}


	class UCommonSource_ContentsWorldControlRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ResourceControlSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ResourceControlSheet : public UObject
{
public:
	TArray<class UCommonSource_ResourceControlRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceControlSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceControlSheet");
		return ptr;
	}


	class UCommonSource_ResourceControlRecord* GetRecord(int64_t ID);
};


// Class CommonSource.NpcRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_NpcRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      NpcFuncType;                                              // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                ShopIndex;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     TalkImage;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              InteractTime;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Height;                                                   // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ShortCut;                                                 // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               TargetSkillObject;                                        // 0x0061(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0062(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NpcRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NpcRecord");
		return ptr;
	}

};


// Class CommonSource.NpcSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NpcSheet : public UObject
{
public:
	TArray<class UCommonSource_NpcRecord*>             arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NpcSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NpcSheet");
		return ptr;
	}


	class UCommonSource_NpcRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ResourceControlRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_ResourceControlRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ShopPriceType;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsClose;                                                  // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceControlRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceControlRecord");
		return ptr;
	}

};


// Class CommonSource.NpcFuncTypeInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_NpcFuncTypeInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     IconName;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     MinimapIconName;                                          // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     WorldMapIconName;                                         // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NpcFuncTypeInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NpcFuncTypeInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ContentsWorldControlRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ContentsWorldControlRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     ServerGroupName;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ContentsType;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0042(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ContentsWorldControlRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ContentsWorldControlRecord");
		return ptr;
	}

};


// Class CommonSource.NpcTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_NpcTable : public UObject
{
public:
	class UCommonSource_NpcSheet*                      m_NpcSheet;                                               // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_NpcFuncTypeInfoSheet*          m_NpcFuncTypeInfoSheet;                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NpcTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NpcTable");
		return ptr;
	}

};


// Class CommonSource.BaseObjectRecord
// 0x00A8 (0x00D0 - 0x0028)
class UCommonSource_BaseObjectRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ModelName;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IconName;                                                 // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     MinimapIconName;                                          // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ObjectType;                                               // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	float                                              BodyRange;                                                // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BodyHeight;                                               // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MarkRange;                                                // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RunSpeed;                                                 // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WalkSpeed;                                                // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OnQuestIndex;                                             // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OffQuestIndex;                                            // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OnClearQuestIndex;                                        // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OffClearQuestIndex;                                       // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffIndex;                                                // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HotTimeOnOff;                                             // 0x00A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BroadCastApply;                                           // 0x00A5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x00A6(0x0002) MISSED OFFSET
	struct FString                                     ChangeMaterialParam;                                      // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     MaterialParamValueColor;                                  // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              MaterialParamValueScalar;                                 // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BaseObjectRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BaseObjectRecord");
		return ptr;
	}

};


// Class CommonSource.BaseObjectSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BaseObjectSheet : public UObject
{
public:
	TArray<class UCommonSource_BaseObjectRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BaseObjectSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BaseObjectSheet");
		return ptr;
	}


	class UCommonSource_BaseObjectRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ObjectDefineRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ObjectDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RunawaySpeedPercent;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PerceptAniProb;                                           // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      IdleAniProb;                                              // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      IdleTimeMin;                                              // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      IdleTimeMax;                                              // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FirstAggroDamagePercent;                                  // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                InteractRange;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NextTargetTime;                                           // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DecreaseAggroTime;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DecreaseAggroRatio;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StandUpTime;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ResurrectionTime;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonAITreeID;                                           // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxMustAppearObject;                                      // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ObjectDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ObjectDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ObjectDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ObjectDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ObjectDefineRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ObjectDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ObjectDefineSheet");
		return ptr;
	}


	class UCommonSource_ObjectDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ObjectTypeRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_ObjectTypeRecord : public UObject
{
public:
	unsigned char                                      ObjectType;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DestroyTime;                                              // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ObjectTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ObjectTypeRecord");
		return ptr;
	}

};


// Class CommonSource.ObjectTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ObjectTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_ObjectTypeRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ObjectTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ObjectTypeSheet");
		return ptr;
	}


	class UCommonSource_ObjectTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ObjectHitEffectRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ObjectHitEffectRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ObjectType;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                BodyRange;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HitEffectScale;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ObjectHitEffectRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ObjectHitEffectRecord");
		return ptr;
	}

};


// Class CommonSource.NpcFuncTypeInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NpcFuncTypeInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_NpcFuncTypeInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NpcFuncTypeInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NpcFuncTypeInfoSheet");
		return ptr;
	}


	class UCommonSource_NpcFuncTypeInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ObjectHitEffectSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ObjectHitEffectSheet : public UObject
{
public:
	TArray<class UCommonSource_ObjectHitEffectRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ObjectHitEffectSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ObjectHitEffectSheet");
		return ptr;
	}


	class UCommonSource_ObjectHitEffectRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ColliderInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ColliderInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ColliderInfoRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ColliderInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ColliderInfoSheet");
		return ptr;
	}


	class UCommonSource_ColliderInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PacketCrypt
// 0x1E84A8 (0x1E84D0 - 0x0028)
class UCommonSource_PacketCrypt : public UObject
{
public:
	unsigned char                                      UnknownData00[0x1E84A8];                                  // 0x0028(0x1E84A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PacketCrypt");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PacketCrypt");
		return ptr;
	}

};


// Class CommonSource.PacketErrorSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PacketErrorSheet : public UObject
{
public:
	TArray<class UCommonSource_PacketErrorRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PacketErrorSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PacketErrorSheet");
		return ptr;
	}


	class UCommonSource_PacketErrorRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CharParamRecord
// 0x00B8 (0x00E0 - 0x0028)
class UCommonSource_CharParamRecord : public UObject
{
public:
	unsigned char                                      CharParam;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParamCategory;                                            // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FString                                     BuffIconName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     DebuffIconName;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PassiveIconName;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                BuffNameCode;                                             // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DebuffNameCode;                                           // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsParam;                                                  // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsTranscend;                                              // 0x006D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsNameTooltip;                                            // 0x006E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHudViewText;                                            // 0x006F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     HudViewTextColor;                                         // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FCommonSource_Double                        MinStatusValue;                                           // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        MaxStatusValue;                                           // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        MaxTranscendValue;                                        // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        Gradient;                                                 // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParentCharParam;                                          // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TranscendRelatedCharParam;                                // 0x00A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x00A2(0x0006) MISSED OFFSET
	struct FCommonSource_Double                        MinTotalStatusValue;                                      // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        MaxTotalStatusValue;                                      // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DecimalPlace;                                             // 0x00B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      WorkmanshipDecimalPlace;                                  // 0x00B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x00BA(0x0002) MISSED OFFSET
	float                                              WorkmanshipMinimumUnits;                                  // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPercentParam;                                           // 0x00C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsNegativeParam;                                          // 0x00C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x00C2(0x0002) MISSED OFFSET
	int                                                descCode;                                                 // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddDescCode;                                              // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SortOrder;                                                // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsEnchantFixedValueParam;                                 // 0x00D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x00D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsOtherParamDisplay;                                      // 0x00D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               MaxOverPossible;                                          // 0x00D3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DisplayOverValue;                                         // 0x00D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00D5(0x0003) MISSED OFFSET
	int                                                OverValueDescCode;                                        // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CharParamRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CharParamRecord");
		return ptr;
	}

};


// Class CommonSource.ObjectTable
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ObjectTable : public UObject
{
public:
	class UCommonSource_BaseObjectSheet*               m_BaseObjectSheet;                                        // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ObjectDefineSheet*             m_ObjectDefineSheet;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ObjectTypeSheet*               m_ObjectTypeSheet;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ObjectHitEffectSheet*          m_ObjectHitEffectSheet;                                   // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ColliderInfoSheet*             m_ColliderInfoSheet;                                      // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ObjectTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ObjectTable");
		return ptr;
	}

};


// Class CommonSource.PacketErrorRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_PacketErrorRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Type;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ErrorIndex;                                               // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsPopUp;                                                  // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MoveTo;                                                   // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x005A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PacketErrorRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PacketErrorRecord");
		return ptr;
	}

};


// Class CommonSource.CharParamSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CharParamSheet : public UObject
{
public:
	TArray<class UCommonSource_CharParamRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CharParamSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CharParamSheet");
		return ptr;
	}


	class UCommonSource_CharParamRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillParamRecord
// 0x0088 (0x00B0 - 0x0028)
class UCommonSource_SkillParamRecord : public UObject
{
public:
	unsigned char                                      SkillParam;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParamCategory;                                            // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FString                                     BuffIconName;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     DebuffIconName;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PassiveIconName;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                BuffNameCode;                                             // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DebuffNameCode;                                           // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsParam;                                                  // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsNameTooltip;                                            // 0x006D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHudViewText;                                            // 0x006E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x006F(0x0001) MISSED OFFSET
	struct FString                                     HudViewTextColor;                                         // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FCommonSource_Double                        MaxStatusValue;                                           // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParentCharParam;                                          // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	struct FCommonSource_Double                        MaxTotalStatusValue;                                      // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DecimalPlace;                                             // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      WorkmanshipDecimalPlace;                                  // 0x0099(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPercentParam;                                           // 0x009A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x009B(0x0001) MISSED OFFSET
	int                                                descCode;                                                 // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddDescCode;                                              // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SortOrder;                                                // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsEnchantFixedValueParam;                                 // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x00A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x00AA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillParamRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillParamRecord");
		return ptr;
	}

};


// Class CommonSource.SkillParamSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillParamSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillParamRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillParamSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillParamSheet");
		return ptr;
	}


	class UCommonSource_SkillParamRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ColliderInfoRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ColliderInfoRecord : public UObject
{
public:
	int                                                ObjectIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ColliderType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                Radius;                                                   // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Width;                                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Height;                                                   // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Depth;                                                    // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCheckInternalCollision;                                 // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ColliderInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ColliderInfoRecord");
		return ptr;
	}

};


// Class CommonSource.UnappliedCharParamRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_UnappliedCharParamRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.UnappliedCharParamRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.UnappliedCharParamRecord");
		return ptr;
	}

};


// Class CommonSource.UnappliedCharParamSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_UnappliedCharParamSheet : public UObject
{
public:
	TArray<class UCommonSource_UnappliedCharParamRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.UnappliedCharParamSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.UnappliedCharParamSheet");
		return ptr;
	}


	class UCommonSource_UnappliedCharParamRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BattlePowerParamSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BattlePowerParamSheet : public UObject
{
public:
	TArray<class UCommonSource_BattlePowerParamRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BattlePowerParamSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BattlePowerParamSheet");
		return ptr;
	}


	class UCommonSource_BattlePowerParamRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BattlePowerVariableRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_BattlePowerVariableRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillPasiveTarget;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CoefficienRate;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BattlePowerVariableRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BattlePowerVariableRecord");
		return ptr;
	}

};


// Class CommonSource.BattlePowerParamRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_BattlePowerParamRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BattlePowerCalcType;                                      // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SkillGrade;                                               // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	int                                                MinLevel;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxLevel;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Coefficient;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BattlePowerParamRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BattlePowerParamRecord");
		return ptr;
	}

};


// Class CommonSource.ParamDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ParamDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FCommonSource_Double                        BlockConvergence;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCommonSource_Double                        BlockInclination;                                         // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinBlockReductionPercent;                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxBlockReductionPercent;                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ParamDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ParamDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ParamDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ParamDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ParamDefineRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ParamDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ParamDefineSheet");
		return ptr;
	}


	class UCommonSource_ParamDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PartyDefineRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_PartyDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MemberNum;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PartyDisplayNum;                                          // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InviteDisplayNum;                                         // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	int                                                InviteLevelCond;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LogOutTimeOut;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AutoMatchingTime;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReadyTimeOut;                                             // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MoveToMasterRange;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MoveToMasterGoldRate;                                     // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InviteResponseWaitingTime;                                // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardDistance;                                           // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MasterScanRange;                                          // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HpMpCheckPercent;                                         // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonLoseWaitingTime;                                   // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MasterCombatCheck;                                        // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MoveServerAllowTime;                                      // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WorldPartyTimeOut;                                        // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WorldPartyLimitCount;                                     // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PartyDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PartyDefineRecord");
		return ptr;
	}

};


// Class CommonSource.PartyDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PartyDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_PartyDefineRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PartyDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PartyDefineSheet");
		return ptr;
	}


	class UCommonSource_PartyDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PartyRoleRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_PartyRoleRecord : public UObject
{
public:
	int                                                PlayerIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Desc;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              PartyRolePriority;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PartyRoleRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PartyRoleRecord");
		return ptr;
	}

};


// Class CommonSource.BattlePowerVariableSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BattlePowerVariableSheet : public UObject
{
public:
	TArray<class UCommonSource_BattlePowerVariableRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BattlePowerVariableSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BattlePowerVariableSheet");
		return ptr;
	}


	class UCommonSource_BattlePowerVariableRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PartyTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_PartyTable : public UObject
{
public:
	class UCommonSource_PartyDefineSheet*              m_PartyDefineSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_PartyRoleSheet*                m_PartyRoleSheet;                                         // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PartyTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PartyTable");
		return ptr;
	}

};


// Class CommonSource.PatrolFlagInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_PatrolFlagInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                spawnIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MapIndex;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WayPoint;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WayPointX;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WayPointY;                                                // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WayPointZ;                                                // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PatrolType;                                               // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	float                                              WaitTimeSec;                                              // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PatrolFlagInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PatrolFlagInfoRecord");
		return ptr;
	}

};


// Class CommonSource.PatrolFlagTable
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_PatrolFlagTable : public UObject
{
public:
	class UCommonSource_PatrolFlagInfoSheet*           m_PatrolFlagInfoSheet;                                    // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PatrolFlagTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PatrolFlagTable");
		return ptr;
	}

};


// Class CommonSource.SoulPetInfoRecord
// 0x00C8 (0x00F0 - 0x0028)
class UCommonSource_SoulPetInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BpPath;                                                   // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                sort;                                                     // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PetType;                                                  // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x006D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x006E(0x0002) MISSED OFFSET
	struct FString                                     Rank;                                                     // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ExpireTime;                                               // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHideList;                                               // 0x0084(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0085(0x0003) MISSED OFFSET
	int                                                MatchingGroup;                                            // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopRandomChoiceGrade;                                // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x008D(0x0003) MISSED OFFSET
	int                                                MainPetActiveSkill;                                       // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubPetPassiveSkill;                                       // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              MainCharParam;                                            // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      MainPlusValue;                                            // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              SubCharParam;                                             // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      SubPlusValue;                                             // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      AdditionalCharParam;                                      // 0x00D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00D9(0x0003) MISSED OFFSET
	float                                              AdditionalPlusValue;                                      // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAutoGather;                                             // 0x00E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x00E1(0x0003) MISSED OFFSET
	int                                                GuardianProb;                                             // 0x00E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SoulPetInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SoulPetInfoRecord");
		return ptr;
	}

};


// Class CommonSource.SoulPetInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SoulPetInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_SoulPetInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SoulPetInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SoulPetInfoSheet");
		return ptr;
	}


	class UCommonSource_SoulPetInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PetGradeRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_PetGradeRecord : public UObject
{
public:
	unsigned char                                      grade;                                                    // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                PetBoxGroupID;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RandomShiftGroupID;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PetCouponBoxGroupID;                                      // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ComposeNeedCount;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<int>                                        DecidePrice;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsOptionalReplacement;                                    // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                NeedSkillItemCount;                                       // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetGradeRecord");
		return ptr;
	}

};


// Class CommonSource.PartyRoleSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PartyRoleSheet : public UObject
{
public:
	TArray<class UCommonSource_PartyRoleRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PartyRoleSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PartyRoleSheet");
		return ptr;
	}


	class UCommonSource_PartyRoleRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PetGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_PetGradeRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetGradeSheet");
		return ptr;
	}


	class UCommonSource_PetGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PatrolFlagInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PatrolFlagInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_PatrolFlagInfoRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PatrolFlagInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PatrolFlagInfoSheet");
		return ptr;
	}


	class UCommonSource_PatrolFlagInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PetGuardianInfoRecord
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetGuardianInfoRecord : public UObject
{
public:
	unsigned char                                      PetType;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                slotCount;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        ConditionGroupID;                                         // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        OptionGroupID;                                            // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        OptionCount;                                              // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        OptionGradeProb;                                          // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetGuardianInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetGuardianInfoRecord");
		return ptr;
	}

};


// Class CommonSource.PetGuardianInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetGuardianInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_PetGuardianInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetGuardianInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetGuardianInfoSheet");
		return ptr;
	}


	class UCommonSource_PetGuardianInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PetGuardianConditionRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_PetGuardianConditionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ConditionGroupID;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        GradeProb;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        GradeCountLimit;                                          // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetGuardianConditionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetGuardianConditionRecord");
		return ptr;
	}

};


// Class CommonSource.PetGuardianConditionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetGuardianConditionSheet : public UObject
{
public:
	TArray<class UCommonSource_PetGuardianConditionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetGuardianConditionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetGuardianConditionSheet");
		return ptr;
	}


	class UCommonSource_PetGuardianConditionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PetGuardianOptionRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_PetGuardianOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OptionGroupID;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Prob;                                                     // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	TArray<float>                                      Value;                                                    // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetGuardianOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetGuardianOptionRecord");
		return ptr;
	}

};


// Class CommonSource.PetGuardianOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetGuardianOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_PetGuardianOptionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetGuardianOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetGuardianOptionSheet");
		return ptr;
	}


	class UCommonSource_PetGuardianOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PetDefineRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_PetDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxComposeCount;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxShiftCount;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NeedChangeGrade;                                          // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                PetChangeExpireDay;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BundleComposeMaxGrade;                                    // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                BundleComposeMaxCount;                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSubPetMainParamEnabled;                                 // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSubPetSubParamEnabled;                                  // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	int                                                SkillItemIndex;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillActiveDuration;                                      // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PetGuardianDuration;                                      // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ConditionChangeResourceType;                              // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	int                                                ConditionChangeItemIndex;                                 // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ConditionChangeItemCount;                                 // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ConditionChangeCashPrice;                                 // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ConditionChangeFreeCount;                                 // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      OptionChangeResourceType;                                 // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	int                                                OptionChangeItemIndex;                                    // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OptionChangeItemCount;                                    // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OptionChangeCashPrice;                                    // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OptionChangeFreeCount;                                    // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetDefineRecord");
		return ptr;
	}

};


// Class CommonSource.PetGuardianDifficultyInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_PetGuardianDifficultyInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PetGuardianBoardGrade;                                    // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<int>                                        GradeNeedCount;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetGuardianDifficultyInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetGuardianDifficultyInfoRecord");
		return ptr;
	}

};


// Class CommonSource.PetGuardianDifficultyInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetGuardianDifficultyInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_PetGuardianDifficultyInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetGuardianDifficultyInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetGuardianDifficultyInfoSheet");
		return ptr;
	}


	class UCommonSource_PetGuardianDifficultyInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PkBrutalStateRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_PkBrutalStateRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BrutalState;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TargetBrutalState;                                        // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DamageNextBrutalState;                                    // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	int                                                DamagelAddBrutalTime;                                     // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      KillNextBrutalState;                                      // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                KillAddBrutalTime;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KillScore;                                                // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkBrutalStateRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkBrutalStateRecord");
		return ptr;
	}

};


// Class CommonSource.PkBrutalStateSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PkBrutalStateSheet : public UObject
{
public:
	TArray<class UCommonSource_PkBrutalStateRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkBrutalStateSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkBrutalStateSheet");
		return ptr;
	}


	class UCommonSource_PkBrutalStateRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PkSlayerScoreRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_PkSlayerScoreRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                From;                                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                To;                                                       // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Coefficient;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkSlayerScoreRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkSlayerScoreRecord");
		return ptr;
	}

};


// Class CommonSource.PkSlayerScoreSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PkSlayerScoreSheet : public UObject
{
public:
	TArray<class UCommonSource_PkSlayerScoreRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkSlayerScoreSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkSlayerScoreSheet");
		return ptr;
	}


	class UCommonSource_PkSlayerScoreRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PkMonsterKillCountSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PkMonsterKillCountSheet : public UObject
{
public:
	TArray<class UCommonSource_PkMonsterKillCountRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkMonsterKillCountSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkMonsterKillCountSheet");
		return ptr;
	}


	class UCommonSource_PkMonsterKillCountRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PkAbnormalResistRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_PkAbnormalResistRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinPlayerLevelDiff;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddAbnormalResistPercent;                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkAbnormalResistRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkAbnormalResistRecord");
		return ptr;
	}

};


// Class CommonSource.PkMonsterKillCountRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_PkMonsterKillCountRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PkSlayerPenaltyIndex;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PkStateType;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                MinMonsterLevelDiff;                                      // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxMonsterLevelDiff;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KillMonsterUnit;                                          // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkMonsterKillCountRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkMonsterKillCountRecord");
		return ptr;
	}

};


// Class CommonSource.PkAbnormalResistSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PkAbnormalResistSheet : public UObject
{
public:
	TArray<class UCommonSource_PkAbnormalResistRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkAbnormalResistSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkAbnormalResistSheet");
		return ptr;
	}


	class UCommonSource_PkAbnormalResistRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PkSlayerPenaltyRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_PkSlayerPenaltyRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SlayerScore;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            BuffIndex;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            SlayerStayBuffIndex;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        SlayerStayTimeProb;                                       // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MinSlayerStayTime;                                        // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MaxSlayerStayTime;                                        // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkSlayerPenaltyRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkSlayerPenaltyRecord");
		return ptr;
	}

};


// Class CommonSource.PkSlayerPenaltySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PkSlayerPenaltySheet : public UObject
{
public:
	TArray<class UCommonSource_PkSlayerPenaltyRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkSlayerPenaltySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkSlayerPenaltySheet");
		return ptr;
	}


	class UCommonSource_PkSlayerPenaltyRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PkDefineRecord
// 0x00B0 (0x00D8 - 0x0028)
class UCommonSource_PkDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BrutalCoolTime;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinKillPlayerAttackDefenseRate;                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	int64_t                                            BrutalBuffIndex;                                          // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinusBrutalTimePerKillMonsterUnit;                        // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinusBrutalTimeLevelDiffLimit;                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CountPerPage;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChaseableTime;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChaseNeedCash;                                            // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChaseValidTime;                                           // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxChaseCount;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeadItemLossProb;                                         // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeadItemEquipLimitTime;                                   // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TauntCommentCode;                                         // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TauntableTime;                                            // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PkPlayerLevel;                                            // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxWatchCount;                                            // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxMainWatchCount;                                        // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CounterAttackPlayerTime;                                  // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BrutalNearEndTime;                                        // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AttackFieldPkValidTime;                                   // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChaseMinRandomDistance;                                   // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChaseMaxRandomDistance;                                   // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxBrutalTime;                                            // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PkModeTime;                                               // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PkDeadChatExpireTime;                                     // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SlayerStateSlayerScore;                                   // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddSlayerScore;                                           // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddSlayerScoreValidKillCount;                             // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SlayerExpireTime;                                         // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinSlayerForceWarpTime;                                   // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSlayerForceWarpTime;                                   // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowPoint;                                              // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AirVehicleBrutalStopTime;                                 // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSlayerStay;                                             // 0x00B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSlayerProbation;                                        // 0x00B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x00BA(0x0006) MISSED OFFSET
	int64_t                                            SlayerProbationBuffIndex;                                 // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinSlayerProbationTime;                                   // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSlayerProbationTime;                                   // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SlayerProbationSlayerScore;                               // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowSlayerStayTime;                                     // 0x00D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowSlayerProbationTime;                                // 0x00D5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x00D6(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkDefineRecord");
		return ptr;
	}

};


// Class CommonSource.PkDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PkDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_PkDefineRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkDefineSheet");
		return ptr;
	}


	class UCommonSource_PkDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PkAssistDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_PkAssistDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AssistTime;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AssistDamage;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AssistAddTime;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AssistScore;                                              // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AssistBrutalCoolTime;                                     // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AssistShadowPoint;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkAssistDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkAssistDefineRecord");
		return ptr;
	}

};


// Class CommonSource.PkAssistDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PkAssistDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_PkAssistDefineRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PkAssistDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PkAssistDefineSheet");
		return ptr;
	}


	class UCommonSource_PkAssistDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PetDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PetDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_PetDefineRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PetDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PetDefineSheet");
		return ptr;
	}


	class UCommonSource_PetDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_PlayerRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubNameCode;                                              // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                ParentPlayerIndex;                                        // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedChangeClassPlayerLevel;                               // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxHpD;                                                   // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     DefaultWPModelName;                                       // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      AttackType;                                               // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAddHeal;                                                // 0x0069(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x006A(0x0006) MISSED OFFSET
	TArray<unsigned char>                              CastlewaritemClassConditionClassType;                     // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerSheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerRecord*>          arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerSheet");
		return ptr;
	}


	class UCommonSource_PlayerRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerLevelRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_PlayerLevelRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            NextExp;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RestoreExpGold;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<int>                                        RestoreExpCashStack;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerLevelRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerLevelRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerLevelSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerLevelSheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerLevelRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerLevelSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerLevelSheet");
		return ptr;
	}


	class UCommonSource_PlayerLevelRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PKRandomTauntMessageRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_PKRandomTauntMessageRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TauntCommentCode;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PKRandomTauntMessageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PKRandomTauntMessageRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerStartStatusSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerStartStatusSheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerStartStatusRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerStartStatusSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerStartStatusSheet");
		return ptr;
	}


	class UCommonSource_PlayerStartStatusRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerTendencySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerTendencySheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerTendencyRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerTendencySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerTendencySheet");
		return ptr;
	}


	class UCommonSource_PlayerTendencyRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerStartStatusRecord
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_PlayerStartStatusRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Status1;                                                  // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Status2;                                                  // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Status3;                                                  // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Status4;                                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Difficulty;                                               // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	int                                                JobIntroduceNameCode;                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                JobSimlpeIntroduceCode;                                   // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FString                                     JobIntroduceCinematicName;                                // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Job1PartyPlayNameCode;                                    // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Job1SinglePlayNameCode;                                   // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Job2PartyPlayNameCode;                                    // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Job2SinglePlayNameCode;                                   // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     NormalAttactIconName;                                     // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SkillIndex1;                                              // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex2;                                              // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex3;                                              // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	TArray<int>                                        SkillDescCode;                                            // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FString>                             SkillMovie;                                               // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerStartStatusRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerStartStatusRecord");
		return ptr;
	}

};


// Class CommonSource.AIPlayerNameSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AIPlayerNameSheet : public UObject
{
public:
	TArray<class UCommonSource_AIPlayerNameRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIPlayerNameSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIPlayerNameSheet");
		return ptr;
	}


	class UCommonSource_AIPlayerNameRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerDefineRecord
// 0x00B8 (0x00E0 - 0x0028)
class UCommonSource_PlayerDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BasePlayerSlotcount;                                      // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxPlayerCount;                                           // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinNameSize;                                              // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxNameSize;                                              // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SwimWalkSpeed;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SwimRunSpeed;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ClimbWalkSpeed;                                           // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ClimbRunSpeed;                                            // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VehicleFlySpeed;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ObserverSpeed;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResurrectionHpPercent;                                    // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NPCTalkRange;                                             // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WarpAniTime;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeathPenaltyPercent;                                      // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FreePenaltyRestoreCount;                                  // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxPenaltySlotCount;                                      // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ApplyRankingPlayerLevel;                                  // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerDeleteDelayDay;                                     // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinDeleteLevel;                                           // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxDeleteLevel;                                           // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeleteIgnoreLevel;                                        // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeleteIgnoreDay;                                          // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeleteIgnoreDeleteDelayDay;                               // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReturnInterval;                                           // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HpAddPerTick;                                             // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MpAddPerTick;                                             // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PotionRetainedQuantity;                                   // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FallingDamage;                                            // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FallingSafeHeight;                                        // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AbuseReportDelay;                                         // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OfflinePushTitle;                                         // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OfflinePushText;                                          // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CashResurrectionWaitingTime;                              // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CashResurrectionLimitTime;                                // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CashRessurectionLimitNoticeTime;                          // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SecondPasswardFailCount;                                  // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SecondPasswardRetryTime;                                  // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FadeOutTimeAfterDeath;                                    // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObserverRevivalFadeInTime;                                // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RevivalFadeOutTime;                                       // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CameraView;                                               // 0x00C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	int                                                TargetingCheckCount;                                      // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AreaWaterTypeJumpModify;                                  // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AreaWaterTypeFallingModify;                               // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AreaWaterTypeFallingDamageModify;                         // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AreaWaterTypeClimbingModify;                              // 0x00D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsClassExclusionOpen;                                     // 0x00D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00D9(0x0003) MISSED OFFSET
	int                                                AutoHuntQuestMonsterSearchTime;                           // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerDefineRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerDefineRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerDefineSheet");
		return ptr;
	}


	class UCommonSource_PlayerDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AIStatusRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_AIStatusRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MaxHpPercent;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxMpPercent;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HpRegenAdd;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MpRegenAdd;                                               // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DamagePercent;                                            // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAccuracyAdd;                                           // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAvoidanceAdd;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIStatusRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIStatusRecord");
		return ptr;
	}

};


// Class CommonSource.AIStatusSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AIStatusSheet : public UObject
{
public:
	TArray<class UCommonSource_AIStatusRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIStatusSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIStatusSheet");
		return ptr;
	}


	class UCommonSource_AIStatusRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AIPlayerAvatarRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_AIPlayerAvatarRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AvatarID;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WeaponShapeID;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Prob;                                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIPlayerAvatarRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIPlayerAvatarRecord");
		return ptr;
	}

};


// Class CommonSource.AIPlayerAvatarSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AIPlayerAvatarSheet : public UObject
{
public:
	TArray<class UCommonSource_AIPlayerAvatarRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIPlayerAvatarSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIPlayerAvatarSheet");
		return ptr;
	}


	class UCommonSource_AIPlayerAvatarRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AIPlayerItemRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_AIPlayerItemRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                ItemIndex;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Prob;                                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIPlayerItemRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIPlayerItemRecord");
		return ptr;
	}

};


// Class CommonSource.AIPlayerNameRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_AIPlayerNameRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIPlayerNameRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIPlayerNameRecord");
		return ptr;
	}

};


// Class CommonSource.ResurrectionCostRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_ResurrectionCostRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResurrectionCash;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResurrectionCostRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResurrectionCostRecord");
		return ptr;
	}

};


// Class CommonSource.ResurrectionCostSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ResurrectionCostSheet : public UObject
{
public:
	TArray<class UCommonSource_ResurrectionCostRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResurrectionCostSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResurrectionCostSheet");
		return ptr;
	}


	class UCommonSource_ResurrectionCostRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerDeletePenaltyRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_PlayerDeletePenaltyRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerDeleteDelayHour;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DeletePenaltyDelayCount;                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              DeletePenaltyMultiple;                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerDeleteDelayMaxHour;                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeletePenaltyResetHour;                                   // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerDeletePenaltyRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerDeletePenaltyRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerDeletePenaltySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerDeletePenaltySheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerDeletePenaltyRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerDeletePenaltySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerDeletePenaltySheet");
		return ptr;
	}


	class UCommonSource_PlayerDeletePenaltyRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ResurrectionWaitTimeRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_ResurrectionWaitTimeRecord : public UObject
{
public:
	unsigned char                                      MapType;                                                  // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                BaseTime;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddTime;                                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxTime;                                                  // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AutoResurrection;                                         // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowCashResurrection;                                   // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x003A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResurrectionWaitTimeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResurrectionWaitTimeRecord");
		return ptr;
	}

};


// Class CommonSource.AIPlayerItemSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AIPlayerItemSheet : public UObject
{
public:
	TArray<class UCommonSource_AIPlayerItemRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AIPlayerItemSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AIPlayerItemSheet");
		return ptr;
	}


	class UCommonSource_AIPlayerItemRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerClassOnOffRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_PlayerClassOnOffRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerClassOnOffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerClassOnOffRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerClassOnOffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerClassOnOffSheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerClassOnOffRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerClassOnOffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerClassOnOffSheet");
		return ptr;
	}


	class UCommonSource_PlayerClassOnOffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerSkillQuickSlotPosRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_PlayerSkillQuickSlotPosRecord : public UObject
{
public:
	unsigned char                                      ClassType;                                                // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<unsigned char>                              QuickSlotType;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerSkillQuickSlotPosRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerSkillQuickSlotPosRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerTendencyRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_PlayerTendencyRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     TintColor;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerTendencyRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerTendencyRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerSkillQuickSlotPosSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerSkillQuickSlotPosSheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerSkillQuickSlotPosRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerSkillQuickSlotPosSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerSkillQuickSlotPosSheet");
		return ptr;
	}


	class UCommonSource_PlayerSkillQuickSlotPosRecord* GetRecord(int64_t ID);
};


// Class CommonSource.IntegratedPresetControlRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_IntegratedPresetControlRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ContentsType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.IntegratedPresetControlRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.IntegratedPresetControlRecord");
		return ptr;
	}

};


// Class CommonSource.IntegratedPresetControlSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_IntegratedPresetControlSheet : public UObject
{
public:
	TArray<class UCommonSource_IntegratedPresetControlRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.IntegratedPresetControlSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.IntegratedPresetControlSheet");
		return ptr;
	}


	class UCommonSource_IntegratedPresetControlRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestInfoRecord
// 0x00B8 (0x00E0 - 0x0028)
class UCommonSource_QuestInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DetailDesc;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      questtype;                                                // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	int                                                MapIndex;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaIndex;                                                // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PrevQuestIndex;                                           // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChoiceLink;                                               // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RepeatCount;                                              // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAutoStart;                                              // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	int                                                QuestActionIndex;                                         // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartNpcIndex;                                            // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartTalk;                                                // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartChoiceTalk;                                          // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InformNpcIndex;                                           // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InformTalk;                                               // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EndNpcIndex;                                              // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EndTalk;                                                  // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBpSoundUse;                                             // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	int                                                MissionMapIndex;                                          // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      QuestMissionType;                                         // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	int                                                SubDescCode;                                              // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionX;                                                 // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionY;                                                 // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionZ;                                                 // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionN;                                                 // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsManual;                                                 // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsNpcAccept;                                              // 0x00A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAutoAccept;                                             // 0x00AA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSkipStart;                                              // 0x00AB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSkipReward;                                             // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	int64_t                                            RewardExp;                                                // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardGold;                                               // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSelect;                                                 // 0x00BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	int                                                RewardRandomPackageGroupID;                               // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                GroupIndex;                                               // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestInfoRecord");
		return ptr;
	}

};


// Class CommonSource.QuestInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestInfoRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestInfoSheet");
		return ptr;
	}


	class UCommonSource_QuestInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RepeatQuestRecord
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_RepeatQuestRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                sort;                                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DetailDesc;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MinPlayerLevel;                                           // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxPlayerLevel;                                           // 0x004D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      questtype;                                                // 0x004E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RepeatQuestProvideType;                                   // 0x004F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      QuestGrade;                                               // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                MissionMapIndex;                                          // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      QuestMissionType;                                         // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                MissionX;                                                 // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionY;                                                 // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionZ;                                                 // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionN;                                                 // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ChapterNumber;                                            // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	int                                                RegionType;                                               // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	int64_t                                            RewardExp;                                                // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardGold;                                               // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardBadge;                                              // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardBundleID;                                           // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PrevQuestIndex;                                           // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     IconName;                                                 // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestRecord");
		return ptr;
	}

};


// Class CommonSource.RepeatQuestSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RepeatQuestSheet : public UObject
{
public:
	TArray<class UCommonSource_RepeatQuestRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestSheet");
		return ptr;
	}


	class UCommonSource_RepeatQuestRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RepeatQuestRewardBundleSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RepeatQuestRewardBundleSheet : public UObject
{
public:
	TArray<class UCommonSource_RepeatQuestRewardBundleRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestRewardBundleSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestRewardBundleSheet");
		return ptr;
	}


	class UCommonSource_RepeatQuestRewardBundleRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestVoiceRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_QuestVoiceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     StartVoiceBP;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     InformVoiceBP;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     EndVoiceBP;                                               // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestVoiceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestVoiceRecord");
		return ptr;
	}

};


// Class CommonSource.QuestVoiceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestVoiceSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestVoiceRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestVoiceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestVoiceSheet");
		return ptr;
	}


	class UCommonSource_QuestVoiceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RepeatQuestRewardBundleRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_RepeatQuestRewardBundleRecord : public UObject
{
public:
	int                                                BundleID;                                                 // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RewardRandomPackageGroupID;                               // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DropRate;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestRewardBundleRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestRewardBundleRecord");
		return ptr;
	}

};


// Class CommonSource.QuestMissionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestMissionSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestMissionRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestMissionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestMissionSheet");
		return ptr;
	}


	class UCommonSource_QuestMissionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestItemInfoRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_QuestItemInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestItemInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestItemInfoRecord");
		return ptr;
	}

};


// Class CommonSource.QuestItemInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestItemInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestItemInfoRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestItemInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestItemInfoSheet");
		return ptr;
	}


	class UCommonSource_QuestItemInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestChoiceRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_QuestChoiceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                QuestionGroup;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                QuestionString;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<int>                                        ChoiceTalk;                                               // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ChoiceLink;                                               // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestChoiceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestChoiceRecord");
		return ptr;
	}

};


// Class CommonSource.QuestChoiceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestChoiceSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestChoiceRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestChoiceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestChoiceSheet");
		return ptr;
	}


	class UCommonSource_QuestChoiceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestMissionRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_QuestMissionRecord : public UObject
{
public:
	unsigned char                                      QuestMissionType;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                descCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      XCompareType;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      YCompareType;                                             // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ZCompareType;                                             // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAutoPath;                                               // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAutoDoing;                                              // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsMonsterGroup;                                           // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	int                                                HintCode;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestMissionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestMissionRecord");
		return ptr;
	}

};


// Class CommonSource.PKRandomTauntMessageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PKRandomTauntMessageSheet : public UObject
{
public:
	TArray<class UCommonSource_PKRandomTauntMessageRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PKRandomTauntMessageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PKRandomTauntMessageSheet");
		return ptr;
	}


	class UCommonSource_PKRandomTauntMessageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestActionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestActionSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestActionRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestActionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestActionSheet");
		return ptr;
	}


	class UCommonSource_QuestActionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_QuestDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxDoingMainCount;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                MaxDoingSubCount;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxDoingRepeatCount;                                      // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RepeatListRefresh;                                        // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InvasionQuestListRefresh;                                 // 0x0036(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0037(0x0001) MISSED OFFSET
	int                                                QuestClearAvailableChapter;                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxAddRepeatCount;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LightPillarRadio;                                         // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RepeatButtonChangeCount;                                  // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ResurrectionWaitTimeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ResurrectionWaitTimeSheet : public UObject
{
public:
	TArray<class UCommonSource_ResurrectionWaitTimeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResurrectionWaitTimeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResurrectionWaitTimeSheet");
		return ptr;
	}


	class UCommonSource_ResurrectionWaitTimeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestDefineRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestDefineSheet");
		return ptr;
	}


	class UCommonSource_QuestDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestActionRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_QuestActionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      QuestActionType;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<struct FString>                             Value;                                                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestActionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestActionRecord");
		return ptr;
	}

};


// Class CommonSource.QuestTouchMaskRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_QuestTouchMaskRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                QuestIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TouchMaskSearchType;                                      // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                TouchMaskSearchID;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FString                                     TouchMaskName;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestTouchMaskRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestTouchMaskRecord");
		return ptr;
	}

};


// Class CommonSource.QuestTouchMaskSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestTouchMaskSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestTouchMaskRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestTouchMaskSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestTouchMaskSheet");
		return ptr;
	}


	class UCommonSource_QuestTouchMaskRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RepeatQuestGradeRateRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_RepeatQuestGradeRateRecord : public UObject
{
public:
	unsigned char                                      QuestGrade;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                RefreshRate;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestGradeRateRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestGradeRateRecord");
		return ptr;
	}

};


// Class CommonSource.QuestSequenceRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_QuestSequenceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Sequence0;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ViewPoint0;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     Sequence1;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ViewPoint1;                                               // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FString                                     SinematigText;                                            // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestSequenceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestSequenceRecord");
		return ptr;
	}

};


// Class CommonSource.RepeatQuestGradeRateSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RepeatQuestGradeRateSheet : public UObject
{
public:
	TArray<class UCommonSource_RepeatQuestGradeRateRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestGradeRateSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestGradeRateSheet");
		return ptr;
	}


	class UCommonSource_RepeatQuestGradeRateRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RepeatQuestMaxNumberSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RepeatQuestMaxNumberSheet : public UObject
{
public:
	TArray<class UCommonSource_RepeatQuestMaxNumberRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestMaxNumberSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestMaxNumberSheet");
		return ptr;
	}


	class UCommonSource_RepeatQuestMaxNumberRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RepeatQuestRefreshPriceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RepeatQuestRefreshPriceSheet : public UObject
{
public:
	TArray<class UCommonSource_RepeatQuestRefreshPriceRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestRefreshPriceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestRefreshPriceSheet");
		return ptr;
	}


	class UCommonSource_RepeatQuestRefreshPriceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RepeatQuestRefreshPriceRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_RepeatQuestRefreshPriceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ChapterNumber;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RepeatQuestProvideType;                                   // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RefreshCount;                                             // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RefreshPrice;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestRefreshPriceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestRefreshPriceRecord");
		return ptr;
	}

};


// Class CommonSource.QuestGroupRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_QuestGroupRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupNameCode;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupNumberCode;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      questtype;                                                // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	struct FString                                     QuestGroupName;                                           // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                GroupNumber;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestGroupRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestGroupRecord");
		return ptr;
	}

};


// Class CommonSource.QuestGroupSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestGroupSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestGroupRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestGroupSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestGroupSheet");
		return ptr;
	}


	class UCommonSource_QuestGroupRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestBGRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_QuestBGRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChapterNumber;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ChapterBG;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ChapterBackBG;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     RepeatQuestBG;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestBGRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestBGRecord");
		return ptr;
	}

};


// Class CommonSource.QuestBGSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestBGSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestBGRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestBGSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestBGSheet");
		return ptr;
	}


	class UCommonSource_QuestBGRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RepeatQuestMaxNumberRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_RepeatQuestMaxNumberRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FinishQuest;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxNumber;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestMaxNumberRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestMaxNumberRecord");
		return ptr;
	}

};


// Class CommonSource.EventQuestInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_EventQuestInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     EventImage;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EventQuestInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EventQuestInfoRecord");
		return ptr;
	}

};


// Class CommonSource.InvasionQuestRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_InvasionQuestRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DetailDesc;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Prob;                                                     // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartLevel;                                               // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      QuestMissionType;                                         // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      questtype;                                                // 0x0052(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0053(0x0001) MISSED OFFSET
	int                                                MissionX;                                                 // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionY;                                                 // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionZ;                                                 // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionN;                                                 // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MissionString;                                            // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ChapterNumber;                                            // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	int64_t                                            RewardExp;                                                // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardGold;                                               // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardInvasionCurrency;                                   // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionQuestRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionQuestRecord");
		return ptr;
	}

};


// Class CommonSource.InvasionQuestRefreshPriceRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_InvasionQuestRefreshPriceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RefreshCount;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                RefreshPrice;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionQuestRefreshPriceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionQuestRefreshPriceRecord");
		return ptr;
	}

};


// Class CommonSource.InvasionQuestRefreshPriceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InvasionQuestRefreshPriceSheet : public UObject
{
public:
	TArray<class UCommonSource_InvasionQuestRefreshPriceRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionQuestRefreshPriceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionQuestRefreshPriceSheet");
		return ptr;
	}


	class UCommonSource_InvasionQuestRefreshPriceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxDropRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RandomBoxDropRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                ResourceIndex;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinCount;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCount;                                                 // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxDropRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxDropRecord");
		return ptr;
	}

};


// Class CommonSource.InvasionQuestSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InvasionQuestSheet : public UObject
{
public:
	TArray<class UCommonSource_InvasionQuestRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionQuestSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionQuestSheet");
		return ptr;
	}


	class UCommonSource_InvasionQuestRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxRepeatQuestRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RandomBoxRepeatQuestRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                ResourceIndex;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResourceCount;                                            // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxRepeatQuestRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxRepeatQuestRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxRepeatQuestSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxRepeatQuestSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxRepeatQuestRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxRepeatQuestSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxRepeatQuestSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxRepeatQuestRecord* GetRecord(int64_t ID);
};


// Class CommonSource.EventQuestInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_EventQuestInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_EventQuestInfoRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EventQuestInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EventQuestInfoSheet");
		return ptr;
	}


	class UCommonSource_EventQuestInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxQuestSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxQuestSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxQuestRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxQuestSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxQuestSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxQuestRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxAvatarRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomBoxAvatarRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                avatarIndex;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxAvatarRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxAvatarRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxAvatarSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxAvatarSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxAvatarRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxAvatarSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxAvatarSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxAvatarRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxDropSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxDropSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxDropRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxDropSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxDropSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxDropRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxWeaponShapeRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomBoxWeaponShapeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                WeaponShapeIndex;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxWeaponShapeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxWeaponShapeRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxWeaponShapeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxWeaponShapeSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxWeaponShapeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxWeaponShapeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxWeaponShapeSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxWeaponShapeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxCostumeRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomBoxCostumeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                CostumeIndex;                                             // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxCostumeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxCostumeRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxVehicleRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomBoxVehicleRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                vehicleIndex;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxVehicleRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxVehicleRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxVehicleSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxVehicleSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxVehicleRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxVehicleSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxVehicleSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxVehicleRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxItemRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RandomBoxItemRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                ItemIndex;                                                // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinCount;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCount;                                                 // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxItemRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxItemRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxItemSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxItemSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxItemRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxItemSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxItemSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxItemRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxRuneRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomBoxRuneRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                runeIndex;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      runeSetOption;                                            // 0x004D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x004E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxRuneRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxRuneRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxCostumeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxCostumeSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxCostumeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxCostumeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxCostumeSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxCostumeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxRuneSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxRuneSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxRuneRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxRuneSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxRuneSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxRuneRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxGoodsRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RandomBoxGoodsRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ClassType;                                                // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                ResourceIndex;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResourceCount;                                            // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	int64_t                                            Prob;                                                     // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxGoodsRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxGoodsRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxGoodsSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxGoodsSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxGoodsRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxGoodsSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxGoodsSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxGoodsRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxBlessingStoneRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomBoxBlessingStoneRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessingStoneIndex;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxBlessingStoneRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxBlessingStoneRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxBlessingStoneSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxBlessingStoneSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxBlessingStoneRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxBlessingStoneSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxBlessingStoneSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxBlessingStoneRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SelectBoxItemRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_SelectBoxItemRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ResourceType;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                ResourceIndex;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResourceCount;                                            // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnchantStep;                                              // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SelectBoxItemRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SelectBoxItemRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxRelicGambleRewardItemRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RandomBoxRelicGambleRewardItemRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                ResourceIndex;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinCount;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCount;                                                 // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxRelicGambleRewardItemRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxRelicGambleRewardItemRecord");
		return ptr;
	}

};


// Class CommonSource.SelectBoxItemSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SelectBoxItemSheet : public UObject
{
public:
	TArray<class UCommonSource_SelectBoxItemRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SelectBoxItemSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SelectBoxItemSheet");
		return ptr;
	}


	class UCommonSource_SelectBoxItemRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxRelicGambleRewardItemSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxRelicGambleRewardItemSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxRelicGambleRewardItemRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxRelicGambleRewardItemSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxRelicGambleRewardItemSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxRelicGambleRewardItemRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxInfinityDungeonSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxInfinityDungeonSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxInfinityDungeonRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxInfinityDungeonSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxInfinityDungeonSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxInfinityDungeonRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxQuestRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomBoxQuestRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ClassType;                                                // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                ResourceIndex;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResourceCount;                                            // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsReward;                                                 // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxQuestRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxQuestRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxInfinityDungeonRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RandomBoxInfinityDungeonRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x004A(0x0002) MISSED OFFSET
	int                                                ResourceIndex;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinCount;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCount;                                                 // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxInfinityDungeonRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxInfinityDungeonRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxGuildBattlefieldSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxGuildBattlefieldSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxGuildBattlefieldRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxGuildBattlefieldSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxGuildBattlefieldSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxGuildBattlefieldRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxPetRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_RandomBoxPetRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Prob;                                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                petIndex;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxPetRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxPetRecord");
		return ptr;
	}

};


// Class CommonSource.ExceptCheckGroupIDRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_ExceptCheckGroupIDRecord : public UObject
{
public:
	int                                                GroupID;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExceptCheckGroupIDRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExceptCheckGroupIDRecord");
		return ptr;
	}

};


// Class CommonSource.ExceptCheckGroupIDSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ExceptCheckGroupIDSheet : public UObject
{
public:
	TArray<class UCommonSource_ExceptCheckGroupIDRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ExceptCheckGroupIDSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ExceptCheckGroupIDSheet");
		return ptr;
	}


	class UCommonSource_ExceptCheckGroupIDRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomChoiceGradeRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomChoiceGradeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopRandomChoiceGrade;                                // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	int                                                ChoiceCount;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoiceGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoiceGradeRecord");
		return ptr;
	}

};


// Class CommonSource.RandomBoxPetSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomBoxPetSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomBoxPetRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxPetSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxPetSheet");
		return ptr;
	}


	class UCommonSource_RandomBoxPetRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomChoiceGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomChoiceGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomChoiceGradeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoiceGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoiceGradeSheet");
		return ptr;
	}


	class UCommonSource_RandomChoiceGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomChoiceAvatarRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomChoiceAvatarRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopRandomChoiceGrade;                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                RandomBoxGroupID;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoiceAvatarRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoiceAvatarRecord");
		return ptr;
	}

};


// Class CommonSource.RandomChoiceAvatarSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomChoiceAvatarSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomChoiceAvatarRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoiceAvatarSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoiceAvatarSheet");
		return ptr;
	}


	class UCommonSource_RandomChoiceAvatarRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomChoiceVehicleRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomChoiceVehicleRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopRandomChoiceGrade;                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                RandomBoxGroupID;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoiceVehicleRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoiceVehicleRecord");
		return ptr;
	}

};


// Class CommonSource.RandomChoiceVehicleSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomChoiceVehicleSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomChoiceVehicleRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoiceVehicleSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoiceVehicleSheet");
		return ptr;
	}


	class UCommonSource_RandomChoiceVehicleRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomChoiceWeaponShapeRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomChoiceWeaponShapeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopRandomChoiceGrade;                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                RandomBoxGroupID;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoiceWeaponShapeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoiceWeaponShapeRecord");
		return ptr;
	}

};


// Class CommonSource.RandomChoicePetRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RandomChoicePetRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopRandomChoiceGrade;                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                RandomBoxGroupID;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoicePetRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoicePetRecord");
		return ptr;
	}

};


// Class CommonSource.RandomChoicePetSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomChoicePetSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomChoicePetRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoicePetSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoicePetSheet");
		return ptr;
	}


	class UCommonSource_RandomChoicePetRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomChoiceWeaponShapeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomChoiceWeaponShapeSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomChoiceWeaponShapeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomChoiceWeaponShapeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomChoiceWeaponShapeSheet");
		return ptr;
	}


	class UCommonSource_RandomChoiceWeaponShapeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomOptionRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_RandomOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                GroupID;                                                  // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                Prob;                                                     // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<int>                                        GroupProb;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      StatValue;                                                // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomOptionRecord");
		return ptr;
	}

};


// Class CommonSource.RandomOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RandomOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_RandomOptionRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomOptionSheet");
		return ptr;
	}


	class UCommonSource_RandomOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DropPackageRecord
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DropPackageRecord : public UObject
{
public:
	int                                                GroupID;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      PackageBindType;                                          // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<int>                                        RandomBoxDropGroupID;                                     // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DropProb;                                                 // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        EventRandomBoxDropGroupID;                                // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        EventDropProb;                                            // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropPackageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropPackageRecord");
		return ptr;
	}

};


// Class CommonSource.QuestSequenceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestSequenceSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestSequenceRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestSequenceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestSequenceSheet");
		return ptr;
	}


	class UCommonSource_QuestSequenceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.DropPackageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_DropPackageSheet : public UObject
{
public:
	TArray<class UCommonSource_DropPackageRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.DropPackageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.DropPackageSheet");
		return ptr;
	}


	class UCommonSource_DropPackageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RepeatQuestPackageRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_RepeatQuestPackageRecord : public UObject
{
public:
	int                                                GroupID;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RandomBoxRepeatQuestGroupID;                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DropProb;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestPackageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestPackageRecord");
		return ptr;
	}

};


// Class CommonSource.RepeatQuestPackageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RepeatQuestPackageSheet : public UObject
{
public:
	TArray<class UCommonSource_RepeatQuestPackageRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RepeatQuestPackageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RepeatQuestPackageSheet");
		return ptr;
	}


	class UCommonSource_RepeatQuestPackageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.QuestPackageRecord
// 0x0048 (0x0070 - 0x0028)
class UCommonSource_QuestPackageRecord : public UObject
{
public:
	int                                                GroupID;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              ResourceType;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ResourceIndex;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ResourceCount;                                            // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestPackageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestPackageRecord");
		return ptr;
	}

};


// Class CommonSource.QuestPackageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestPackageSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestPackageRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestPackageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestPackageSheet");
		return ptr;
	}


	class UCommonSource_QuestPackageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ItemPackageRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ItemPackageRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ResourceType;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                ResourceIndex;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResourceCount;                                            // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantStep;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemPackageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemPackageRecord");
		return ptr;
	}

};


// Class CommonSource.ItemPackageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ItemPackageSheet : public UObject
{
public:
	TArray<class UCommonSource_ItemPackageRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ItemPackageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ItemPackageSheet");
		return ptr;
	}


	class UCommonSource_ItemPackageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RandomBoxGuildBattlefieldRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RandomBoxGuildBattlefieldRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int64_t                                            Prob;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x004A(0x0002) MISSED OFFSET
	int                                                ResourceIndex;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinCount;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCount;                                                 // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RandomBoxGuildBattlefieldRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RandomBoxGuildBattlefieldRecord");
		return ptr;
	}

};


// Class CommonSource.MapPackageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MapPackageSheet : public UObject
{
public:
	TArray<class UCommonSource_MapPackageRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapPackageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapPackageSheet");
		return ptr;
	}


	class UCommonSource_MapPackageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RelicGamblePackageRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RelicGamblePackageRecord : public UObject
{
public:
	int                                                GroupID;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RelicGambleSlotGroupID;                                   // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGamblePackageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGamblePackageRecord");
		return ptr;
	}

};


// Class CommonSource.RelicGamblePackageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RelicGamblePackageSheet : public UObject
{
public:
	TArray<class UCommonSource_RelicGamblePackageRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGamblePackageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGamblePackageSheet");
		return ptr;
	}


	class UCommonSource_RelicGamblePackageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.TreasurePackageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_TreasurePackageSheet : public UObject
{
public:
	TArray<class UCommonSource_TreasurePackageRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TreasurePackageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TreasurePackageSheet");
		return ptr;
	}


	class UCommonSource_TreasurePackageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.TreasurePackageRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_TreasurePackageRecord : public UObject
{
public:
	int                                                GroupID;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RandomBoxDropGroupID;                                     // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DropProb;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TreasurePackageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TreasurePackageRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonPackageRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_InfinityDungeonPackageRecord : public UObject
{
public:
	int                                                GroupID;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                RewardGold;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TArray<int>                                        RandomBoxGroupID;                                         // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DropProb;                                                 // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonPackageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonPackageRecord");
		return ptr;
	}

};


// Class CommonSource.InfinityDungeonPackageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InfinityDungeonPackageSheet : public UObject
{
public:
	TArray<class UCommonSource_InfinityDungeonPackageRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InfinityDungeonPackageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InfinityDungeonPackageSheet");
		return ptr;
	}


	class UCommonSource_InfinityDungeonPackageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MapPackageRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_MapPackageRecord : public UObject
{
public:
	int                                                GroupID;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                GuildGold;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildContribution;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildCoin;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRewardItemIndex;                                     // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildRewardItemStack;                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardExp;                                                // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardGold;                                               // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PackageBindType;                                          // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	TArray<int>                                        ItemBoxGroupID;                                           // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DropProb;                                                 // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MapPackageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MapPackageRecord");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldPackageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_GuildBattlefieldPackageSheet : public UObject
{
public:
	TArray<class UCommonSource_GuildBattlefieldPackageRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldPackageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldPackageSheet");
		return ptr;
	}


	class UCommonSource_GuildBattlefieldPackageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RankingBuffRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_RankingBuffRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RankingDivision;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RankingType;                                              // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                Ranking;                                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	int64_t                                            BuffIndex;                                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     RankingIcon;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     RankingEffect;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RankingBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RankingBuffRecord");
		return ptr;
	}

};


// Class CommonSource.RankingBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RankingBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_RankingBuffRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RankingBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RankingBuffSheet");
		return ptr;
	}


	class UCommonSource_RankingBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RankingDefineRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_RankingDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RankingCountPerPage;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxDisplayRanking;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LimitPlayerLevel;                                         // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HighBattlePowerCount;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeleteLongTermDisconnectDay;                              // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RankingDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RankingDefineRecord");
		return ptr;
	}

};


// Class CommonSource.RealmwarRankRewardRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RealmwarRankRewardRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Difficulty;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Ranking;                                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardPoint;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WinRewardItem;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WinRewardItemCount;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LoseRewardItem;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LoseRewardItemCount;                                      // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DrawRewardItem;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DrawRewardItemCount;                                      // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarRankRewardRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarRankRewardRecord");
		return ptr;
	}

};


// Class CommonSource.RankingDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RankingDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_RankingDefineRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RankingDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RankingDefineSheet");
		return ptr;
	}


	class UCommonSource_RankingDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RealmwarRankRewardSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RealmwarRankRewardSheet : public UObject
{
public:
	TArray<class UCommonSource_RealmwarRankRewardRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarRankRewardSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarRankRewardSheet");
		return ptr;
	}


	class UCommonSource_RealmwarRankRewardRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RealmwarSeasonRankSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RealmwarSeasonRankSheet : public UObject
{
public:
	TArray<class UCommonSource_RealmwarSeasonRankRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarSeasonRankSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarSeasonRankSheet");
		return ptr;
	}


	class UCommonSource_RealmwarSeasonRankRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RealmwarDefineRecord
// 0x00B8 (0x00E0 - 0x0028)
class UCommonSource_RealmwarDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RealmwarAttendTime;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RealmwarMaxCreateCount;                                   // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               RealmwarWorldMatching;                                    // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PlayerWaitTime;                                           // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReadyTime;                                                // 0x0036(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0037(0x0001) MISSED OFFSET
	int                                                RealmwarBattleTime;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ExtraBattle;                                              // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                DisconnectTime;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResurrectionTime;                                         // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResurrectionAddTime;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BasecampStayTime;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AesirKickoutPortal;                                       // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VanirKickoutPortal;                                       // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResultPageRemainTime;                                     // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RealmwarFinishKill;                                       // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RealmwarExtendKill;                                       // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RealmwarPlayerNumber;                                     // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinRealmwarPlayerNumber;                                  // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      VehicleAllowLevel;                                        // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TopRankerNum;                                             // 0x006D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x006E(0x0002) MISSED OFFSET
	int                                                RankingPage;                                              // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FinalKillPoint;                                           // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WinRewardCoin;                                            // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WinRewardPointRate;                                       // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LoseRewardCoin;                                           // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DrawRewardCoin;                                           // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LowLevel;                                                 // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MidLevel;                                                 // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HighLevel;                                                // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BotLevelGap;                                              // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AIPlayerPerceptRange;                                     // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AIAddLevel;                                               // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AIEnterPercent;                                           // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AutoBattleRange;                                          // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               MakeBaseCamp;                                             // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	int                                                EnterBuffIndex;                                           // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObserverStartViewMode;                                    // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               FlagRuleAdd;                                              // 0x00B4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RealmwarFinishFlagInteractionCount;                       // 0x00B5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x00B6(0x0002) MISSED OFFSET
	int                                                FlagRespawnTimer;                                         // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InteractDoneBuffIndex;                                    // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FinalFlagDoneCountPoint;                                  // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HaveFlagTimeLimit;                                        // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FlagPossessWarningPercent;                                // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FlagInteractMessageCycle;                                 // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnemyFlagInteractMessageCycle;                            // 0x00D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BattleEnterLimint;                                        // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarDefineRecord");
		return ptr;
	}

};


// Class CommonSource.RealmwarDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RealmwarDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_RealmwarDefineRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarDefineSheet");
		return ptr;
	}


	class UCommonSource_RealmwarDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RealmwarKillCountMsgRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_RealmwarKillCountMsgRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RealmwarKillCount;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Message;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MessageCode;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarKillCountMsgRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarKillCountMsgRecord");
		return ptr;
	}

};


// Class CommonSource.RealmwarKillCountMsgSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RealmwarKillCountMsgSheet : public UObject
{
public:
	TArray<class UCommonSource_RealmwarKillCountMsgRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarKillCountMsgSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarKillCountMsgSheet");
		return ptr;
	}


	class UCommonSource_RealmwarKillCountMsgRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RealmwarInteractRandomBuffRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_RealmwarInteractRandomBuffRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InteractIndex;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            RewardBuffIndex;                                          // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarInteractRandomBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarInteractRandomBuffRecord");
		return ptr;
	}

};


// Class CommonSource.RealmwarInteractRandomBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RealmwarInteractRandomBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_RealmwarInteractRandomBuffRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarInteractRandomBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarInteractRandomBuffSheet");
		return ptr;
	}


	class UCommonSource_RealmwarInteractRandomBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RealmwarInteractRewardRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RealmwarInteractRewardRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RealmwarFlagInteractDoneCount;                            // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int64_t                                            SameTeamRewardBuffIndex;                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            AnotherTeamRewardBuffIndex;                               // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Message;                                                  // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MessageCode;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarInteractRewardRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarInteractRewardRecord");
		return ptr;
	}

};


// Class CommonSource.RealmwarInteractRewardSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RealmwarInteractRewardSheet : public UObject
{
public:
	TArray<class UCommonSource_RealmwarInteractRewardRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarInteractRewardSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarInteractRewardSheet");
		return ptr;
	}


	class UCommonSource_RealmwarInteractRewardRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RealmwarInteractFactionRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_RealmwarInteractFactionRecord : public UObject
{
public:
	int                                                spawnIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RealmwarSide;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarInteractFactionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarInteractFactionRecord");
		return ptr;
	}

};


// Class CommonSource.RelicGambleInfoRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RelicGambleInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RelicGambleType;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsOpen;                                                   // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	int                                                ProductCount;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinLevel;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReqFinishQuestIndex;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReqEffectEnchant;                                         // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ReqEffectGrade;                                           // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                MaxSummonCount;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x004D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleInfoRecord");
		return ptr;
	}

};


// Class CommonSource.RelicGambleInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RelicGambleInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_RelicGambleInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleInfoSheet");
		return ptr;
	}


	class UCommonSource_RelicGambleInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RelicGambleRewardBundleRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_RelicGambleRewardBundleRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RelicGambleIndex;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RelicGamblePackageGroupID;                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Prob;                                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleRewardBundleRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleRewardBundleRecord");
		return ptr;
	}

};


// Class CommonSource.RelicGambleRewardBundleSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RelicGambleRewardBundleSheet : public UObject
{
public:
	TArray<class UCommonSource_RelicGambleRewardBundleRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleRewardBundleSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleRewardBundleSheet");
		return ptr;
	}


	class UCommonSource_RelicGambleRewardBundleRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RelicGambleRewardEnchantRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_RelicGambleRewardEnchantRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RelicGambleIndex;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RelicGambleSlotType;                                      // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemType;                                                 // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	int                                                EnchantMin;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantMiddle;                                            // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantMax;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantMinProb;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantMiddleProb;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantMaxProb;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleRewardEnchantRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleRewardEnchantRecord");
		return ptr;
	}

};


// Class CommonSource.RealmwarInteractFactionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RealmwarInteractFactionSheet : public UObject
{
public:
	TArray<class UCommonSource_RealmwarInteractFactionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarInteractFactionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarInteractFactionSheet");
		return ptr;
	}


	class UCommonSource_RealmwarInteractFactionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RelicGambleCostRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_RelicGambleCostRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RelicGambleIndex;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SelectCount;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<unsigned char>                              RelicGamblePriceType;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        GambleConfirmPriceIndex;                                  // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        GambleConfirmPriceCount;                                  // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                FailRandomBoxGroupID;                                     // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<int>                                        Prob;                                                     // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleCostRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleCostRecord");
		return ptr;
	}

};


// Class CommonSource.RealmwarSeasonRankRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_RealmwarSeasonRankRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Ranking;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Point;                                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RealmwarGrade;                                            // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardCoin;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RealmwarSeasonRankRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RealmwarSeasonRankRecord");
		return ptr;
	}

};


// Class CommonSource.RelicGambleCostSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RelicGambleCostSheet : public UObject
{
public:
	TArray<class UCommonSource_RelicGambleCostRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleCostSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleCostSheet");
		return ptr;
	}


	class UCommonSource_RelicGambleCostRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RelicGambleRefreshPriceRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_RelicGambleRefreshPriceRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RelicGambleIndex;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RefreshCount;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<unsigned char>                              RelicGamblePriceType;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        GambleRefreshPriceIndex;                                  // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        GambleRefreshPriceCount;                                  // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleRefreshPriceRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleRefreshPriceRecord");
		return ptr;
	}

};


// Class CommonSource.ResourceIconRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_ResourceIconRecord : public UObject
{
public:
	int                                                Type;                                                     // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IconName;                                                 // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BigIconName;                                              // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceIconRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceIconRecord");
		return ptr;
	}

};


// Class CommonSource.RelicGambleRefreshPriceSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RelicGambleRefreshPriceSheet : public UObject
{
public:
	TArray<class UCommonSource_RelicGambleRefreshPriceRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleRefreshPriceSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleRefreshPriceSheet");
		return ptr;
	}


	class UCommonSource_RelicGambleRefreshPriceRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ResourceIconSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ResourceIconSheet : public UObject
{
public:
	TArray<class UCommonSource_ResourceIconRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceIconSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceIconSheet");
		return ptr;
	}


	class UCommonSource_ResourceIconRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ResourceInfoRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ResourceInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        ObtainString;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        UseString;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ContentsIconRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ContentsIconRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ContentsType;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                ContentsStep;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     IconName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ContentsIconRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ContentsIconRecord");
		return ptr;
	}

};


// Class CommonSource.ResourceInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ResourceInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ResourceInfoRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ResourceInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ResourceInfoSheet");
		return ptr;
	}


	class UCommonSource_ResourceInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldMapTotalViewRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_WorldMapTotalViewRecord : public UObject
{
public:
	int                                                MaxChapterNum;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Type;                                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             BindingTag;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldMapTotalViewRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldMapTotalViewRecord");
		return ptr;
	}

};


// Class CommonSource.RelicGambleRewardEnchantSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RelicGambleRewardEnchantSheet : public UObject
{
public:
	TArray<class UCommonSource_RelicGambleRewardEnchantRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RelicGambleRewardEnchantSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RelicGambleRewardEnchantSheet");
		return ptr;
	}


	class UCommonSource_RelicGambleRewardEnchantRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldMapTotalViewSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WorldMapTotalViewSheet : public UObject
{
public:
	TArray<class UCommonSource_WorldMapTotalViewRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldMapTotalViewSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldMapTotalViewSheet");
		return ptr;
	}


	class UCommonSource_WorldMapTotalViewRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerIconRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_PlayerIconRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FString                                     FaceDetailIcon;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     FaceIconName;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ClassIconName;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     JobIconName;                                              // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     CardJobIconName;                                          // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerIconRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerIconRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerIconSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerIconSheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerIconRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerIconSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerIconSheet");
		return ptr;
	}


	class UCommonSource_PlayerIconRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RuneDefineRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RuneDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaterialItemIndex;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ComposeCount;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxComposeResultCount;                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SetSlotCount;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaximumSetApplyCount;                                     // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UpgradeMaterialRuneCount;                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExchangeItemIndex;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BundleComposeMaxGrade;                                    // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                BundleComposeMaxCount;                                    // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RunePresetSetting;                                        // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneDefineRecord");
		return ptr;
	}

};


// Class CommonSource.RuneDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RuneDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_RuneDefineRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneDefineSheet");
		return ptr;
	}


	class UCommonSource_RuneDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ContentsIconSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ContentsIconSheet : public UObject
{
public:
	TArray<class UCommonSource_ContentsIconRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ContentsIconSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ContentsIconSheet");
		return ptr;
	}


	class UCommonSource_ContentsIconRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RuneInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_RuneInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RuneType;                                                 // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SkillIndex;                                               // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneInfoRecord");
		return ptr;
	}

};


// Class CommonSource.RuneInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RuneInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_RuneInfoRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneInfoSheet");
		return ptr;
	}


	class UCommonSource_RuneInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RuneOpenLevelRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RuneOpenLevelRecord : public UObject
{
public:
	int                                                SlotColumnIndex;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OpenLevel;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     IconName;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ResonanceGroup;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	TArray<int>                                        PlusValue;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneOpenLevelRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneOpenLevelRecord");
		return ptr;
	}

};


// Class CommonSource.RuneOpenLevelSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RuneOpenLevelSheet : public UObject
{
public:
	TArray<class UCommonSource_RuneOpenLevelRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneOpenLevelSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneOpenLevelSheet");
		return ptr;
	}


	class UCommonSource_RuneOpenLevelRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RuneGradeRecord
// 0x0058 (0x0080 - 0x0028)
class UCommonSource_RuneGradeRecord : public UObject
{
public:
	unsigned char                                      grade;                                                    // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FString                                     GradeBG;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ReleaseGold;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RuneBoxGroupID;                                           // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaterialDropProb;                                         // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaterialDropCountMin;                                     // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaterialDropCountMax;                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UpgradeNeedGold;                                          // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UpgradeNeedItemIndex;                                     // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UpgradeNeedItemCount;                                     // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UpgradeProb;                                              // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	TArray<int>                                        UpgradeFailGroupID;                                       // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ExchangeNeedGold;                                         // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExchangeNeedItemCount;                                    // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneGradeRecord");
		return ptr;
	}

};


// Class CommonSource.RuneGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RuneGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_RuneGradeRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneGradeSheet");
		return ptr;
	}


	class UCommonSource_RuneGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RuneSetRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_RuneSetRecord : public UObject
{
public:
	unsigned char                                      runeSetOption;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<float>                                      PlusValue;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     SetColor;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ExchangeProb;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SetEnchantProb;                                           // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneSetRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneSetRecord");
		return ptr;
	}

};


// Class CommonSource.RuneSetEnchantDefineRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_RuneSetEnchantDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantItemIndex;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantItemCount;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantResetCost;                                         // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsMaxEnchantResetFree;                                    // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	TArray<float>                                      EnchantProb;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      EnchantLockResourceType;                                  // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                EnchantLockResourceItemIndex;                             // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantLockCount;                                         // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	TArray<int>                                        EnchantLockCost;                                          // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SetEnchantPresetSetting;                                  // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneSetEnchantDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneSetEnchantDefineRecord");
		return ptr;
	}

};


// Class CommonSource.RuneSetEnchantDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RuneSetEnchantDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_RuneSetEnchantDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneSetEnchantDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneSetEnchantDefineSheet");
		return ptr;
	}


	class UCommonSource_RuneSetEnchantDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RuneSetEnchantValueRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_RuneSetEnchantValueRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      runeSetOption;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	TArray<float>                                      EnchantValue;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneSetEnchantValueRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneSetEnchantValueRecord");
		return ptr;
	}

};


// Class CommonSource.RuneSetEnchantValueSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RuneSetEnchantValueSheet : public UObject
{
public:
	TArray<class UCommonSource_RuneSetEnchantValueRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneSetEnchantValueSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneSetEnchantValueSheet");
		return ptr;
	}


	class UCommonSource_RuneSetEnchantValueRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RuneAttributeDefineRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_RuneAttributeDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AttributeChangeItem;                                      // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AttributeChangeItemCount;                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAttributeOverlap;                                       // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                AttributeChangeLock;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      LockResourceType;                                         // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                LockResourceItemIndex;                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TArray<int>                                        AttributeChangeLockCost;                                  // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneAttributeDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneAttributeDefineRecord");
		return ptr;
	}

};


// Class CommonSource.RuneSetSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RuneSetSheet : public UObject
{
public:
	TArray<class UCommonSource_RuneSetRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneSetSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneSetSheet");
		return ptr;
	}


	class UCommonSource_RuneSetRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RuneAttributeDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RuneAttributeDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_RuneAttributeDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneAttributeDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneAttributeDefineSheet");
		return ptr;
	}


	class UCommonSource_RuneAttributeDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RuneAttributeRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_RuneAttributeRecord : public UObject
{
public:
	unsigned char                                      RuneAttribute;                                            // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AttributeProb;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     AttributeColor;                                           // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneAttributeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneAttributeRecord");
		return ptr;
	}

};


// Class CommonSource.RuneAttributeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RuneAttributeSheet : public UObject
{
public:
	TArray<class UCommonSource_RuneAttributeRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneAttributeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneAttributeSheet");
		return ptr;
	}


	class UCommonSource_RuneAttributeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.RuneAttributeOptionRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_RuneAttributeOptionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RuneAttribute;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                SetCount;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	TArray<float>                                      SetValue;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneAttributeOptionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneAttributeOptionRecord");
		return ptr;
	}

};


// Class CommonSource.RuneAttributeOptionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_RuneAttributeOptionSheet : public UObject
{
public:
	TArray<class UCommonSource_RuneAttributeOptionRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.RuneAttributeOptionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.RuneAttributeOptionSheet");
		return ptr;
	}


	class UCommonSource_RuneAttributeOptionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SchedulerInfoRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_SchedulerInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ScheduleType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ConditionNameCode;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResourcePrice;                                            // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Priority;                                                 // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                DailyUseLimitCount;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                DisplayPriority;                                          // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerInfoRecord");
		return ptr;
	}

};


// Class CommonSource.SchedulerInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SchedulerInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_SchedulerInfoRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerInfoSheet");
		return ptr;
	}


	class UCommonSource_SchedulerInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SchedulerDungeonInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_SchedulerDungeonInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MapType;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                TitleCode;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapGroup;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayingOrder;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerDungeonInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerDungeonInfoRecord");
		return ptr;
	}

};


// Class CommonSource.SchedulerDungeonInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SchedulerDungeonInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_SchedulerDungeonInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerDungeonInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerDungeonInfoSheet");
		return ptr;
	}


	class UCommonSource_SchedulerDungeonInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SchedulerBlockInfoRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_SchedulerBlockInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ScheduleType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                DimmedStringCode;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MapType;                                                  // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DimmedDetailSetting;                                      // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0036(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerBlockInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerBlockInfoRecord");
		return ptr;
	}

};


// Class CommonSource.GuildBattlefieldPackageRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_GuildBattlefieldPackageRecord : public UObject
{
public:
	int                                                GroupID;                                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        RandomBoxGroupID;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        DropProb;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldPackageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.GuildBattlefieldPackageRecord");
		return ptr;
	}

};


// Class CommonSource.SchedulerBlockInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SchedulerBlockInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_SchedulerBlockInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerBlockInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerBlockInfoSheet");
		return ptr;
	}


	class UCommonSource_SchedulerBlockInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SchedulerDismantleItemRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_SchedulerDismantleItemRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DismantleItemType;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerDismantleItemRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerDismantleItemRecord");
		return ptr;
	}

};


// Class CommonSource.SchedulerDefineRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_SchedulerDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UnlockQuestIndex;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AutoCounterMaintainTime;                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AutoCounterMaintainSec;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlannerRestartTime;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlannerEndTime;                                           // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonUnlockQuestIndex;                                  // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResurrectionSchedulerLimitCount;                          // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PartyDungeonUnlockQuestIndex;                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResourceType;                                             // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x004D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerDefineRecord");
		return ptr;
	}

};


// Class CommonSource.SchedulerDismantleItemSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SchedulerDismantleItemSheet : public UObject
{
public:
	TArray<class UCommonSource_SchedulerDismantleItemRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerDismantleItemSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerDismantleItemSheet");
		return ptr;
	}


	class UCommonSource_SchedulerDismantleItemRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SchedulerDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SchedulerDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_SchedulerDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SchedulerDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SchedulerDefineSheet");
		return ptr;
	}


	class UCommonSource_SchedulerDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SealedStoneInfoRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_SealedStoneInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SealedStoneType;                                          // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              CharParam;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      PlusParamValue;                                           // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NeedOpenQuestIndex;                                       // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedActiveGold;                                           // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedTranscendenceGold;                                    // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneInfoRecord");
		return ptr;
	}

};


// Class CommonSource.SealedStoneInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SealedStoneInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_SealedStoneInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneInfoSheet");
		return ptr;
	}


	class UCommonSource_SealedStoneInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SealedStoneEnchantRecord
// 0x0068 (0x0090 - 0x0028)
class UCommonSource_SealedStoneEnchantRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedEnchantGold;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        EnchantMaterialItemIndex;                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        NeedEnchantMaterial;                                      // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                EnchantProb;                                              // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	TArray<int>                                        FailProb;                                                 // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                FailInLevel;                                              // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ControlMaxEnchantProb;                                    // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ControlEnchantProb;                                       // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	TArray<float>                                      ControlFailProb;                                          // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneEnchantRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneEnchantRecord");
		return ptr;
	}

};


// Class CommonSource.SealedStoneEnchantSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SealedStoneEnchantSheet : public UObject
{
public:
	TArray<class UCommonSource_SealedStoneEnchantRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneEnchantSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneEnchantSheet");
		return ptr;
	}


	class UCommonSource_SealedStoneEnchantRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SealedStoneDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SealedStoneDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_SealedStoneDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneDefineSheet");
		return ptr;
	}


	class UCommonSource_SealedStoneDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SealedStoneSetOpenRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_SealedStoneSetOpenRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              CharParam;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      PlusParamValue;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneSetOpenRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneSetOpenRecord");
		return ptr;
	}

};


// Class CommonSource.SealedStoneSetOpenSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SealedStoneSetOpenSheet : public UObject
{
public:
	TArray<class UCommonSource_SealedStoneSetOpenRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneSetOpenSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneSetOpenSheet");
		return ptr;
	}


	class UCommonSource_SealedStoneSetOpenRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ServerInvasionBuffRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ServerInvasionBuffRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InvasionUserType;                                         // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<int>                                        PhaseUpgradePKCount;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int64_t>                                    PhaseBuffIndex;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionBuffRecord");
		return ptr;
	}

};


// Class CommonSource.ServerInvasionBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ServerInvasionBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_ServerInvasionBuffRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionBuffSheet");
		return ptr;
	}


	class UCommonSource_ServerInvasionBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MovableMapsRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_MovableMapsRecord : public UObject
{
public:
	int                                                MapIndex;                                                 // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MovableMapsRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MovableMapsRecord");
		return ptr;
	}

};


// Class CommonSource.SealedStoneDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_SealedStoneDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffTime;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedMaterialCount;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaterialItemIndex;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TranscendenceNeedLevel;                                   // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedMaterialTranscendenceCount;                           // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ProbControlItemIndex;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffIndex;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SealedStoneDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SealedStoneDefineRecord");
		return ptr;
	}

};


// Class CommonSource.MovableMapsSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MovableMapsSheet : public UObject
{
public:
	TArray<class UCommonSource_MovableMapsRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MovableMapsSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MovableMapsSheet");
		return ptr;
	}


	class UCommonSource_MovableMapsRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ServerInvasionTimeRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ServerInvasionTimeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PartNum;                                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ResetWeekType;                                            // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InvasionWeek;                                             // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InvasionStartResetDayOfWeek;                              // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0033(0x0001) MISSED OFFSET
	int                                                InvasionStartHour;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionStartMin;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InvasionEndResetDayOfWeek;                                // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                InvasionEndHour;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionEndMin;                                           // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionTimeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionTimeRecord");
		return ptr;
	}

};


// Class CommonSource.ServerInvasionTimeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ServerInvasionTimeSheet : public UObject
{
public:
	TArray<class UCommonSource_ServerInvasionTimeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionTimeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionTimeSheet");
		return ptr;
	}


	class UCommonSource_ServerInvasionTimeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ServerInvasionBlockInfoRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_ServerInvasionBlockInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ContentsType;                                             // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ButtonLockType;                                           // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionBlockInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionBlockInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ServerInvasionBlockInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ServerInvasionBlockInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ServerInvasionBlockInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionBlockInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionBlockInfoSheet");
		return ptr;
	}


	class UCommonSource_ServerInvasionBlockInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InvasionPkPointRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_InvasionPkPointRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PkUserPowerMinimum;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PkUserPowerMaximum;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                KillRewardPkPoint;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AssistRewardPkPoint;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionPkPointRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionPkPointRecord");
		return ptr;
	}

};


// Class CommonSource.InvasionPkPointSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InvasionPkPointSheet : public UObject
{
public:
	TArray<class UCommonSource_InvasionPkPointRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionPkPointSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionPkPointSheet");
		return ptr;
	}


	class UCommonSource_InvasionPkPointRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InvasionObjectInfoRecord
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InvasionObjectInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectSpawnIndex;                                         // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        RewardItem;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        Prob;                                                     // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Part1SpawnStartTime;                                      // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Part1SpawnEndTime;                                        // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Part2SpawnStartTime;                                      // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Part2SpawnEndTime;                                        // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     ObjectImage;                                              // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                InvasionBannedTime;                                       // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DestroyPkPoint;                                           // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LinkSpawnIndex;                                           // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionObjectInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionObjectInfoRecord");
		return ptr;
	}

};


// Class CommonSource.InvasionObjectInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InvasionObjectInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_InvasionObjectInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionObjectInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionObjectInfoSheet");
		return ptr;
	}


	class UCommonSource_InvasionObjectInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InvasionObjectPointRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_InvasionObjectPointRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardRanking;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AdditionalPkPoint;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionObjectPointRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionObjectPointRecord");
		return ptr;
	}

};


// Class CommonSource.InvasionObjectPointSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InvasionObjectPointSheet : public UObject
{
public:
	TArray<class UCommonSource_InvasionObjectPointRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionObjectPointSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionObjectPointSheet");
		return ptr;
	}


	class UCommonSource_InvasionObjectPointRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ServerInvasionCostumeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ServerInvasionCostumeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionPkRanking;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CostumeGroupID;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionCostumeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionCostumeRecord");
		return ptr;
	}

};


// Class CommonSource.ServerInvasionCostumeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ServerInvasionCostumeSheet : public UObject
{
public:
	TArray<class UCommonSource_ServerInvasionCostumeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionCostumeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionCostumeSheet");
		return ptr;
	}


	class UCommonSource_ServerInvasionCostumeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ServerInvasionDefineRecord
// 0x0088 (0x00B0 - 0x0028)
class UCommonSource_ServerInvasionDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionCampMapIndex;                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     InvasionCampSubLevelName;                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                InvasionCampAreaIndex;                                    // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionCampPortalIndex;                                  // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InvasionGuildMaxCount;                                    // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EnterTicketType;                                          // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0052(0x0002) MISSED OFFSET
	int                                                EnterTicketIndex;                                         // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnterTicketCount;                                         // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionUnLockQuest;                                      // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionGuildMemberCount;                                 // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionGuildLevel;                                       // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedGuildJointime;                                        // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               InvasionGuildNameShow;                                    // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               InvasionServerNameShow;                                   // 0x006D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               InvasionUserAttackEnabled;                                // 0x006E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x006F(0x0001) MISSED OFFSET
	int                                                InvasionUserForceWarpTime;                                // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionQuestMaxNumber;                                   // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionStartYear;                                        // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionStartMonth;                                       // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionStartDay;                                         // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EndMessageTime;                                           // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionAssistTime;                                       // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionAssistDamage;                                     // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InvasionCurrencyPerPkPoint;                               // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ServerInvasionNoneNpcShopIndex;                           // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ServerReturnProb;                                         // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UiRevealQuest;                                            // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ObjectDestroyForcedExit;                                  // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00A1(0x0003) MISSED OFFSET
	int                                                ObjectArrowMinRange;                                      // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectArrowMaxRange;                                      // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ServerInvasionEnterOrderColorRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_ServerInvasionEnterOrderColorRecord : public UObject
{
public:
	int                                                EnterOrder;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     ColorCode;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionEnterOrderColorRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionEnterOrderColorRecord");
		return ptr;
	}

};


// Class CommonSource.ServerInvasionEnterOrderColorSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ServerInvasionEnterOrderColorSheet : public UObject
{
public:
	TArray<class UCommonSource_ServerInvasionEnterOrderColorRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionEnterOrderColorSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionEnterOrderColorSheet");
		return ptr;
	}


	class UCommonSource_ServerInvasionEnterOrderColorRecord* GetRecord(int64_t ID);
};


// Class CommonSource.InvasionPKRandomTauntMessageRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_InvasionPKRandomTauntMessageRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TauntCommentCode;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionPKRandomTauntMessageRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionPKRandomTauntMessageRecord");
		return ptr;
	}

};


// Class CommonSource.InvasionPKRandomTauntMessageSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_InvasionPKRandomTauntMessageSheet : public UObject
{
public:
	TArray<class UCommonSource_InvasionPKRandomTauntMessageRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.InvasionPKRandomTauntMessageSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.InvasionPKRandomTauntMessageSheet");
		return ptr;
	}


	class UCommonSource_InvasionPKRandomTauntMessageRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ServerMigrationStateRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ServerMigrationStateRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ServerMigrationServerState;                               // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                MinCount;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCount;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerMigrationStateRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerMigrationStateRecord");
		return ptr;
	}

};


// Class CommonSource.ServerMigrationStateSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ServerMigrationStateSheet : public UObject
{
public:
	TArray<class UCommonSource_ServerMigrationStateRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerMigrationStateSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerMigrationStateSheet");
		return ptr;
	}


	class UCommonSource_ServerMigrationStateRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ServerMigrationDefineRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_ServerMigrationDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                IntervalDay;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerDeleteReadyDay;                                     // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PushTitle;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PushText;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AlimTalkText;                                             // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffIndex;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RecommendServerCount;                                     // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     RankingServerName;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerMigrationDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerMigrationDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ServerInvasionDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ServerInvasionDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ServerInvasionDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerInvasionDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerInvasionDefineSheet");
		return ptr;
	}


	class UCommonSource_ServerInvasionDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ServerMigrationDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ServerMigrationDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ServerMigrationDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerMigrationDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerMigrationDefineSheet");
		return ptr;
	}


	class UCommonSource_ServerMigrationDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ServerMigrationTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ServerMigrationTable : public UObject
{
public:
	class UCommonSource_ServerMigrationStateSheet*     m_ServerMigrationStateSheet;                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_ServerMigrationDefineSheet*    m_ServerMigrationDefineSheet;                             // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ServerMigrationTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ServerMigrationTable");
		return ptr;
	}

};


// Class CommonSource.ShadowTierRecord
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_ShadowTierRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MapType;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FString                                     ShadowTierType;                                           // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     Icon;                                                     // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameStringIndex;                                          // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedPoint;                                                // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedRank;                                                 // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffNameCode;                                             // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        BuffIndex;                                                // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SoftResetTierIndex;                                       // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FString                                     SoftResetTierType;                                        // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ScorePenalty;                                             // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardBuff;                                               // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsShowTierEffect;                                         // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	int                                                TierEffectIndex;                                          // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardCoin;                                               // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowTierRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowTierRecord");
		return ptr;
	}

};


// Class CommonSource.ShadowTierSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShadowTierSheet : public UObject
{
public:
	TArray<class UCommonSource_ShadowTierRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowTierSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowTierSheet");
		return ptr;
	}


	class UCommonSource_ShadowTierRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShadowActiveTimeRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ShadowActiveTimeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MapType;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      StartHour;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      StartMin;                                                 // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	int                                                OpenTimeSec;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DayOfWeek;                                                // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                ActivatePlusPointPercent;                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemDropBonusPercent;                                     // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBossSpawn;                                              // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPointTakeEnabled;                                       // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                ActivateTakePointPercent;                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowActiveTimeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowActiveTimeRecord");
		return ptr;
	}

};


// Class CommonSource.ShadowActiveTimeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShadowActiveTimeSheet : public UObject
{
public:
	TArray<class UCommonSource_ShadowActiveTimeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowActiveTimeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowActiveTimeSheet");
		return ptr;
	}


	class UCommonSource_ShadowActiveTimeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShadowDungeonMapSettingRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_ShadowDungeonMapSettingRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowDungeonStep;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        BuffIndex;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                bossIndex;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                spawnIndex;                                               // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFinalBoss;                                              // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0052(0x0006) MISSED OFFSET
	TArray<int>                                        SelectPortalIndex;                                        // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowDungeonMapSettingRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowDungeonMapSettingRecord");
		return ptr;
	}

};


// Class CommonSource.ShadowDungeonMapSettingSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShadowDungeonMapSettingSheet : public UObject
{
public:
	TArray<class UCommonSource_ShadowDungeonMapSettingRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowDungeonMapSettingSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowDungeonMapSettingSheet");
		return ptr;
	}


	class UCommonSource_ShadowDungeonMapSettingRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShadowDungeonTeleportItemRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ShadowDungeonTeleportItemRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemIndex;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowDungeonTeleportItemRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowDungeonTeleportItemRecord");
		return ptr;
	}

};


// Class CommonSource.ShadowDungeonTeleportItemSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShadowDungeonTeleportItemSheet : public UObject
{
public:
	TArray<class UCommonSource_ShadowDungeonTeleportItemRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowDungeonTeleportItemSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowDungeonTeleportItemSheet");
		return ptr;
	}


	class UCommonSource_ShadowDungeonTeleportItemRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShadowDungeonDefineRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_ShadowDungeonDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowDungeonResetDay;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowDungeonCloseHour;                                   // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowDungeonCloseMin;                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowDungeonOpenHour;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowDungeonOpenMin;                                     // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowDungeonNoneNpcShopIndex;                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowDungeonEnterSetDebuffIndex;                         // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RankingPage;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AbyssFloorNoneNpcShopIndex;                               // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowPointMaxValue;                                      // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowCoinMaxValue;                                       // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AbyssPointMaxValue;                                       // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AbyssCoinMaxValue;                                        // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAbyssFloorTierResetEnabled;                             // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	int                                                AbyssFloorResetTierIndex;                                 // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AbyssFloorFinalBossDelay;                                 // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AbyssFloorMapIndex;                                       // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAbyssPointTakePenaltyEnabled;                           // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAbyssKillerTargetEnabled;                               // 0x0071(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0072(0x0002) MISSED OFFSET
	int                                                AbyssKillerTargetExpireTime;                              // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowDungeonDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowDungeonDefineRecord");
		return ptr;
	}

};


// Class CommonSource.ShadowDungeonDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShadowDungeonDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_ShadowDungeonDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowDungeonDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowDungeonDefineSheet");
		return ptr;
	}


	class UCommonSource_ShadowDungeonDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShadowMonsterPointRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ShadowMonsterPointRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowDungeonStep;                                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MonsterGrade;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                ShadowPoint;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AbyssPoint;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShadowPointPercent;                                       // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffIndex;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RewardTargetType;                                         // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseContribution;                                          // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ScorePenaltyEnabled;                                      // 0x0046(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0047(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowMonsterPointRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowMonsterPointRecord");
		return ptr;
	}

};


// Class CommonSource.ShadowMonsterPointSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShadowMonsterPointSheet : public UObject
{
public:
	TArray<class UCommonSource_ShadowMonsterPointRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowMonsterPointSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowMonsterPointSheet");
		return ptr;
	}


	class UCommonSource_ShadowMonsterPointRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShadowPkPointSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShadowPkPointSheet : public UObject
{
public:
	TArray<class UCommonSource_ShadowPkPointRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowPkPointSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowPkPointSheet");
		return ptr;
	}


	class UCommonSource_ShadowPkPointRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShadowPkPenaltyRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ShadowPkPenaltyRecord : public UObject
{
public:
	int                                                RelationCount;                                            // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PenaltyPercent;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PointTakePenaltyPercent;                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowPkPenaltyRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowPkPenaltyRecord");
		return ptr;
	}

};


// Class CommonSource.ShadowPkPenaltySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShadowPkPenaltySheet : public UObject
{
public:
	TArray<class UCommonSource_ShadowPkPenaltyRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowPkPenaltySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowPkPenaltySheet");
		return ptr;
	}


	class UCommonSource_ShadowPkPenaltyRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShadowPkPointInfoRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_ShadowPkPointInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MapType;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                PkKillPoint;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PkAssistPoint;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PkDeathPoint;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PkCoolTime;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AssitTime;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AssistDamage;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PkMaxPenaltyCount;                                        // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PointTakeType;                                            // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowPkPointInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowPkPointInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ShadowPkPointRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_ShadowPkPointRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TierIndex;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     TierType;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PKTierPenaltyIndex;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FString                                     PKTierPenaltyType;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PKTierPenalty;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PointTakeValue;                                           // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxPointTake;                                             // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PointTakeProb;                                            // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowPkPointRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowPkPointRecord");
		return ptr;
	}

};


// Class CommonSource.ShadowPkPointInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShadowPkPointInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ShadowPkPointInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShadowPkPointInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShadowPkPointInfoSheet");
		return ptr;
	}


	class UCommonSource_ShadowPkPointInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AbyssFloorBossSpawnRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_AbyssFloorBossSpawnRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BossGroupID;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                bossIndex;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     BossName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                spawnIndex;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFinalBoss;                                              // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AbyssFloorBossSpawnRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AbyssFloorBossSpawnRecord");
		return ptr;
	}

};


// Class CommonSource.AbyssFloorBossSpawnSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AbyssFloorBossSpawnSheet : public UObject
{
public:
	TArray<class UCommonSource_AbyssFloorBossSpawnRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AbyssFloorBossSpawnSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AbyssFloorBossSpawnSheet");
		return ptr;
	}


	class UCommonSource_AbyssFloorBossSpawnRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AbyssFloorEliteSpawnInfoRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_AbyssFloorEliteSpawnInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DayOfWeek;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      StartHour;                                                // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      StartMin;                                                 // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EndHour;                                                  // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EndMin;                                                   // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                SpawnGroupCount;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AbyssFloorEliteSpawnInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AbyssFloorEliteSpawnInfoRecord");
		return ptr;
	}

};


// Class CommonSource.AbyssFloorEliteSpawnInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AbyssFloorEliteSpawnInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_AbyssFloorEliteSpawnInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AbyssFloorEliteSpawnInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AbyssFloorEliteSpawnInfoSheet");
		return ptr;
	}


	class UCommonSource_AbyssFloorEliteSpawnInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.AbyssFloorEliteSpawnRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_AbyssFloorEliteSpawnRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                spawnIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupID;                                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RandomStartTime;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AbyssFloorEliteSpawnRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AbyssFloorEliteSpawnRecord");
		return ptr;
	}

};


// Class CommonSource.AbyssFloorEliteSpawnSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_AbyssFloorEliteSpawnSheet : public UObject
{
public:
	TArray<class UCommonSource_AbyssFloorEliteSpawnRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.AbyssFloorEliteSpawnSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.AbyssFloorEliteSpawnSheet");
		return ptr;
	}


	class UCommonSource_AbyssFloorEliteSpawnRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShopItemInfoRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_ShopItemInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShopIndex;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShopTabIndex;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SortOrder;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      ShopPriceType;                                            // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                Price;                                                    // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemIndex;                                                // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ItemAddress;                                              // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	int                                                count;                                                    // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ShopLimitedShareType;                                     // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	int                                                ShadowTierIndex;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Max;                                                      // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                OnceMax;                                                  // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BattleRank;                                               // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuyCastlewarAttackType;                                   // 0x006D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x006E(0x0002) MISSED OFFSET
	int                                                BuyCastleWarContinueDefenseWinCount;                      // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuyGuildJob;                                              // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x0075(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0076(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShopItemInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShopItemInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ShopItemInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShopItemInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ShopItemInfoRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShopItemInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShopItemInfoSheet");
		return ptr;
	}


	class UCommonSource_ShopItemInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShopInfoRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ShopInfoRecord : public UObject
{
public:
	int                                                ShopIndex;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TalkCode;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResetDescCode;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShopInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShopInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ShopInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShopInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ShopInfoRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShopInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShopInfoSheet");
		return ptr;
	}


	class UCommonSource_ShopInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ShopTabInfoRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_ShopTabInfoRecord : public UObject
{
public:
	int                                                ShopTabIndex;                                             // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShopTabInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShopTabInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ShopTabInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShopTabInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_ShopTabInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShopTabInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShopTabInfoSheet");
		return ptr;
	}


	class UCommonSource_ShopTabInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.NoneNpcShopInfoRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_NoneNpcShopInfoRecord : public UObject
{
public:
	int                                                ShopIndex;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NpcFuncType;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NoneNpcShopInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NoneNpcShopInfoRecord");
		return ptr;
	}

};


// Class CommonSource.ShopItemBuyGradeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_ShopItemBuyGradeRecord : public UObject
{
public:
	int                                                ItemIndex;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuyGrade;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ItemBuyGroup;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShopItemBuyGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShopItemBuyGradeRecord");
		return ptr;
	}

};


// Class CommonSource.ShopItemBuyGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ShopItemBuyGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_ShopItemBuyGradeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ShopItemBuyGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ShopItemBuyGradeSheet");
		return ptr;
	}


	class UCommonSource_ShopItemBuyGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillInfoRecord
// 0x0110 (0x0138 - 0x0028)
class UCommonSource_SkillInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PassiveIconName;                                          // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PassiveDescCode;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FString                                     BpPath;                                                   // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PreviewPath;                                              // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      SkillType;                                                // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AttackOrder;                                              // 0x0081(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AttackType;                                               // 0x0082(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0083(0x0001) MISSED OFFSET
	int                                                ParentSkillIndex;                                         // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PrevSkillIndex;                                           // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LearnPassiveSkillIndex;                                   // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AdditonalPassiveSkillIndex;                               // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsResurrection;                                           // 0x0094(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsToggle;                                                 // 0x0095(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsIgnoreCondition;                                        // 0x0096(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsIgnoreAbnormalStatus;                                   // 0x0097(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedHpPercent;                                            // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedMp;                                                   // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TargetType;                                               // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TargetFrom;                                               // 0x00A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x00A2(0x0002) MISSED OFFSET
	float                                              TargetRange;                                              // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCorrectMainTarget;                                      // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	float                                              CoolTime;                                                 // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CoolTimeLvUp;                                             // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CastTime;                                                 // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ChannelingTime;                                           // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileSpeed;                                          // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitTargetCount;                                           // 0x00C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitTargetCountConditionType;                              // 0x00C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitTargetCountOrderType;                                  // 0x00C2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitAreaType;                                              // 0x00C3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HitRange;                                                 // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HitRadius;                                                // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHitApplyCheckHitCond;                                   // 0x00CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCheckHitCond;                                           // 0x00CD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x00CE(0x0002) MISSED OFFSET
	TArray<unsigned char>                              HitCondType;                                              // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int64_t>                                    HitCondValue;                                             // 0x00E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        HitCondValueBuffType;                                     // 0x00F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                DashSpeed;                                                // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BackDashDistance;                                         // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SealCount;                                                // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDive;                                                   // 0x010C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsIndividualSummon;                                       // 0x010D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x010E(0x0002) MISSED OFFSET
	int                                                SwapBuffIndex;                                            // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                swapSkillIndex;                                           // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MelodyPoint;                                              // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsChangeMelodyPoint;                                      // 0x011C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	int                                                SunPoint;                                                 // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MoonPoint;                                                // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDisplay;                                                // 0x0128(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDamagedTargetCount;                                     // 0x0129(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x012A(0x0002) MISSED OFFSET
	int                                                SacrificePoint;                                           // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SacrificeAddPercent;                                      // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0134(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillInfoRecord");
		return ptr;
	}

};


// Class CommonSource.SkillInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillInfoRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillInfoSheet");
		return ptr;
	}


	class UCommonSource_SkillInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PassiveInfoRecord
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PassiveInfoRecord : public UObject
{
public:
	int                                                SkillIndex;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PassiveAttackType;                                        // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      PassiveApplyType;                                         // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CheckQuickSlot;                                           // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	int                                                ApplySkillIndex;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               PassiveOrCheck;                                           // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	TArray<unsigned char>                              PassiveCondType;                                          // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        PassiveBuffType;                                          // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ActiveValue;                                              // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        PassiveValue;                                             // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        PassiveLvUp;                                              // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PassiveInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PassiveInfoRecord");
		return ptr;
	}

};


// Class CommonSource.PassiveInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PassiveInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_PassiveInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PassiveInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PassiveInfoSheet");
		return ptr;
	}


	class UCommonSource_PassiveInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.EffectInfoRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_EffectInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitTargetMainType;                                        // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitTargetFactionType;                                     // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EffectType;                                               // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EffectValueCharParam;                                     // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCommonSource_Double>                EffectValue;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      ValueLvUp;                                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EffectInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EffectInfoRecord");
		return ptr;
	}

};


// Class CommonSource.EffectInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_EffectInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_EffectInfoRecord*>      arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.EffectInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.EffectInfoSheet");
		return ptr;
	}


	class UCommonSource_EffectInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BuffTypeRecord
// 0x00D0 (0x00F8 - 0x0028)
class UCommonSource_BuffTypeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffType;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParamBuffType;                                            // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FString                                     BuffStateIconName;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     DebuffStateIconName;                                      // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     EventBuffIconName;                                        // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PassiveBuffIconName;                                      // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddDescCode;                                              // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffNotice;                                               // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanMove;                                                  // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanAttack;                                                // 0x0089(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanSkill;                                                 // 0x008A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanAttacked;                                              // 0x008B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanDamaged;                                               // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanUseItem;                                               // 0x008D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanWarp;                                                  // 0x008E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanInteract;                                              // 0x008F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanIgnoreAbnormalAccuracy;                                // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanIgnoreShockAccuarcy;                                   // 0x0091(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsShockBuff;                                              // 0x0092(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCombineDamage;                                          // 0x0093(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsParam;                                                  // 0x0094(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParamReason;                                              // 0x0095(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsVehicleUnEquip;                                         // 0x0096(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanBuffPassive;                                           // 0x0097(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBuffTextView;                                           // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
	struct FString                                     HudViewTextColor;                                         // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      DecimalPlace;                                             // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPercentParam;                                           // 0x00B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x00B2(0x0006) MISSED OFFSET
	struct FString                                     BpPath;                                                   // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              EffectType;                                               // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              EffectValueCharParam;                                     // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              IsDot;                                                    // 0x00E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BuffTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BuffTypeRecord");
		return ptr;
	}

};


// Class CommonSource.BuffTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BuffTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_BuffTypeRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BuffTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BuffTypeSheet");
		return ptr;
	}


	class UCommonSource_BuffTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BuffInfoRecord
// 0x0118 (0x0140 - 0x0028)
class UCommonSource_BuffInfoRecord : public UObject
{
public:
	int64_t                                            Index;                                                    // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     IconName;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NameCode;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TriggerBuffType;                                          // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSkillTranscend;                                         // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                OverlapParentIndex;                                       // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffOverlapType;                                          // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffUniqueIDType;                                         // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	int                                                BuffSubUniqueID;                                          // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDBSave;                                                 // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDisplay;                                                // 0x0061(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffDivision;                                             // 0x0062(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffGroup;                                                // 0x0063(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxBuffStack;                                             // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffType;                                                 // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ParamBuffType;                                            // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffDurationType;                                         // 0x006D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUseDuration;                                            // 0x006E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x006F(0x0001) MISSED OFFSET
	float                                              Duration;                                                 // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DurationLvUp;                                             // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DotTime;                                                  // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DotRange;                                                 // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DotInRange;                                               // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DotCount;                                                 // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DotTargetFrom;                                            // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DotTargetFactionType;                                     // 0x0089(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffApplyType;                                            // 0x008A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BuffTargetType;                                           // 0x008B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitTargetBuffType;                                        // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPriority;                                               // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	int                                                BuffUIPriority;                                           // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitTargetFactionType;                                     // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitProb;                                                  // 0x0099(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      HitProbLvUp;                                              // 0x009A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsApplyAbnormalStatusResist;                              // 0x009B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanResistAbnormalStatusVehicleRide;                       // 0x009C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDeadRelease;                                            // 0x009D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsAvatarChangeRelease;                                    // 0x009E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanSkillRelease;                                          // 0x009F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSendAround;                                             // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	TArray<struct FCommonSource_Double>                Effect0Value;                                             // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      Effect0LvUp;                                              // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FCommonSource_Double>                Effect1Value;                                             // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      Effect1LvUp;                                              // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FCommonSource_Double>                Effect2Value;                                             // 0x00E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      Effect2LvUp;                                              // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FCommonSource_Double>                Effect3Value;                                             // 0x0108(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      Effect3LvUp;                                              // 0x0118(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              MapType;                                                  // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsMapTypeRelease;                                         // 0x0138(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFieldBuff;                                              // 0x0139(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsIgnoreParticleOption;                                   // 0x013A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HideSkillWindowToolTip;                                   // 0x013B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHideBuffStack;                                          // 0x013C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x013D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BuffInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BuffInfoRecord");
		return ptr;
	}

};


// Class CommonSource.BuffInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BuffInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_BuffInfoRecord*>        arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BuffInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BuffInfoSheet");
		return ptr;
	}


	class UCommonSource_BuffInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.PlayerSkillRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_PlayerSkillRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedPlayerLevel;                                          // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSkillEnchantLevel;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSkillLevel;                                            // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SkillGrade;                                               // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                SkillEnchantMaterialIndex;                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                QuickSlotSortLevel;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ClassChangeEnabled;                                       // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	int                                                MatchingGroup;                                            // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChangeItem;                                               // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ContentsOff;                                              // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                NoSelectedChangeSkillBook;                                // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NoSelectedChangeItem;                                     // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDisplay;                                                // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0065(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerSkillRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerSkillRecord");
		return ptr;
	}

};


// Class CommonSource.PlayerSkillSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_PlayerSkillSheet : public UObject
{
public:
	TArray<class UCommonSource_PlayerSkillRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.PlayerSkillSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.PlayerSkillSheet");
		return ptr;
	}


	class UCommonSource_PlayerSkillRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillEnchantRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_SkillEnchantRecord : public UObject
{
public:
	int                                                SkillSkillEnchantLevel;                                   // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedGood;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedMaterialCount;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantSuccessProb;                                       // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantFailureProb;                                       // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EnchantGreatFailureProb;                                  // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillEnchantRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillEnchantRecord");
		return ptr;
	}

};


// Class CommonSource.SkillEnchantSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillEnchantSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillEnchantRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillEnchantSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillEnchantSheet");
		return ptr;
	}


	class UCommonSource_SkillEnchantRecord* GetRecord(int64_t ID);
};


// Class CommonSource.HitAreaAdjustSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_HitAreaAdjustSheet : public UObject
{
public:
	TArray<class UCommonSource_HitAreaAdjustRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.HitAreaAdjustSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.HitAreaAdjustSheet");
		return ptr;
	}


	class UCommonSource_HitAreaAdjustRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillDefineRecord
// 0x0140 (0x0168 - 0x0028)
class UCommonSource_SkillDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              KnockBackSpeed;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            KnockBackBuffIndex;                                       // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CloseAttackDistance;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSealCount;                                             // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            AvoidBuffIndex;                                           // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            ImmortalityBuffIndex;                                     // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            DamagedBuffIndex;                                         // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ChannelingDotTime;                                        // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ComboResetTime;                                           // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TargetRangeTolerance;                                     // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ToggleSkillCoolTime;                                      // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MonsterPlusMinHeightExtend;                               // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	int64_t                                            WarpImmortalityBuffIndex;                                 // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            MimirWellBuffIndex;                                       // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            TeleportImmortalityBuffIndex;                             // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SealCountResetTime;                                       // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	int64_t                                            DungeonCompleteImmortalityBuffIndex;                      // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AutoHealHpCondition;                                      // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillPresetCoolTime;                                      // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            SecondPasswardBuffIndex;                                  // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HpSendExpireTime;                                         // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GuildDefenseSpeedWeighting;                               // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        AutoSenseCoolTime;                                        // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MaxMelodyPoint;                                           // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MelodyPointResetTime;                                     // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            BardRandomBuffIndex;                                      // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BardRandomSkillIndex;                                     // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BardRandomEffectValue;                                    // 0x00D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BardRandomEffectValueLvUp;                                // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThunderGodArmorSize;                                      // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThunderGodGrowUpTime;                                     // 0x00E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CriAttackMotionChance;                                    // 0x00E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSunMoonPoint;                                          // 0x00E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SunMoonPointResetTime;                                    // 0x00EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SunMoonPointCoolTime;                                     // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	int64_t                                            SunPointBuffIndex;                                        // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            MoonPointBuffIndex;                                       // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InstinctChangeCoolTime;                                   // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	int64_t                                            HuntInstinctBuffIndex;                                    // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            DuelInstinctBuffIndex;                                    // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxValknutCount;                                          // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ValknutCondBuffType;                                      // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ValknutCountResetTime;                                    // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ValknutCountCoolTime;                                     // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            ValknutBuffIndex;                                         // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DamagedAttackerExpireTime;                                // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSacrificePoint;                                        // 0x013C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SacrificePointOnOffCoolTime;                              // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	int64_t                                            SacrificePointBuffIndex;                                  // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SacrificePointResetTime;                                  // 0x0150(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
	int64_t                                            SacrificeTooltipBuffIndex;                                // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BossMonsterSizeUpBuff;                                    // 0x0160(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0164(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillDefineRecord");
		return ptr;
	}

};


// Class CommonSource.SkillDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillDefineRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillDefineSheet");
		return ptr;
	}


	class UCommonSource_SkillDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.CommonPlayerSkillRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_CommonPlayerSkillRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerIndex;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     BpPath;                                                   // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CommonPlayerSkillRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CommonPlayerSkillRecord");
		return ptr;
	}

};


// Class CommonSource.CommonPlayerSkillSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_CommonPlayerSkillSheet : public UObject
{
public:
	TArray<class UCommonSource_CommonPlayerSkillRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.CommonPlayerSkillSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.CommonPlayerSkillSheet");
		return ptr;
	}


	class UCommonSource_CommonPlayerSkillRecord* GetRecord(int64_t ID);
};


// Class CommonSource.HitAreaAdjustRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_HitAreaAdjustRecord : public UObject
{
public:
	unsigned char                                      HitAreaType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              MinusHitRange;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinusHitRadius;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.HitAreaAdjustRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.HitAreaAdjustRecord");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillTranscendDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillTranscendDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendDefineSheet");
		return ptr;
	}


	class UCommonSource_SkillTranscendDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillTranscendDefineRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_SkillTranscendDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxRestoreCount;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GreatSuccessRate;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GreatSuccesLv;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendDefineRecord");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendOptionTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillTranscendOptionTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillTranscendOptionTypeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendOptionTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendOptionTypeSheet");
		return ptr;
	}


	class UCommonSource_SkillTranscendOptionTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillTranscendOptionTypeRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_SkillTranscendOptionTypeRecord : public UObject
{
public:
	unsigned char                                      SkillTranscendType;                                       // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                TypeGrade;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     TypeIcon;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TypeNameString;                                           // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TypeOptionString;                                         // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendOptionTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendOptionTypeRecord");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendInfoRecord
// 0x0068 (0x0090 - 0x0028)
class UCommonSource_SkillTranscendInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TranscendNeedGroup;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TranscendSuccessGroup;                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              SkillTranscendType;                                       // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MaxLevel;                                                 // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        Rate;                                                     // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              ValueCharParam;                                           // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FCommonSource_Double>                ValueLvUp;                                                // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               ContentsOff;                                              // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendInfoRecord");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillTranscendInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillTranscendInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendInfoSheet");
		return ptr;
	}


	class UCommonSource_SkillTranscendInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.NoneNpcShopInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NoneNpcShopInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_NoneNpcShopInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NoneNpcShopInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NoneNpcShopInfoSheet");
		return ptr;
	}


	class UCommonSource_NoneNpcShopInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillTranscendBuffSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillTranscendBuffSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillTranscendBuffRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendBuffSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendBuffSheet");
		return ptr;
	}


	class UCommonSource_SkillTranscendBuffRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillTranscendNeedGroupRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_SkillTranscendNeedGroupRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TranscendNeedGroup;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TryCount;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedGold;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillBookPieceItemCount;                                  // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<int>                                        MaterialIndex;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MaterialCount;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendNeedGroupRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendNeedGroupRecord");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendBuffRecord
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillTranscendBuffRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            BuffIndex;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SkillTranscendType;                                       // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FCommonSource_Double                        ValueLvUp;                                                // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      Effect0LvUp;                                              // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      Effect1LvUp;                                              // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      Effect2LvUp;                                              // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      Effect3LvUp;                                              // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendBuffRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendBuffRecord");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendNeedGroupSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillTranscendNeedGroupSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillTranscendNeedGroupRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendNeedGroupSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendNeedGroupSheet");
		return ptr;
	}


	class UCommonSource_SkillTranscendNeedGroupRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillTranscendSuccessGroupRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_SkillTranscendSuccessGroupRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TranscendSuccessGroup;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TryCount;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SuccessRate;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendSuccessGroupRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendSuccessGroupRecord");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendSuccessGroupSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillTranscendSuccessGroupSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillTranscendSuccessGroupRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendSuccessGroupSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendSuccessGroupSheet");
		return ptr;
	}


	class UCommonSource_SkillTranscendSuccessGroupRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillTranscendResetRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_SkillTranscendResetRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SkillGrade;                                               // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                TryCount;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedCash;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        MaterialIndex;                                            // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MaterialCount;                                            // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendResetRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendResetRecord");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendResetSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillTranscendResetSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillTranscendResetRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendResetSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendResetSheet");
		return ptr;
	}


	class UCommonSource_SkillTranscendResetRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillTranscendRestoreRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_SkillTranscendRestoreRecord : public UObject
{
public:
	unsigned char                                      SkillGrade;                                               // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                NeedCash;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        MaterialIndex;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        MaterialCount;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendRestoreRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendRestoreRecord");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendRestoreSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillTranscendRestoreSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillTranscendRestoreRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendRestoreSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendRestoreSheet");
		return ptr;
	}


	class UCommonSource_SkillTranscendRestoreRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SkillTranscendChangeStringDescRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_SkillTranscendChangeStringDescRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillTranscendTypeIndex;                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChangeDescCode;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsEntireChange;                                           // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendChangeStringDescRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendChangeStringDescRecord");
		return ptr;
	}

};


// Class CommonSource.QuestVoiceSoundRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_QuestVoiceSoundRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                QuestIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TalkNpc;                                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TalkType;                                                 // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SoundOrder;                                               // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0033(0x0005) MISSED OFFSET
	struct FString                                     SoundName;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      TalkLine;                                                 // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<int>                                        LineCount;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestVoiceSoundRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestVoiceSoundRecord");
		return ptr;
	}

};


// Class CommonSource.QuestVoiceSoundSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_QuestVoiceSoundSheet : public UObject
{
public:
	TArray<class UCommonSource_QuestVoiceSoundRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.QuestVoiceSoundSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.QuestVoiceSoundSheet");
		return ptr;
	}


	class UCommonSource_QuestVoiceSoundRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SoundDefineRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_SoundDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SoundOutputTimeDelay;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              InformDialogueWaitTime;                                   // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SoundDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SoundDefineRecord");
		return ptr;
	}

};


// Class CommonSource.SoundDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SoundDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_SoundDefineRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SoundDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SoundDefineSheet");
		return ptr;
	}


	class UCommonSource_SoundDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SoundWaveLengthRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_SoundWaveLengthRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TalkNpc;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	float                                              CorrectionTime;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SoundWaveLengthRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SoundWaveLengthRecord");
		return ptr;
	}

};


// Class CommonSource.SoundWaveLengthSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SoundWaveLengthSheet : public UObject
{
public:
	TArray<class UCommonSource_SoundWaveLengthRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SoundWaveLengthSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SoundWaveLengthSheet");
		return ptr;
	}


	class UCommonSource_SoundWaveLengthRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SpawnInfoRecord
// 0x00B0 (0x00D8 - 0x0028)
class UCommonSource_SpawnInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        MapIndex;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                NaviVolumeAreaIndex;                                      // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ParentSpawnIndex;                                         // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DropGroupID;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlanDropGroupID;                                          // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TriggerGroupID;                                           // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MonsterGrade;                                             // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsActive;                                                 // 0x0055(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsNextSpawn;                                              // 0x0056(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0057(0x0001) MISSED OFFSET
	int                                                StartTime;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpawnDelay;                                               // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsFastSpawn;                                              // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsRandomStartTime;                                        // 0x0061(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0062(0x0002) MISSED OFFSET
	int                                                VoidSummonerIndex;                                        // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VoidSummonsMonsterGroup;                                  // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TreasureChestGroup;                                       // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpawnCount;                                               // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PatrolRange;                                              // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CharacterAngle;                                           // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AreaAngle;                                                // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LBottomX;                                                 // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LBottomY;                                                 // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LBottomZ;                                                 // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RTopX;                                                    // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RTopY;                                                    // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RTopZ;                                                    // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectLevel;                                              // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InteractState;                                            // 0x009C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x009D(0x0003) MISSED OFFSET
	TArray<int>                                        ObjIndex;                                                 // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              ObjFaction;                                               // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ObjProb;                                                  // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              DestroyTime;                                              // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PortalAreaIndex;                                          // 0x00D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpawnInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpawnInfoRecord");
		return ptr;
	}

};


// Class CommonSource.SkillTranscendChangeStringDescSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SkillTranscendChangeStringDescSheet : public UObject
{
public:
	TArray<class UCommonSource_SkillTranscendChangeStringDescRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SkillTranscendChangeStringDescSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SkillTranscendChangeStringDescSheet");
		return ptr;
	}


	class UCommonSource_SkillTranscendChangeStringDescRecord* GetRecord(int64_t ID);
};


// Class CommonSource.SpawnInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_SpawnInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_SpawnInfoRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.SpawnInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.SpawnInfoSheet");
		return ptr;
	}


	class UCommonSource_SpawnInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.ObjectDisposeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_ObjectDisposeSheet : public UObject
{
public:
	TArray<class UCommonSource_ObjectDisposeRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ObjectDisposeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ObjectDisposeSheet");
		return ptr;
	}


	class UCommonSource_ObjectDisposeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.FastSpawnRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_FastSpawnRecord : public UObject
{
public:
	int                                                MonsterRate;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SpawnTimeRate;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FastSpawnRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FastSpawnRecord");
		return ptr;
	}

};


// Class CommonSource.FastSpawnSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_FastSpawnSheet : public UObject
{
public:
	TArray<class UCommonSource_FastSpawnRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FastSpawnSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FastSpawnSheet");
		return ptr;
	}


	class UCommonSource_FastSpawnRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MaxSpawnDelaySheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_MaxSpawnDelaySheet : public UObject
{
public:
	TArray<class UCommonSource_MaxSpawnDelayRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MaxSpawnDelaySheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MaxSpawnDelaySheet");
		return ptr;
	}


	class UCommonSource_MaxSpawnDelayRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StartUpStringRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_StartUpStringRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StartUpStringRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StartUpStringRecord");
		return ptr;
	}

};


// Class CommonSource.ObjectDisposeRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_ObjectDisposeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                spawnIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LocationX;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LocationY;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LocationZ;                                                // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Yaw;                                                      // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Roll;                                                     // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.ObjectDisposeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.ObjectDisposeRecord");
		return ptr;
	}

};


// Class CommonSource.StartUpStringSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StartUpStringSheet : public UObject
{
public:
	TArray<class UCommonSource_StartUpStringRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StartUpStringSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StartUpStringSheet");
		return ptr;
	}


	class UCommonSource_StartUpStringRecord* GetRecord(int64_t ID);
};


// Class CommonSource.MaxSpawnDelayRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_MaxSpawnDelayRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                spawnIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSpawnDelay;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.MaxSpawnDelayRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.MaxSpawnDelayRecord");
		return ptr;
	}

};


// Class CommonSource.URLRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_URLRecord : public UObject
{
public:
	int                                                ServiceType;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     AgwServiceTypeUrl;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     AgwServerInfoUrl;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.URLRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.URLRecord");
		return ptr;
	}

};


// Class CommonSource.URLSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_URLSheet : public UObject
{
public:
	TArray<class UCommonSource_URLRecord*>             arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.URLSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.URLSheet");
		return ptr;
	}


	class UCommonSource_URLRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StartUpStringTable
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_StartUpStringTable : public UObject
{
public:
	class UCommonSource_StartUpStringSheet*            m_StartUpStringSheet;                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_URLSheet*                      m_URLSheet;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StartUpStringTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StartUpStringTable");
		return ptr;
	}

};


// Class CommonSource.TableCrypt
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_TableCrypt : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TableCrypt");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TableCrypt");
		return ptr;
	}

};


// Class CommonSource.TriggerInfoRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_TriggerInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        NextTrigger;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsRepeat;                                                 // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPlayerControl;                                          // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsOrCheck;                                                // 0x0052(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0053(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TriggerInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TriggerInfoRecord");
		return ptr;
	}

};


// Class CommonSource.TriggerInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_TriggerInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_TriggerInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TriggerInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TriggerInfoSheet");
		return ptr;
	}


	class UCommonSource_TriggerInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.TriggerActionRecord
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_TriggerActionRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TriggerIndex;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TriggerCondType;                                          // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TriggerActionType;                                        // 0x0045(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TriggerTargetType;                                        // 0x0046(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Faction;                                                  // 0x0047(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InteractState;                                            // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      questtype;                                                // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      QuestState;                                               // 0x004A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      GameCameraMode;                                           // 0x004B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<int>                                        TableIndex;                                               // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int64_t>                                    TableIndex64;                                             // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     NameValue;                                                // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              PosX;                                                     // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PosY;                                                     // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PosZ;                                                     // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsRealTime;                                               // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsActive;                                                 // 0x008D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x008E(0x0002) MISSED OFFSET
	int                                                WaitTime;                                                 // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RepeatCount;                                              // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsReconnectTrigger;                                       // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TriggerActionRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TriggerActionRecord");
		return ptr;
	}

};


// Class CommonSource.TriggerActionSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_TriggerActionSheet : public UObject
{
public:
	TArray<class UCommonSource_TriggerActionRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.TriggerActionSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.TriggerActionSheet");
		return ptr;
	}


	class UCommonSource_TriggerActionRecord* GetRecord(int64_t ID);
};


// Class CommonSource.StartConfigRecord
// 0x00B8 (0x00E0 - 0x0028)
class UCommonSource_StartConfigRecord : public UObject
{
public:
	int                                                PlayerIndex;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               Enable;                                                   // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                PlayerLevel;                                              // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChangePlayerIndex;                                        // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChangeQuestIndex;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                hpPercent;                                                // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Cash;                                                     // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Gold;                                                     // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartMapIndex;                                            // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                QuestIndex;                                               // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                QuickSlotPotionDefault;                                   // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        EquipItemIndex;                                           // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ItemIndex;                                                // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        itemCount;                                                // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        avatarIndex;                                              // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsSkillAuto;                                              // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00A9(0x0007) MISSED OFFSET
	TArray<int>                                        SkillQuickSlot;                                           // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        ItemQuickSlot;                                            // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        vehicleIndex;                                             // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StartConfigRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StartConfigRecord");
		return ptr;
	}

};


// Class CommonSource.StartConfigSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_StartConfigSheet : public UObject
{
public:
	TArray<class UCommonSource_StartConfigRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.StartConfigSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.StartConfigSheet");
		return ptr;
	}


	class UCommonSource_StartConfigRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VipLevelInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_VipLevelInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	int64_t                                            SumExp;                                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int64_t                                            NextExp;                                                  // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VipLevelInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VipLevelInfoRecord");
		return ptr;
	}

};


// Class CommonSource.VipLevelInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VipLevelInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_VipLevelInfoRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VipLevelInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VipLevelInfoSheet");
		return ptr;
	}


	class UCommonSource_VipLevelInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VipEffectRecord
// 0x0030 (0x0058 - 0x0028)
class UCommonSource_VipEffectRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     DesDesc;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                VipLevel;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EffectType;                                               // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                EffectValue1;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EffectValue2;                                             // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                strDesc;                                                  // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VipEffectRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VipEffectRecord");
		return ptr;
	}

};


// Class CommonSource.VipEffectSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VipEffectSheet : public UObject
{
public:
	TArray<class UCommonSource_VipEffectRecord*>       arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VipEffectSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VipEffectSheet");
		return ptr;
	}


	class UCommonSource_VipEffectRecord* GetRecord(int64_t ID);
};


// Class CommonSource.UserTable
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_UserTable : public UObject
{
public:
	class UCommonSource_StartConfigSheet*              m_StartConfigSheet;                                       // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VipLevelInfoSheet*             m_VipLevelInfoSheet;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_VipEffectSheet*                m_VipEffectSheet;                                         // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.UserTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.UserTable");
		return ptr;
	}

};


// Class CommonSource.VehicleInfoRecord
// 0x00D0 (0x00F8 - 0x0028)
class UCommonSource_VehicleInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                sort;                                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                descCode;                                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FString                                     IconName;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BpPath;                                                   // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      vehicleType;                                              // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ViewerSpeed;                                              // 0x0071(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0072(0x0002) MISSED OFFSET
	int                                                FallSpeed;                                                // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	int                                                SellGold;                                                 // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpireTime;                                               // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHideList;                                               // 0x0084(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanIgnoreAbnormalVehicleEnd;                              // 0x0085(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanRegistAbnormalStatus;                                  // 0x0086(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0087(0x0001) MISSED OFFSET
	int                                                MatchingGroup;                                            // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopRandomChoiceGrade;                                // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x008D(0x0003) MISSED OFFSET
	TArray<unsigned char>                              MainCharParam;                                            // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      MainPlusValue;                                            // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              SubCharParam;                                             // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      SubPlusValue;                                             // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              AddCharParam;                                             // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      AddPlusValue;                                             // 0x00E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               ContentsOff;                                              // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleInfoRecord");
		return ptr;
	}

};


// Class CommonSource.VehicleInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VehicleInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_VehicleInfoRecord*>     arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleInfoSheet");
		return ptr;
	}


	class UCommonSource_VehicleInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VehicleGradeRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_VehicleGradeRecord : public UObject
{
public:
	unsigned char                                      VehicleGrade;                                             // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                SavePointCount;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     IconBgName;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     IconBgName_Rect;                                          // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                VehicleBoxGroupID;                                        // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RandomShiftGroupID;                                       // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleCouponBoxGroupID;                                  // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ComposeNeedCount;                                         // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        DecidePrice;                                              // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsOptionalReplacement;                                    // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleGradeRecord");
		return ptr;
	}

};


// Class CommonSource.VehicleGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VehicleGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_VehicleGradeRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleGradeSheet");
		return ptr;
	}


	class UCommonSource_VehicleGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VehicleUpgradeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_VehicleUpgradeRecord : public UObject
{
public:
	int                                                Level;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedGold;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Prob;                                                     // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleUpgradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleUpgradeRecord");
		return ptr;
	}

};


// Class CommonSource.FlySpotRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_FlySpotRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              StartX;                                                   // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartY;                                                   // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartZ;                                                   // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EndX;                                                     // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EndY;                                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EndZ;                                                     // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FlySpotRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FlySpotRecord");
		return ptr;
	}

};


// Class CommonSource.FlySpotSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_FlySpotSheet : public UObject
{
public:
	TArray<class UCommonSource_FlySpotRecord*>         arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.FlySpotSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.FlySpotSheet");
		return ptr;
	}


	class UCommonSource_FlySpotRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BattleVehicleInfoRecord
// 0x0070 (0x0098 - 0x0028)
class UCommonSource_BattleVehicleInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      BattleVehicleType;                                        // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                VehicleHP;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LimitTime;                                                // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxHpPercent;                                             // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AttackAdd;                                                // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                HitAccuracyAdd;                                           // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CriticalChangePercent;                                    // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DamageReductionPercent;                                   // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DamageAbsoluteReductionPercent;                           // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ParamReferenceMonsterIndex;                               // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        SkillIndex;                                               // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              SkillSlot;                                                // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int64_t>                                    BuffIndex;                                                // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BattleVehicleInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BattleVehicleInfoRecord");
		return ptr;
	}

};


// Class CommonSource.BattleVehicleInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BattleVehicleInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_BattleVehicleInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BattleVehicleInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BattleVehicleInfoSheet");
		return ptr;
	}


	class UCommonSource_BattleVehicleInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.BattleVehicleTypeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_BattleVehicleTypeRecord : public UObject
{
public:
	unsigned char                                      BattleVehicleType;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanMove;                                                  // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanAttack;                                                // 0x002A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanSkill;                                                 // 0x002B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanAttacked;                                              // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanDamaged;                                               // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanUseItem;                                               // 0x002E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanWarp;                                                  // 0x002F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanInteract;                                              // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanUseCamera;                                             // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BattleVehicleTypeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BattleVehicleTypeRecord");
		return ptr;
	}

};


// Class CommonSource.BattleVehicleTypeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_BattleVehicleTypeSheet : public UObject
{
public:
	TArray<class UCommonSource_BattleVehicleTypeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.BattleVehicleTypeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.BattleVehicleTypeSheet");
		return ptr;
	}


	class UCommonSource_BattleVehicleTypeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VehicleRandomBoxSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VehicleRandomBoxSheet : public UObject
{
public:
	TArray<class UCommonSource_VehicleRandomBoxRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleRandomBoxSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleRandomBoxSheet");
		return ptr;
	}


	class UCommonSource_VehicleRandomBoxRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VehicleDefineRecord
// 0x0078 (0x00A0 - 0x0028)
class UCommonSource_VehicleDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ExpPercent;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxAutoComposeCount;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedChangeRandomOptionGold;                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WayPointMoveGold;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WayPointMoveBuff;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundSpawnElapsedTime;                                   // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundDestroyTime;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundDestroySpeed;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AirSpawnHeight;                                           // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AirVelocity;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AirVelocityMax;                                           // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AirChangeGround;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AirSkillNeedGrade;                                        // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundSpawnCoolTime;                                      // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AirSpawnCoolTime;                                         // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MoveFOV;                                                  // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxShiftCount;                                            // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NeedChangeGrade;                                          // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                VehicleChangeExpireDay;                                   // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MythMaxShiftCount;                                        // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BundleComposeMaxGrade;                                    // 0x007C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	int                                                BundleComposeMaxCount;                                    // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FastFallSpeed;                                            // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CostumeAnimationVariable;                                 // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VehicleCostumeAnimationVariable;                          // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VehicleCostumeGradeLimit;                                 // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundTransformElapsedTime;                               // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AirTransformElapsedTime;                                  // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleDefineRecord");
		return ptr;
	}

};


// Class CommonSource.VehicleDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VehicleDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_VehicleDefineRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleDefineSheet");
		return ptr;
	}


	class UCommonSource_VehicleDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VehicleUpgradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VehicleUpgradeSheet : public UObject
{
public:
	TArray<class UCommonSource_VehicleUpgradeRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleUpgradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleUpgradeSheet");
		return ptr;
	}


	class UCommonSource_VehicleUpgradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VehicleRandomBoxRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_VehicleRandomBoxRecord : public UObject
{
public:
	unsigned char                                      VehicleRandomBoxType;                                     // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                RandomBoxVhicleGroupID;                                   // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                count;                                                    // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleRandomBoxRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleRandomBoxRecord");
		return ptr;
	}

};


// Class CommonSource.VehicleGaugeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VehicleGaugeSheet : public UObject
{
public:
	TArray<class UCommonSource_VehicleGaugeRecord*>    arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleGaugeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleGaugeSheet");
		return ptr;
	}


	class UCommonSource_VehicleGaugeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VoidSummonerInfoRecord
// 0x00B0 (0x00D8 - 0x0028)
class UCommonSource_VoidSummonerInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      VoidSummonerType;                                         // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                VoidSummonerGroup;                                        // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GroupProb;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VoidSummonerStepName;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpawnVoidSummonerIndex;                                   // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VoidObjectLevel;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BossObjectIndex;                                          // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapIndex;                                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardTimeOverItemIndex;                                  // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardDeathItemIndex;                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardBossRandomBoxDropGroupID;                           // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardBossRandomBoxDropDisplayID;                         // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardNormalRandomBoxDropGroupID;                         // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonCount;                                              // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	TArray<int>                                        NormalObjectIndex;                                        // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        NormalObjectProb;                                         // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                PortalObjectIndex;                                        // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PortalIndex;                                              // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxDungeonCount;                                          // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PortalEnterPeriod;                                        // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxPlayerCount;                                           // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedLevelMin;                                             // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedLevelMax;                                             // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardPlayerRandomBoxDropGroupID;                         // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpecialDungeonRate;                                       // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardSpecialRandomBoxDropGroupID;                        // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardSpecialRandomBoxDropDisplayID;                      // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	TArray<int>                                        SpecialObjectIndex;                                       // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        SpecialObjectProb;                                        // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VoidSummonerInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VoidSummonerInfoRecord");
		return ptr;
	}

};


// Class CommonSource.VoidSummonerInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VoidSummonerInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_VoidSummonerInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VoidSummonerInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VoidSummonerInfoSheet");
		return ptr;
	}


	class UCommonSource_VoidSummonerInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VoidSummonsMonsterRecord
// 0x0028 (0x0050 - 0x0028)
class UCommonSource_VoidSummonsMonsterRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VoidSummonsMonsterGroup;                                  // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectIndex;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectLevel;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonerRewardRange;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BattleTime;                                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardSummonItemIndex;                                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardVoidRandomPackageDropPackageGroupID;                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ObjectProb;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VoidSummonsMonsterRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VoidSummonsMonsterRecord");
		return ptr;
	}

};


// Class CommonSource.VehicleGaugeRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_VehicleGaugeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CharParam;                                                // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      vehicleType;                                              // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	int                                                MaxValue;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VehicleGaugeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VehicleGaugeRecord");
		return ptr;
	}

};


// Class CommonSource.VoidSummonsMonsterSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VoidSummonsMonsterSheet : public UObject
{
public:
	TArray<class UCommonSource_VoidSummonsMonsterRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VoidSummonsMonsterSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VoidSummonsMonsterSheet");
		return ptr;
	}


	class UCommonSource_VoidSummonsMonsterRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VoidSummonsMonsterDamagePercentRecord
// 0x0008 (0x0030 - 0x0028)
class UCommonSource_VoidSummonsMonsterDamagePercentRecord : public UObject
{
public:
	int                                                VoidSummonsMonsterGroup;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MonsterDamagePercentMapIndex;                             // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VoidSummonsMonsterDamagePercentRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VoidSummonsMonsterDamagePercentRecord");
		return ptr;
	}

};


// Class CommonSource.VoidSummonsMonsterDamagePercentSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VoidSummonsMonsterDamagePercentSheet : public UObject
{
public:
	TArray<class UCommonSource_VoidSummonsMonsterDamagePercentRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VoidSummonsMonsterDamagePercentSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VoidSummonsMonsterDamagePercentSheet");
		return ptr;
	}


	class UCommonSource_VoidSummonsMonsterDamagePercentRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VoidSummonerDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VoidSummonerDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_VoidSummonerDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VoidSummonerDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VoidSummonerDefineSheet");
		return ptr;
	}


	class UCommonSource_VoidSummonerDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.VolumeAreaInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_VolumeAreaInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MapIndex;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TownIndex;                                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LBottomX;                                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LBottomY;                                                 // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LBottomZ;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RTopX;                                                    // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RTopY;                                                    // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RTopZ;                                                    // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VolumeAreaInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VolumeAreaInfoRecord");
		return ptr;
	}

};


// Class CommonSource.VolumeAreaInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_VolumeAreaInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_VolumeAreaInfoRecord*>  arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VolumeAreaInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VolumeAreaInfoSheet");
		return ptr;
	}


	class UCommonSource_VolumeAreaInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.NaviVolumeAreaInfoRecord
// 0x0070 (0x0098 - 0x0028)
class UCommonSource_NaviVolumeAreaInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                AreaGroup;                                                // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AreaTypeIndex;                                            // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                MapIndex;                                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TownIndex;                                                // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonIndex;                                             // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PortalAreaIndex;                                          // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ReviveDestAreaIndex;                                      // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VolumeWeight;                                             // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SectorIconType;                                           // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	float                                              WorldPosX;                                                // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WorldPosY;                                                // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WorldPosZ;                                                // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WorldOffsetX;                                             // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WorldOffsetY;                                             // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WorldOffsetZ;                                             // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BasePointPosX;                                            // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BasePointPosY;                                            // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BasePointPosZ;                                            // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MovePrice;                                                // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ParentVolumeIndex;                                        // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ViewOutLineWall;                                          // 0x0094(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0095(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NaviVolumeAreaInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NaviVolumeAreaInfoRecord");
		return ptr;
	}

};


// Class CommonSource.NaviVolumeAreaInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NaviVolumeAreaInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_NaviVolumeAreaInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NaviVolumeAreaInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NaviVolumeAreaInfoSheet");
		return ptr;
	}


	class UCommonSource_NaviVolumeAreaInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.NaviVolumeAreaVerticesInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_NaviVolumeAreaVerticesInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MapIndex;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MapMainGroupIdx;                                          // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	int                                                NaviVolumeAreaIndex;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaGroup;                                                // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      VerticesGroup;                                            // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      VerticesOrder;                                            // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0052(0x0002) MISSED OFFSET
	float                                              X;                                                        // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NaviVolumeAreaVerticesInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NaviVolumeAreaVerticesInfoRecord");
		return ptr;
	}

};


// Class CommonSource.NaviVolumeAreaVerticesInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_NaviVolumeAreaVerticesInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_NaviVolumeAreaVerticesInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.NaviVolumeAreaVerticesInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.NaviVolumeAreaVerticesInfoSheet");
		return ptr;
	}


	class UCommonSource_NaviVolumeAreaVerticesInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WeaponShapeInfoRecord
// 0x0100 (0x0128 - 0x0028)
class UCommonSource_WeaponShapeInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                DisplayOrder;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NameCode;                                                 // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ClassType;                                                // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      grade;                                                    // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ClassChangeEnabled;                                       // 0x003A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x003B(0x0001) MISSED OFFSET
	int                                                MatchingGroup;                                            // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CashShopRandomChoiceGrade;                                // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MainSkillParam;                                           // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                MainSkillIndex;                                           // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MainMinSkillGrade;                                        // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MainMaxSkillGrade;                                        // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x004A(0x0002) MISSED OFFSET
	float                                              MainSkillPlusValue;                                       // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              MainCharParam;                                            // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      MainPlusValue;                                            // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              SubSkillParam;                                            // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        SubSkillIndex;                                            // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              SubMinSkillGrade;                                         // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              SubMaxSkillGrade;                                         // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      SubSkillPlusValue;                                        // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        AddSkillIndex;                                            // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<unsigned char>                              AddCharParam;                                             // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      AddPlusParam;                                             // 0x00E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     SlotImage;                                                // 0x00F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     WeaponModelName;                                          // 0x0100(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     WeaponHitParticle;                                        // 0x0110(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               TransformEnabled;                                         // 0x0120(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SubTransformEnabled;                                      // 0x0121(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0122(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeInfoRecord");
		return ptr;
	}

};


// Class CommonSource.WeaponShapeInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WeaponShapeInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_WeaponShapeInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeInfoSheet");
		return ptr;
	}


	class UCommonSource_WeaponShapeInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WeaponShapeGradeRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_WeaponShapeGradeRecord : public UObject
{
public:
	unsigned char                                      grade;                                                    // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x0029(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                WeaponShapeBoxGroupID;                                    // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RandomShiftGroupID;                                       // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WeaponShapeCouponBoxGroupID;                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ComposeNeedCount;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<int>                                        DecidePrice;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               IsOptionalReplacement;                                    // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FString                                     WeaponSkillEffcet;                                        // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeGradeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeGradeRecord");
		return ptr;
	}

};


// Class CommonSource.WeaponShapeGradeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WeaponShapeGradeSheet : public UObject
{
public:
	TArray<class UCommonSource_WeaponShapeGradeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeGradeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeGradeSheet");
		return ptr;
	}


	class UCommonSource_WeaponShapeGradeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WeaponShapeDefineRecord
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_WeaponShapeDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxComposeCount;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxShiftCount;                                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      NeedChangeGrade;                                          // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                WeaponChangeExpireDay;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MythMaxShiftCount;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BundleComposeMaxGrade;                                    // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                BundleComposeMaxCount;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeDefineRecord");
		return ptr;
	}

};


// Class CommonSource.VoidSummonerDefineRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_VoidSummonerDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BossObjectIndex;                                          // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AreaNameCode;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonNameCode;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonTime;                                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SummonInterval;                                           // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RemoveTime;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BossBattleTime;                                           // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardDistance;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SpawnDistance;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonSpawnDistance;                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WaitEndTime;                                              // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartBuffIndex;                                           // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StartBuffTime;                                            // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DungeonSummonTime;                                        // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.VoidSummonerDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.VoidSummonerDefineRecord");
		return ptr;
	}

};


// Class CommonSource.WeaponShapeEffectChangeRecord
// 0x0050 (0x0078 - 0x0028)
class UCommonSource_WeaponShapeEffectChangeRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SkillIndex;                                               // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WeaponShapeIndex;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FString                                     SkillIndexParticleNotify;                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ApplyParticleNotify;                                      // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     SkillIndexHitParticleNotify;                              // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     ApplyHitParticleNotify;                                   // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeEffectChangeRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeEffectChangeRecord");
		return ptr;
	}

};


// Class CommonSource.WeaponShapeEffectChangeSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WeaponShapeEffectChangeSheet : public UObject
{
public:
	TArray<class UCommonSource_WeaponShapeEffectChangeRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeEffectChangeSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeEffectChangeSheet");
		return ptr;
	}


	class UCommonSource_WeaponShapeEffectChangeRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WeaponShapeDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WeaponShapeDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_WeaponShapeDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WeaponShapeDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WeaponShapeDefineSheet");
		return ptr;
	}


	class UCommonSource_WeaponShapeDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldBossInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WorldBossInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_WorldBossInfoRecord*>   arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldBossInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldBossInfoSheet");
		return ptr;
	}


	class UCommonSource_WorldBossInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldBossDefineRecord
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WorldBossDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<int>                                        CreateTime;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                RewardLimit;                                              // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DiePenalty;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardDistance;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RewardDamaged;                                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RewardDamage;                                             // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RewardHeal;                                               // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DetailResultToRanking;                                    // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AggroPointPercent;                                        // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlessedResetDayOfWeek;                                    // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	int                                                BlessedWeekResetInterval;                                 // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBlessedLastDaySpawn;                                    // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	int                                                MaxBlessedSpawnLimit;                                     // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinBlessedSpawnLimit;                                     // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessedStartYear;                                         // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessedStartMonth;                                        // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessedStartDay;                                          // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BlessedResetHour;                                         // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldBossDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldBossDefineRecord");
		return ptr;
	}

};


// Class CommonSource.WorldBossDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WorldBossDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_WorldBossDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldBossDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldBossDefineSheet");
		return ptr;
	}


	class UCommonSource_WorldBossDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldBossRewardRecord
// 0x0010 (0x0038 - 0x0028)
class UCommonSource_WorldBossRewardRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardRanking;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RewardProb;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldBossRewardRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldBossRewardRecord");
		return ptr;
	}

};


// Class CommonSource.WorldBossRewardSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WorldBossRewardSheet : public UObject
{
public:
	TArray<class UCommonSource_WorldBossRewardRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldBossRewardSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldBossRewardSheet");
		return ptr;
	}


	class UCommonSource_WorldBossRewardRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldDungeonInfoRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_WorldDungeonInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      WorldWideType;                                            // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                NameCode;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedMinEnterGuildBattleRank;                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedMaxEnterGuildBattleRank;                              // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildEnterLimit;                                          // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Channel;                                                  // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TArray<int>                                        WorldDungeonMapIndex;                                     // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                FinalBossIndex;                                           // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ParticipationRewardIndex;                                 // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WinRewardIndex;                                           // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldDungeonInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldDungeonInfoRecord");
		return ptr;
	}

};


// Class CommonSource.WorldDungeonInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WorldDungeonInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_WorldDungeonInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldDungeonInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldDungeonInfoSheet");
		return ptr;
	}


	class UCommonSource_WorldDungeonInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldDungeonDefineRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_WorldDungeonDefineRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddBuffDurationDay;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BeforeForceMoveMapMessageTime;                            // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseWorldDungeon;                                          // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                WorldDungeonBannedDay;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CanNotEnterBeforeEndTime;                                 // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OpenPortalEffectTime;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ResultNotifyTime;                                         // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonStartYear;                                          // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonStartMonth;                                         // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SeasonStartDay;                                           // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChampionsSeasonStartYear;                                 // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChampionsSeasonStartMonth;                                // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChampionsSeasonStartDay;                                  // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChannelMaxGuildCount;                                     // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldDungeonDefineRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldDungeonDefineRecord");
		return ptr;
	}

};


// Class CommonSource.WorldDungeonDefineSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WorldDungeonDefineSheet : public UObject
{
public:
	TArray<class UCommonSource_WorldDungeonDefineRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldDungeonDefineSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldDungeonDefineSheet");
		return ptr;
	}


	class UCommonSource_WorldDungeonDefineRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldDungeonMapRecord
// 0x0040 (0x0068 - 0x0028)
class UCommonSource_WorldDungeonMapRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BossSpawnStartTime;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BossKillMoveTime;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MoveAreaIndex;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BossKillBuffIndex;                                        // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                GuildMoveMessage;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerKillBuffIndex;                                      // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NeedPlayerKillCount;                                      // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AddPlayerKillCount;                                       // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FString                                     LoadingEffectPath;                                        // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                BossGold;                                                 // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldDungeonMapRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldDungeonMapRecord");
		return ptr;
	}

};


// Class CommonSource.WorldDungeonMapSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WorldDungeonMapSheet : public UObject
{
public:
	TArray<class UCommonSource_WorldDungeonMapRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldDungeonMapSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldDungeonMapSheet");
		return ptr;
	}


	class UCommonSource_WorldDungeonMapRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldDungeonBuffInfoRecord
// 0x0038 (0x0060 - 0x0028)
class UCommonSource_WorldDungeonBuffInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FString                                     BuffBigIconName;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BuffNameTextColor;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                BuffOverlapGroup;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BuffOverlapPriority;                                      // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WorldBuffDungeonTimeIndex;                                // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldDungeonBuffInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldDungeonBuffInfoRecord");
		return ptr;
	}

};


// Class CommonSource.WorldDungeonBuffInfoSheet
// 0x0060 (0x0088 - 0x0028)
class UCommonSource_WorldDungeonBuffInfoSheet : public UObject
{
public:
	TArray<class UCommonSource_WorldDungeonBuffInfoRecord*> arrayTable;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldDungeonBuffInfoSheet");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldDungeonBuffInfoSheet");
		return ptr;
	}


	class UCommonSource_WorldDungeonBuffInfoRecord* GetRecord(int64_t ID);
};


// Class CommonSource.WorldDungeonTable
// 0x0020 (0x0048 - 0x0028)
class UCommonSource_WorldDungeonTable : public UObject
{
public:
	class UCommonSource_WorldDungeonInfoSheet*         m_WorldDungeonInfoSheet;                                  // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WorldDungeonDefineSheet*       m_WorldDungeonDefineSheet;                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WorldDungeonMapSheet*          m_WorldDungeonMapSheet;                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCommonSource_WorldDungeonBuffInfoSheet*     m_WorldDungeonBuffInfoSheet;                              // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldDungeonTable");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldDungeonTable");
		return ptr;
	}

};


// Class CommonSource.WorldBossInfoRecord
// 0x0018 (0x0040 - 0x0028)
class UCommonSource_WorldBossInfoRecord : public UObject
{
public:
	int                                                Index;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WorldBossObjectIndex;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                spawnIndex;                                               // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardGoldItem;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RewardSilverItem;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class CommonSource.WorldBossInfoRecord");
		if (!ptr)
			ptr = UObject::FindClass("Class CommonSource.WorldBossInfoRecord");
		return ptr;
	}

};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
